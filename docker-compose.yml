version: "3"
services:
  db:
    container_name: dependency-observatory-db
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dependency_observatory
    ports:
      - "5432:5432"

  api:
    build:
      context: .
    container_name: dependency-observatory-api
    image: mozilla/dependency-observatory
    volumes:
      - ./:/app:z
    environment:
      - CELERY_BROKER_URL=sqla+postgresql://postgres:postgres@db/dependency_observatory
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db/dependency_observatory
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://postgres:postgres@db/dependency_observatory
      - FLASK_APP=/app/depobs/website/do.py
      - FLASK_ENV=development
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      - db
    links:
      - db
    ports:
      - "8000:8000"
    command: "migrate web"

  # celery worker for scanner
  worker:
    build:
      context: .
    container_name: dependency-observatory-worker
    image: mozilla/dependency-observatory
    depends_on:
      - db
    environment:
      - CELERY_BROKER_URL=sqla+postgresql://postgres:postgres@db/dependency_observatory
      - CELERY_RESULT_BACKEND=db+postgresql://postgres:postgres@db/dependency_observatory
      - FLASK_APP=/app/depobs/website/do.py
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://postgres:postgres@db/dependency_observatory
    links:
      - db
    # let the worker spin up new sibling docker containers
    # NB: exposes the docker daemon to those containers
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/app
    user: "root"
    command: "worker-dev"
