version: "3"
services:
  db:
    container_name: dependency-observatory-db
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dependency_observatory
    ports:
      - "5432:5432"

  api:
    build:
      context: depobs/
    container_name: dependency-observatory-api
    image: dependency-observatory-api
    volumes:
      - ./:/app
    environment:
      - CELERY_BROKER_URL=sqla+postgresql://postgres:postgres@db/dependency_observatory
      - DATABASE_URI=postgresql+psycopg2://postgres:postgres@db/dependency_observatory
      - INIT_DB=1
      - FLASK_APP=/app/depobs/website/do.py
      - DEBUG=1
    depends_on:
      - db
    links:
      - db
    ports:
      - "8000:8000"

  # celery worker for scanner
  worker:
    build:
      context: depobs/
      dockerfile: Dockerfile.worker
    container_name: dependency-observatory-worker
    image: dependency-observatory-worker
    depends_on:
      - db
    environment:
      - CELERY_BROKER_URL=sqla+postgresql://postgres:postgres@db/dependency_observatory
      - DATABASE_URI=postgresql+psycopg2://postgres:postgres@db/dependency_observatory
    links:
      - db
    # let the worker spin up new sibling docker containers
    # NB: exposes the docker daemon to those containers
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # should run then exit on compose up
  # run it again to load more data from ./scanner/fixtures/postprocessed_repo_tasks.jsonl
  scan-fixture-loader:
    image: mozilla/dependencyscan:latest
    depends_on:
      - db
    environment:
      - DB_URL=postgresql+psycopg2://postgres:postgres@db/dependency_observatory
    volumes:
      - ./depobs/worker/fixtures:/fixtures
    command: bash -c "
        gunzip -c /fixtures/npmsio_scores.jsonl.gz | python fpr/run_pipeline.py save_to_db --create-tables --input-type dep_meta_npmsio;
        gunzip -c /fixtures/npm_registry_meta.jsonl.gz | python fpr/run_pipeline.py save_to_db --create-tables --input-type dep_meta_npm_reg;
        gunzip -c /fixtures/postprocessed_repo_tasks.jsonl.gz | python fpr/run_pipeline.py save_to_db --create-tables --input-type postprocessed_repo_task;
      "
