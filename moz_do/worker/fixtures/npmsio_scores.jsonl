{"analyzedAt": "2020-02-24T00:07:21.603Z", "collected": {"metadata": {"name": "@hapi/bounce", "scope": "hapi", "version": "2.0.0", "description": "Selective error catching and rewrite rules", "keywords": ["error", "catch"], "date": "2020-01-04T22:29:03.109Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/bounce.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fbounce", "homepage": "https://github.com/hapijs/bounce#readme", "repository": "https://github.com/hapijs/bounce", "bugs": "https://github.com/hapijs/bounce/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/boom": "9.x.x", "@hapi/hoek": "9.x.x"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 6}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/bounce\n\n#### Selective error catching and rewrite rules.\n\n**bounce** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/bounce/)\n- [Versions status](https://hapi.dev/resources/status/#bounce) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/bounce/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 235254}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 932007}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2322160}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3976838}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 4773500}], "dependentsCount": 24, "starsCount": 0}, "github": {"starsCount": 174, "forksCount": 17, "subscribersCount": 9, "issues": {"count": 23, "openCount": 0, "distribution": {"3600": 12, "10800": 2, "32400": 1, "97200": 4, "291600": 2, "874800": 1, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 37}, {"username": "jarrodyellets", "commitsCount": 3}, {"username": "BraedenNorris", "commitsCount": 2}, {"username": "Nargonath", "commitsCount": 2}, {"username": "hugomd", "commitsCount": 1}, {"username": "kanongil", "commitsCount": 1}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 4}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 10}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 19}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1038, "testsSize": 13362}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 206, "downloadsCount": 774053.3333333334, "downloadsAcceleration": 6751.0700152207, "dependentsCount": 24}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7158026929978938, "detail": {"quality": 0.852684015517583, "popularity": 0.3143396978663242, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-01T12:40:13.240Z", "collected": {"metadata": {"name": "acorn", "scope": "unscoped", "version": "7.1.1", "description": "ECMAScript parser", "date": "2020-03-01T12:39:27.836Z", "publisher": {"username": "marijn", "email": "marijnh@gmail.com"}, "maintainers": [{"username": "adrianheine", "email": "mail@adrianheine.de"}, {"username": "marijn", "email": "marijnh@gmail.com"}, {"username": "rreverser", "email": "me@rreverser.com"}], "repository": {"type": "git", "url": "git+https://github.com/acornjs/acorn.git"}, "links": {"npm": "https://www.npmjs.com/package/acorn", "homepage": "https://github.com/acornjs/acorn", "repository": "https://github.com/acornjs/acorn", "bugs": "https://github.com/acornjs/acorn/issues"}, "license": "MIT", "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 6}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 26}], "readme": "# Acorn\n\nA tiny, fast JavaScript parser written in JavaScript.\n\n## Community\n\nAcorn is open source software released under an\n[MIT license](https://github.com/acornjs/acorn/blob/master/acorn/LICENSE).\n\nYou are welcome to\n[report bugs](https://github.com/acornjs/acorn/issues) or create pull\nrequests on [github](https://github.com/acornjs/acorn). For questions\nand discussion, please use the\n[Tern discussion forum](https://discuss.ternjs.net).\n\n## Installation\n\nThe easiest way to install acorn is from [`npm`](https://www.npmjs.com/):\n\n```sh\nnpm install acorn\n```\n\nAlternately, you can download the source and build acorn yourself:\n\n```sh\ngit clone https://github.com/acornjs/acorn.git\ncd acorn\nnpm install\n```\n\n## Interface\n\n**parse**`(input, options)` is the main interface to the library. The\n`input` parameter is a string, `options` can be undefined or an object\nsetting some of the options listed below. The return value will be an\nabstract syntax tree object as specified by the [ESTree\nspec](https://github.com/estree/estree).\n\n```javascript\nlet acorn = require(\"acorn\");\nconsole.log(acorn.parse(\"1 + 1\"));\n```\n\nWhen encountering a syntax error, the parser will raise a\n`SyntaxError` object with a meaningful message. The error object will\nhave a `pos` property that indicates the string offset at which the\nerror occurred, and a `loc` object that contains a `{line, column}`\nobject referring to that same position.\n\nOptions can be provided by passing a second argument, which should be\nan object containing any of these fields:\n\n- **ecmaVersion**: Indicates the ECMAScript version to parse. Must be\n  either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), 10 (2019) or 11\n  (2020, partial support). This influences support for strict mode,\n  the set of reserved words, and support for new syntax features.\n  Default is 10.\n\n  **NOTE**: Only 'stage 4' (finalized) ECMAScript features are being\n  implemented by Acorn. Other proposed new features can be implemented\n  through plugins.\n\n- **sourceType**: Indicate the mode the code should be parsed in. Can be\n  either `\"script\"` or `\"module\"`. This influences global strict mode\n  and parsing of `import` and `export` declarations.\n\n  **NOTE**: If set to `\"module\"`, then static `import` / `export` syntax\n  will be valid, even if `ecmaVersion` is less than 6.\n\n- **onInsertedSemicolon**: If given a callback, that callback will be\n  called whenever a missing semicolon is inserted by the parser. The\n  callback will be given the character offset of the point where the\n  semicolon is inserted as argument, and if `locations` is on, also a\n  `{line, column}` object representing this position.\n\n- **onTrailingComma**: Like `onInsertedSemicolon`, but for trailing\n  commas.\n\n- **allowReserved**: If `false`, using a reserved word will generate\n  an error. Defaults to `true` for `ecmaVersion` 3, `false` for higher\n  versions. When given the value `\"never\"`, reserved words and\n  keywords can also not be used as property names (as in Internet\n  Explorer's old parser).\n\n- **allowReturnOutsideFunction**: By default, a return statement at\n  the top level raises an error. Set this to `true` to accept such\n  code.\n\n- **allowImportExportEverywhere**: By default, `import` and `export`\n  declarations can only appear at a program's top level. Setting this\n  option to `true` allows them anywhere where a statement is allowed.\n  \n- **allowAwaitOutsideFunction**: By default, `await` expressions can\n  only appear inside `async` functions. Setting this option to\n  `true` allows to have top-level `await` expressions. They are\n  still not allowed in non-`async` functions, though.\n\n- **allowHashBang**: When this is enabled (off by default), if the\n  code starts with the characters `#!` (as in a shellscript), the\n  first line will be treated as a comment.\n\n- **locations**: When `true`, each node has a `loc` object attached\n  with `start` and `end` subobjects, each of which contains the\n  one-based line and zero-based column numbers in `{line, column}`\n  form. Default is `false`.\n\n- **onToken**: If a function is passed for this option, each found\n  token will be passed in same format as tokens returned from\n  `tokenizer().getToken()`.\n\n  If array is passed, each found token is pushed to it.\n\n  Note that you are not allowed to call the parser from the\n  callback\u2014that will corrupt its internal state.\n\n- **onComment**: If a function is passed for this option, whenever a\n  comment is encountered the function will be called with the\n  following parameters:\n\n  - `block`: `true` if the comment is a block comment, false if it\n    is a line comment.\n  - `text`: The content of the comment.\n  - `start`: Character offset of the start of the comment.\n  - `end`: Character offset of the end of the comment.\n\n  When the `locations` options is on, the `{line, column}` locations\n  of the comment\u2019s start and end are passed as two additional\n  parameters.\n\n  If array is passed for this option, each found comment is pushed\n  to it as object in Esprima format:\n\n  ```javascript\n  {\n    \"type\": \"Line\" | \"Block\",\n    \"value\": \"comment text\",\n    \"start\": Number,\n    \"end\": Number,\n    // If `locations` option is on:\n    \"loc\": {\n      \"start\": {line: Number, column: Number}\n      \"end\": {line: Number, column: Number}\n    },\n    // If `ranges` option is on:\n    \"range\": [Number, Number]\n  }\n  ```\n\n  Note that you are not allowed to call the parser from the\n  callback\u2014that will corrupt its internal state.\n\n- **ranges**: Nodes have their start and end characters offsets\n  recorded in `start` and `end` properties (directly on the node,\n  rather than the `loc` object, which holds line/column data. To also\n  add a\n  [semi-standardized](https://bugzilla.mozilla.org/show_bug.cgi?id=745678)\n  `range` property holding a `[start, end]` array with the same\n  numbers, set the `ranges` option to `true`.\n\n- **program**: It is possible to parse multiple files into a single\n  AST by passing the tree produced by parsing the first file as the\n  `program` option in subsequent parses. This will add the toplevel\n  forms of the parsed file to the \"Program\" (top) node of an existing\n  parse tree.\n\n- **sourceFile**: When the `locations` option is `true`, you can pass\n  this option to add a `source` attribute in every node\u2019s `loc`\n  object. Note that the contents of this option are not examined or\n  processed in any way; you are free to use whatever format you\n  choose.\n\n- **directSourceFile**: Like `sourceFile`, but a `sourceFile` property\n  will be added (regardless of the `location` option) directly to the\n  nodes, rather than the `loc` object.\n\n- **preserveParens**: If this option is `true`, parenthesized expressions\n  are represented by (non-standard) `ParenthesizedExpression` nodes\n  that have a single `expression` property containing the expression\n  inside parentheses.\n\n**parseExpressionAt**`(input, offset, options)` will parse a single\nexpression in a string, and return its AST. It will not complain if\nthere is more of the string left after the expression.\n\n**tokenizer**`(input, options)` returns an object with a `getToken`\nmethod that can be called repeatedly to get the next token, a `{start,\nend, type, value}` object (with added `loc` property when the\n`locations` option is enabled and `range` property when the `ranges`\noption is enabled). When the token's type is `tokTypes.eof`, you\nshould stop calling the method, since it will keep returning that same\ntoken forever.\n\nIn ES6 environment, returned result can be used as any other\nprotocol-compliant iterable:\n\n```javascript\nfor (let token of acorn.tokenizer(str)) {\n  // iterate over the tokens\n}\n\n// transform code to array of tokens:\nvar tokens = [...acorn.tokenizer(str)];\n```\n\n**tokTypes** holds an object mapping names to the token type objects\nthat end up in the `type` properties of tokens.\n\n**getLineInfo**`(input, offset)` can be used to get a `{line,\ncolumn}` object for a given program string and offset.\n\n### The `Parser` class\n\nInstances of the **`Parser`** class contain all the state and logic\nthat drives a parse. It has static methods `parse`,\n`parseExpressionAt`, and `tokenizer` that match the top-level\nfunctions by the same name.\n\nWhen extending the parser with plugins, you need to call these methods\non the extended version of the class. To extend a parser with plugins,\nyou can use its static `extend` method.\n\n```javascript\nvar acorn = require(\"acorn\");\nvar jsx = require(\"acorn-jsx\");\nvar JSXParser = acorn.Parser.extend(jsx());\nJSXParser.parse(\"foo(<bar/>)\");\n```\n\nThe `extend` method takes any number of plugin values, and returns a\nnew `Parser` class that includes the extra parser logic provided by\nthe plugins.\n\n## Command line interface\n\nThe `bin/acorn` utility can be used to parse a file from the command\nline. It accepts as arguments its input file and the following\noptions:\n\n- `--ecma3|--ecma5|--ecma6|--ecma7|--ecma8|--ecma9|--ecma10`: Sets the ECMAScript version\n  to parse. Default is version 9.\n\n- `--module`: Sets the parsing mode to `\"module\"`. Is set to `\"script\"` otherwise.\n\n- `--locations`: Attaches a \"loc\" object to each node with \"start\" and\n  \"end\" subobjects, each of which contains the one-based line and\n  zero-based column numbers in `{line, column}` form.\n\n- `--allow-hash-bang`: If the code starts with the characters #! (as\n  in a shellscript), the first line will be treated as a comment.\n\n- `--compact`: No whitespace is used in the AST output.\n\n- `--silent`: Do not output the AST, just return the exit status.\n\n- `--help`: Print the usage information and quit.\n\nThe utility spits out the syntax tree as JSON data.\n\n## Existing plugins\n\n - [`acorn-jsx`](https://github.com/RReverser/acorn-jsx): Parse [Facebook JSX syntax extensions](https://github.com/facebook/jsx)\n \nPlugins for ECMAScript proposals:\n \n - [`acorn-stage3`](https://github.com/acornjs/acorn-stage3): Parse most stage 3 proposals, bundling:\n   - [`acorn-class-fields`](https://github.com/acornjs/acorn-class-fields): Parse [class fields proposal](https://github.com/tc39/proposal-class-fields)\n   - [`acorn-import-meta`](https://github.com/acornjs/acorn-import-meta): Parse [import.meta proposal](https://github.com/tc39/proposal-import-meta)\n   - [`acorn-numeric-separator`](https://github.com/acornjs/acorn-numeric-separator): Parse [numeric separator proposal](https://github.com/tc39/proposal-numeric-separator)\n   - [`acorn-private-methods`](https://github.com/acornjs/acorn-private-methods): parse [private methods, getters and setters proposal](https://github.com/tc39/proposal-private-methods)n"}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 1488577}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 31431205}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 127694488}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 337764618}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 651953875}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 1193364866}], "dependentsCount": 1313, "starsCount": 33}, "github": {"starsCount": 5694, "forksCount": 516, "subscribersCount": 138, "issues": {"count": 910, "openCount": 28, "distribution": {"3600": 171, "10800": 81, "32400": 133, "97200": 140, "291600": 96, "874800": 88, "2624400": 68, "7873200": 47, "23619600": 48, "70858800": 30, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "marijnh", "commitsCount": 612}, {"username": "RReverser", "commitsCount": 223}, {"username": "adrianheine", "commitsCount": 57}, {"username": "TimothyGu", "commitsCount": 35}, {"username": "mysticatea", "commitsCount": 35}, {"username": "xiemaisi", "commitsCount": 13}, {"username": "nzakas", "commitsCount": 12}, {"username": "aparajita", "commitsCount": 10}, {"username": "danez", "commitsCount": 8}, {"username": "max-schaefer", "commitsCount": 8}, {"username": "jdalton", "commitsCount": 6}, {"username": "not-an-aardvark", "commitsCount": 6}, {"username": "sebmck", "commitsCount": 6}, {"username": "LongTengDao", "commitsCount": 5}, {"username": "Rich-Harris", "commitsCount": 5}, {"username": "abraidwood", "commitsCount": 5}, {"username": "kaicataldo", "commitsCount": 5}, {"username": "ForbesLindesay", "commitsCount": 4}, {"username": "jmm", "commitsCount": 4}, {"username": "mathiasbynens", "commitsCount": 4}, {"username": "davidbonnet", "commitsCount": 3}, {"username": "laosb", "commitsCount": 3}, {"username": "susiwen8", "commitsCount": 3}, {"username": "wjx", "commitsCount": 3}, {"username": "JLHwung", "commitsCount": 2}, {"username": "MrRefactoring", "commitsCount": 2}, {"username": "benekastah", "commitsCount": 2}, {"username": "btmills", "commitsCount": 2}, {"username": "ehmicky", "commitsCount": 2}, {"username": "jacksonrayhamilton", "commitsCount": 2}, {"username": "mrcarlberg", "commitsCount": 2}, {"username": "victor-homyakov", "commitsCount": 2}, {"username": "ArtemGovorov", "commitsCount": 1}, {"username": "ConradIrwin", "commitsCount": 1}, {"username": "Maxdamantus", "commitsCount": 1}, {"username": "PlNG", "commitsCount": 1}, {"username": "ReadmeCritic", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "adros", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "angelozerr", "commitsCount": 1}, {"username": "antimatter15", "commitsCount": 1}, {"username": "arian", "commitsCount": 1}, {"username": "ben-page", "commitsCount": 1}, {"username": "boopeshmahendran", "commitsCount": 1}, {"username": "caub", "commitsCount": 1}, {"username": "charmander", "commitsCount": 1}, {"username": "chughes87", "commitsCount": 1}, {"username": "cmckni3", "commitsCount": 1}, {"username": "dmatteo", "commitsCount": 1}, {"username": "dnalborczyk", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "fitzgen", "commitsCount": 1}, {"username": "flozz", "commitsCount": 1}, {"username": "forivall", "commitsCount": 1}, {"username": "ghaiklor", "commitsCount": 1}, {"username": "gibson042", "commitsCount": 1}, {"username": "goto-bus-stop", "commitsCount": 1}, {"username": "johannesherr", "commitsCount": 1}, {"username": "keeyipchan", "commitsCount": 1}, {"username": "keheliya", "commitsCount": 1}, {"username": "kennynaoh", "commitsCount": 1}, {"username": "keram", "commitsCount": 1}, {"username": "kirish-google", "commitsCount": 1}, {"username": "kratorado", "commitsCount": 1}, {"username": "kyranet", "commitsCount": 1}, {"username": "lehni", "commitsCount": 1}, {"username": "maierfelix", "commitsCount": 1}, {"username": "mishoo", "commitsCount": 1}, {"username": "mrennie", "commitsCount": 1}, {"username": "mrjoelkemp", "commitsCount": 1}, {"username": "othomann", "commitsCount": 1}, {"username": "oxyc", "commitsCount": 1}, {"username": "p01", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pnowak", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "praveenn-vbi", "commitsCount": 1}, {"username": "prust", "commitsCount": 1}, {"username": "r-e-d", "commitsCount": 1}, {"username": "sdbedi", "commitsCount": 1}, {"username": "tsangint", "commitsCount": 1}, {"username": "tuesmiddt", "commitsCount": 1}, {"username": "walshie4", "commitsCount": 1}, {"username": "yesplease", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}, {"username": "zsjforcn", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 1}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 8}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 16}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 19}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 64}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 10572, "testsSize": 5552262, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/acornjs/acorn.svg?branch=master", "service": "https://api.travis-ci.org/acornjs/acorn.svg?branch=master", "shields": "https://img.shields.io/travis/acornjs/acorn/master.svg", "content": "https://img.shields.io/travis/acornjs/acorn/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/acorn.svg", "shields": "https://img.shields.io/npm/v/acorn.svg", "content": "https://img.shields.io/npm/v/acorn.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.375, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 6468, "downloadsCount": 112588206, "downloadsAcceleration": 334865.83460806706, "dependentsCount": 1313}, "maintenance": {"releasesFrequency": 0.766609589041096, "commitsFrequency": 0.905541095890411, "openIssues": 1, "issuesDistribution": 0.7198392475827744}}, "score": {"final": 0.8932150969606647, "detail": {"quality": 0.8968947820338874, "popularity": 0.7855749573356474, "maintenance": 0.997701220808634}}}
{"analyzedAt": "2020-02-26T13:13:55.905Z", "collected": {"metadata": {"name": "acorn-jsx", "scope": "unscoped", "version": "5.2.0", "description": "Modern, fast React.js JSX parser", "date": "2020-02-26T13:13:36.537Z", "publisher": {"username": "rreverser", "email": "me@rreverser.com"}, "maintainers": [{"username": "adrianheine", "email": "mail@adrianheine.de"}, {"username": "marijn", "email": "marijnh@gmail.com"}, {"username": "rreverser", "email": "me@rreverser.com"}], "repository": {"type": "git", "url": "git+https://github.com/acornjs/acorn-jsx.git"}, "links": {"npm": "https://www.npmjs.com/package/acorn-jsx", "homepage": "https://github.com/acornjs/acorn-jsx", "repository": "https://github.com/acornjs/acorn-jsx", "bugs": "https://github.com/acornjs/acorn-jsx/issues"}, "license": "MIT", "devDependencies": {"acorn": "^7.0.0"}, "peerDependencies": {"acorn": "^6.0.0 || ^7.0.0"}, "releases": [{"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 1}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 2}, {"from": "2018-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# Acorn-JSX\n\n[![Build Status](https://travis-ci.org/acornjs/acorn-jsx.svg?branch=master)](https://travis-ci.org/acornjs/acorn-jsx)\n[![NPM version](https://img.shields.io/npm/v/acorn-jsx.svg)](https://www.npmjs.org/package/acorn-jsx)\n\nThis is plugin for [Acorn](http://marijnhaverbeke.nl/acorn/) - a tiny, fast JavaScript parser, written completely in JavaScript.\n\nIt was created as an experimental alternative, faster [React.js JSX](http://facebook.github.io/react/docs/jsx-in-depth.html) parser. Later, it replaced the [official parser](https://github.com/facebookarchive/esprima) and these days is used by many prominent development tools.\n\n## Transpiler\n\nPlease note that this tool only parses source code to JSX AST, which is useful for various language tools and services. If you want to transpile your code to regular ES5-compliant JavaScript with source map, check out [Babel](https://babeljs.io/) and [Buble](https://buble.surge.sh/) transpilers which use `acorn-jsx` under the hood.\n\n## Usage\n\nRequiring this module provides you with an Acorn plugin that you can use like this:\n\n```javascript\nvar acorn = require(\"acorn\");\nvar jsx = require(\"acorn-jsx\");\nacorn.Parser.extend(jsx()).parse(\"my(<jsx/>, 'code');\");\n```\n\nNote that official spec doesn't support mix of XML namespaces and object-style access in tag names (#27) like in `<namespace:Object.Property />`, so it was deprecated in `acorn-jsx@3.0`. If you still want to opt-in to support of such constructions, you can pass the following option:\n\n```javascript\nacorn.Parser.extend(jsx({ allowNamespacedObjects: true }))\n```\n\nAlso, since most apps use pure React transformer, a new option was introduced that allows to prohibit namespaces completely:\n\n```javascript\nacorn.Parser.extend(jsx({ allowNamespaces: false }))\n```\n\nNote that by default `allowNamespaces` is enabled for spec compliancy.\n\n## License\n\nThis plugin is issued under the [MIT license](./LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 1770573}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 9297878}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 38915809}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 99127092}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 196516110}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 359462543}], "dependentsCount": 155, "starsCount": 1}, "github": {"starsCount": 422, "forksCount": 58, "subscribersCount": 16, "issues": {"count": 109, "openCount": 10, "distribution": {"3600": 11, "10800": 2, "32400": 3, "97200": 11, "291600": 9, "874800": 12, "2624400": 13, "7873200": 20, "23619600": 15, "70858800": 6, "212576400": 7}, "isDisabled": false}, "contributors": [{"username": "marijnh", "commitsCount": 212}, {"username": "RReverser", "commitsCount": 183}, {"username": "aparajita", "commitsCount": 9}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sebmck", "commitsCount": 6}, {"username": "abraidwood", "commitsCount": 5}, {"username": "ArtemGovorov", "commitsCount": 3}, {"username": "adrianheine", "commitsCount": 3}, {"username": "wjx", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "benekastah", "commitsCount": 2}, {"username": "jenseng", "commitsCount": 2}, {"username": "mrcarlberg", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "ConradIrwin", "commitsCount": 1}, {"username": "PlNG", "commitsCount": 1}, {"username": "Rich-Harris", "commitsCount": 1}, {"username": "angelozerr", "commitsCount": 1}, {"username": "arian", "commitsCount": 1}, {"username": "blai", "commitsCount": 1}, {"username": "btmills", "commitsCount": 1}, {"username": "chughes87", "commitsCount": 1}, {"username": "fitzgen", "commitsCount": 1}, {"username": "goto-bus-stop", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jayphelps", "commitsCount": 1}, {"username": "johannesherr", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "keeyipchan", "commitsCount": 1}, {"username": "kratorado", "commitsCount": 1}, {"username": "lehni", "commitsCount": 1}, {"username": "mathiasbynens", "commitsCount": 1}, {"username": "mishoo", "commitsCount": 1}, {"username": "mrennie", "commitsCount": 1}, {"username": "mysticatea", "commitsCount": 1}, {"username": "nzakas", "commitsCount": 1}, {"username": "oxyc", "commitsCount": 1}, {"username": "p01", "commitsCount": 1}, {"username": "prust", "commitsCount": 1}, {"username": "r-e-d", "commitsCount": 1}, {"username": "soda0289", "commitsCount": 1}, {"username": "zsjforcn", "commitsCount": 1}], "commits": [{"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 2}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 2}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 2}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 5}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1929, "testsSize": 118444, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/acornjs/acorn-jsx.svg?branch=master", "service": "https://api.travis-ci.org/acornjs/acorn-jsx.svg?branch=master", "shields": "https://img.shields.io/travis/acornjs/acorn-jsx/master.svg", "content": "https://img.shields.io/travis/acornjs/acorn-jsx/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/acorn-jsx.svg", "shields": "https://img.shields.io/npm/v/acorn-jsx.svg", "content": "https://img.shields.io/npm/v/acorn-jsx.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 540, "downloadsCount": 33042364, "downloadsAcceleration": 104823.0075342466, "dependentsCount": 155}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8424567435572855, "detail": {"quality": 0.9647859797513708, "popularity": 0.5801701934357911, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-22T13:52:04.397Z", "collected": {"metadata": {"name": "ajv", "scope": "unscoped", "version": "6.12.0", "description": "Another JSON Schema Validator", "keywords": ["JSON", "schema", "validator", "validation", "jsonschema", "json-schema", "json-schema-validator", "json-schema-validation"], "date": "2020-02-22T13:51:48.960Z", "author": {"name": "Evgeny Poberezkin"}, "publisher": {"username": "esp", "email": "e.poberezkin@me.com"}, "maintainers": [{"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "esp", "email": "e.poberezkin@me.com"}], "repository": {"type": "git", "url": "git+https://github.com/epoberezkin/ajv.git"}, "links": {"npm": "https://www.npmjs.com/package/ajv", "homepage": "https://github.com/epoberezkin/ajv", "repository": "https://github.com/epoberezkin/ajv", "bugs": "https://github.com/epoberezkin/ajv/issues"}, "license": "MIT", "dependencies": {"fast-deep-equal": "^3.1.1", "fast-json-stable-stringify": "^2.0.0", "json-schema-traverse": "^0.4.1", "uri-js": "^4.2.2"}, "devDependencies": {"ajv-async": "^1.0.0", "bluebird": "^3.5.3", "brfs": "^2.0.0", "browserify": "^16.2.0", "chai": "^4.0.1", "coveralls": "^3.0.1", "del-cli": "^3.0.0", "dot": "^1.0.3", "eslint": "^6.0.0", "gh-pages-generator": "^0.2.3", "glob": "^7.0.0", "if-node-version": "^1.0.0", "js-beautify": "^1.7.3", "jshint": "^2.10.2", "json-schema-test": "^2.0.0", "karma": "^4.0.1", "karma-chrome-launcher": "^3.0.0", "karma-mocha": "^1.1.1", "karma-sauce-launcher": "^2.0.0", "mocha": "^7.0.1", "nyc": "^15.0.0", "pre-commit": "^1.1.1", "require-globify": "^1.3.0", "typescript": "^2.8.3", "uglify-js": "^3.6.9", "watch": "^1.0.0"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 23}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<img align=\"right\" alt=\"Ajv logo\" width=\"160\" src=\"http://epoberezkin.github.io/ajv/images/ajv_logo.png\">\n\n# Ajv: Another JSON Schema Validator\n\nThe fastest JSON Schema validator for Node.js and browser. Supports draft-04/06/07.\n\n[![Build Status](https://travis-ci.org/epoberezkin/ajv.svg?branch=master)](https://travis-ci.org/epoberezkin/ajv)\n[![npm](https://img.shields.io/npm/v/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![npm downloads](https://img.shields.io/npm/dm/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![Coverage Status](https://coveralls.io/repos/epoberezkin/ajv/badge.svg?branch=master&service=github)](https://coveralls.io/github/epoberezkin/ajv?branch=master)\n[![Greenkeeper badge](https://badges.greenkeeper.io/epoberezkin/ajv.svg)](https://greenkeeper.io/)\n[![Gitter](https://img.shields.io/gitter/room/ajv-validator/ajv.svg)](https://gitter.im/ajv-validator/ajv)\n\n\n## Using version 6\n\n[JSON Schema draft-07](http://json-schema.org/latest/json-schema-validation.html) is published.\n\n[Ajv version 6.0.0](https://github.com/epoberezkin/ajv/releases/tag/v6.0.0) that supports draft-07 is released. It may require either migrating your schemas or updating your code (to continue using draft-04 and v5 schemas, draft-06 schemas will be supported without changes).\n\n__Please note__: To use Ajv with draft-06 schemas you need to explicitly add the meta-schema to the validator instance:\n\n```javascript\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\n```\n\nTo use Ajv with draft-04 schemas in addition to explicitly adding meta-schema you also need to use option schemaId:\n\n```javascript\nvar ajv = new Ajv({schemaId: 'id'});\n// If you want to use both draft-04 and draft-06/07 schemas:\n// var ajv = new Ajv({schemaId: 'auto'});\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-04.json'));\n```\n\n\n## Contents\n\n- [Performance](#performance)\n- [Features](#features)\n- [Getting started](#getting-started)\n- [Frequently Asked Questions](https://github.com/epoberezkin/ajv/blob/master/FAQ.md)\n- [Using in browser](#using-in-browser)\n- [Command line interface](#command-line-interface)\n- Validation\n  - [Keywords](#validation-keywords)\n  - [Annotation keywords](#annotation-keywords)\n  - [Formats](#formats)\n  - [Combining schemas with $ref](#ref)\n  - [$data reference](#data-reference)\n  - NEW: [$merge and $patch keywords](#merge-and-patch-keywords)\n  - [Defining custom keywords](#defining-custom-keywords)\n  - [Asynchronous schema compilation](#asynchronous-schema-compilation)\n  - [Asynchronous validation](#asynchronous-validation)\n- [Security considerations](#security-considerations)\n  - [Security contact](#security-contact)\n  - [Untrusted schemas](#untrusted-schemas)\n  - [Circular references in objects](#circular-references-in-javascript-objects)\n  - [Trusted schemas](#security-risks-of-trusted-schemas)\n  - [ReDoS attack](#redos-attack)\n- Modifying data during validation\n  - [Filtering data](#filtering-data)\n  - [Assigning defaults](#assigning-defaults)\n  - [Coercing data types](#coercing-data-types)\n- API\n  - [Methods](#api)\n  - [Options](#options)\n  - [Validation errors](#validation-errors)\n- [Plugins](#plugins)\n- [Related packages](#related-packages)\n- [Some packages using Ajv](#some-packages-using-ajv)\n- [Tests, Contributing, History, Support, License](#tests)\n\n\n## Performance\n\nAjv generates code using [doT templates](https://github.com/olado/doT) to turn JSON Schemas into super-fast validation functions that are efficient for v8 optimization.\n\nCurrently Ajv is the fastest and the most standard compliant validator according to these benchmarks:\n\n- [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark) - 50% faster than the second place\n- [jsck benchmark](https://github.com/pandastrike/jsck#benchmarks) - 20-190% faster\n- [z-schema benchmark](https://rawgit.com/zaggino/z-schema/master/benchmark/results.html)\n- [themis benchmark](https://cdn.rawgit.com/playlyfe/themis/master/benchmark/results.html)\n\n\nPerformance of different validators by [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark):\n\n[![performance](https://chart.googleapis.com/chart?chxt=x,y&cht=bhs&chco=76A4FB&chls=2.0&chbh=32,4,1&chs=600x416&chxl=-1:|djv|ajv|json-schema-validator-generator|jsen|is-my-json-valid|themis|z-schema|jsck|skeemas|json-schema-library|tv4&chd=t:100,98,72.1,66.8,50.1,15.1,6.1,3.8,1.2,0.7,0.2)](https://github.com/ebdrup/json-schema-benchmark/blob/master/README.md#performance)\n\n\n## Features\n\n- Ajv implements full JSON Schema [draft-06/07](http://json-schema.org/) and draft-04 standards:\n  - all validation keywords (see [JSON Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md))\n  - full support of remote refs (remote schemas have to be added with `addSchema` or compiled to be available)\n  - support of circular references between schemas\n  - correct string lengths for strings with unicode pairs (can be turned off)\n  - [formats](#formats) defined by JSON Schema draft-07 standard and custom formats (can be turned off)\n  - [validates schemas against meta-schema](#api-validateschema)\n- supports [browsers](#using-in-browser) and Node.js 0.10-8.x\n- [asynchronous loading](#asynchronous-schema-compilation) of referenced schemas during compilation\n- \"All errors\" validation mode with [option allErrors](#options)\n- [error messages with parameters](#validation-errors) describing error reasons to allow creating custom error messages\n- i18n error messages support with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package\n- [filtering data](#filtering-data) from additional properties\n- [assigning defaults](#assigning-defaults) to missing properties and items\n- [coercing data](#coercing-data-types) to the types specified in `type` keywords\n- [custom keywords](#defining-custom-keywords)\n- draft-06/07 keywords `const`, `contains`, `propertyNames` and `if/then/else`\n- draft-06 boolean schemas (`true`/`false` as a schema to always pass/fail).\n- keywords `switch`, `patternRequired`, `formatMaximum` / `formatMinimum` and `formatExclusiveMaximum` / `formatExclusiveMinimum` from [JSON Schema extension proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) with [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package\n- [$data reference](#data-reference) to use values from the validated data as values for the schema keywords\n- [asynchronous validation](#asynchronous-validation) of custom formats and keywords\n\nCurrently Ajv is the only validator that passes all the tests from [JSON Schema Test Suite](https://github.com/json-schema/JSON-Schema-Test-Suite) (according to [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark), apart from the test that requires that `1.0` is not an integer that is impossible to satisfy in JavaScript).\n\n\n## Install\n\n```\nnpm install ajv\n```\n\n\n## <a name=\"usage\"></a>Getting started\n\nTry it in the Node.js REPL: https://tonicdev.com/npm/ajv\n\n\nThe fastest validation call:\n\n```javascript\n// Node.js require:\nvar Ajv = require('ajv');\n// or ESM/TypeScript import\nimport Ajv from 'ajv';\n\nvar ajv = new Ajv(); // options can be passed, e.g. {allErrors: true}\nvar validate = ajv.compile(schema);\nvar valid = validate(data);\nif (!valid) console.log(validate.errors);\n```\n\nor with less code\n\n```javascript\n// ...\nvar valid = ajv.validate(schema, data);\nif (!valid) console.log(ajv.errors);\n// ...\n```\n\nor\n\n```javascript\n// ...\nvar valid = ajv.addSchema(schema, 'mySchema')\n               .validate('mySchema', data);\nif (!valid) console.log(ajv.errorsText());\n// ...\n```\n\nSee [API](#api) and [Options](#options) for more details.\n\nAjv compiles schemas to functions and caches them in all cases (using schema serialized with [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) or a custom function as a key), so that the next time the same schema is used (not necessarily the same object instance) it won't be compiled again.\n\nThe best performance is achieved when using compiled functions returned by `compile` or `getSchema` methods (there is no additional function call).\n\n__Please note__: every time a validation function or `ajv.validate` are called `errors` property is overwritten. You need to copy `errors` array reference to another variable if you want to use it later (e.g., in the callback). See [Validation errors](#validation-errors)\n\n__Note for TypeScript users__: `ajv` provides its own TypeScript declarations\nout of the box, so you don't need to install the deprecated `@types/ajv`\nmodule.\n\n\n## Using in browser\n\nYou can require Ajv directly from the code you browserify - in this case Ajv will be a part of your bundle.\n\nIf you need to use Ajv in several bundles you can create a separate UMD bundle using `npm run bundle` script (thanks to [siddo420](https://github.com/siddo420)).\n\nThen you need to load Ajv in the browser:\n```html\n<script src=\"ajv.min.js\"></script>\n```\n\nThis bundle can be used with different module systems; it creates global `Ajv` if no module system is found.\n\nThe browser bundle is available on [cdnjs](https://cdnjs.com/libraries/ajv).\n\nAjv is tested with these browsers:\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/epoberezkin.svg)](https://saucelabs.com/u/epoberezkin)\n\n__Please note__: some frameworks, e.g. Dojo, may redefine global require in such way that is not compatible with CommonJS module format. In such case Ajv bundle has to be loaded before the framework and then you can use global Ajv (see issue [#234](https://github.com/epoberezkin/ajv/issues/234)).\n\n\n## Command line interface\n\nCLI is available as a separate npm package [ajv-cli](https://github.com/jessedc/ajv-cli). It supports:\n\n- compiling JSON Schemas to test their validity\n- BETA: generating standalone module exporting a validation function to be used without Ajv (using [ajv-pack](https://github.com/epoberezkin/ajv-pack))\n- migrate schemas to draft-07 (using [json-schema-migrate](https://github.com/epoberezkin/json-schema-migrate))\n- validating data file(s) against JSON Schema\n- testing expected validity of data against JSON Schema\n- referenced schemas\n- custom meta-schemas\n- files in JSON and JavaScript format\n- all Ajv options\n- reporting changes in data after validation in [JSON-patch](https://tools.ietf.org/html/rfc6902) format\n\n\n## Validation keywords\n\nAjv supports all validation keywords from draft-07 of JSON Schema standard:\n\n- [type](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#type)\n- [for numbers](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-numbers) - maximum, minimum, exclusiveMaximum, exclusiveMinimum, multipleOf\n- [for strings](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-strings) - maxLength, minLength, pattern, format\n- [for arrays](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-arrays) - maxItems, minItems, uniqueItems, items, additionalItems, [contains](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#contains)\n- [for objects](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-objects) - maxProperties, minProperties, required, properties, patternProperties, additionalProperties, dependencies, [propertyNames](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#propertynames)\n- [for all types](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-all-types) - enum, [const](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#const)\n- [compound keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#compound-keywords) - not, oneOf, anyOf, allOf, [if/then/else](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#ifthenelse)\n\nWith [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package Ajv also supports validation keywords from [JSON Schema extension proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) for JSON Schema standard:\n\n- [patternRequired](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#patternrequired-proposed) - like `required` but with patterns that some property should match.\n- [formatMaximum, formatMinimum, formatExclusiveMaximum, formatExclusiveMinimum](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#formatmaximum--formatminimum-and-exclusiveformatmaximum--exclusiveformatminimum-proposed) - setting limits for date, time, etc.\n\nSee [JSON Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md) for more details.\n\n\n## Annotation keywords\n\nJSON Schema specification defines several annotation keywords that describe schema itself but do not perform any validation.\n\n- `title` and `description`: information about the data represented by that schema\n- `$comment` (NEW in draft-07): information for developers. With option `$comment` Ajv logs or passes the comment string to the user-supplied function. See [Options](#options).\n- `default`: a default value of the data instance, see [Assigning defaults](#assigning-defaults).\n- `examples` (NEW in draft-06): an array of data instances. Ajv does not check the validity of these instances against the schema.\n- `readOnly` and `writeOnly` (NEW in draft-07): marks data-instance as read-only or write-only in relation to the source of the data (database, api, etc.).\n- `contentEncoding`: [RFC 2045](https://tools.ietf.org/html/rfc2045#section-6.1 ), e.g., \"base64\".\n- `contentMediaType`: [RFC 2046](https://tools.ietf.org/html/rfc2046), e.g., \"image/png\".\n\n__Please note__:  Ajv does not implement validation of the keywords `examples`, `contentEncoding` and `contentMediaType` but it reserves them. If you want to create a plugin that implements some of them, it should remove these keywords from the instance.\n\n\n## Formats\n\nAjv implements formats defined by JSON Schema specification and several other formats. It is recommended NOT to use \"format\" keyword implementations with untrusted data, as they use potentially unsafe regular expressions - see [ReDoS attack](#redos-attack).\n\n__Please note__: if you need to use \"format\" keyword to validate untrusted data, you MUST assess their suitability and safety for your validation scenarios.\n\nThe following formats are implemented for string validation with \"format\" keyword:\n\n- _date_: full-date according to [RFC3339](http://tools.ietf.org/html/rfc3339#section-5.6).\n- _time_: time with optional time-zone.\n- _date-time_: date-time from the same source (time-zone is mandatory). `date`, `time` and `date-time` validate ranges in `full` mode and only regexp in `fast` mode (see [options](#options)).\n- _uri_: full URI.\n- _uri-reference_: URI reference, including full and relative URIs.\n- _uri-template_: URI template according to [RFC6570](https://tools.ietf.org/html/rfc6570)\n- _url_ (deprecated): [URL record](https://url.spec.whatwg.org/#concept-url).\n- _email_: email address.\n- _hostname_: host name according to [RFC1034](http://tools.ietf.org/html/rfc1034#section-3.5).\n- _ipv4_: IP address v4.\n- _ipv6_: IP address v6.\n- _regex_: tests whether a string is a valid regular expression by passing it to RegExp constructor.\n- _uuid_: Universally Unique IDentifier according to [RFC4122](http://tools.ietf.org/html/rfc4122).\n- _json-pointer_: JSON-pointer according to [RFC6901](https://tools.ietf.org/html/rfc6901).\n- _relative-json-pointer_: relative JSON-pointer according to [this draft](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00).\n\n__Please note__: JSON Schema draft-07 also defines formats `iri`, `iri-reference`, `idn-hostname` and `idn-email` for URLs, hostnames and emails with international characters. Ajv does not implement these formats. If you create Ajv plugin that implements them please make a PR to mention this plugin here.\n\nThere are two modes of format validation: `fast` and `full`. This mode affects formats `date`, `time`, `date-time`, `uri`, `uri-reference`, `email`, and `hostname`. See [Options](#options) for details.\n\nYou can add additional formats and replace any of the formats above using [addFormat](#api-addformat) method.\n\nThe option `unknownFormats` allows changing the default behaviour when an unknown format is encountered. In this case Ajv can either fail schema compilation (default) or ignore it (default in versions before 5.0.0). You also can whitelist specific format(s) to be ignored. See [Options](#options) for details.\n\nYou can find regular expressions used for format validation and the sources that were used in [formats.js](https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js).\n\n\n## <a name=\"ref\"></a>Combining schemas with $ref\n\nYou can structure your validation logic across multiple schema files and have schemas reference each other using `$ref` keyword.\n\nExample:\n\n```javascript\nvar schema = {\n  \"$id\": \"http://example.com/schemas/schema.json\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"$ref\": \"defs.json#/definitions/int\" },\n    \"bar\": { \"$ref\": \"defs.json#/definitions/str\" }\n  }\n};\n\nvar defsSchema = {\n  \"$id\": \"http://example.com/schemas/defs.json\",\n  \"definitions\": {\n    \"int\": { \"type\": \"integer\" },\n    \"str\": { \"type\": \"string\" }\n  }\n};\n```\n\nNow to compile your schema you can either pass all schemas to Ajv instance:\n\n```javascript\nvar ajv = new Ajv({schemas: [schema, defsSchema]});\nvar validate = ajv.getSchema('http://example.com/schemas/schema.json');\n```\n\nor use `addSchema` method:\n\n```javascript\nvar ajv = new Ajv;\nvar validate = ajv.addSchema(defsSchema)\n                  .compile(schema);\n```\n\nSee [Options](#options) and [addSchema](#api) method.\n\n__Please note__:\n- `$ref` is resolved as the uri-reference using schema $id as the base URI (see the example).\n- References can be recursive (and mutually recursive) to implement the schemas for different data structures (such as linked lists, trees, graphs, etc.).\n- You don't have to host your schema files at the URIs that you use as schema $id. These URIs are only used to identify the schemas, and according to JSON Schema specification validators should not expect to be able to download the schemas from these URIs.\n- The actual location of the schema file in the file system is not used.\n- You can pass the identifier of the schema as the second parameter of `addSchema` method or as a property name in `schemas` option. This identifier can be used instead of (or in addition to) schema $id.\n- You cannot have the same $id (or the schema identifier) used for more than one schema - the exception will be thrown.\n- You can implement dynamic resolution of the referenced schemas using `compileAsync` method. In this way you can store schemas in any system (files, web, database, etc.) and reference them without explicitly adding to Ajv instance. See [Asynchronous schema compilation](#asynchronous-schema-compilation).\n\n\n## $data reference\n\nWith `$data` option you can use values from the validated data as the values for the schema keywords. See [proposal](https://github.com/json-schema-org/json-schema-spec/issues/51) for more information about how it works.\n\n`$data` reference is supported in the keywords: const, enum, format, maximum/minimum, exclusiveMaximum / exclusiveMinimum, maxLength / minLength, maxItems / minItems, maxProperties / minProperties, formatMaximum / formatMinimum, formatExclusiveMaximum / formatExclusiveMinimum, multipleOf, pattern, required, uniqueItems.\n\nThe value of \"$data\" should be a [JSON-pointer](https://tools.ietf.org/html/rfc6901) to the data (the root is always the top level data object, even if the $data reference is inside a referenced subschema) or a [relative JSON-pointer](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00) (it is relative to the current point in data; if the $data reference is inside a referenced subschema it cannot point to the data outside of the root level for this subschema).\n\nExamples.\n\nThis schema requires that the value in property `smaller` is less or equal than the value in the property larger:\n\n```javascript\nvar ajv = new Ajv({$data: true});\n\nvar schema = {\n  \"properties\": {\n    \"smaller\": {\n      \"type\": \"number\",\n      \"maximum\": { \"$data\": \"1/larger\" }\n    },\n    \"larger\": { \"type\": \"number\" }\n  }\n};\n\nvar validData = {\n  smaller: 5,\n  larger: 7\n};\n\najv.validate(schema, validData); // true\n```\n\nThis schema requires that the properties have the same format as their field names:\n\n```javascript\nvar schema = {\n  \"additionalProperties\": {\n    \"type\": \"string\",\n    \"format\": { \"$data\": \"0#\" }\n  }\n};\n\nvar validData = {\n  'date-time': '1963-06-19T08:30:06.283185Z',\n  email: 'joe.bloggs@example.com'\n}\n```\n\n`$data` reference is resolved safely - it won't throw even if some property is undefined. If `$data` resolves to `undefined` the validation succeeds (with the exclusion of `const` keyword). If `$data` resolves to incorrect type (e.g. not \"number\" for maximum keyword) the validation fails.\n\n\n## $merge and $patch keywords\n\nWith the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) you can use the keywords `$merge` and `$patch` that allow extending JSON Schemas with patches using formats [JSON Merge Patch (RFC 7396)](https://tools.ietf.org/html/rfc7396) and [JSON Patch (RFC 6902)](https://tools.ietf.org/html/rfc6902).\n\nTo add keywords `$merge` and `$patch` to Ajv instance use this code:\n\n```javascript\nrequire('ajv-merge-patch')(ajv);\n```\n\nExamples.\n\nUsing `$merge`:\n\n```json\n{\n  \"$merge\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": {\n      \"properties\": { \"q\": { \"type\": \"number\" } }\n    }\n  }\n}\n```\n\nUsing `$patch`:\n\n```json\n{\n  \"$patch\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": [\n      { \"op\": \"add\", \"path\": \"/properties/q\", \"value\": { \"type\": \"number\" } }\n    ]\n  }\n}\n```\n\nThe schemas above are equivalent to this schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"p\": { \"type\": \"string\" },\n    \"q\": { \"type\": \"number\" }\n  },\n  \"additionalProperties\": false\n}\n```\n\nThe properties `source` and `with` in the keywords `$merge` and `$patch` can use absolute or relative `$ref` to point to other schemas previously added to the Ajv instance or to the fragments of the current schema.\n\nSee the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) for more information.\n\n\n## Defining custom keywords\n\nThe advantages of using custom keywords are:\n\n- allow creating validation scenarios that cannot be expressed using JSON Schema\n- simplify your schemas\n- help bringing a bigger part of the validation logic to your schemas\n- make your schemas more expressive, less verbose and closer to your application domain\n- implement custom data processors that modify your data (`modifying` option MUST be used in keyword definition) and/or create side effects while the data is being validated\n\nIf a keyword is used only for side-effects and its validation result is pre-defined, use option `valid: true/false` in keyword definition to simplify both generated code (no error handling in case of `valid: true`) and your keyword functions (no need to return any validation result).\n\nThe concerns you have to be aware of when extending JSON Schema standard with custom keywords are the portability and understanding of your schemas. You will have to support these custom keywords on other platforms and to properly document these keywords so that everybody can understand them in your schemas.\n\nYou can define custom keywords with [addKeyword](#api-addkeyword) method. Keywords are defined on the `ajv` instance level - new instances will not have previously defined keywords.\n\nAjv allows defining keywords with:\n- validation function\n- compilation function\n- macro function\n- inline compilation function that should return code (as string) that will be inlined in the currently compiled schema.\n\nExample. `range` and `exclusiveRange` keywords using compiled schema:\n\n```javascript\najv.addKeyword('range', {\n  type: 'number',\n  compile: function (sch, parentSchema) {\n    var min = sch[0];\n    var max = sch[1];\n\n    return parentSchema.exclusiveRange === true\n            ? function (data) { return data > min && data < max; }\n            : function (data) { return data >= min && data <= max; }\n  }\n});\n\nvar schema = { \"range\": [2, 4], \"exclusiveRange\": true };\nvar validate = ajv.compile(schema);\nconsole.log(validate(2.01)); // true\nconsole.log(validate(3.99)); // true\nconsole.log(validate(2)); // false\nconsole.log(validate(4)); // false\n```\n\nSeveral custom keywords (typeof, instanceof, range and propertyNames) are defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package - they can be used for your schemas and as a starting point for your own custom keywords.\n\nSee [Defining custom keywords](https://github.com/epoberezkin/ajv/blob/master/CUSTOM.md) for more details.\n\n\n## Asynchronous schema compilation\n\nDuring asynchronous compilation remote references are loaded using supplied function. See `compileAsync` [method](#api-compileAsync) and `loadSchema` [option](#options).\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ loadSchema: loadSchema });\n\najv.compileAsync(schema).then(function (validate) {\n  var valid = validate(data);\n  // ...\n});\n\nfunction loadSchema(uri) {\n  return request.json(uri).then(function (res) {\n    if (res.statusCode >= 400)\n      throw new Error('Loading error: ' + res.statusCode);\n    return res.body;\n  });\n}\n```\n\n__Please note__: [Option](#options) `missingRefs` should NOT be set to `\"ignore\"` or `\"fail\"` for asynchronous compilation to work.\n\n\n## Asynchronous validation\n\nExample in Node.js REPL: https://tonicdev.com/esp/ajv-asynchronous-validation\n\nYou can define custom formats and keywords that perform validation asynchronously by accessing database or some other service. You should add `async: true` in the keyword or format definition (see [addFormat](#api-addformat), [addKeyword](#api-addkeyword) and [Defining custom keywords](#defining-custom-keywords)).\n\nIf your schema uses asynchronous formats/keywords or refers to some schema that contains them it should have `\"$async\": true` keyword so that Ajv can compile it correctly. If asynchronous format/keyword or reference to asynchronous schema is used in the schema without `$async` keyword Ajv will throw an exception during schema compilation.\n\n__Please note__: all asynchronous subschemas that are referenced from the current or other schemas should have `\"$async\": true` keyword as well, otherwise the schema compilation will fail.\n\nValidation function for an asynchronous custom format/keyword should return a promise that resolves with `true` or `false` (or rejects with `new Ajv.ValidationError(errors)` if you want to return custom errors from the keyword function).\n\nAjv compiles asynchronous schemas to [es7 async functions](http://tc39.github.io/ecmascript-asyncawait/) that can optionally be transpiled with [nodent](https://github.com/MatAtBread/nodent). Async functions are supported in Node.js 7+ and all modern browsers. You can also supply any other transpiler as a function via `processCode` option. See [Options](#options).\n\nThe compiled validation function has `$async: true` property (if the schema is asynchronous), so you can differentiate these functions if you are using both synchronous and asynchronous schemas.\n\nValidation result will be a promise that resolves with validated data or rejects with an exception `Ajv.ValidationError` that contains the array of validation errors in `errors` property.\n\n\nExample:\n\n```javascript\nvar ajv = new Ajv;\n// require('ajv-async')(ajv);\n\najv.addKeyword('idExists', {\n  async: true,\n  type: 'number',\n  validate: checkIdExists\n});\n\n\nfunction checkIdExists(schema, data) {\n  return knex(schema.table)\n  .select('id')\n  .where('id', data)\n  .then(function (rows) {\n    return !!rows.length; // true if record is found\n  });\n}\n\nvar schema = {\n  \"$async\": true,\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"users\" }\n    },\n    \"postId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"posts\" }\n    }\n  }\n};\n\nvar validate = ajv.compile(schema);\n\nvalidate({ userId: 1, postId: 19 })\n.then(function (data) {\n  console.log('Data is valid', data); // { userId: 1, postId: 19 }\n})\n.catch(function (err) {\n  if (!(err instanceof Ajv.ValidationError)) throw err;\n  // data is invalid\n  console.log('Validation errors:', err.errors);\n});\n```\n\n### Using transpilers with asynchronous validation functions.\n\n[ajv-async](https://github.com/epoberezkin/ajv-async) uses [nodent](https://github.com/MatAtBread/nodent) to transpile async functions. To use another transpiler you should separately install it (or load its bundle in the browser).\n\n\n#### Using nodent\n\n```javascript\nvar ajv = new Ajv;\nrequire('ajv-async')(ajv);\n// in the browser if you want to load ajv-async bundle separately you can:\n// window.ajvAsync(ajv);\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\n\n#### Using other transpilers\n\n```javascript\nvar ajv = new Ajv({ processCode: transpileFunc });\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\nSee [Options](#options).\n\n\n## Security considerations\n\nJSON Schema, if properly used, can replace data sanitisation. It doesn't replace other API security considerations. It also introduces additional security aspects to consider.\n\n\n##### Security contact\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure. Please do NOT report security vulnerabilities via GitHub issues.\n\n\n##### Untrusted schemas\n\nAjv treats JSON schemas as trusted as your application code. This security model is based on the most common use case, when the schemas are static and bundled together with the application.\n\nIf your schemas are received from untrusted sources (or generated from untrusted data) there are several scenarios you need to prevent:\n- compiling schemas can cause stack overflow (if they are too deep)\n- compiling schemas can be slow (e.g. [#557](https://github.com/epoberezkin/ajv/issues/557))\n- validating certain data can be slow\n\nIt is difficult to predict all the scenarios, but at the very least it may help to limit the size of untrusted schemas (e.g. limit JSON string length) and also the maximum schema object depth (that can be high for relatively small JSON strings). You also may want to mitigate slow regular expressions in `pattern` and `patternProperties` keywords.\n\nRegardless the measures you take, using untrusted schemas increases security risks.\n\n\n##### Circular references in JavaScript objects\n\nAjv does not support schemas and validated data that have circular references in objects. See [issue #802](https://github.com/epoberezkin/ajv/issues/802).\n\nAn attempt to compile such schemas or validate such data would cause stack overflow (or will not complete in case of asynchronous validation). Depending on the parser you use, untrusted data can lead to circular references.\n\n\n##### Security risks of trusted schemas\n\nSome keywords in JSON Schemas can lead to very slow validation for certain data. These keywords include (but may be not limited to):\n\n- `pattern` and `format` for large strings - in some cases using `maxLength` can help mitigate it, but certain regular expressions can lead to exponential validation time even with relatively short strings (see [ReDoS attack](#redos-attack)).\n- `patternProperties` for large property names - use `propertyNames` to mitigate, but some regular expressions can have exponential evaluation time as well.\n- `uniqueItems` for large non-scalar arrays - use `maxItems` to mitigate\n\n__Please note__: The suggestions above to prevent slow validation would only work if you do NOT use `allErrors: true` in production code (using it would continue validation after validation errors).\n\nYou can validate your JSON schemas against [this meta-schema](https://github.com/epoberezkin/ajv/blob/master/lib/refs/json-schema-secure.json) to check that these recommendations are followed:\n\n```javascript\nconst isSchemaSecure = ajv.compile(require('ajv/lib/refs/json-schema-secure.json'));\n\nconst schema1 = {format: 'email'};\nisSchemaSecure(schema1); // false\n\nconst schema2 = {format: 'email', maxLength: MAX_LENGTH};\nisSchemaSecure(schema2); // true\n```\n\n__Please note__: following all these recommendation is not a guarantee that validation of untrusted data is safe - it can still lead to some undesirable results.\n\n\n## ReDoS attack\n\nCertain regular expressions can lead to the exponential evaluation time even with relatively short strings.\n\nPlease assess the regular expressions you use in the schemas on their vulnerability to this attack - see [safe-regex](https://github.com/substack/safe-regex), for example.\n\n__Please note__: some formats that Ajv implements use [regular expressions](https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js) that can be vulnerable to ReDoS attack, so if you use Ajv to validate data from untrusted sources __it is strongly recommended__ to consider the following:\n\n- making assessment of \"format\" implementations in Ajv.\n- using `format: 'fast'` option that simplifies some of the regular expressions (although it does not guarantee that they are safe).\n- replacing format implementations provided by Ajv with your own implementations of \"format\" keyword that either uses different regular expressions or another approach to format validation. Please see [addFormat](#api-addformat) method.\n- disabling format validation by ignoring \"format\" keyword with option `format: false`\n\nWhatever mitigation you choose, please assume all formats provided by Ajv as potentially unsafe and make your own assessment of their suitability for your validation scenarios.\n\n\n## Filtering data\n\nWith [option `removeAdditional`](#options) (added by [andyscott](https://github.com/andyscott)) you can filter data during the validation.\n\nThis option modifies original data.\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ removeAdditional: true });\nvar schema = {\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": {\n      \"additionalProperties\": { \"type\": \"number\" },\n      \"properties\": {\n        \"baz\": { \"type\": \"string\" }\n      }\n    }\n  }\n}\n\nvar data = {\n  \"foo\": 0,\n  \"additional1\": 1, // will be removed; `additionalProperties` == false\n  \"bar\": {\n    \"baz\": \"abc\",\n    \"additional2\": 2 // will NOT be removed; `additionalProperties` != false\n  },\n}\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 0, \"bar\": { \"baz\": \"abc\", \"additional2\": 2 }\n```\n\nIf `removeAdditional` option in the example above were `\"all\"` then both `additional1` and `additional2` properties would have been removed.\n\nIf the option were `\"failing\"` then property `additional1` would have been removed regardless of its value and property `additional2` would have been removed only if its value were failing the schema in the inner `additionalProperties` (so in the example above it would have stayed because it passes the schema, but any non-number would have been removed).\n\n__Please note__: If you use `removeAdditional` option with `additionalProperties` keyword inside `anyOf`/`oneOf` keywords your validation can fail with this schema, for example:\n\n```json\n{\n  \"type\": \"object\",\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"foo\": { \"type\": \"string\" }\n      },\n      \"required\": [ \"foo\" ],\n      \"additionalProperties\": false\n    },\n    {\n      \"properties\": {\n        \"bar\": { \"type\": \"integer\" }\n      },\n      \"required\": [ \"bar\" ],\n      \"additionalProperties\": false\n    }\n  ]\n}\n```\n\nThe intention of the schema above is to allow objects with either the string property \"foo\" or the integer property \"bar\", but not with both and not with any other properties.\n\nWith the option `removeAdditional: true` the validation will pass for the object `{ \"foo\": \"abc\"}` but will fail for the object `{\"bar\": 1}`. It happens because while the first subschema in `oneOf` is validated, the property `bar` is removed because it is an additional property according to the standard (because it is not included in `properties` keyword in the same schema).\n\nWhile this behaviour is unexpected (issues [#129](https://github.com/epoberezkin/ajv/issues/129), [#134](https://github.com/epoberezkin/ajv/issues/134)), it is correct. To have the expected behaviour (both objects are allowed and additional properties are removed) the schema has to be refactored in this way:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"string\" },\n    \"bar\": { \"type\": \"integer\" }\n  },\n  \"additionalProperties\": false,\n  \"oneOf\": [\n    { \"required\": [ \"foo\" ] },\n    { \"required\": [ \"bar\" ] }\n  ]\n}\n```\n\nThe schema above is also more efficient - it will compile into a faster function.\n\n\n## Assigning defaults\n\nWith [option `useDefaults`](#options) Ajv will assign values from `default` keyword in the schemas of `properties` and `items` (when it is the array of schemas) to the missing properties and items.\n\nWith the option value `\"empty\"` properties and items equal to `null` or `\"\"` (empty string) will be considered missing and assigned defaults.\n\nThis option modifies original data.\n\n__Please note__: the default value is inserted in the generated validation code as a literal, so the value inserted in the data will be the deep clone of the default in the schema.\n\n\nExample 1 (`default` in `properties`):\n\n```javascript\nvar ajv = new Ajv({ useDefaults: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"string\", \"default\": \"baz\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": 1 };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": \"baz\" }\n```\n\nExample 2 (`default` in `items`):\n\n```javascript\nvar schema = {\n  \"type\": \"array\",\n  \"items\": [\n    { \"type\": \"number\" },\n    { \"type\": \"string\", \"default\": \"foo\" }\n  ]\n}\n\nvar data = [ 1 ];\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // [ 1, \"foo\" ]\n```\n\n`default` keywords in other cases are ignored:\n\n- not in `properties` or `items` subschemas\n- in schemas inside `anyOf`, `oneOf` and `not` (see [#42](https://github.com/epoberezkin/ajv/issues/42))\n- in `if` subschema of `switch` keyword\n- in schemas generated by custom macro keywords\n\nThe [`strictDefaults` option](#options) customizes Ajv's behavior for the defaults that Ajv ignores (`true` raises an error, and `\"log\"` outputs a warning).\n\n\n## Coercing data types\n\nWhen you are validating user inputs all your data properties are usually strings. The option `coerceTypes` allows you to have your data types coerced to the types specified in your schema `type` keywords, both to pass the validation and to use the correctly typed data afterwards.\n\nThis option modifies original data.\n\n__Please note__: if you pass a scalar value to the validating function its type will be coerced and it will pass the validation, but the value of the variable you pass won't be updated because scalars are passed by value.\n\n\nExample 1:\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"boolean\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": \"1\", \"bar\": \"false\" };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": false }\n```\n\nExample 2 (array coercions):\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: 'array' });\nvar schema = {\n  \"properties\": {\n    \"foo\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } },\n    \"bar\": { \"type\": \"boolean\" }\n  }\n};\n\nvar data = { \"foo\": \"1\", \"bar\": [\"false\"] };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": [1], \"bar\": false }\n```\n\nThe coercion rules, as you can see from the example, are different from JavaScript both to validate user input as expected and to have the coercion reversible (to correctly validate cases where different types are defined in subschemas of \"anyOf\" and other compound keywords).\n\nSee [Coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md) for details.\n\n\n## API\n\n##### new Ajv(Object options) -&gt; Object\n\nCreate Ajv instance.\n\n\n##### .compile(Object schema) -&gt; Function&lt;Object data&gt;\n\nGenerate validating function and cache the compiled schema for future use.\n\nValidating function returns a boolean value. This function has properties `errors` and `schema`. Errors encountered during the last validation are assigned to `errors` property (it is assigned `null` if there was no errors). `schema` property contains the reference to the original schema.\n\nThe schema passed to this method will be validated against meta-schema unless `validateSchema` option is false. If schema is invalid, an error will be thrown. See [options](#options).\n\n\n##### <a name=\"api-compileAsync\"></a>.compileAsync(Object schema [, Boolean meta] [, Function callback]) -&gt; Promise\n\nAsynchronous version of `compile` method that loads missing remote schemas using asynchronous function in `options.loadSchema`. This function returns a Promise that resolves to a validation function. An optional callback passed to `compileAsync` will be called with 2 parameters: error (or null) and validating function. The returned promise will reject (and the callback will be called with an error) when:\n\n- missing schema can't be loaded (`loadSchema` returns a Promise that rejects).\n- a schema containing a missing reference is loaded, but the reference cannot be resolved.\n- schema (or some loaded/referenced schema) is invalid.\n\nThe function compiles schema and loads the first missing schema (or meta-schema) until all missing schemas are loaded.\n\nYou can asynchronously compile meta-schema by passing `true` as the second parameter.\n\nSee example in [Asynchronous compilation](#asynchronous-schema-compilation).\n\n\n##### .validate(Object schema|String key|String ref, data) -&gt; Boolean\n\nValidate data using passed schema (it will be compiled and cached).\n\nInstead of the schema you can use the key that was previously passed to `addSchema`, the schema id if it was present in the schema or any previously resolved reference.\n\nValidation errors will be available in the `errors` property of Ajv instance (`null` if there were no errors).\n\n__Please note__: every time this method is called the errors are overwritten so you need to copy them to another variable if you want to use them later.\n\nIf the schema is asynchronous (has `$async` keyword on the top level) this method returns a Promise. See [Asynchronous validation](#asynchronous-validation).\n\n\n##### .addSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv\n\nAdd schema(s) to validator instance. This method does not compile schemas (but it still validates them). Because of that dependencies can be added in any order and circular dependencies are supported. It also prevents unnecessary compilation of schemas that are containers for other schemas but not used as a whole.\n\nArray of schemas can be passed (schemas should have ids), the second parameter will be ignored.\n\nKey can be passed that can be used to reference the schema and will be used as the schema id if there is no id inside the schema. If the key is not passed, the schema id will be used as the key.\n\n\nOnce the schema is added, it (and all the references inside it) can be referenced in other schemas and used to validate data.\n\nAlthough `addSchema` does not compile schemas, explicit compilation is not required - the schema will be compiled when it is used first time.\n\nBy default the schema is validated against meta-schema before it is added, and if the schema does not pass validation the exception is thrown. This behaviour is controlled by `validateSchema` option.\n\n__Please note__: Ajv uses the [method chaining syntax](https://en.wikipedia.org/wiki/Method_chaining) for all methods with the prefix `add*` and `remove*`.\nThis allows you to do nice things like the following.\n\n```javascript\nvar validate = new Ajv().addSchema(schema).addFormat(name, regex).getSchema(uri);\n```\n\n##### .addMetaSchema(Array&lt;Object&gt;|Object schema [, String key]) -&gt; Ajv\n\nAdds meta schema(s) that can be used to validate other schemas. That function should be used instead of `addSchema` because there may be instance options that would compile a meta schema incorrectly (at the moment it is `removeAdditional` option).\n\nThere is no need to explicitly add draft-07 meta schema (http://json-schema.org/draft-07/schema) - it is added by default, unless option `meta` is set to `false`. You only need to use it if you have a changed meta-schema that you want to use to validate your schemas. See `validateSchema`.\n\n\n##### <a name=\"api-validateschema\"></a>.validateSchema(Object schema) -&gt; Boolean\n\nValidates schema. This method should be used to validate schemas rather than `validate` due to the inconsistency of `uri` format in JSON Schema standard.\n\nBy default this method is called automatically when the schema is added, so you rarely need to use it directly.\n\nIf schema doesn't have `$schema` property, it is validated against draft 6 meta-schema (option `meta` should not be false).\n\nIf schema has `$schema` property, then the schema with this id (that should be previously added) is used to validate passed schema.\n\nErrors will be available at `ajv.errors`.\n\n\n##### .getSchema(String key) -&gt; Function&lt;Object data&gt;\n\nRetrieve compiled schema previously added with `addSchema` by the key passed to `addSchema` or by its full reference (id). The returned validating function has `schema` property with the reference to the original schema.\n\n\n##### .removeSchema([Object schema|String key|String ref|RegExp pattern]) -&gt; Ajv\n\nRemove added/cached schema. Even if schema is referenced by other schemas it can be safely removed as dependent schemas have local references.\n\nSchema can be removed using:\n- key passed to `addSchema`\n- it's full reference (id)\n- RegExp that should match schema id or key (meta-schemas won't be removed)\n- actual schema object that will be stable-stringified to remove schema from cache\n\nIf no parameter is passed all schemas but meta-schemas will be removed and the cache will be cleared.\n\n\n##### <a name=\"api-addformat\"></a>.addFormat(String name, String|RegExp|Function|Object format) -&gt; Ajv\n\nAdd custom format to validate strings or numbers. It can also be used to replace pre-defined formats for Ajv instance.\n\nStrings are converted to RegExp.\n\nFunction should return validation result as `true` or `false`.\n\nIf object is passed it should have properties `validate`, `compare` and `async`:\n\n- _validate_: a string, RegExp or a function as described above.\n- _compare_: an optional comparison function that accepts two strings and compares them according to the format meaning. This function is used with keywords `formatMaximum`/`formatMinimum` (defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package). It should return `1` if the first value is bigger than the second value, `-1` if it is smaller and `0` if it is equal.\n- _async_: an optional `true` value if `validate` is an asynchronous function; in this case it should return a promise that resolves with a value `true` or `false`.\n- _type_: an optional type of data that the format applies to. It can be `\"string\"` (default) or `\"number\"` (see https://github.com/epoberezkin/ajv/issues/291#issuecomment-259923858). If the type of data is different, the validation will pass.\n\nCustom formats can be also added via `formats` option.\n\n\n##### <a name=\"api-addkeyword\"></a>.addKeyword(String keyword, Object definition) -&gt; Ajv\n\nAdd custom validation keyword to Ajv instance.\n\nKeyword should be different from all standard JSON Schema keywords and different from previously defined keywords. There is no way to redefine keywords or to remove keyword definition from the instance.\n\nKeyword must start with a letter, `_` or `$`, and may continue with letters, numbers, `_`, `$`, or `-`.\nIt is recommended to use an application-specific prefix for keywords to avoid current and future name collisions.\n\nExample Keywords:\n- `\"xyz-example\"`: valid, and uses prefix for the xyz project to avoid name collisions.\n- `\"example\"`: valid, but not recommended as it could collide with future versions of JSON Schema etc.\n- `\"3-example\"`: invalid as numbers are not allowed to be the first character in a keyword\n\nKeyword definition is an object with the following properties:\n\n- _type_: optional string or array of strings with data type(s) that the keyword applies to. If not present, the keyword will apply to all types.\n- _validate_: validating function\n- _compile_: compiling function\n- _macro_: macro function\n- _inline_: compiling function that returns code (as string)\n- _schema_: an optional `false` value used with \"validate\" keyword to not pass schema\n- _metaSchema_: an optional meta-schema for keyword schema\n- _dependencies_: an optional list of properties that must be present in the parent schema - it will be checked during schema compilation\n- _modifying_: `true` MUST be passed if keyword modifies data\n- _statements_: `true` can be passed in case inline keyword generates statements (as opposed to expression)\n- _valid_: pass `true`/`false` to pre-define validation result, the result returned from validation function will be ignored. This option cannot be used with macro keywords.\n- _$data_: an optional `true` value to support [$data reference](#data-reference) as the value of custom keyword. The reference will be resolved at validation time. If the keyword has meta-schema it would be extended to allow $data and it will be used to validate the resolved value. Supporting $data reference requires that keyword has validating function (as the only option or in addition to compile, macro or inline function).\n- _async_: an optional `true` value if the validation function is asynchronous (whether it is compiled or passed in _validate_ property); in this case it should return a promise that resolves with a value `true` or `false`. This option is ignored in case of \"macro\" and \"inline\" keywords.\n- _errors_: an optional boolean or string `\"full\"` indicating whether keyword returns errors. If this property is not set Ajv will determine if the errors were set in case of failed validation.\n\n_compile_, _macro_ and _inline_ are mutually exclusive, only one should be used at a time. _validate_ can be used separately or in addition to them to support $data reference.\n\n__Please note__: If the keyword is validating data type that is different from the type(s) in its definition, the validation function will not be called (and expanded macro will not be used), so there is no need to check for data type inside validation function or inside schema returned by macro function (unless you want to enforce a specific type and for some reason do not want to use a separate `type` keyword for that). In the same way as standard keywords work, if the keyword does not apply to the data type being validated, the validation of this keyword will succeed.\n\nSee [Defining custom keywords](#defining-custom-keywords) for more details.\n\n\n##### .getKeyword(String keyword) -&gt; Object|Boolean\n\nReturns custom keyword definition, `true` for pre-defined keywords and `false` if the keyword is unknown.\n\n\n##### .removeKeyword(String keyword) -&gt; Ajv\n\nRemoves custom or pre-defined keyword so you can redefine them.\n\nWhile this method can be used to extend pre-defined keywords, it can also be used to completely change their meaning - it may lead to unexpected results.\n\n__Please note__: schemas compiled before the keyword is removed will continue to work without changes. To recompile schemas use `removeSchema` method and compile them again.\n\n\n##### .errorsText([Array&lt;Object&gt; errors [, Object options]]) -&gt; String\n\nReturns the text with all errors in a String.\n\nOptions can have properties `separator` (string used to separate errors, \", \" by default) and `dataVar` (the variable name that dataPaths are prefixed with, \"data\" by default).\n\n\n## Options\n\nDefaults:\n\n```javascript\n{\n  // validation and reporting options:\n  $data:            false,\n  allErrors:        false,\n  verbose:          false,\n  $comment:         false, // NEW in Ajv version 6.0\n  jsonPointers:     false,\n  uniqueItems:      true,\n  unicode:          true,\n  nullable:         false,\n  format:           'fast',\n  formats:          {},\n  unknownFormats:   true,\n  schemas:          {},\n  logger:           undefined,\n  // referenced schema options:\n  schemaId:         '$id',\n  missingRefs:      true,\n  extendRefs:       'ignore', // recommended 'fail'\n  loadSchema:       undefined, // function(uri: string): Promise {}\n  // options to modify validated data:\n  removeAdditional: false,\n  useDefaults:      false,\n  coerceTypes:      false,\n  // strict mode options\n  strictDefaults:   false,\n  strictKeywords:   false,\n  // asynchronous validation options:\n  transpile:        undefined, // requires ajv-async package\n  // advanced options:\n  meta:             true,\n  validateSchema:   true,\n  addUsedSchema:    true,\n  inlineRefs:       true,\n  passContext:      false,\n  loopRequired:     Infinity,\n  ownProperties:    false,\n  multipleOfPrecision: false,\n  errorDataPath:    'object', // deprecated\n  messages:         true,\n  sourceCode:       false,\n  processCode:      undefined, // function (str: string): string {}\n  cache:            new Cache,\n  serialize:        undefined\n}\n```\n\n##### Validation and reporting options\n\n- _$data_: support [$data references](#data-reference). Draft 6 meta-schema that is added by default will be extended to allow them. If you want to use another meta-schema you need to use $dataMetaSchema method to add support for $data reference. See [API](#api).\n- _allErrors_: check all rules collecting all errors. Default is to return after the first error.\n- _verbose_: include the reference to the part of the schema (`schema` and `parentSchema`) and validated data in errors (false by default).\n- _$comment_ (NEW in Ajv version 6.0): log or pass the value of `$comment` keyword to a function. Option values:\n  - `false` (default): ignore $comment keyword.\n  - `true`: log the keyword value to console.\n  - function: pass the keyword value, its schema path and root schema to the specified function\n- _jsonPointers_: set `dataPath` property of errors using [JSON Pointers](https://tools.ietf.org/html/rfc6901) instead of JavaScript property access notation.\n- _uniqueItems_: validate `uniqueItems` keyword (true by default).\n- _unicode_: calculate correct length of strings with unicode pairs (true by default). Pass `false` to use `.length` of strings that is faster, but gives \"incorrect\" lengths of strings with unicode pairs - each unicode pair is counted as two characters.\n- _nullable_: support keyword \"nullable\" from [Open API 3 specification](https://swagger.io/docs/specification/data-models/data-types/).\n- _format_: formats validation mode. Option values:\n  - `\"fast\"` (default) - simplified and fast validation (see [Formats](#formats) for details of which formats are available and affected by this option).\n  - `\"full\"` - more restrictive and slow validation. E.g., 25:00:00 and 2015/14/33 will be invalid time and date in 'full' mode but it will be valid in 'fast' mode.\n  - `false` - ignore all format keywords.\n- _formats_: an object with custom formats. Keys and values will be passed to `addFormat` method.\n- _keywords_: an object with custom keywords. Keys and values will be passed to `addKeyword` method.\n- _unknownFormats_: handling of unknown formats. Option values:\n  - `true` (default) - if an unknown format is encountered the exception is thrown during schema compilation. If `format` keyword value is [$data reference](#data-reference) and it is unknown the validation will fail.\n  - `[String]` - an array of unknown format names that will be ignored. This option can be used to allow usage of third party schemas with format(s) for which you don't have definitions, but still fail if another unknown format is used. If `format` keyword value is [$data reference](#data-reference) and it is not in this array the validation will fail.\n  - `\"ignore\"` - to log warning during schema compilation and always pass validation (the default behaviour in versions before 5.0.0). This option is not recommended, as it allows to mistype format name and it won't be validated without any error message. This behaviour is required by JSON Schema specification.\n- _schemas_: an array or object of schemas that will be added to the instance. In case you pass the array the schemas must have IDs in them. When the object is passed the method `addSchema(value, key)` will be called for each schema in this object.\n- _logger_: sets the logging method. Default is the global `console` object that should have methods `log`, `warn` and `error`. See [Error logging](#error-logging). Option values:\n  - custom logger - it should have methods `log`, `warn` and `error`. If any of these methods is missing an exception will be thrown.\n  - `false` - logging is disabled.\n\n\n##### Referenced schema options\n\n- _schemaId_: this option defines which keywords are used as schema URI. Option value:\n  - `\"$id\"` (default) - only use `$id` keyword as schema URI (as specified in JSON Schema draft-06/07), ignore `id` keyword (if it is present a warning will be logged).\n  - `\"id\"` - only use `id` keyword as schema URI (as specified in JSON Schema draft-04), ignore `$id` keyword (if it is present a warning will be logged).\n  - `\"auto\"` - use both `$id` and `id` keywords as schema URI. If both are present (in the same schema object) and different the exception will be thrown during schema compilation.\n- _missingRefs_: handling of missing referenced schemas. Option values:\n  - `true` (default) - if the reference cannot be resolved during compilation the exception is thrown. The thrown error has properties `missingRef` (with hash fragment) and `missingSchema` (without it). Both properties are resolved relative to the current base id (usually schema id, unless it was substituted).\n  - `\"ignore\"` - to log error during compilation and always pass validation.\n  - `\"fail\"` - to log error and successfully compile schema but fail validation if this rule is checked.\n- _extendRefs_: validation of other keywords when `$ref` is present in the schema. Option values:\n  - `\"ignore\"` (default) - when `$ref` is used other keywords are ignored (as per [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03#section-3) standard). A warning will be logged during the schema compilation.\n  - `\"fail\"` (recommended) - if other validation keywords are used together with `$ref` the exception will be thrown when the schema is compiled. This option is recommended to make sure schema has no keywords that are ignored, which can be confusing.\n  - `true` - validate all keywords in the schemas with `$ref` (the default behaviour in versions before 5.0.0).\n- _loadSchema_: asynchronous function that will be used to load remote schemas when `compileAsync` [method](#api-compileAsync) is used and some reference is missing (option `missingRefs` should NOT be 'fail' or 'ignore'). This function should accept remote schema uri as a parameter and return a Promise that resolves to a schema. See example in [Asynchronous compilation](#asynchronous-schema-compilation).\n\n\n##### Options to modify validated data\n\n- _removeAdditional_: remove additional properties - see example in [Filtering data](#filtering-data). This option is not used if schema is added with `addMetaSchema` method. Option values:\n  - `false` (default) - not to remove additional properties\n  - `\"all\"` - all additional properties are removed, regardless of `additionalProperties` keyword in schema (and no validation is made for them).\n  - `true` - only additional properties with `additionalProperties` keyword equal to `false` are removed.\n  - `\"failing\"` - additional properties that fail schema validation will be removed (where `additionalProperties` keyword is `false` or schema).\n- _useDefaults_: replace missing or undefined properties and items with the values from corresponding `default` keywords. Default behaviour is to ignore `default` keywords. This option is not used if schema is added with `addMetaSchema` method. See examples in [Assigning defaults](#assigning-defaults). Option values:\n  - `false` (default) - do not use defaults\n  - `true` - insert defaults by value (object literal is used).\n  - `\"empty\"` - in addition to missing or undefined, use defaults for properties and items that are equal to `null` or `\"\"` (an empty string).\n  - `\"shared\"` (deprecated) - insert defaults by reference. If the default is an object, it will be shared by all instances of validated data. If you modify the inserted default in the validated data, it will be modified in the schema as well.\n- _coerceTypes_: change data type of data to match `type` keyword. See the example in [Coercing data types](#coercing-data-types) and [coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md). Option values:\n  - `false` (default) - no type coercion.\n  - `true` - coerce scalar data types.\n  - `\"array\"` - in addition to coercions between scalar types, coerce scalar data to an array with one element and vice versa (as required by the schema).\n\n\n##### Strict mode options\n\n- _strictDefaults_: report ignored `default` keywords in schemas. Option values:\n  - `false` (default) - ignored defaults are not reported\n  - `true` - if an ignored default is present, throw an error\n  - `\"log\"` - if an ignored default is present, log warning\n- _strictKeywords_: report unknown keywords in schemas. Option values:\n  - `false` (default) - unknown keywords are not reported\n  - `true` - if an unknown keyword is present, throw an error\n  - `\"log\"` - if an unknown keyword is present, log warning\n\n\n##### Asynchronous validation options\n\n- _transpile_: Requires [ajv-async](https://github.com/epoberezkin/ajv-async) package. It determines whether Ajv transpiles compiled asynchronous validation function. Option values:\n  - `undefined` (default) - transpile with [nodent](https://github.com/MatAtBread/nodent) if async functions are not supported.\n  - `true` - always transpile with nodent.\n  - `false` - do not transpile; if async functions are not supported an exception will be thrown.\n\n\n##### Advanced options\n\n- _meta_: add [meta-schema](http://json-schema.org/documentation.html) so it can be used by other schemas (true by default). If an object is passed, it will be used as the default meta-schema for schemas that have no `$schema` keyword. This default meta-schema MUST have `$schema` keyword.\n- _validateSchema_: validate added/compiled schemas against meta-schema (true by default). `$schema` property in the schema can be http://json-schema.org/draft-07/schema or absent (draft-07 meta-schema will be used) or can be a reference to the schema previously added with `addMetaSchema` method. Option values:\n  - `true` (default) -  if the validation fails, throw the exception.\n  - `\"log\"` - if the validation fails, log error.\n  - `false` - skip schema validation.\n- _addUsedSchema_: by default methods `compile` and `validate` add schemas to the instance if they have `$id` (or `id`) property that doesn't start with \"#\". If `$id` is present and it is not unique the exception will be thrown. Set this option to `false` to skip adding schemas to the instance and the `$id` uniqueness check when these methods are used. This option does not affect `addSchema` method.\n- _inlineRefs_: Affects compilation of referenced schemas. Option values:\n  - `true` (default) - the referenced schemas that don't have refs in them are inlined, regardless of their size - that substantially improves performance at the cost of the bigger size of compiled schema functions.\n  - `false` - to not inline referenced schemas (they will be compiled as separate functions).\n  - integer number - to limit the maximum number of keywords of the schema that will be inlined.\n- _passContext_: pass validation context to custom keyword functions. If this option is `true` and you pass some context to the compiled validation function with `validate.call(context, data)`, the `context` will be available as `this` in your custom keywords. By default `this` is Ajv instance.\n- _loopRequired_: by default `required` keyword is compiled into a single expression (or a sequence of statements in `allErrors` mode). In case of a very large number of properties in this keyword it may result in a very big validation function. Pass integer to set the number of properties above which `required` keyword will be validated in a loop - smaller validation function size but also worse performance.\n- _ownProperties_: by default Ajv iterates over all enumerable object properties; when this option is `true` only own enumerable object properties (i.e. found directly on the object rather than on its prototype) are iterated. Cont"}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4389032}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 26110840}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 111839112}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 290020246}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 585300512}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1147056778}], "dependentsCount": 2829, "starsCount": 101}, "github": {"homepage": "https://ajv.js.org", "starsCount": 6974, "forksCount": 519, "subscribersCount": 99, "issues": {"count": 1164, "openCount": 77, "distribution": {"3600": 179, "10800": 92, "32400": 132, "97200": 144, "291600": 148, "874800": 152, "2624400": 122, "7873200": 67, "23619600": 61, "70858800": 55, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "epoberezkin", "commitsCount": 1008}, {"username": "greenkeeper[bot]", "commitsCount": 35}, {"username": "greenkeeperio-bot", "commitsCount": 21}, {"username": "blakeembrey", "commitsCount": 12}, {"username": "gajus", "commitsCount": 7}, {"username": "meirotstein", "commitsCount": 6}, {"username": "sambauers", "commitsCount": 5}, {"username": "boenrobot", "commitsCount": 4}, {"username": "domoritz", "commitsCount": 4}, {"username": "willfarrell", "commitsCount": 4}, {"username": "RadiationSickness", "commitsCount": 3}, {"username": "dcbrwn", "commitsCount": 3}, {"username": "franciscomorais", "commitsCount": 3}, {"username": "igor-savin-ht", "commitsCount": 3}, {"username": "imbstack", "commitsCount": 3}, {"username": "pithu", "commitsCount": 3}, {"username": "Delagen", "commitsCount": 2}, {"username": "HolgerJeromin", "commitsCount": 2}, {"username": "HotelDon", "commitsCount": 2}, {"username": "Nonemoticoner", "commitsCount": 2}, {"username": "YChebotaev", "commitsCount": 2}, {"username": "brendo", "commitsCount": 2}, {"username": "donaldpipowitch", "commitsCount": 2}, {"username": "farrago", "commitsCount": 2}, {"username": "kroky", "commitsCount": 2}, {"username": "marshall007", "commitsCount": 2}, {"username": "mattpolzin", "commitsCount": 2}, {"username": "yume-chan", "commitsCount": 2}, {"username": "BoLaMN", "commitsCount": 1}, {"username": "ChuntaoLu", "commitsCount": 1}, {"username": "EtaiG", "commitsCount": 1}, {"username": "MattiAstedrone", "commitsCount": 1}, {"username": "MikeRalphson", "commitsCount": 1}, {"username": "Opticsponge", "commitsCount": 1}, {"username": "RobDesideri", "commitsCount": 1}, {"username": "ahmdsolmn", "commitsCount": 1}, {"username": "anchnk", "commitsCount": 1}, {"username": "andyscott", "commitsCount": 1}, {"username": "anslzo", "commitsCount": 1}, {"username": "bearmini", "commitsCount": 1}, {"username": "billytrend", "commitsCount": 1}, {"username": "blainesch", "commitsCount": 1}, {"username": "cjancsar", "commitsCount": 1}, {"username": "cpillsbury", "commitsCount": 1}, {"username": "dalcib", "commitsCount": 1}, {"username": "dancasey", "commitsCount": 1}, {"username": "darcyparker", "commitsCount": 1}, {"username": "daveisfera", "commitsCount": 1}, {"username": "delavara", "commitsCount": 1}, {"username": "duxing", "commitsCount": 1}, {"username": "dzuremar", "commitsCount": 1}, {"username": "ehmicky", "commitsCount": 1}, {"username": "fridays", "commitsCount": 1}, {"username": "garrows", "commitsCount": 1}, {"username": "gj", "commitsCount": 1}, {"username": "handrews", "commitsCount": 1}, {"username": "hans-kinnek", "commitsCount": 1}, {"username": "idangozlan", "commitsCount": 1}, {"username": "isTravis", "commitsCount": 1}, {"username": "jboavida", "commitsCount": 1}, {"username": "johanlelan", "commitsCount": 1}, {"username": "jonasfj", "commitsCount": 1}, {"username": "jonathanGB", "commitsCount": 1}, {"username": "jonganc", "commitsCount": 1}, {"username": "jsdevel", "commitsCount": 1}, {"username": "jwalton", "commitsCount": 1}, {"username": "keyten", "commitsCount": 1}, {"username": "kpping", "commitsCount": 1}, {"username": "krenor", "commitsCount": 1}, {"username": "kulakowka", "commitsCount": 1}, {"username": "lehni", "commitsCount": 1}, {"username": "leonardovillela", "commitsCount": 1}, {"username": "lyngaas", "commitsCount": 1}, {"username": "mbroadst", "commitsCount": 1}, {"username": "mduu", "commitsCount": 1}, {"username": "merlindorin", "commitsCount": 1}, {"username": "mrjgreen", "commitsCount": 1}, {"username": "mychaelgo", "commitsCount": 1}, {"username": "nimerritt", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "nwoltman", "commitsCount": 1}, {"username": "ossdev07", "commitsCount": 1}, {"username": "platinumazure", "commitsCount": 1}, {"username": "rek", "commitsCount": 1}, {"username": "ryanmeador", "commitsCount": 1}, {"username": "stuartpb", "commitsCount": 1}, {"username": "thetric", "commitsCount": 1}, {"username": "tridium", "commitsCount": 1}, {"username": "vlbee", "commitsCount": 1}, {"username": "wla80", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 14}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 26}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 29}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 61}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 78803, "testsSize": 537026}, "badges": [{"urls": {"original": "https://travis-ci.org/epoberezkin/ajv.svg?branch=master", "service": "https://api.travis-ci.org/epoberezkin/ajv.svg?branch=master", "shields": "https://img.shields.io/travis/epoberezkin/ajv/master.svg", "content": "https://img.shields.io/travis/epoberezkin/ajv/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/ajv.svg", "shields": "https://img.shields.io/npm/v/ajv.svg", "content": "https://img.shields.io/npm/v/ajv.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/ajv.svg", "shields": "https://img.shields.io/npm/dm/ajv.svg", "content": "https://img.shields.io/npm/dm/ajv.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://coveralls.io/repos/epoberezkin/ajv/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/epoberezkin/ajv/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/epoberezkin/ajv/master.svg", "content": "https://img.shields.io/coveralls/epoberezkin/ajv/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/gitter/room/ajv-validator/ajv.svg", "service": "https://badges.gitter.im/ajv-validator/ajv.svg", "shields": "https://img.shields.io/gitter/room/ajv-validator/ajv.svg", "content": "https://img.shields.io/gitter/room/ajv-validator/ajv.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["eslint", "jshint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 7783, "downloadsCount": 96673415.33333333, "downloadsAcceleration": 173599.32298325724, "dependentsCount": 2829}, "maintenance": {"releasesFrequency": 0.627568493150685, "commitsFrequency": 0.9615547945205479, "openIssues": 1, "issuesDistribution": 0.6353760513072086}}, "score": {"final": 0.9302283878991289, "detail": {"quality": 0.989463614822099, "popularity": 0.8179411111285063, "maintenance": 0.9917426130214918}}}
{"analyzedAt": "2020-03-01T14:25:26.273Z", "collected": {"metadata": {"name": "ansi-escapes", "scope": "unscoped", "version": "4.3.1", "description": "ANSI escape codes for manipulating the terminal", "keywords": ["ansi", "terminal", "console", "cli", "string", "tty", "escape", "escapes", "formatting", "shell", "xterm", "log", "logging", "command-line", "text", "vt100", "sequence", "control", "code", "codes", "cursor", "iterm", "iterm2"], "date": "2020-03-01T13:54:42.051Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "https://sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/ansi-escapes.git"}, "links": {"npm": "https://www.npmjs.com/package/ansi-escapes", "homepage": "https://github.com/sindresorhus/ansi-escapes#readme", "repository": "https://github.com/sindresorhus/ansi-escapes", "bugs": "https://github.com/sindresorhus/ansi-escapes/issues"}, "license": "MIT", "dependencies": {"type-fest": "^0.11.0"}, "devDependencies": {"@types/node": "^13.7.7", "ava": "^2.1.0", "tsd": "^0.11.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 1}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 6}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ansi-escapes [![Build Status](https://travis-ci.org/sindresorhus/ansi-escapes.svg?branch=master)](https://travis-ci.org/sindresorhus/ansi-escapes)\n\n> [ANSI escape codes](http://www.termsys.demon.co.uk/vtansi.htm) for manipulating the terminal\n\n## Install\n\n```\n$ npm install ansi-escapes\n```\n\n## Usage\n\n```js\nconst ansiEscapes = require('ansi-escapes');\n\n// Moves the cursor two rows up and to the left\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\n//=> '\\u001B[2A\\u001B[1000D'\n```\n\n## API\n\n### cursorTo(x, y?)\n\nSet the absolute position of the cursor. `x0` `y0` is the top left of the screen.\n\n### cursorMove(x, y?)\n\nSet the position of the cursor relative to its current position.\n\n### cursorUp(count)\n\nMove cursor up a specific amount of rows. Default is `1`.\n\n### cursorDown(count)\n\nMove cursor down a specific amount of rows. Default is `1`.\n\n### cursorForward(count)\n\nMove cursor forward a specific amount of columns. Default is `1`.\n\n### cursorBackward(count)\n\nMove cursor backward a specific amount of columns. Default is `1`.\n\n### cursorLeft\n\nMove cursor to the left side.\n\n### cursorSavePosition\n\nSave cursor position.\n\n### cursorRestorePosition\n\nRestore saved cursor position.\n\n### cursorGetPosition\n\nGet cursor position.\n\n### cursorNextLine\n\nMove cursor to the next line.\n\n### cursorPrevLine\n\nMove cursor to the previous line.\n\n### cursorHide\n\nHide cursor.\n\n### cursorShow\n\nShow cursor.\n\n### eraseLines(count)\n\nErase from the current cursor position up the specified amount of rows.\n\n### eraseEndLine\n\nErase from the current cursor position to the end of the current line.\n\n### eraseStartLine\n\nErase from the current cursor position to the start of the current line.\n\n### eraseLine\n\nErase the entire current line.\n\n### eraseDown\n\nErase the screen from the current line down to the bottom of the screen.\n\n### eraseUp\n\nErase the screen from the current line up to the top of the screen.\n\n### eraseScreen\n\nErase the screen and move the cursor the top left position.\n\n### scrollUp\n\nScroll display up one line.\n\n### scrollDown\n\nScroll display down one line.\n\n### clearScreen\n\nClear the terminal screen. (Viewport)\n\n### clearTerminal\n\nClear the whole terminal, including scrollback buffer. (Not just the visible part of it)\n\n### beep\n\nOutput a beeping sound.\n\n### link(text, url)\n\nCreate a clickable link.\n\n[Supported terminals.](https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda) Use [`supports-hyperlinks`](https://github.com/jamestalmage/supports-hyperlinks) to detect link support.\n\n### image(filePath, options?)\n\nDisplay an image.\n\n*Currently only supported on iTerm2 >=3*\n\nSee [term-img](https://github.com/sindresorhus/term-img) for a higher-level module.\n\n#### input\n\nType: `Buffer`\n\nBuffer of an image. Usually read in with `fs.readFile()`.\n\n#### options\n\nType: `object`\n\n##### width\n##### height\n\nType: `string | number`\n\nThe width and height are given as a number followed by a unit, or the word \"auto\".\n\n- `N`: N character cells.\n- `Npx`: N pixels.\n- `N%`: N percent of the session's width or height.\n- `auto`: The image's inherent size will be used to determine an appropriate dimension.\n\n##### preserveAspectRatio\n\nType: `boolean`\\\nDefault: `true`\n\n### iTerm.setCwd(path?)\n\nType: `string`\\\nDefault: `process.cwd()`\n\n[Inform iTerm2](https://www.iterm2.com/documentation-escape-codes.html) of the current directory to help semantic history and enable [Cmd-clicking relative paths](https://coderwall.com/p/b7e82q/quickly-open-files-in-iterm-with-cmd-click).\n\n### iTerm.annotation(message, options?)\n\nCreates an escape code to display an \"annotation\" in iTerm2.\n\nAn annotation looks like this when shown:\n\n<img src=\"https://user-images.githubusercontent.com/924465/64382136-b60ac700-cfe9-11e9-8a35-9682e8dc4b72.png\" width=\"500\">\n\nSee the [iTerm Proprietary Escape Codes documentation](https://iterm2.com/documentation-escape-codes.html) for more information.\n\n#### message\n\nType: `string`\n\nThe message to display within the annotation.\n\nThe `|` character is disallowed and will be stripped.\n\n#### options\n\nType: `object`\n\n##### length\n\nType: `number`\\\nDefault: The remainder of the line\n\nNonzero number of columns to annotate.\n\n##### x\n\nType: `number`\\\nDefault: Cursor position\n\nStarting X coordinate.\n\nMust be used with `y` and `length`.\n\n##### y\n\nType: `number`\\\nDefault: Cursor position\n\nStarting Y coordinate.\n\nMust be used with `x` and `length`.\n\n##### isHidden\n\nType: `boolean`\\\nDefault: `false`\n\nCreate a \"hidden\" annotation.\n\nAnnotations created this way can be shown using the \"Show Annotations\" iTerm command.\n\n## Related\n\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-ansi-escapes?utm_source=npm-ansi-escapes&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 903592}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 18888869}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 76734278}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 199970595}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 372865594}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 647871541}], "dependentsCount": 410, "starsCount": 7}, "github": {"starsCount": 288, "forksCount": 26, "subscribersCount": 10, "issues": {"count": 19, "openCount": 3, "distribution": {"3600": 2, "10800": 0, "32400": 3, "97200": 6, "291600": 1, "874800": 0, "2624400": 1, "7873200": 1, "23619600": 1, "70858800": 3, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 39}, {"username": "BendingBender", "commitsCount": 3}, {"username": "Qix-", "commitsCount": 1}, {"username": "SamVerschueren", "commitsCount": 1}, {"username": "boneskull", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "dextermb", "commitsCount": 1}, {"username": "eysi09", "commitsCount": 1}, {"username": "forivall", "commitsCount": 1}, {"username": "vadimdemedes", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 18}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5145, "testsSize": 222}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/ansi-escapes.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/ansi-escapes.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/ansi-escapes/master.svg", "content": "https://img.shields.io/travis/sindresorhus/ansi-escapes/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.583, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 341, "downloadsCount": 66656865, "downloadsAcceleration": 269825.93557838665, "dependentsCount": 410}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8448467585460153, "detail": {"quality": 0.9163018061621112, "popularity": 0.6285566707658131, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-25T02:05:26.774Z", "collected": {"metadata": {"name": "ansi-regex", "scope": "unscoped", "version": "5.0.0", "description": "Regular expression for matching ANSI escape codes", "keywords": ["ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "command-line", "text", "regex", "regexp", "re", "match", "test", "find", "pattern"], "date": "2019-10-04T11:29:13.830Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/ansi-regex.git"}, "links": {"npm": "https://www.npmjs.com/package/ansi-regex", "homepage": "https://github.com/chalk/ansi-regex#readme", "repository": "https://github.com/chalk/ansi-regex", "bugs": "https://github.com/chalk/ansi-regex/issues"}, "license": "MIT", "devDependencies": {"ava": "^2.4.0", "tsd": "^0.9.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 2}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 3}, {"from": "2018-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex({onlyFirst: true}));\n//=> ['\\u001B[4m']\n\n'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'.match(ansiRegex());\n//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']\n```\n\n\n## API\n\n### ansiRegex(options?)\n\nReturns a regex for matching ANSI escape codes.\n\n#### options\n\nType: `object`\n\n##### onlyFirst\n\nType: `boolean`<br>\nDefault: `false` *(Matches any ANSI escape codes in a string)*\n\nMatch only the first ANSI escape.\n\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-ansi-regex?utm_source=npm-ansi-regex&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 7520529}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 44120134}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 180073325}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 465695575}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 877609927}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1563905896}], "dependentsCount": 276, "starsCount": 8}, "github": {"starsCount": 98, "forksCount": 25, "subscribersCount": 12, "issues": {"count": 33, "openCount": 0, "distribution": {"3600": 10, "10800": 2, "32400": 3, "97200": 1, "291600": 4, "874800": 1, "2624400": 2, "7873200": 6, "23619600": 2, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 28}, {"username": "Qix-", "commitsCount": 7}, {"username": "Akim95", "commitsCount": 1}, {"username": "LitoMore", "commitsCount": 1}, {"username": "ZSkycat", "commitsCount": 1}, {"username": "arjunmehta", "commitsCount": 1}, {"username": "cancerberoSgx", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}], "commits": [{"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 3}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "Tidelift", "state": "success"}]}, "source": {"files": {"readmeSize": 2681, "testsSize": 3424}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/ansi-regex.svg?branch=master", "service": "https://api.travis-ci.org/chalk/ansi-regex.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/ansi-regex/master.svg", "content": "https://img.shields.io/travis/chalk/ansi-regex/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 151, "downloadsCount": 155231858.33333334, "downloadsAcceleration": 577176.8742199391, "dependentsCount": 276}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8495296695566696, "detail": {"quality": 0.9547045235275585, "popularity": 0.6090198016258708, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-21T17:49:39.657Z", "collected": {"metadata": {"name": "ansi-styles", "scope": "unscoped", "version": "4.2.1", "description": "ANSI escape codes for styling strings in the terminal", "keywords": ["ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2020-01-01T18:15:19.134Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/ansi-styles.git"}, "links": {"npm": "https://www.npmjs.com/package/ansi-styles", "homepage": "https://github.com/chalk/ansi-styles#readme", "repository": "https://github.com/chalk/ansi-styles", "bugs": "https://github.com/chalk/ansi-styles/issues"}, "license": "MIT", "dependencies": {"@types/color-name": "^1.1.1", "color-convert": "^2.0.1"}, "devDependencies": {"@types/color-convert": "^1.9.0", "ava": "^2.3.0", "svg-term-cli": "^2.1.1", "tsd": "^0.11.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 3}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 5}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n<img src=\"screenshot.svg\" width=\"900\">\n\n## Install\n\n```\n$ npm install ansi-styles\n```\n\n## Usage\n\n```js\nconst style = require('ansi-styles');\n\nconsole.log(`${style.green.open}Hello world!${style.green.close}`);\n\n\n// Color conversion between 16/256/truecolor\n// NOTE: If conversion goes to 16 colors or 256 colors, the original color\n//       may be degraded to fit that color palette. This means terminals\n//       that do not support 16 million colors will best-match the\n//       original color.\nconsole.log(style.bgColor.ansi.hsl(120, 80, 72) + 'Hello world!' + style.bgColor.close);\nconsole.log(style.color.ansi256.rgb(199, 20, 250) + 'Hello world!' + style.color.close);\nconsole.log(style.color.ansi16m.hex('#abcdef') + 'Hello world!' + style.color.close);\n```\n\n## API\n\nEach style has an `open` and `close` property.\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(Not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(Not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright` (alias: `gray`, `grey`)\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright` (alias: `bgGray`, `bgGrey`)\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n## Advanced usage\n\nBy default, you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `style.modifier`\n- `style.color`\n- `style.bgColor`\n\n###### Example\n\n```js\nconsole.log(style.color.green.open);\n```\n\nRaw escape codes (i.e. without the CSI escape prefix `\\u001B[` and render mode postfix `m`) are available under `style.codes`, which returns a `Map` with the open codes as keys and close codes as values.\n\n###### Example\n\n```js\nconsole.log(style.codes.get(36));\n//=> 39\n```\n\n## [256 / 16 million (TrueColor) support](https://gist.github.com/XVilka/8346728)\n\n`ansi-styles` uses the [`color-convert`](https://github.com/Qix-/color-convert) package to allow for converting between various colors and ANSI escapes, with support for 256 and 16 million colors.\n\nThe following color spaces from `color-convert` are supported:\n\n- `rgb`\n- `hex`\n- `keyword`\n- `hsl`\n- `hsv`\n- `hwb`\n- `ansi`\n- `ansi256`\n\nTo use these, call the associated conversion function with the intended output, for example:\n\n```js\nstyle.color.ansi.rgb(100, 200, 15); // RGB to 16 color ansi foreground code\nstyle.bgColor.ansi.rgb(100, 200, 15); // RGB to 16 color ansi background code\n\nstyle.color.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\nstyle.bgColor.ansi256.hsl(120, 100, 60); // HSL to 256 color ansi foreground code\n\nstyle.color.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color foreground code\nstyle.bgColor.ansi16m.hex('#C0FFEE'); // Hex (RGB) to 16 million color background code\n```\n\n## Related\n\n- [ansi-escapes](https://github.com/sindresorhus/ansi-escapes) - ANSI escape codes for manipulating the terminal\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-ansi-styles?utm_source=npm-ansi-styles&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 5959487}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 31035295}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 130098318}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 321392265}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 613810695}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1128663734}], "dependentsCount": 382, "starsCount": 11}, "github": {"starsCount": 260, "forksCount": 48, "subscribersCount": 11, "issues": {"count": 58, "openCount": 1, "distribution": {"3600": 15, "10800": 4, "32400": 5, "97200": 5, "291600": 6, "874800": 1, "2624400": 6, "7873200": 7, "23619600": 6, "70858800": 3, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 53}, {"username": "Qix-", "commitsCount": 15}, {"username": "arthurvr", "commitsCount": 3}, {"username": "ExE-Boss", "commitsCount": 2}, {"username": "bluelovers", "commitsCount": 1}, {"username": "eush77", "commitsCount": 1}, {"username": "jbnicolai", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "nmschulte", "commitsCount": 1}, {"username": "stroncium", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 12}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4225, "testsSize": 3423}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/ansi-styles.svg?branch=master", "service": "https://api.travis-ci.org/chalk/ansi-styles.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/ansi-styles/master.svg", "content": "https://img.shields.io/travis/chalk/ansi-styles/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 341, "downloadsCount": 107130755, "downloadsAcceleration": 390552.80005707743, "dependentsCount": 382}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8588770942625119, "detail": {"quality": 0.9547045235275585, "popularity": 0.6357267293568487, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-04T03:28:47.540Z", "collected": {"metadata": {"name": "argparse", "scope": "unscoped", "version": "1.0.10", "description": "Very powerful CLI arguments parser. Native port of argparse - python's options parsing library", "keywords": ["cli", "parser", "argparse", "option", "args"], "date": "2018-02-15T14:24:01.840Z", "publisher": {"username": "vitaly", "email": "vitaly@rcdesign.ru"}, "maintainers": [{"username": "vitaly", "email": "vitaly@rcdesign.ru"}], "contributors": [{"name": "Eugene Shkuropat"}, {"name": "Paul Jacobson"}], "repository": {"type": "git", "url": "git+https://github.com/nodeca/argparse.git"}, "links": {"npm": "https://www.npmjs.com/package/argparse", "homepage": "https://github.com/nodeca/argparse#readme", "repository": "https://github.com/nodeca/argparse", "bugs": "https://github.com/nodeca/argparse/issues"}, "license": "MIT", "dependencies": {"sprintf-js": "~1.0.2"}, "devDependencies": {"eslint": "^2.13.1", "istanbul": "^0.4.5", "mocha": "^3.1.0", "ndoc": "^5.0.1"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "argparse\n========\n\n[![Build Status](https://secure.travis-ci.org/nodeca/argparse.svg?branch=master)](http://travis-ci.org/nodeca/argparse)\n[![NPM version](https://img.shields.io/npm/v/argparse.svg)](https://www.npmjs.org/package/argparse)\n\nCLI arguments parser for node.js. Javascript port of python's\n[argparse](http://docs.python.org/dev/library/argparse.html) module\n(original version 3.2). That's a full port, except some very rare options,\nrecorded in issue tracker.\n\n**NB. Difference with original.**\n\n- Method names changed to camelCase. See [generated docs](http://nodeca.github.com/argparse/).\n- Use `defaultValue` instead of `default`.\n- Use `argparse.Const.REMAINDER` instead of `argparse.REMAINDER`, and\n  similarly for constant values `OPTIONAL`, `ZERO_OR_MORE`, and `ONE_OR_MORE`\n  (aliases for `nargs` values `'?'`, `'*'`, `'+'`, respectively), and\n  `SUPPRESS`.\n\n\nExample\n=======\n\ntest.js file:\n\n```javascript\n#!/usr/bin/env node\n'use strict';\n\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: '0.0.1',\n  addHelp:true,\n  description: 'Argparse example'\n});\nparser.addArgument(\n  [ '-f', '--foo' ],\n  {\n    help: 'foo bar'\n  }\n);\nparser.addArgument(\n  [ '-b', '--bar' ],\n  {\n    help: 'bar foo'\n  }\n);\nparser.addArgument(\n  '--baz',\n  {\n    help: 'baz bar'\n  }\n);\nvar args = parser.parseArgs();\nconsole.dir(args);\n```\n\nDisplay help:\n\n```\n$ ./test.js -h\nusage: example.js [-h] [-v] [-f FOO] [-b BAR] [--baz BAZ]\n\nArgparse example\n\nOptional arguments:\n  -h, --help         Show this help message and exit.\n  -v, --version      Show program's version number and exit.\n  -f FOO, --foo FOO  foo bar\n  -b BAR, --bar BAR  bar foo\n  --baz BAZ          baz bar\n```\n\nParse arguments:\n\n```\n$ ./test.js -f=3 --bar=4 --baz 5\n{ foo: '3', bar: '4', baz: '5' }\n```\n\nMore [examples](https://github.com/nodeca/argparse/tree/master/examples).\n\n\nArgumentParser objects\n======================\n\n```\nnew ArgumentParser({parameters hash});\n```\n\nCreates a new ArgumentParser object.\n\n**Supported params:**\n\n- ```description``` - Text to display before the argument help.\n- ```epilog``` - Text to display after the argument help.\n- ```addHelp``` - Add a -h/\u2013help option to the parser. (default: true)\n- ```argumentDefault``` - Set the global default value for arguments. (default: null)\n- ```parents``` - A list of ArgumentParser objects whose arguments should also be included.\n- ```prefixChars``` - The set of characters that prefix optional arguments. (default: \u2018-\u2018)\n- ```formatterClass``` - A class for customizing the help output.\n- ```prog``` - The name of the program (default: `path.basename(process.argv[1])`)\n- ```usage``` - The string describing the program usage (default: generated)\n- ```conflictHandler``` - Usually unnecessary, defines strategy for resolving conflicting optionals.\n\n**Not supported yet**\n\n- ```fromfilePrefixChars``` - The set of characters that prefix files from which additional arguments should be read.\n\n\nDetails in [original ArgumentParser guide](http://docs.python.org/dev/library/argparse.html#argumentparser-objects)\n\n\naddArgument() method\n====================\n\n```\nArgumentParser.addArgument(name or flag or [name] or [flags...], {options})\n```\n\nDefines how a single command-line argument should be parsed.\n\n- ```name or flag or [name] or [flags...]``` - Either a positional name\n  (e.g., `'foo'`), a single option (e.g., `'-f'` or `'--foo'`), an array\n  of a single positional name (e.g., `['foo']`), or an array of options\n  (e.g., `['-f', '--foo']`).\n\nOptions:\n\n- ```action``` - The basic type of action to be taken when this argument is encountered at the command line.\n- ```nargs```- The number of command-line arguments that should be consumed.\n- ```constant``` - A constant value required by some action and nargs selections.\n- ```defaultValue``` - The value produced if the argument is absent from the command line.\n- ```type``` - The type to which the command-line argument should be converted.\n- ```choices``` - A container of the allowable values for the argument.\n- ```required``` - Whether or not the command-line option may be omitted (optionals only).\n- ```help``` - A brief description of what the argument does.\n- ```metavar``` - A name for the argument in usage messages.\n- ```dest``` - The name of the attribute to be added to the object returned by parseArgs().\n\nDetails in [original add_argument guide](http://docs.python.org/dev/library/argparse.html#the-add-argument-method)\n\n\nAction (some details)\n================\n\nArgumentParser objects associate command-line arguments with actions.\nThese actions can do just about anything with the command-line arguments associated\nwith them, though most actions simply add an attribute to the object returned by\nparseArgs(). The action keyword argument specifies how the command-line arguments\nshould be handled. The supported actions are:\n\n- ```store``` - Just stores the argument\u2019s value. This is the default action.\n- ```storeConst``` - Stores value, specified by the const keyword argument.\n  (Note that the const keyword argument defaults to the rather unhelpful None.)\n  The 'storeConst' action is most commonly used with optional arguments, that\n  specify some sort of flag.\n- ```storeTrue``` and ```storeFalse``` - Stores values True and False\n  respectively. These are special cases of 'storeConst'.\n- ```append``` - Stores a list, and appends each argument value to the list.\n  This is useful to allow an option to be specified multiple times.\n- ```appendConst``` - Stores a list, and appends value, specified by the\n  const keyword argument to the list. (Note, that the const keyword argument defaults\n  is None.) The 'appendConst' action is typically used when multiple arguments need\n  to store constants to the same list.\n- ```count``` - Counts the number of times a keyword argument occurs. For example,\n  used for increasing verbosity levels.\n- ```help``` - Prints a complete help message for all the options in the current\n  parser and then exits. By default a help action is automatically added to the parser.\n  See ArgumentParser for details of how the output is created.\n- ```version``` - Prints version information and exit. Expects a `version=`\n  keyword argument in the addArgument() call.\n\nDetails in [original action guide](http://docs.python.org/dev/library/argparse.html#action)\n\n\nSub-commands\n============\n\nArgumentParser.addSubparsers()\n\nMany programs split their functionality into a number of sub-commands, for\nexample, the svn program can invoke sub-commands like `svn checkout`, `svn update`,\nand `svn commit`. Splitting up functionality this way can be a particularly good\nidea when a program performs several different functions which require different\nkinds of command-line arguments. `ArgumentParser` supports creation of such\nsub-commands with `addSubparsers()` method. The `addSubparsers()` method is\nnormally called with no arguments and returns an special action object.\nThis object has a single method `addParser()`, which takes a command name and\nany `ArgumentParser` constructor arguments, and returns an `ArgumentParser` object\nthat can be modified as usual.\n\nExample:\n\nsub_commands.js\n```javascript\n#!/usr/bin/env node\n'use strict';\n\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: '0.0.1',\n  addHelp:true,\n  description: 'Argparse examples: sub-commands',\n});\n\nvar subparsers = parser.addSubparsers({\n  title:'subcommands',\n  dest:\"subcommand_name\"\n});\n\nvar bar = subparsers.addParser('c1', {addHelp:true});\nbar.addArgument(\n  [ '-f', '--foo' ],\n  {\n    action: 'store',\n    help: 'foo3 bar3'\n  }\n);\nvar bar = subparsers.addParser(\n  'c2',\n  {aliases:['co'], addHelp:true}\n);\nbar.addArgument(\n  [ '-b', '--bar' ],\n  {\n    action: 'store',\n    type: 'int',\n    help: 'foo3 bar3'\n  }\n);\n\nvar args = parser.parseArgs();\nconsole.dir(args);\n\n```\n\nDetails in [original sub-commands guide](http://docs.python.org/dev/library/argparse.html#sub-commands)\n\n\nContributors\n============\n\n- [Eugene Shkuropat](https://github.com/shkuropat)\n- [Paul Jacobson](https://github.com/hpaulj)\n\n[others](https://github.com/nodeca/argparse/graphs/contributors)\n\nLicense\n=======\n\nCopyright (c) 2012 [Vitaly Puzrin](https://github.com/puzrin).\nReleased under the MIT license. See\n[LICENSE](https://github.com/nodeca/argparse/blob/master/LICENSE) for details."}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2429860}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 13108480}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 54925492}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 140510471}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 278192862}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 528103331}], "dependentsCount": 900, "starsCount": 21}, "github": {"homepage": "http://nodeca.github.com/argparse/", "starsCount": 367, "forksCount": 52, "subscribersCount": 18, "issues": {"count": 143, "openCount": 41, "distribution": {"3600": 32, "10800": 8, "32400": 10, "97200": 13, "291600": 11, "874800": 9, "2624400": 7, "7873200": 6, "23619600": 10, "70858800": 8, "212576400": 29}, "isDisabled": false}, "contributors": [{"username": "puzrin", "commitsCount": 82}, {"username": "shkuropat", "commitsCount": 49}, {"username": "ixti", "commitsCount": 14}, {"username": "tomxtobin", "commitsCount": 8}, {"username": "denis-sokolov", "commitsCount": 2}, {"username": "dpgraham", "commitsCount": 2}, {"username": "greut", "commitsCount": 2}, {"username": "k7sleeper", "commitsCount": 2}, {"username": "mourner", "commitsCount": 2}, {"username": "targos", "commitsCount": 2}, {"username": "CatWithApple", "commitsCount": 1}, {"username": "Olegas", "commitsCount": 1}, {"username": "benblank", "commitsCount": 1}, {"username": "burmisov", "commitsCount": 1}, {"username": "edemaine", "commitsCount": 1}, {"username": "emazzotta", "commitsCount": 1}, {"username": "marcin-mazurek", "commitsCount": 1}, {"username": "maxtaco", "commitsCount": 1}, {"username": "ryanturner10", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 8404, "testsSize": 112231, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/nodeca/argparse.svg?branch=master", "service": "https://api.travis-ci.org/nodeca/argparse.svg?branch=master", "shields": "https://img.shields.io/travis/nodeca/argparse/master.svg", "content": "https://img.shields.io/travis/nodeca/argparse/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/argparse.svg", "shields": "https://img.shields.io/npm/v/argparse.svg", "content": "https://img.shields.io/npm/v/argparse.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["eslint"], "outdatedDependencies": {"sprintf-js": {"required": "~1.0.2", "stable": "1.1.2", "latest": "1.1.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 477, "downloadsCount": 46836823.666666664, "downloadsAcceleration": 120662.18778538809, "dependentsCount": 900}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0.15102739726027398, "openIssues": 0.8554778554778555, "issuesDistribution": 0}}, "score": {"final": 0.6139712460417408, "detail": {"quality": 0.9653448569797979, "popularity": 0.6482139569245695, "maintenance": 0.27855115435486305}}}
{"analyzedAt": "2020-02-25T11:34:34.413Z", "collected": {"metadata": {"name": "array-union", "scope": "unscoped", "version": "2.1.0", "description": "Create an array of unique values, in order, from the input arrays", "keywords": ["array", "set", "uniq", "unique", "duplicate", "remove", "union", "combine", "merge"], "date": "2019-04-22T07:56:25.195Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/array-union.git"}, "links": {"npm": "https://www.npmjs.com/package/array-union", "homepage": "https://github.com/sindresorhus/array-union#readme", "repository": "https://github.com/sindresorhus/array-union", "bugs": "https://github.com/sindresorhus/array-union/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 3}, {"from": "2018-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# array-union [![Build Status](https://travis-ci.org/sindresorhus/array-union.svg?branch=master)](https://travis-ci.org/sindresorhus/array-union)\n\n> Create an array of unique values, in order, from the input arrays\n\n\n## Install\n\n```\n$ npm install array-union\n```\n\n\n## Usage\n\n```js\nconst arrayUnion = require('array-union');\n\narrayUnion([1, 1, 2, 3], [2, 3]);\n//=> [1, 2, 3]\n\narrayUnion(['foo', 'foo', 'bar']);\n//=> ['foo', 'bar']\n\narrayUnion(['\ud83d\udc31', '\ud83e\udd84', '\ud83d\udc3b'], ['\ud83e\udd84', '\ud83c\udf08']);\n//=> ['\ud83d\udc31', '\ud83e\udd84', '\ud83d\udc3b', '\ud83c\udf08']\n\narrayUnion(['\ud83d\udc31', '\ud83e\udd84'], ['\ud83d\udc3b', '\ud83e\udd84'], ['\ud83d\udc36', '\ud83c\udf08', '\ud83c\udf08']);\n//=> ['\ud83d\udc31', '\ud83e\udd84', '\ud83d\udc3b', '\ud83d\udc36', '\ud83c\udf08']\n```\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1886158}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 10968695}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 44717371}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 116746173}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 224304895}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 390189655}], "dependentsCount": 77, "starsCount": 4}, "github": {"starsCount": 29, "forksCount": 10, "subscribersCount": 8, "issues": {"count": 7, "openCount": 0, "distribution": {"3600": 2, "10800": 0, "32400": 2, "97200": 2, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 13}, {"username": "BendingBender", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "cthrax", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "vivekimsit", "commitsCount": 1}], "commits": [{"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 713, "testsSize": 345}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/array-union.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/array-union.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/array-union/master.svg", "content": "https://img.shields.io/travis/sindresorhus/array-union/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7675, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 58, "downloadsCount": 38915391, "downloadsAcceleration": 149672.95800989348, "dependentsCount": 77}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8159953933495276, "detail": {"quality": 0.9433374009225838, "popularity": 0.5229016542381347, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-03T22:46:04.257Z", "collected": {"metadata": {"name": "array-uniq", "scope": "unscoped", "version": "2.1.0", "description": "Create an array without duplicates", "keywords": ["array", "set", "uniq", "unique", "duplicate", "remove"], "date": "2019-04-05T05:36:17.432Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/array-uniq.git"}, "links": {"npm": "https://www.npmjs.com/package/array-uniq", "homepage": "https://github.com/sindresorhus/array-uniq#readme", "repository": "https://github.com/sindresorhus/array-uniq", "bugs": "https://github.com/sindresorhus/array-uniq/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 2}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# array-uniq [![Build Status](https://travis-ci.org/sindresorhus/array-uniq.svg?branch=master)](https://travis-ci.org/sindresorhus/array-uniq)\n\n> Create an array without duplicates\n\n\n## Install\n\n```\n$ npm install array-uniq\n```\n\n\n## Usage\n\n```js\nconst arrayUniq = require('array-uniq');\n\narrayUniq([1, 1, 2, 3, 3]);\n//=> [1, 2, 3]\n\narrayUniq(['foo', 'foo', 'bar', 'foo']);\n//=> ['foo', 'bar']\n```\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1702156}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 9454328}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 39103486}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 105534524}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 213634477}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 406417911}], "dependentsCount": 140, "starsCount": 8}, "github": {"starsCount": 53, "forksCount": 11, "subscribersCount": 8, "issues": {"count": 12, "openCount": 0, "distribution": {"3600": 4, "10800": 0, "32400": 1, "97200": 2, "291600": 2, "874800": 2, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 19}, {"username": "BendingBender", "commitsCount": 1}, {"username": "amitport", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "dy", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 460, "testsSize": 222}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/array-uniq.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/array-uniq.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/array-uniq/master.svg", "content": "https://img.shields.io/travis/sindresorhus/array-uniq/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.583, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 85, "downloadsCount": 35178174.666666664, "downloadsAcceleration": 65840.07033866062, "dependentsCount": 140}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.80949565914106, "detail": {"quality": 0.9163018061621112, "popularity": 0.5275043520086324, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-13T00:11:24.763Z", "collected": {"metadata": {"name": "array-unique", "scope": "unscoped", "version": "0.3.2", "description": "Remove duplicate values from an array. Fastest ES5 implementation.", "keywords": ["array", "unique"], "date": "2016-08-01T00:54:49.804Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/array-unique.git"}, "links": {"npm": "https://www.npmjs.com/package/array-unique", "homepage": "https://github.com/jonschlinkert/array-unique", "repository": "https://github.com/jonschlinkert/array-unique", "bugs": "https://github.com/jonschlinkert/array-unique/issues"}, "license": "MIT", "devDependencies": {"array-uniq": "^1.0.2", "benchmarked": "^0.1.3", "gulp-format-md": "^0.1.9", "mocha": "^2.5.3", "should": "^10.0.0"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# array-unique [![NPM version](https://img.shields.io/npm/v/array-unique.svg?style=flat)](https://www.npmjs.com/package/array-unique) [![NPM downloads](https://img.shields.io/npm/dm/array-unique.svg?style=flat)](https://npmjs.org/package/array-unique) [![Build Status](https://img.shields.io/travis/jonschlinkert/array-unique.svg?style=flat)](https://travis-ci.org/jonschlinkert/array-unique)\n\nRemove duplicate values from an array. Fastest ES5 implementation.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save array-unique\n```\n\n## Usage\n\n```js\nvar unique = require('array-unique');\n\nvar arr = ['a', 'b', 'c', 'c'];\nconsole.log(unique(arr)) //=> ['a', 'b', 'c']\nconsole.log(arr)         //=> ['a', 'b', 'c']\n\n/* The above modifies the input array. To prevent that at a slight performance cost: */\nvar unique = require(\"array-unique\").immutable;\n\nvar arr = ['a', 'b', 'c', 'c'];\nconsole.log(unique(arr)) //=> ['a', 'b', 'c']\nconsole.log(arr)         //=> ['a', 'b', 'c', 'c']\n```\n\n## About\n\n### Related projects\n\n* [arr-diff](https://www.npmjs.com/package/arr-diff): Returns an array with only the unique values from the first array, by excluding all\u2026 [more](https://github.com/jonschlinkert/arr-diff) | [homepage](https://github.com/jonschlinkert/arr-diff \"Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.\")\n* [arr-flatten](https://www.npmjs.com/package/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten. | [homepage](https://github.com/jonschlinkert/arr-flatten \"Recursively flatten an array or arrays. This is the fastest implementation of array flatten.\")\n* [arr-map](https://www.npmjs.com/package/arr-map): Faster, node.js focused alternative to JavaScript's native array map. | [homepage](https://github.com/jonschlinkert/arr-map \"Faster, node.js focused alternative to JavaScript's native array map.\")\n* [arr-pluck](https://www.npmjs.com/package/arr-pluck): Retrieves the value of a specified property from all elements in the collection. | [homepage](https://github.com/jonschlinkert/arr-pluck \"Retrieves the value of a specified property from all elements in the collection.\")\n* [arr-reduce](https://www.npmjs.com/package/arr-reduce): Fast array reduce that also loops over sparse elements. | [homepage](https://github.com/jonschlinkert/arr-reduce \"Fast array reduce that also loops over sparse elements.\")\n* [arr-union](https://www.npmjs.com/package/arr-union): Combines a list of arrays, returning a single array with unique values, using strict equality\u2026 [more](https://github.com/jonschlinkert/arr-union) | [homepage](https://github.com/jonschlinkert/arr-union \"Combines a list of arrays, returning a single array with unique values, using strict equality for comparisons.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/array-unique/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.28, on July 31, 2016._"}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 11336161}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 56153693}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 153386003}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 317620772}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 648172323}], "dependentsCount": 190, "starsCount": 4}, "github": {"starsCount": 46, "forksCount": 11, "subscribersCount": 4, "issues": {"count": 8, "openCount": 3, "distribution": {"3600": 1, "10800": 0, "32400": 1, "97200": 0, "291600": 1, "874800": 0, "2624400": 1, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 10}, {"username": "shawndellysse", "commitsCount": 1}, {"username": "vlazar", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 4021, "testsSize": 9116}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/array-unique.svg?style=flat", "shields": "https://img.shields.io/npm/v/array-unique.svg", "content": "https://img.shields.io/npm/v/array-unique.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/array-unique.svg?style=flat", "shields": "https://img.shields.io/npm/dm/array-unique.svg", "content": "https://img.shields.io/npm/dm/array-unique.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/array-unique.svg?style=flat", "service": "https://api.travis-ci.org/jonschlinkert/array-unique.svg", "shields": "https://img.shields.io/travis/jonschlinkert/array-unique.svg", "content": "https://img.shields.io/travis/jonschlinkert/array-unique.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.6, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 68, "downloadsCount": 51128667.666666664, "downloadsAcceleration": 21180.11099695589, "dependentsCount": 190}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.7083333333333333, "issuesDistribution": 0}}, "score": {"final": 0.494014593709149, "detail": {"quality": 0.8474032145230641, "popularity": 0.5196648242701413, "maintenance": 0.16545983102194384}}}
{"analyzedAt": "2020-02-29T03:02:52.133Z", "collected": {"metadata": {"name": "arr-diff", "scope": "unscoped", "version": "4.0.0", "description": "Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.", "keywords": ["arr", "array", "array differ", "array-differ", "diff", "differ", "difference"], "date": "2017-04-14T04:11:29.824Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "paulmillr", "email": "paul@paulmillr.com"}, {"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}, {"name": "Paul Miller", "email": "paul+gh@paulmillr.com", "url": "paulmillr.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/arr-diff.git"}, "links": {"npm": "https://www.npmjs.com/package/arr-diff", "homepage": "https://github.com/jonschlinkert/arr-diff", "repository": "https://github.com/jonschlinkert/arr-diff", "bugs": "https://github.com/jonschlinkert/arr-diff/issues"}, "license": "MIT", "devDependencies": {"ansi-bold": "^0.1.1", "arr-flatten": "^1.0.1", "array-differ": "^1.0.0", "benchmarked": "^0.2.4", "gulp-format-md": "^0.1.9", "minimist": "^1.2.0", "mocha": "^2.4.5"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# arr-diff [![NPM version](https://img.shields.io/npm/v/arr-diff.svg?style=flat)](https://www.npmjs.com/package/arr-diff) [![NPM monthly downloads](https://img.shields.io/npm/dm/arr-diff.svg?style=flat)](https://npmjs.org/package/arr-diff) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/arr-diff.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/arr-diff)\n\n> Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save arr-diff\n```\n\nInstall with [yarn](https://yarnpkg.com):\n\n```sh\n$ yarn add arr-diff\n```\n\nInstall with [bower](https://bower.io/)\n\n```sh\n$ bower install arr-diff --save\n```\n\n## Usage\n\nReturns the difference between the first array and additional arrays.\n\n```js\nvar diff = require('arr-diff');\n\nvar a = ['a', 'b', 'c', 'd'];\nvar b = ['b', 'c'];\n\nconsole.log(diff(a, b))\n//=> ['a', 'd']\n```\n\n## Benchmarks\n\nThis library versus [array-differ](https://github.com/sindresorhus/array-differ), on April 14, 2017:\n\n```\nBenchmarking: (4 of 4)\n \u00b7 long-dupes\n \u00b7 long\n \u00b7 med\n \u00b7 short\n\n# benchmark/fixtures/long-dupes.js (100804 bytes)\n  arr-diff-3.0.0 x 822 ops/sec \u00b10.67% (86 runs sampled)\n  arr-diff-4.0.0 x 2,141 ops/sec \u00b10.42% (89 runs sampled)\n  array-differ x 708 ops/sec \u00b10.70% (89 runs sampled)\n\n  fastest is arr-diff-4.0.0\n\n# benchmark/fixtures/long.js (94529 bytes)\n  arr-diff-3.0.0 x 882 ops/sec \u00b10.60% (87 runs sampled)\n  arr-diff-4.0.0 x 2,329 ops/sec \u00b10.97% (83 runs sampled)\n  array-differ x 769 ops/sec \u00b10.61% (90 runs sampled)\n\n  fastest is arr-diff-4.0.0\n\n# benchmark/fixtures/med.js (708 bytes)\n  arr-diff-3.0.0 x 856,150 ops/sec \u00b10.42% (89 runs sampled)\n  arr-diff-4.0.0 x 4,665,249 ops/sec \u00b11.06% (89 runs sampled)\n  array-differ x 653,888 ops/sec \u00b11.02% (86 runs sampled)\n\n  fastest is arr-diff-4.0.0\n\n# benchmark/fixtures/short.js (60 bytes)\n  arr-diff-3.0.0 x 3,078,467 ops/sec \u00b10.77% (93 runs sampled)\n  arr-diff-4.0.0 x 9,213,296 ops/sec \u00b10.65% (89 runs sampled)\n  array-differ x 1,337,051 ops/sec \u00b10.91% (92 runs sampled)\n\n  fastest is arr-diff-4.0.0\n```\n\n## About\n\n### Related projects\n\n* [arr-flatten](https://www.npmjs.com/package/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten. | [homepage](https://github.com/jonschlinkert/arr-flatten \"Recursively flatten an array or arrays. This is the fastest implementation of array flatten.\")\n* [array-filter](https://www.npmjs.com/package/array-filter): Array#filter for older browsers. | [homepage](https://github.com/juliangruber/array-filter \"Array#filter for older browsers.\")\n* [array-intersection](https://www.npmjs.com/package/array-intersection): Return an array with the unique values present in _all_ given arrays using strict equality\u2026 [more](https://github.com/jonschlinkert/array-intersection) | [homepage](https://github.com/jonschlinkert/array-intersection \"Return an array with the unique values present in _all_ given arrays using strict equality for comparisons.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 33 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [paulmillr](https://github.com/paulmillr) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.5.0, on April 14, 2017._"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2605818}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 15249106}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 65375885}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 172795991}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 350520264}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 697608382}], "dependentsCount": 101, "starsCount": 3}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 31, "forksCount": 13, "subscribersCount": 4, "issues": {"count": 11, "openCount": 1, "distribution": {"3600": 3, "10800": 1, "32400": 2, "97200": 1, "291600": 0, "874800": 1, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 34}, {"username": "paulmillr", "commitsCount": 2}, {"username": "EdwardBetts", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4475, "testsSize": 1636}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/arr-diff.svg?style=flat", "shields": "https://img.shields.io/npm/v/arr-diff.svg", "content": "https://img.shields.io/npm/v/arr-diff.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/arr-diff.svg?style=flat", "shields": "https://img.shields.io/npm/dm/arr-diff.svg", "content": "https://img.shields.io/npm/dm/arr-diff.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/arr-diff.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/arr-diff.svg", "shields": "https://img.shields.io/travis/jonschlinkert/arr-diff.svg", "content": "https://img.shields.io/travis/jonschlinkert/arr-diff.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 54, "downloadsCount": 57598663.666666664, "downloadsAcceleration": 76004.82111872145, "dependentsCount": 101}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.825154117286319, "detail": {"quality": 0.9679780173703354, "popularity": 0.5279980861310603, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-12T23:47:07.063Z", "collected": {"metadata": {"name": "arr-flatten", "scope": "unscoped", "version": "1.1.0", "description": "Recursively flatten an array or arrays.", "keywords": ["arr", "array", "elements", "flat", "flatten", "nested", "recurse", "recursive", "recursively"], "date": "2017-07-05T18:50:31.592Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Luke Edwards", "url": "https://lukeed.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/arr-flatten.git"}, "links": {"npm": "https://www.npmjs.com/package/arr-flatten", "homepage": "https://github.com/jonschlinkert/arr-flatten", "repository": "https://github.com/jonschlinkert/arr-flatten", "bugs": "https://github.com/jonschlinkert/arr-flatten/issues"}, "license": "MIT", "devDependencies": {"ansi-bold": "^0.1.1", "array-flatten": "^2.1.1", "array-slice": "^1.0.0", "benchmarked": "^1.0.0", "compute-flatten": "^1.0.0", "flatit": "^1.1.1", "flatten": "^1.0.2", "flatten-array": "^1.0.0", "glob": "^7.1.1", "gulp-format-md": "^0.1.12", "just-flatten-it": "^1.1.23", "lodash.flattendeep": "^4.4.0", "m_flattened": "^1.0.1", "mocha": "^3.2.0", "utils-flatten": "^1.0.0", "write": "^0.3.3"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# arr-flatten [![NPM version](https://img.shields.io/npm/v/arr-flatten.svg?style=flat)](https://www.npmjs.com/package/arr-flatten) [![NPM monthly downloads](https://img.shields.io/npm/dm/arr-flatten.svg?style=flat)](https://npmjs.org/package/arr-flatten) [![NPM total downloads](https://img.shields.io/npm/dt/arr-flatten.svg?style=flat)](https://npmjs.org/package/arr-flatten) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/arr-flatten.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/arr-flatten) [![Windows Build Status](https://img.shields.io/appveyor/ci/jonschlinkert/arr-flatten.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/jonschlinkert/arr-flatten)\n\n> Recursively flatten an array or arrays.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save arr-flatten\n```\n\n## Install\n\nInstall with [bower](https://bower.io/)\n\n```sh\n$ bower install arr-flatten --save\n```\n\n## Usage\n\n```js\nvar flatten = require('arr-flatten');\n\nflatten(['a', ['b', ['c']], 'd', ['e']]);\n//=> ['a', 'b', 'c', 'd', 'e']\n```\n\n## Why another flatten utility?\n\nI wanted the fastest implementation I could find, with implementation choices that should work for 95% of use cases, but no cruft to cover the other 5%.\n\n## About\n\n### Related projects\n\n* [arr-filter](https://www.npmjs.com/package/arr-filter): Faster alternative to javascript's native filter method. | [homepage](https://github.com/jonschlinkert/arr-filter \"Faster alternative to javascript's native filter method.\")\n* [arr-union](https://www.npmjs.com/package/arr-union): Combines a list of arrays, returning a single array with unique values, using strict equality\u2026 [more](https://github.com/jonschlinkert/arr-union) | [homepage](https://github.com/jonschlinkert/arr-union \"Combines a list of arrays, returning a single array with unique values, using strict equality for comparisons.\")\n* [array-each](https://www.npmjs.com/package/array-each): Loop over each item in an array and call the given function on every element. | [homepage](https://github.com/jonschlinkert/array-each \"Loop over each item in an array and call the given function on every element.\")\n* [array-unique](https://www.npmjs.com/package/array-unique): Remove duplicate values from an array. Fastest ES5 implementation. | [homepage](https://github.com/jonschlinkert/array-unique \"Remove duplicate values from an array. Fastest ES5 implementation.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 20 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [lukeed](https://github.com/lukeed) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on July 05, 2017._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1964528}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 10391651}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 43560254}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 114322352}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 228551627}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 433624610}], "dependentsCount": 139, "starsCount": 4}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 45, "forksCount": 8, "subscribersCount": 8, "issues": {"count": 6, "openCount": 3, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 0, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 2, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 22}, {"username": "lukeed", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3764, "testsSize": 1696}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/arr-flatten.svg?style=flat", "shields": "https://img.shields.io/npm/v/arr-flatten.svg", "content": "https://img.shields.io/npm/v/arr-flatten.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/arr-flatten.svg?style=flat", "shields": "https://img.shields.io/npm/dm/arr-flatten.svg", "content": "https://img.shields.io/npm/dm/arr-flatten.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/arr-flatten.svg?style=flat", "shields": "https://img.shields.io/npm/dt/arr-flatten.svg", "content": "https://img.shields.io/npm/dt/arr-flatten.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/arr-flatten.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/arr-flatten.svg", "shields": "https://img.shields.io/travis/jonschlinkert/arr-flatten.svg", "content": "https://img.shields.io/travis/jonschlinkert/arr-flatten.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/jonschlinkert/arr-flatten.svg?label=AppVeyor", "service": "https://ci.appveyor.com/api/projects/status/jonschlinkert/arr-flatten", "shields": "https://img.shields.io/appveyor/ci/jonschlinkert/arr-flatten.svg", "content": "https://img.shields.io/appveyor/ci/jonschlinkert/arr-flatten.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 67, "downloadsCount": 38107450.666666664, "downloadsAcceleration": 86428.6168759513, "dependentsCount": 139}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8157085009443634, "detail": {"quality": 0.9333911371497057, "popularity": 0.5306892483355276, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-05T23:42:23.058Z", "collected": {"metadata": {"name": "arr-union", "scope": "unscoped", "version": "3.1.0", "description": "Combines a list of arrays, returning a single array with unique values, using strict equality for comparisons.", "keywords": ["add", "append", "array", "arrays", "combine", "concat", "extend", "union", "uniq", "unique", "util", "utility", "utils"], "date": "2016-02-23T12:54:40.819Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/arr-union.git"}, "links": {"npm": "https://www.npmjs.com/package/arr-union", "homepage": "https://github.com/jonschlinkert/arr-union", "repository": "https://github.com/jonschlinkert/arr-union", "bugs": "https://github.com/jonschlinkert/arr-union/issues"}, "license": "MIT", "devDependencies": {"ansi-bold": "^0.1.1", "array-union": "^1.0.1", "array-unique": "^0.2.1", "benchmarked": "^0.1.4", "gulp-format-md": "^0.1.7", "minimist": "^1.1.1", "mocha": "*", "should": "*"}, "releases": [{"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2018-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# arr-union [![NPM version](https://img.shields.io/npm/v/arr-union.svg)](https://www.npmjs.com/package/arr-union) [![Build Status](https://img.shields.io/travis/jonschlinkert/arr-union.svg)](https://travis-ci.org/jonschlinkert/arr-union)\n\n> Combines a list of arrays, returning a single array with unique values, using strict equality for comparisons.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm i arr-union --save\n```\n\n## Benchmarks\n\nThis library is **10-20 times faster** and more performant than [array-union](https://github.com/sindresorhus/array-union).\n\nSee the [benchmarks](./benchmark).\n\n```sh\n#1: five-arrays\n  array-union x 511,121 ops/sec \u00b10.80% (96 runs sampled)\n  arr-union x 5,716,039 ops/sec \u00b10.86% (93 runs sampled)\n\n#2: ten-arrays\n  array-union x 245,196 ops/sec \u00b10.69% (94 runs sampled)\n  arr-union x 1,850,786 ops/sec \u00b10.84% (97 runs sampled)\n\n#3: two-arrays\n  array-union x 563,869 ops/sec \u00b10.97% (94 runs sampled)\n  arr-union x 9,602,852 ops/sec \u00b10.87% (92 runs sampled)\n```\n\n## Usage\n\n```js\nvar union = require('arr-union');\n\nunion(['a'], ['b', 'c'], ['d', 'e', 'f']);\n//=> ['a', 'b', 'c', 'd', 'e', 'f']\n```\n\nReturns only unique elements:\n\n```js\nunion(['a', 'a'], ['b', 'c']);\n//=> ['a', 'b', 'c']\n```\n\n## Related projects\n\n* [arr-diff](https://www.npmjs.com/package/arr-diff): Returns an array with only the unique values from the first array, by excluding all\u2026 [more](https://www.npmjs.com/package/arr-diff) | [homepage](https://github.com/jonschlinkert/arr-diff)\n* [arr-filter](https://www.npmjs.com/package/arr-filter): Faster alternative to javascript's native filter method. | [homepage](https://github.com/jonschlinkert/arr-filter)\n* [arr-flatten](https://www.npmjs.com/package/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten. | [homepage](https://github.com/jonschlinkert/arr-flatten)\n* [arr-map](https://www.npmjs.com/package/arr-map): Faster, node.js focused alternative to JavaScript's native array map. | [homepage](https://github.com/jonschlinkert/arr-map)\n* [arr-pluck](https://www.npmjs.com/package/arr-pluck): Retrieves the value of a specified property from all elements in the collection. | [homepage](https://github.com/jonschlinkert/arr-pluck)\n* [arr-reduce](https://www.npmjs.com/package/arr-reduce): Fast array reduce that also loops over sparse elements. | [homepage](https://github.com/jonschlinkert/arr-reduce)\n* [array-unique](https://www.npmjs.com/package/array-unique): Return an array free of duplicate values. Fastest ES5 implementation. | [homepage](https://github.com/jonschlinkert/array-unique)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/arr-union/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm i verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright \u00a9 2016 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the [MIT license](https://github.com/jonschlinkert/arr-union/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on February 23, 2016._"}, "npm": {"downloads": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 2080532}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 10814119}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 45410683}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 121308234}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 241799824}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 456187267}], "dependentsCount": 73, "starsCount": 2}, "github": {"starsCount": 20, "forksCount": 3, "subscribersCount": 3, "issues": {"count": 2, "openCount": 1, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 27}], "commits": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3564, "testsSize": 1408}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/arr-union.svg", "shields": "https://img.shields.io/npm/v/arr-union.svg", "content": "https://img.shields.io/npm/v/arr-union.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/arr-union.svg", "service": "https://api.travis-ci.org/jonschlinkert/arr-union.svg", "shields": "https://img.shields.io/travis/jonschlinkert/arr-union.svg", "content": "https://img.shields.io/travis/jonschlinkert/arr-union.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 29, "downloadsCount": 40436078, "downloadsAcceleration": 89341.38283866062, "dependentsCount": 73}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8158460579621877, "detail": {"quality": 0.9647859797513708, "popularity": 0.5041724032993122, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-24T17:31:26.618Z", "collected": {"metadata": {"name": "assign-symbols", "scope": "unscoped", "version": "2.0.2", "description": "Assign the enumerable es6 Symbol properties from one or more objects to the first object passed on the arguments. Can be used as a supplement to other extend, assign or merge methods as a polyfill for the Symbols part of the es6 Object.assign method.", "keywords": ["assign", "es6", "merge", "mixin", "polyfill", "primitive", "symbol", "symbols"], "date": "2018-08-07T15:26:38.594Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "phated", "email": "blaine.bublitz@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "doowb", "email": "brian.woodward@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/assign-symbols.git"}, "links": {"npm": "https://www.npmjs.com/package/assign-symbols", "homepage": "https://github.com/jonschlinkert/assign-symbols", "repository": "https://github.com/jonschlinkert/assign-symbols", "bugs": "https://github.com/jonschlinkert/assign-symbols/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^5.2.0"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# assign-symbols [![NPM version](https://img.shields.io/npm/v/assign-symbols.svg?style=flat)](https://www.npmjs.com/package/assign-symbols) [![NPM monthly downloads](https://img.shields.io/npm/dm/assign-symbols.svg?style=flat)](https://npmjs.org/package/assign-symbols) [![NPM total downloads](https://img.shields.io/npm/dt/assign-symbols.svg?style=flat)](https://npmjs.org/package/assign-symbols) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/assign-symbols.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/assign-symbols)\n\n> Assign the enumerable es6 Symbol properties from one or more objects to the first object passed on the arguments. Can be used as a supplement to other extend, assign or merge methods as a polyfill for the Symbols part of the es6 Object.assign method.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save assign-symbols\n```\n\n## About\n\n> A symbol is a unique and immutable data type and may be used as an identifier for object properties. The symbol object is an implicit object wrapper for the symbol primitive data type. - [Mozilla Developer docs for Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n\n## Usage\n\n```js\nconst assignSymbols = require('assign-symbols');\nlet target = {};\n\n// add a symbol to object \"one\"\nlet one = {};\nlet symbolOne = Symbol('aaa');\none[symbolOne] = 'bbb';\n\n// add a symbol to object \"two\"\nlet two = {};\nlet symbolTwo = Symbol('ccc');\ntwo[symbolTwo] = 'ddd';\n\n// assign symbols from objects \"one\" and \"two\" to object \"target\"\nassignSymbols(target, one, two);\n\nconsole.log(target[symbolOne]); //=> 'bbb'\nconsole.log(target[symbolTwo]); //=> 'ddd'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [assign-deep](https://www.npmjs.com/package/assign-deep): Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target\u2026 [more](https://github.com/jonschlinkert/assign-deep) | [homepage](https://github.com/jonschlinkert/assign-deep \"Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target (first) object.\")\n* [clone-deep](https://www.npmjs.com/package/clone-deep): Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives. | [homepage](https://github.com/jonschlinkert/clone-deep \"Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives.\")\n* [extend-shallow](https://www.npmjs.com/package/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util. | [homepage](https://github.com/jonschlinkert/extend-shallow \"Extend an object with the properties of additional objects. node.js/javascript util.\")\n* [merge-deep](https://www.npmjs.com/package/merge-deep): Recursively merge values in a javascript object. | [homepage](https://github.com/jonschlinkert/merge-deep \"Recursively merge values in a javascript object.\")\n* [mixin-deep](https://www.npmjs.com/package/mixin-deep): Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone\u2026 [more](https://github.com/jonschlinkert/mixin-deep) | [homepage](https://github.com/jonschlinkert/mixin-deep \"Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. No dependencies.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 4 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [phated](https://github.com/phated) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on August 06, 2018._"}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 486503}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 10286506}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 41895159}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 114761154}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 229271573}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 430456425}], "dependentsCount": 48, "starsCount": 0}, "github": {"starsCount": 14, "forksCount": 5, "subscribersCount": 3, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 12}, {"username": "phated", "commitsCount": 2}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5124, "testsSize": 1545}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/assign-symbols.svg?style=flat", "shields": "https://img.shields.io/npm/v/assign-symbols.svg", "content": "https://img.shields.io/npm/v/assign-symbols.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/assign-symbols.svg?style=flat", "shields": "https://img.shields.io/npm/dm/assign-symbols.svg", "content": "https://img.shields.io/npm/dm/assign-symbols.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/assign-symbols.svg?style=flat", "shields": "https://img.shields.io/npm/dt/assign-symbols.svg", "content": "https://img.shields.io/npm/dt/assign-symbols.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/assign-symbols.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/assign-symbols.svg", "shields": "https://img.shields.io/travis/jonschlinkert/assign-symbols.svg", "content": "https://img.shields.io/travis/jonschlinkert/assign-symbols.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 24, "downloadsCount": 38253718, "downloadsAcceleration": 77892.72966133949, "dependentsCount": 48}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8116321453190682, "detail": {"quality": 0.9691397075145873, "popularity": 0.488368146100985, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-04T23:56:34.130Z", "collected": {"metadata": {"name": "astral-regex", "scope": "unscoped", "version": "2.0.0", "description": "Regular expression for matching astral symbols", "keywords": ["astral", "emoji", "regex", "surrogate"], "date": "2019-04-05T10:44:47.115Z", "author": {"name": "Kevin M\u00e5rtensson", "email": "kevinmartensson@gmail.com", "url": "github.com/kevva", "username": "kevva"}, "publisher": {"username": "kevva", "email": "kevinmartensson@gmail.com"}, "maintainers": [{"username": "kevva", "email": "kevinmartensson@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/kevva/astral-regex.git"}, "links": {"npm": "https://www.npmjs.com/package/astral-regex", "homepage": "https://github.com/kevva/astral-regex#readme", "repository": "https://github.com/kevva/astral-regex", "bugs": "https://github.com/kevva/astral-regex/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# astral-regex [![Build Status](https://travis-ci.org/kevva/astral-regex.svg?branch=master)](https://travis-ci.org/kevva/astral-regex)\n\n> Regular expression for matching [astral symbols](https://everything2.com/title/astral+plane)\n\n\n## Install\n\n```\n$ npm install astral-regex\n```\n\n\n## Usage\n\n```js\nconst astralRegex = require('astral-regex');\n\nastralRegex({exact: true}).test('\ud83e\udd84');\n//=> true\n\n'foo \ud83e\udd84 \ud83d\udca9 bar'.match(astralRegex());\n//=> ['\ud83e\udd84', '\ud83d\udca9']\n```\n\n\n## API\n\n### astralRegex([options])\n\nReturns a `RegExp` for matching astral symbols.\n\n#### options\n\nType: `Object`\n\n##### exact\n\nType: `boolean`<br>\nDefault: `false` *(Matches any astral symbols in a string)*\n\nOnly match an exact string. Useful with `RegExp#test()` to check if a string is a astral symbol.\n\n\n## License\n\nMIT \u00a9 [Kevin M\u00e5rtensson](https://github.com/kevva)"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1587826}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 8482967}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 35522454}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 89308064}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 169052467}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 292434876}], "dependentsCount": 26, "starsCount": 1}, "github": {"starsCount": 28, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 1, "10800": 1, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kevva", "commitsCount": 5}, {"username": "BendingBender", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 839, "testsSize": 651}, "badges": [{"urls": {"original": "https://travis-ci.org/kevva/astral-regex.svg?branch=master", "service": "https://api.travis-ci.org/kevva/astral-regex.svg?branch=master", "shields": "https://img.shields.io/travis/kevva/astral-regex/master.svg", "content": "https://img.shields.io/travis/kevva/astral-regex/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 34, "downloadsCount": 29769354.666666668, "downloadsAcceleration": 130219.8225076104, "dependentsCount": 26}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8050719725972004, "detail": {"quality": 0.9547045235275585, "popularity": 0.48194863271293564, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-11T06:48:00.833Z", "collected": {"metadata": {"name": "atob", "scope": "unscoped", "version": "2.1.2", "description": "atob for Node.JS and Linux / Mac / Windows CLI (it's a one-liner)", "keywords": ["atob", "browser"], "date": "2018-08-18T10:18:59.696Z", "author": {"name": "AJ ONeal", "email": "coolaj86@gmail.com", "url": "https://coolaj86.com", "username": "coolaj86"}, "publisher": {"username": "coolaj86", "email": "coolaj86@gmail.com"}, "maintainers": [{"username": "coolaj86", "email": "coolaj86@gmail.com"}], "repository": {"type": "git", "url": "git://git.coolaj86.com/coolaj86/atob.js.git"}, "links": {"npm": "https://www.npmjs.com/package/atob", "homepage": "https://git.coolaj86.com/coolaj86/atob.js.git"}, "license": "(MIT OR Apache-2.0)", "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}], "readme": "atob\n===\n\n| **atob**\n| [btoa](https://git.coolaj86.com/coolaj86/btoa.js)\n| [unibabel.js](https://git.coolaj86.com/coolaj86/unibabel.js)\n| Sponsored by [ppl](https://ppl.family)\n\nUses `Buffer` to emulate the exact functionality of the browser's atob.\n\nNote: Unicode may be handled incorrectly (like the browser).\n\nIt turns base64-encoded <strong>a</strong>scii data back **to** <strong>b</strong>inary.\n\n```javascript\n(function () {\n  \"use strict\";\n\n  var atob = require('atob');\n  var b64 = \"SGVsbG8sIFdvcmxkIQ==\";\n  var bin = atob(b64);\n\n  console.log(bin); // \"Hello, World!\"\n}());\n```\n\n### Need Unicode and Binary Support in the Browser?\n\nCheck out [unibabel.js](https://git.coolaj86.com/coolaj86/unibabel.js)\n\nChangelog\n=======\n\n  * v2.1.0 address a few issues and PRs, update URLs\n  * v2.0.0 provide browser version for ios web workers\n  * v1.2.0 provide (empty) browser version\n  * v1.1.3 add MIT license\n  * v1.1.2 node only\n\nLICENSE\n=======\n\nCode copyright 2012-2018 AJ ONeal\n\nDual-licensed MIT and Apache-2.0\n\nDocs copyright 2012-2018 AJ ONeal\n\nDocs released under [Creative Commons](https://git.coolaj86.com/coolaj86/atob.js/blob/master/LICENSE.DOCS)."}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1922814}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 10653357}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 43068480}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 116662908}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 234048392}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 446996266}], "dependentsCount": 462, "starsCount": 6}, "source": {"files": {"readmeSize": 1162, "testsSize": 362}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.2715, "health": 1, "branding": 0}, "popularity": {"communityInterest": 6, "downloadsCount": 38887636, "downloadsAcceleration": 71647.55905631662, "dependentsCount": 462}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.4238016779907841, "detail": {"quality": 0.7315197403354692, "popularity": 0.5341099743389297, "maintenance": 0.04973504249005132}}}
{"analyzedAt": "2020-02-09T06:15:02.244Z", "collected": {"metadata": {"name": "@babel/code-frame", "scope": "babel", "version": "7.8.3", "description": "Generate errors that contain a code frame that point to source locations.", "date": "2020-01-13T21:41:43.457Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcode-frame", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/highlight": "^7.8.3"}, "devDependencies": {"chalk": "^2.0.0", "strip-ansi": "^4.0.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 27}], "readme": "# @babel/code-frame\n\n> Generate errors that contain a code frame that point to source locations.\n\nSee our website [@babel/code-frame](https://babeljs.io/docs/en/next/babel-code-frame.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/code-frame\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/code-frame --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 707642}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 15809936}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 63206207}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 153830495}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 290411587}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 490487008}], "dependentsCount": 307, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35734, "forksCount": 4091, "subscribersCount": 876, "issues": {"count": 11064, "openCount": 767, "distribution": {"3600": 2403, "10800": 869, "32400": 1006, "97200": 1162, "291600": 1005, "874800": 938, "2624400": 794, "7873200": 761, "23619600": 834, "70858800": 1082, "212576400": 210}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 435}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 399}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 128}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 63}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 30}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 68}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 208}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 428}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 745}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 347, "testsSize": 11797, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.94965, "tests": 0.6880000000000001, "health": 1, "branding": 1}, "popularity": {"communityInterest": 40801, "downloadsCount": 51276831.666666664, "downloadsAcceleration": 258167.80709665146, "dependentsCount": 307}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.27622516692009913}}, "score": {"final": 0.8799996248125332, "detail": {"quality": 0.9507303359273754, "popularity": 0.7879527630207854, "maintenance": 0.9114201627915591}}}
{"analyzedAt": "2020-02-26T00:13:38.588Z", "collected": {"metadata": {"name": "babel-eslint", "scope": "unscoped", "version": "10.1.0", "description": "Custom parser for ESLint", "date": "2020-02-26T00:13:23.677Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jameshenry", "email": "npm@jameshenry.email"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "monastic.panic", "email": "monastic.panic@gmail.com"}, {"username": "mysticatea", "email": "public@mysticatea.dev"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "sebmck", "email": "npm@sebastian.barretomckenzie.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-eslint", "homepage": "https://github.com/babel/babel-eslint", "repository": "https://github.com/babel/babel-eslint", "bugs": "https://github.com/babel/babel-eslint/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "@babel/parser": "^7.7.0", "@babel/traverse": "^7.7.0", "@babel/types": "^7.7.0", "eslint-visitor-keys": "^1.0.0", "resolve": "^1.12.0"}, "devDependencies": {"babel-eslint": "^8.2.6", "dedent": "^0.7.0", "eslint": "^5.6.0", "eslint-config-babel": "^7.0.1", "eslint-plugin-flowtype": "^2.30.3", "eslint-plugin-import": "^2.14.0", "eslint-plugin-prettier": "^2.1.2", "espree": "^3.5.2", "husky": "^1.0.0-rc.13", "lint-staged": "^7.2.2", "mocha": "^5.0.1", "prettier": "^1.4.4"}, "peerDependencies": {"eslint": ">= 4.12.1"}, "releases": [{"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 1}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 2}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 4}, {"from": "2018-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# babel-eslint [![npm](https://img.shields.io/npm/v/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint) [![travis](https://img.shields.io/travis/babel/babel-eslint/master.svg)](https://travis-ci.org/babel/babel-eslint) [![npm-downloads](https://img.shields.io/npm/dm/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint)\n\n**babel-eslint** allows you to lint **ALL** valid Babel code with the fantastic\n[ESLint](https://github.com/eslint/eslint).\n\n### Why Use babel-eslint\n\nYou only need to use babel-eslint if you are using types (Flow) or experimental features not supported in ESLint itself yet. Otherwise try the default parser (you don't have to use it just because you are using Babel).\n\n---\n\n> If there is an issue, first check if it can be reproduced with the regular parser or with the latest versions of `eslint` and `babel-eslint`!\n\nFor questions and support please visit the [`#discussion`](https://babeljs.slack.com/messages/discussion/) babel slack channel (sign up [here](https://github.com/babel/notes/issues/38)) or eslint [gitter](https://gitter.im/eslint/eslint)!\n\n> Note that the `ecmaFeatures` config property may still be required for ESLint to work properly with features not in ECMAScript 5 by default. Examples are `globalReturn` and `modules`).\n\n## Known Issues\n\nFlow:\n> Check out [eslint-plugin-flowtype](https://github.com/gajus/eslint-plugin-flowtype): An `eslint` plugin that makes flow type annotations global variables and marks declarations as used. Solves the problem of false positives with `no-undef` and `no-unused-vars`.\n- `no-undef` for global flow types: `ReactElement`, `ReactClass` [#130](https://github.com/babel/babel-eslint/issues/130#issuecomment-111215076)\n  - Workaround: define types as globals in `.eslintrc` or define types and import them `import type ReactElement from './types'`\n- `no-unused-vars/no-undef` with Flow declarations (`declare module A {}`) [#132](https://github.com/babel/babel-eslint/issues/132#issuecomment-112815926)\n\nModules/strict mode\n- `no-unused-vars: [2, {vars: local}]` [#136](https://github.com/babel/babel-eslint/issues/136)\n\nPlease check out [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react) for React/JSX issues\n- `no-unused-vars` with jsx\n\nPlease check out [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) for other issues\n\n## How does it work?\n\nESLint allows custom parsers. This is great but some of the syntax nodes that Babel supports\naren't supported by ESLint. When using this plugin, ESLint is monkeypatched and your code is\ntransformed into code that ESLint can understand. All location info such as line numbers,\ncolumns is also retained so you can track down errors with ease.\n\nBasically `babel-eslint` exports an [`index.js`](/index.js) that a linter can use.\nIt just needs to export a `parse` method that takes in a string of code and outputs an AST.\n\n## Usage\n\n### Supported ESLint versions\n\nESLint | babel-eslint\n------------ | -------------\n4.x | >= 6.x\n3.x | >= 6.x\n2.x | >= 6.x\n1.x | >= 5.x\n\n### Install\n\nEnsure that you have substituted the correct version lock for `eslint` and `babel-eslint` into this command:\n\n```sh\n$ npm install eslint@4.x babel-eslint@8 --save-dev\n# or\n$ yarn add eslint@4.x babel-eslint@8 -D\n```\n\n### Setup\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"rules\": {\n    \"strict\": 0\n  }\n}\n```\n\nCheck out the [ESLint docs](http://eslint.org/docs/rules/) for all possible rules.\n\n### Configuration\n\n- `sourceType` can be set to `'module'`(default) or `'script'` if your code isn't using ECMAScript modules.\n- `allowImportExportEverywhere` (default `false`) can be set to `true` to allow import and export declarations to appear anywhere a statement is allowed if your build environment supports that. Otherwise import and export declarations can only appear at a program's top level.\n- `codeFrame` (default `true`) can be set to `false` to disable the code frame in the reporter. This is useful since some eslint formatters don't play well with it.\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"parserOptions\": {\n    \"sourceType\": \"module\",\n    \"allowImportExportEverywhere\": false,\n    \"codeFrame\": true\n  }\n}\n```\n\n### Run\n\n```sh\n$ eslint your-files-here\n```"}, "npm": {"downloads": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 4216873}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 20928995}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 54864336}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 111915829}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 221962406}], "dependentsCount": 7323, "starsCount": 75}, "github": {"homepage": "https://github.com/babel/babel-eslint/issues/88", "starsCount": 2867, "forksCount": 216, "subscribersCount": 57, "issues": {"count": 805, "openCount": 101, "distribution": {"3600": 147, "10800": 47, "32400": 64, "97200": 83, "291600": 66, "874800": 69, "2624400": 74, "7873200": 80, "23619600": 69, "70858800": 74, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 222}, {"username": "sebmck", "commitsCount": 67}, {"username": "danez", "commitsCount": 30}, {"username": "zertosh", "commitsCount": 17}, {"username": "existentialism", "commitsCount": 16}, {"username": "kaicataldo", "commitsCount": 16}, {"username": "mysticatea", "commitsCount": 9}, {"username": "BenoitZugmeyer", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 7}, {"username": "greenkeeperio-bot", "commitsCount": 5}, {"username": "rubennorte", "commitsCount": 5}, {"username": "fatfisz", "commitsCount": 4}, {"username": "josh", "commitsCount": 4}, {"username": "loganfsmyth", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "soda0289", "commitsCount": 3}, {"username": "Cellule", "commitsCount": 2}, {"username": "Couto", "commitsCount": 2}, {"username": "bgw", "commitsCount": 2}, {"username": "douglasduteil", "commitsCount": 2}, {"username": "kesne", "commitsCount": 2}, {"username": "leebyron", "commitsCount": 2}, {"username": "Constellation", "commitsCount": 1}, {"username": "Globegitter", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "MethodGrab", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "UltCombo", "commitsCount": 1}, {"username": "ahomu", "commitsCount": 1}, {"username": "alexkuz", "commitsCount": 1}, {"username": "aoberoi", "commitsCount": 1}, {"username": "bary12", "commitsCount": 1}, {"username": "borela", "commitsCount": 1}, {"username": "bryanrsmith", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "clemmy", "commitsCount": 1}, {"username": "danharper", "commitsCount": 1}, {"username": "ecbrodie", "commitsCount": 1}, {"username": "edmorley", "commitsCount": 1}, {"username": "emersonlaurentino", "commitsCount": 1}, {"username": "evocateur", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gmaclennan", "commitsCount": 1}, {"username": "golopot", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "jmurretxactly", "commitsCount": 1}, {"username": "joa", "commitsCount": 1}, {"username": "jony89", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "neverendingqs", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "ota-meshi", "commitsCount": 1}, {"username": "paramaggarwal", "commitsCount": 1}, {"username": "rattrayalex", "commitsCount": 1}, {"username": "rhettlivingston", "commitsCount": 1}, {"username": "skyrpex", "commitsCount": 1}, {"username": "stevenjob", "commitsCount": 1}, {"username": "vaibhavmule", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "viztor", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 3}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 5}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7641, "testsSize": 66512}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-eslint.svg", "shields": "https://img.shields.io/npm/v/babel-eslint.svg", "content": "https://img.shields.io/npm/v/babel-eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "service": "https://api.travis-ci.org/babel/babel-eslint.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "content": "https://img.shields.io/travis/babel/babel-eslint/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-eslint.svg", "shields": "https://img.shields.io/npm/dm/babel-eslint.svg", "content": "https://img.shields.io/npm/dm/babel-eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3277, "downloadsCount": 18288112, "downloadsAcceleration": 25788.852644596627, "dependentsCount": 7323}, "maintenance": {"releasesFrequency": 0.666095890410959, "commitsFrequency": 0.3775684931506849, "openIssues": 1, "issuesDistribution": 0.013254588048575822}}, "score": {"final": 0.7827546193717246, "detail": {"quality": 0.9679780173703354, "popularity": 0.7384249718513182, "maintenance": 0.6683213543218933}}}
{"analyzedAt": "2020-03-05T01:59:37.689Z", "collected": {"metadata": {"name": "@babel/generator", "scope": "babel", "version": "7.8.7", "description": "Turns an AST into code.", "date": "2020-03-05T01:56:10.277Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fgenerator", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/types": "^7.8.7", "jsesc": "^2.5.1", "lodash": "^4.17.13", "source-map": "^0.5.0"}, "devDependencies": {"@babel/helper-fixtures": "^7.8.6", "@babel/parser": "^7.8.7"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 5}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 11}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 16}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 49}], "hasSelectiveFiles": true, "readme": "# @babel/generator\n\n> Turns an AST into code.\n\nSee our website [@babel/generator](https://babeljs.io/docs/en/next/babel-generator.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20generator%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/generator\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/generator --dev\n```"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3217493}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 17246432}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 70691538}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 171709550}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 324568274}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 553275073}], "dependentsCount": 507, "starsCount": 2}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35920, "forksCount": 4128, "subscribersCount": 881, "issues": {"count": 11154, "openCount": 765, "distribution": {"3600": 2411, "10800": 877, "32400": 1013, "97200": 1174, "291600": 1014, "874800": 958, "2624400": 797, "7873200": 762, "23619600": 840, "70858800": 1085, "212576400": 223}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 436}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 414}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 139}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 64}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 32}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 9}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 42}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 200}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 434}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 711}]}, "source": {"files": {"readmeSize": 447, "testsSize": 119838, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.438, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 41030, "downloadsCount": 57236516.666666664, "downloadsAcceleration": 281974.36054033483, "dependentsCount": 507}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2654343586207523}}, "score": {"final": 0.8714423416449487, "detail": {"quality": 0.9062276275659863, "popularity": 0.8084848910581357, "maintenance": 0.9045838328708724}}}
{"analyzedAt": "2020-02-09T06:19:28.744Z", "collected": {"metadata": {"name": "@babel/helper-function-name", "scope": "babel", "version": "7.8.3", "description": "Helper function to change the property 'name' of every function", "date": "2020-01-13T21:42:12.206Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fhelper-function-name", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-get-function-arity": "^7.8.3", "@babel/template": "^7.8.3", "@babel/types": "^7.8.3"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 29}], "readme": "# @babel/helper-function-name\n\n> Helper function to change the property 'name' of every function\n\nSee our website [@babel/helper-function-name](https://babeljs.io/docs/en/next/babel-helper-function-name.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/helper-function-name\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/helper-function-name --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 554035}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 12383010}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 50460517}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 127388358}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 223280025}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 387675708}], "dependentsCount": 11, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35734, "forksCount": 4091, "subscribersCount": 876, "issues": {"count": 11064, "openCount": 767, "distribution": {"3600": 2403, "10800": 869, "32400": 1006, "97200": 1162, "291600": 1005, "874800": 938, "2624400": 794, "7873200": 761, "23619600": 834, "70858800": 1082, "212576400": 210}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 435}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 399}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 128}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 63}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 30}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 68}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 208}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 428}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 745}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 387, "testsSize": 18145521, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.98765, "tests": 0.6880000000000001, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 40800, "downloadsCount": 42462786, "downloadsAcceleration": 199552.84046803653, "dependentsCount": 11}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.27622516692009913}}, "score": {"final": 0.8530172080281331, "detail": {"quality": 0.9550161001941169, "popularity": 0.7071866314081494, "maintenance": 0.9114201627915591}}}
{"analyzedAt": "2020-02-09T06:15:49.445Z", "collected": {"metadata": {"name": "@babel/helper-get-function-arity", "scope": "babel", "version": "7.8.3", "description": "Helper function to get function arity", "date": "2020-01-13T21:41:49.073Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fhelper-get-function-arity", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/types": "^7.8.3"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 28}], "readme": "# @babel/helper-get-function-arity\n\n> Helper function to get function arity\n\nSee our website [@babel/helper-get-function-arity](https://babeljs.io/docs/en/next/babel-helper-get-function-arity.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/helper-get-function-arity\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/helper-get-function-arity --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 557851}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 12430689}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 50621399}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 127508760}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 222880252}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 385035510}], "dependentsCount": 5, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35734, "forksCount": 4091, "subscribersCount": 876, "issues": {"count": 11064, "openCount": 767, "distribution": {"3600": 2403, "10800": 869, "32400": 1006, "97200": 1162, "291600": 1005, "874800": 938, "2624400": 794, "7873200": 761, "23619600": 834, "70858800": 1082, "212576400": 210}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 435}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 399}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 128}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 63}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 30}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 68}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 208}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 428}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 745}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 386, "testsSize": 18145521, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9866999999999999, "tests": 0.6880000000000001, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 40800, "downloadsCount": 42502920, "downloadsAcceleration": 203954.99311263312, "dependentsCount": 5}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.27622516692009913}}, "score": {"final": 0.8497672698224892, "detail": {"quality": 0.9548970279127909, "popularity": 0.6980031556331608, "maintenance": 0.9114201627915591}}}
{"analyzedAt": "2020-02-09T06:17:29.092Z", "collected": {"metadata": {"name": "@babel/helper-split-export-declaration", "scope": "babel", "version": "7.8.3", "description": ">", "date": "2020-01-13T21:41:59.024Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fhelper-split-export-declaration", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/types": "^7.8.3"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 7}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 30}], "readme": "# @babel/helper-split-export-declaration\n\n> \n\nSee our website [@babel/helper-split-export-declaration](https://babeljs.io/docs/en/next/babel-helper-split-export-declaration.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/helper-split-export-declaration\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/helper-split-export-declaration --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 582192}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 12976120}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 52914194}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 136211413}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 247140026}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 433464174}], "dependentsCount": 7, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35734, "forksCount": 4091, "subscribersCount": 876, "issues": {"count": 11064, "openCount": 767, "distribution": {"3600": 2403, "10800": 869, "32400": 1006, "97200": 1162, "291600": 1005, "874800": 938, "2624400": 794, "7873200": 761, "23619600": 834, "70858800": 1082, "212576400": 210}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 435}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 399}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 128}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 63}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 30}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 68}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 208}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 428}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 745}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 379, "testsSize": 18145521, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.98005, "tests": 0.6880000000000001, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 40800, "downloadsCount": 45403804.333333336, "downloadsAcceleration": 190415.11305175035, "dependentsCount": 7}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.27622516692009913}}, "score": {"final": 0.851241155576842, "detail": {"quality": 0.954063405614832, "popularity": 0.7029287911867046, "maintenance": 0.9114201627915591}}}
{"analyzedAt": "2020-02-09T06:08:37.557Z", "collected": {"metadata": {"name": "@babel/highlight", "scope": "babel", "version": "7.8.3", "description": "Syntax highlight JavaScript strings for output in terminals.", "date": "2020-01-13T21:40:57.634Z", "author": {"name": "suchipi", "email": "me@suchipi.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fhighlight", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.0.0", "esutils": "^2.0.2", "js-tokens": "^4.0.0"}, "devDependencies": {"strip-ansi": "^4.0.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 28}], "readme": "# @babel/highlight\n\n> Syntax highlight JavaScript strings for output in terminals.\n\nSee our website [@babel/highlight](https://babeljs.io/docs/en/next/babel-highlight.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/highlight\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/highlight --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 628188}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 13469521}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 53317447}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 128704626}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 243013927}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 435534608}], "dependentsCount": 6, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35734, "forksCount": 4091, "subscribersCount": 876, "issues": {"count": 11064, "openCount": 767, "distribution": {"3600": 2403, "10800": 869, "32400": 1006, "97200": 1162, "291600": 1005, "874800": 938, "2624400": 794, "7873200": 761, "23619600": 834, "70858800": 1082, "212576400": 210}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 435}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 399}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 128}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 63}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 30}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 68}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 208}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 428}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 745}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 329, "testsSize": 3430, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"js-tokens": {"required": "^4.0.0", "stable": "5.0.0", "latest": "5.0.0"}, "chalk": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9325499999999999, "tests": 0.6880000000000001, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 40800, "downloadsCount": 42901542, "downloadsAcceleration": 185208.65070395736, "dependentsCount": 6}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.27622516692009913}}, "score": {"final": 0.8298275865666564, "detail": {"quality": 0.8870416066426302, "popularity": 0.6991944217052048, "maintenance": 0.9114201627915591}}}
{"analyzedAt": "2020-03-05T01:58:49.742Z", "collected": {"metadata": {"name": "@babel/parser", "scope": "babel", "version": "7.8.7", "description": "A JavaScript parser", "keywords": ["babel", "javascript", "parser", "tc39", "ecmascript", "@babel/parser"], "date": "2020-03-05T01:56:07.070Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "contributors": [{"name": "List of Acorn contributors. Updated before every release."}, {"name": "Adrian Rakovsky"}, {"name": "Alistair Braidwood"}, {"name": "Andres Suarez"}, {"name": "Aparajita Fishman"}, {"name": "Arian Stolwijk"}, {"name": "Artem Govorov"}, {"name": "Brandon Mills"}, {"name": "Charles Hughes"}, {"name": "Conrad Irwin"}, {"name": "David Bonnet"}, {"name": "Forbes Lindesay"}, {"name": "Gilad Peleg"}, {"name": "impinball"}, {"name": "Ingvar Stepanyan"}, {"name": "Jesse McCarthy"}, {"name": "Jiaxing Wang"}, {"name": "Joel Kemp"}, {"name": "Johannes Herr"}, {"name": "J\u00fcrg Lehni"}, {"name": "keeyipchan"}, {"name": "Kevin Kwok"}, {"name": "krator"}, {"name": "Marijn Haverbeke"}, {"name": "Martin Carlberg"}, {"name": "Mathias Bynens"}, {"name": "Mathieu 'p01' Henri"}, {"name": "Max Schaefer"}, {"name": "Max Zerzouri"}, {"name": "Mihai Bazon"}, {"name": "Mike Rennie"}, {"name": "Nick Fitzgerald"}, {"name": "Oskar Sch\u00f6ldstr\u00f6m"}, {"name": "Paul Harper"}, {"name": "Peter Rust"}, {"name": "PlNG"}, {"name": "r-e-d"}, {"name": "Rich Harris"}, {"name": "Sebastian McKenzie"}, {"name": "zsjforcn"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fparser", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "devDependencies": {"@babel/code-frame": "^7.8.3", "@babel/helper-fixtures": "^7.8.6", "charcodes": "^0.2.0", "unicode-12.0.0": "^0.7.9"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 6}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 13}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 21}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 51}], "hasSelectiveFiles": true, "readme": "# @babel/parser\n\n> A JavaScript parser\n\nSee our website [@babel/parser](https://babeljs.io/docs/en/next/babel-parser.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A+parser+%28babylon%29%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/parser\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/parser --dev\n```"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3705625}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 19976853}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 82440841}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 201599036}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 365379176}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 594080233}], "dependentsCount": 757, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35920, "forksCount": 4127, "subscribersCount": 881, "issues": {"count": 11154, "openCount": 765, "distribution": {"3600": 2411, "10800": 877, "32400": 1013, "97200": 1174, "291600": 1014, "874800": 958, "2624400": 797, "7873200": 762, "23619600": 840, "70858800": 1085, "212576400": 223}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 436}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 414}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 139}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 64}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 32}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 9}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 42}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 200}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 434}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 711}]}, "source": {"files": {"readmeSize": 437, "testsSize": 15759777, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.438, "health": 1, "branding": 1}, "popularity": {"communityInterest": 41027, "downloadsCount": 67199678.66666667, "downloadsAcceleration": 380669.54775494675, "dependentsCount": 757}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2654343586207523}}, "score": {"final": 0.8812605852902816, "detail": {"quality": 0.9157223382427601, "popularity": 0.8283986923218523, "maintenance": 0.9045838328708724}}}
{"analyzedAt": "2020-02-27T12:25:49.464Z", "collected": {"metadata": {"name": "@babel/template", "scope": "babel", "version": "7.8.6", "description": "Generate an AST from a string template.", "date": "2020-02-27T12:21:33.135Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Ftemplate", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.8.3", "@babel/parser": "^7.8.6", "@babel/types": "^7.8.6"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 5}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 7}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 33}], "readme": "# @babel/template\n\n> Generate an AST from a string template.\n\nSee our website [@babel/template](https://babeljs.io/docs/en/next/babel-template.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20template%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/template\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/template --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2828485}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 14408959}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 61755116}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 152654752}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 284806090}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 492585915}], "dependentsCount": 258, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35872, "forksCount": 4114, "subscribersCount": 878, "issues": {"count": 11123, "openCount": 756, "distribution": {"3600": 2408, "10800": 873, "32400": 1008, "97200": 1169, "291600": 1010, "874800": 951, "2624400": 800, "7873200": 761, "23619600": 837, "70858800": 1086, "212576400": 220}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 436}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 407}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 138}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 64}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 31}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 7}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 38}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 205}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 448}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 711}]}, "source": {"files": {"readmeSize": 457, "testsSize": 10615, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.438, "health": 1, "branding": 1}, "popularity": {"communityInterest": 40964, "downloadsCount": 50884917.333333336, "downloadsAcceleration": 235414.75452815834, "dependentsCount": 258}, "maintenance": {"releasesFrequency": 0.9692636986301371, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.26669672019830826}}, "score": {"final": 0.8651665791186828, "detail": {"quality": 0.9157223382427601, "popularity": 0.7815991388615777, "maintenance": 0.9054005115551504}}}
{"analyzedAt": "2020-02-27T12:25:55.461Z", "collected": {"metadata": {"name": "@babel/traverse", "scope": "babel", "version": "7.8.6", "description": "The Babel Traverse module maintains the overall tree state, and is responsible for replacing, removing, and adding nodes", "date": "2020-02-27T12:21:37.922Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Ftraverse", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.8.3", "@babel/generator": "^7.8.6", "@babel/helper-function-name": "^7.8.3", "@babel/helper-split-export-declaration": "^7.8.3", "@babel/parser": "^7.8.6", "@babel/types": "^7.8.6", "debug": "^4.1.0", "globals": "^11.1.0", "lodash": "^4.17.13"}, "devDependencies": {"@babel/helper-plugin-test-runner": "^7.8.3"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 9}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 15}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 45}], "readme": "# @babel/traverse\n\n> The Babel Traverse module maintains the overall tree state, and is responsible for replacing, removing, and adding nodes\n\nSee our website [@babel/traverse](https://babeljs.io/docs/en/next/babel-traverse.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20traverse%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/traverse\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/traverse --dev\n```"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3082908}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 15718701}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 66714252}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 161776364}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 310858329}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 540082130}], "dependentsCount": 661, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35872, "forksCount": 4114, "subscribersCount": 878, "issues": {"count": 11123, "openCount": 756, "distribution": {"3600": 2408, "10800": 873, "32400": 1008, "97200": 1169, "291600": 1010, "874800": 951, "2624400": 800, "7873200": 761, "23619600": 837, "70858800": 1086, "212576400": 220}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 436}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 407}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 138}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 64}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 31}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 7}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 38}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 205}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 448}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 711}]}, "source": {"files": {"readmeSize": 538, "testsSize": 83046, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"globals": {"required": "^11.1.0", "stable": "12.3.0", "latest": "12.3.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.438, "health": 0.7777777777777778, "branding": 1}, "popularity": {"communityInterest": 40963, "downloadsCount": 53925454.666666664, "downloadsAcceleration": 247861.2449200913, "dependentsCount": 661}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.26669672019830826}}, "score": {"final": 0.8751236775109197, "detail": {"quality": 0.9093000340684793, "popularity": 0.8155515755279494, "maintenance": 0.9054017595874106}}}
{"analyzedAt": "2020-03-05T01:58:35.846Z", "collected": {"metadata": {"name": "@babel/types", "scope": "babel", "version": "7.8.7", "description": "Babel Types is a Lodash-esque utility library for AST nodes", "date": "2020-03-05T01:56:04.314Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Ftypes", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"esutils": "^2.0.2", "lodash": "^4.17.13", "to-fast-properties": "^2.0.0"}, "devDependencies": {"@babel/generator": "^7.8.7", "@babel/parser": "^7.8.7"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 8}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 14}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 47}], "readme": "# @babel/types\n\n> Babel Types is a Lodash-esque utility library for AST nodes\n\nSee our website [@babel/types](https://babeljs.io/docs/en/next/babel-types.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20types%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/types\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/types --dev\n```"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3498996}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 18768797}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 76344257}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 191392828}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 369003085}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 640340788}], "dependentsCount": 786, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 35920, "forksCount": 4127, "subscribersCount": 881, "issues": {"count": 11154, "openCount": 765, "distribution": {"3600": 2411, "10800": 877, "32400": 1013, "97200": 1174, "291600": 1014, "874800": 958, "2624400": 797, "7873200": 762, "23619600": 840, "70858800": 1085, "212576400": 223}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 436}, {"username": "danez", "commitsCount": 433}, {"username": "nicolo-ribaudo", "commitsCount": 414}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 141}, {"username": "JLHwung", "commitsCount": 139}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 64}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "motiz88", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "babel-bot", "commitsCount": 32}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "guybedford", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "rwjblue", "commitsCount": 5}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 9}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 42}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 200}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 434}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 711}]}, "source": {"files": {"readmeSize": 459, "testsSize": 40703, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"to-fast-properties": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.438, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 41028, "downloadsCount": 63797609.333333336, "downloadsAcceleration": 271527.26474505337, "dependentsCount": 786}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2654343586207523}}, "score": {"final": 0.8778542153783739, "detail": {"quality": 0.9062276275659863, "popularity": 0.8268045302964936, "maintenance": 0.9045838328708724}}}
{"analyzedAt": "2020-02-09T22:06:12.668Z", "collected": {"metadata": {"name": "balanced-match", "scope": "unscoped", "version": "1.0.0", "description": "Match balanced character pairs, like \"{\" and \"}\"", "keywords": ["match", "regexp", "test", "balanced", "parse"], "date": "2017-06-12T07:18:30.595Z", "author": {"name": "Julian Gruber", "email": "mail@juliangruber.com", "url": "http://juliangruber.com"}, "publisher": {"username": "juliangruber", "email": "julian@juliangruber.com"}, "maintainers": [{"username": "juliangruber", "email": "julian@juliangruber.com"}], "repository": {"type": "git", "url": "git://github.com/juliangruber/balanced-match.git"}, "links": {"npm": "https://www.npmjs.com/package/balanced-match", "homepage": "https://github.com/juliangruber/balanced-match", "repository": "https://github.com/juliangruber/balanced-match", "bugs": "https://github.com/juliangruber/balanced-match/issues"}, "license": "MIT", "devDependencies": {"matcha": "^0.7.0", "tape": "^4.6.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "# balanced-match\n\nMatch balanced string pairs, like `{` and `}` or `<b>` and `</b>`. Supports regular expressions as well!\n\n[![build status](https://secure.travis-ci.org/juliangruber/balanced-match.svg)](http://travis-ci.org/juliangruber/balanced-match)\n[![downloads](https://img.shields.io/npm/dm/balanced-match.svg)](https://www.npmjs.org/package/balanced-match)\n\n[![testling badge](https://ci.testling.com/juliangruber/balanced-match.png)](https://ci.testling.com/juliangruber/balanced-match)\n\n## Example\n\nGet the first matching pair of braces:\n\n```js\nvar balanced = require('balanced-match');\n\nconsole.log(balanced('{', '}', 'pre{in{nested}}post'));\nconsole.log(balanced('{', '}', 'pre{first}between{second}post'));\nconsole.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre  {   in{nest}   }  post'));\n```\n\nThe matches are:\n\n```bash\n$ node example.js\n{ start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' }\n{ start: 3,\n  end: 9,\n  pre: 'pre',\n  body: 'first',\n  post: 'between{second}post' }\n{ start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' }\n```\n\n## API\n\n### var m = balanced(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\nobject with those keys:\n\n* **start** the index of the first match of `a`\n* **end** the index of the matching `b`\n* **pre** the preamble, `a` and `b` not included\n* **body** the match, `a` and `b` not included\n* **post** the postscript, `a` and `b` not included\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `['{', 'a', '']` and `{a}}` will match `['', 'a', '}']`.\n\n### var r = balanced.range(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\narray with indexes: `[ <a index>, <b index> ]`.\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `[ 1, 3 ]` and `{a}}` will match `[0, 2]`.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install balanced-match\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 776551}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 15453796}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 62943019}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 174818605}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 350466632}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 687603010}], "dependentsCount": 171, "starsCount": 5}, "github": {"starsCount": 79, "forksCount": 22, "subscribersCount": 5, "issues": {"count": 26, "openCount": 4, "distribution": {"3600": 5, "10800": 2, "32400": 3, "97200": 3, "291600": 4, "874800": 1, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 3, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "juliangruber", "commitsCount": 27}, {"username": "greenkeeperio-bot", "commitsCount": 4}, {"username": "stevemao", "commitsCount": 4}, {"username": "neytema", "commitsCount": 3}, {"username": "jeromedecoster", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 1}, {"username": "ianstormtaylor", "commitsCount": 1}, {"username": "isaacs", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "whaaaley", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3308, "testsSize": 4836, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/juliangruber/balanced-match.svg", "service": "https://api.travis-ci.org/juliangruber/balanced-match.svg", "shields": "https://img.shields.io/travis/juliangruber/balanced-match.svg", "content": "https://img.shields.io/travis/juliangruber/balanced-match.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/dm/balanced-match.svg", "shields": "https://img.shields.io/npm/dm/balanced-match.svg", "content": "https://img.shields.io/npm/dm/balanced-match.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 121, "downloadsCount": 58272868.333333336, "downloadsAcceleration": 69362.43793759507, "dependentsCount": 171}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8286350739387177, "detail": {"quality": 0.9478474904816662, "popularity": 0.55519841389963, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-28T04:26:05.166Z", "collected": {"metadata": {"name": "base", "scope": "unscoped", "version": "3.0.0", "description": "Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks", "keywords": ["base", "boilerplate", "cache", "del", "get", "inherit", "methods", "set", "starter", "unset", "visit"], "date": "2018-03-30T03:10:40.158Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "John O'Donnell", "url": "https://github.com/criticalmash"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Olsten Larck", "url": "https://i.am.charlike.online"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/node-base/base.git"}, "links": {"npm": "https://www.npmjs.com/package/base", "homepage": "https://github.com/node-base/base", "repository": "https://github.com/node-base/base", "bugs": "https://github.com/node-base/base/issues"}, "license": "MIT", "dependencies": {"cache-base": "^4.0.0", "define-property": "^2.0.2", "kind-of": "^6.0.2", "mixin-deep": "^1.3.1", "pascalcase": "^0.1.1"}, "devDependencies": {"gulp-format-md": "^1.0.0", "helper-changelog": "^0.3.0", "mocha": "^3.5.3", "through2": "^2.0.3", "verb-generate-readme": "^0.6.0"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n\n<a href=\"https://github.com/node-base/base\">\n<img height=\"250\" width=\"250\" src=\"https://raw.githubusercontent.com/node-base/base/master/docs/logo.png\">\n</a>\n</p>\n\n# base\n\n[![NPM version](https://img.shields.io/npm/v/base.svg?style=flat)](https://www.npmjs.com/package/base) [![NPM monthly downloads](https://img.shields.io/npm/dm/base.svg?style=flat)](https://npmjs.org/package/base) [![Build Status](https://img.shields.io/travis/node-base/base.svg?style=flat)](https://travis-ci.org/node-base/base) [![Gitter](https://badges.gitter.im/join_chat.svg)](https://gitter.im/node-base/base)\n\n<details>\n<summary><strong>Table of contents</strong></summary>\n\n- [Why use Base?](#why-use-base)\n  * [Guiding principles](#guiding-principles)\n  * [Minimal API surface](#minimal-api-surface)\n  * [Composability](#composability)\n- [Install](#install)\n- [Install](#install-1)\n- [Usage](#usage)\n- [API](#api)\n- [cache object](#cache-object)\n- [Toolkit suite](#toolkit-suite)\n  * [What is Toolkit?](#what-is-toolkit)\n- [About](#about)\n  * [Related projects](#related-projects)\n  * [Tests](#tests)\n  * [Contributing](#contributing)\n  * [Release History](#release-history)\n  * [Authors](#authors)\n  * [License](#license)\n\n</details>\n\n<details>\n<summary><strong>About</strong></summary>\n\n## Why use Base?\n\nBase is a foundation for creating modular, unit testable and highly pluggable server-side node.js APIs.\n\n* Go from zero to working application within minutes\n* Use [community plugins](https://www.npmjs.com/browse/keyword/baseplugin) to add feature-functionality to your application\n* Create your own custom plugins to add features\n* Like building blocks, plugins are stackable. Allowing you to build [sophisticated applications](#toolkit-suite) from simple plugins. Moreover, those applications can also be used as plugins themselves.\n\nMost importantly, once you learn Base, you will be familiar with the core API of all applications built on Base. This means you will not only benefit as a developer, but as a user as well.\n\n### Guiding principles\n\nThe core team follows these principles to help guide API decisions:\n\n* **Compact API surface**: The smaller the API surface, the easier the library will be to learn and use.\n* **Easy to extend**: Implementors can use any npm package, and write plugins in pure JavaScript. If you're building complex apps, Base dramatically simplifies inheritance.\n* **Easy to test**: No special setup should be required to unit test `Base` or base plugins\n* **100% Node.js core style**\n\n  - No API sugar (left for higher level projects)\n  - Written in readable vanilla JavaScript\n\n### Minimal API surface\n\n[The API](#api) was designed to provide only the minimum necessary functionality for creating a useful application, with or without [plugins](#plugins).\n\n**Base core**\n\nBase itself ships with only a handful of [useful methods](#api), such as:\n\n* `.set`: for setting values on the instance\n* `.get`: for getting values from the instance\n* `.has`: to check if a property exists on the instance\n* `.define`: for setting non-enumerable values on the instance\n* `.use`: for adding plugins\n\n**Be generic**\n\nWhen deciding on method to add or remove, we try to answer these questions:\n\n1. Will all or most Base applications need this method?\n2. Will this method encourage practices or enforce conventions that are beneficial to implementors?\n3. Can or should this be done in a plugin instead?\n\n### Composability\n\n**Plugin system**\n\nIt couldn't be easier to extend Base with any features or custom functionality you can think of.\n\nBase plugins are just functions that take an instance of `Base`:\n\n```js\nvar base = new Base();\n\nfunction plugin(base) {\n  // do plugin stuff, in pure JavaScript\n}\n// use the plugin\nbase.use(plugin);\n```\n\nAdd \"smart plugin\" functionality with the [base-plugins](https://github.com/node-base/base-plugins) plugin.\n\n**Inheritance**\n\nEasily inherit Base using `.extend`:\n\n```js\nvar Base = require('base');\n\nfunction MyApp() {\n  Base.call(this);\n}\nBase.extend(MyApp);\n\nvar app = new MyApp();\napp.set('a', 'b');\napp.get('a');\n//=> 'b';\n```\n\n**Inherit or instantiate with a namespace**\n\nBy default, the `.get`, `.set` and `.has` methods set and get values from the root of the `base` instance. You can customize this using the `.namespace` method exposed on the exported function. For example:\n\n```js\nvar Base = require('base');\n// get and set values on the `base.cache` object\nvar base = Base.namespace('cache');\n\nvar app = base();\napp.set('foo', 'bar');\nconsole.log(app.cache.foo);\n//=> 'bar'\n```\n</details>\n\n## Install\n\n**NPM**\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save base\n```\n\n**yarn**\n\nInstall with [yarn](yarnpkg.com):\n\n```sh\n$ yarn add base && yarn upgrade\n```\n\n## Usage\n\n```js\nvar Base = require('base');\nvar app = new Base();\n\n// set a value\napp.set('foo', 'bar');\nconsole.log(app.foo);\n//=> 'bar'\n\n// register a plugin\napp.use(function() {\n  // do stuff (see API docs for \".use\")\n});\n```\n\n## API\n\n### [Base](index.js#L43)\n\nCreate an instance of `Base` with the given `cache` and `options`. Learn about the [cache object](#cache-object).\n\n**Params**\n\n* `cache` **{Object}**: If supplied, this object is passed to [cache-base](https://github.com/jonschlinkert/cache-base) to merge onto the the instance.\n* `options` **{Object}**: If supplied, this object is used to initialize the `base.options` object.\n\n**Example**\n\n```js\n// initialize with `cache` and `options`\nconst app = new Base({isApp: true}, {abc: true});\napp.set('foo', 'bar');\n\n// values defined with the given `cache` object will be on the root of the instance\nconsole.log(app.baz); //=> undefined\nconsole.log(app.foo); //=> 'bar'\n// or use `.get`\nconsole.log(app.get('isApp')); //=> true\nconsole.log(app.get('foo')); //=> 'bar'\n\n// values defined with the given `options` object will be on `app.options\nconsole.log(app.options.abc); //=> true\n```\n\n### [.is](index.js#L74)\n\nSet the given `name` on `app._name` and `app.is*` properties. Used for doing lookups in plugins.\n\n**Params**\n\n* `name` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\napp.is('collection');\nconsole.log(app.type);\n//=> 'collection'\nconsole.log(app.isCollection);\n//=> true\n```\n\n### [.isRegistered](index.js#L110)\n\nReturns true if a plugin has already been registered on an instance.\n\nPlugin implementors are encouraged to use this first thing in a plugin\nto prevent the plugin from being called more than once on the same\ninstance.\n\n**Params**\n\n* `name` **{String}**: The plugin name.\n* `register` **{Boolean}**: If the plugin if not already registered, to record it as being registered pass `true` as the second argument.\n* `returns` **{Boolean}**: Returns true if a plugin is already registered.\n\n**Events**\n\n* `emits`: `plugin` Emits the name of the plugin being registered. Useful for unit tests, to ensure plugins are only registered once.\n\n**Example**\n\n```js\nconst base = new Base();\nbase.use(function(app) {\n  if (app.isRegistered('myPlugin')) return;\n  // do stuff to `app`\n});\n\n// to also record the plugin as being registered\nbase.use(function(app) {\n  if (app.isRegistered('myPlugin', true)) return;\n  // do stuff to `app`\n});\n```\n\n### [.use](index.js#L139)\n\nCall a plugin function or array of plugin functions on the instance. Plugins are called with an instance of base, and options (if defined).\n\n**Params**\n\n* `name` **{String|Function|Array}**: (optional) plugin name\n* `plugin` **{Function|Array}**: plugin function, or array of functions, to call.\n* **{...rest}**: Any additional arguments to pass to plugins(s).\n* `returns` **{Object}**: Returns the item instance for chaining.\n\n**Example**\n\n```js\nconst app = new Base()\n  .use([foo, bar])\n  .use(baz)\n```\n\n### [.define](index.js#L178)\n\nThe `.define` method is used for adding non-enumerable property on the instance. Dot-notation is **not supported** with `define`.\n\n**Params**\n\n* `key` **{String}**: The name of the property to define.\n* `value` **{any}**\n* `returns` **{Object}**: Returns the instance for chaining.\n\n**Example**\n\n```js\n// example of a custom arbitrary `render` function created with lodash's `template` method\napp.define('render', (str, locals) => _.template(str)(locals));\n```\n\n### [.base](index.js#L220)\n\nGetter/setter used when creating nested instances of `Base`, for storing a reference to the first ancestor instance. This works by setting an instance of `Base` on the `parent` property of a \"child\" instance. The `base` property defaults to the current instance if no `parent` property is defined.\n\n**Example**\n\n```js\n// create an instance of `Base`, this is our first (\"base\") instance\nconst first = new Base();\nfirst.foo = 'bar'; // arbitrary property, to make it easier to see what's happening later\n\n// create another instance\nconst second = new Base();\n// create a reference to the first instance (`first`)\nsecond.parent = first;\n\n// create another instance\nconst third = new Base();\n// create a reference to the previous instance (`second`)\n// repeat this pattern every time a \"child\" instance is created\nthird.parent = second;\n\n// we can always access the first instance using the `base` property\nconsole.log(first.base.foo);\n//=> 'bar'\nconsole.log(second.base.foo);\n//=> 'bar'\nconsole.log(third.base.foo);\n//=> 'bar'\n```\n\n### [Base.use](index.js#L242)\n\nStatic method for adding global plugin functions that will be added to an instance when created.\n\n**Params**\n\n* `fn` **{Function}**: Plugin function to use on each instance.\n* `returns` **{Object}**: Returns the `Base` constructor for chaining\n\n**Example**\n\n```js\nBase.use(function(app) {\n  app.foo = 'bar';\n});\nconst app = new Base();\nconsole.log(app.foo);\n//=> 'bar'\n```\n\n## cache object\n\n**Cache**\n\nUser-defined properties go on the `cache` object. This keeps the root of the instance clean, so that only reserved methods and properties on the root.\n\n```js\nBase { cache: {} }\n```\n\nYou can pass a custom object to use as the `cache` as the first argument to the `Base` class when instantiating.\n\n```js\nconst myObject = {};\nconst Base = require('base');\nconst base = new Base(myObject);\n```\n\n## Toolkit suite\n\nBase is part of the [Toolkit suite](https://github.com/node-toolkit/getting-started) of applications.\n\n### What is Toolkit?\n\nToolkit is a collection of node.js libraries, applications and frameworks for helping developers quickly create high quality node.js applications, web projects, and command-line experiences. There are many other libraries on NPM for handling specific tasks, Toolkit provides the _systems_ and _building blocks_ for creating higher level workflows and processes around those libraries.\n\nToolkit can be used to create a static site generator, blog framework, documentaton system, command line, task or plugin runner, and more!\n\n**Building Blocks**\n\nThe following libraries can be used as \"building blocks\" for creating modular applications.\n\n* [base](https://github.com/node-base/base): (you are here!) framework for rapidly creating high quality node.js applications, using plugins like building blocks. Base serves as the foundation for several other applications in the [Toolkit suite](https://github.com/node-toolkit/getting-started).\n* [templates](https://github.com/jonschlinkert/templates): Render templates with any node.js template engine, create and manage template collections. Use helpers, layouts, partials, includes...\n* [enquirer](http://enquirer.io): Plugin-based prompt system for creating highly customizable command line experiences.\n* [composer](https://github.com/doowb/composer): Plugin-based, async task runner.\n\n**Lifecycle Applications**\n\nThe following applications provide workflows and automation for common phases of the software development lifecycle. Each of these tools can be used entirely standalone or bundled together.\n\n* [generate](https://github.com/generate/generate): create projects\n* [assemble](https://github.com/assemble/assemble): build projects\n* [verb](https://github.com/verbose/verb): document projects\n* [update](https://github.com/update/update): maintain projects\n\n## About\n\n### Related projects\n\n* [base-cwd](https://www.npmjs.com/package/base-cwd): Base plugin that adds a getter/setter for the current working directory. | [homepage](https://github.com/node-base/base-cwd \"Base plugin that adds a getter/setter for the current working directory.\")\n* [base-data](https://www.npmjs.com/package/base-data): adds a `data` method to base-methods. | [homepage](https://github.com/node-base/base-data \"adds a `data` method to base-methods.\")\n* [base-fs](https://www.npmjs.com/package/base-fs): base-methods plugin that adds vinyl-fs methods to your 'base' application for working with the file\u2026 [more](https://github.com/node-base/base-fs) | [homepage](https://github.com/node-base/base-fs \"base-methods plugin that adds vinyl-fs methods to your 'base' application for working with the file system, like src, dest, copy and symlink.\")\n* [base-generators](https://www.npmjs.com/package/base-generators): Adds project-generator support to your `base` application. | [homepage](https://github.com/node-base/base-generators \"Adds project-generator support to your `base` application.\")\n* [base-option](https://www.npmjs.com/package/base-option): Adds a few options methods to base, like `option`, `enable` and `disable`. See the readme\u2026 [more](https://github.com/node-base/base-option) | [homepage](https://github.com/node-base/base-option \"Adds a few options methods to base, like `option`, `enable` and `disable`. See the readme for the full API.\")\n* [base-pipeline](https://www.npmjs.com/package/base-pipeline): base-methods plugin that adds pipeline and plugin methods for dynamically composing streaming plugin pipelines. | [homepage](https://github.com/node-base/base-pipeline \"base-methods plugin that adds pipeline and plugin methods for dynamically composing streaming plugin pipelines.\")\n* [base-pkg](https://www.npmjs.com/package/base-pkg): Plugin for adding a `pkg` method that exposes pkg-store to your base application. | [homepage](https://github.com/node-base/base-pkg \"Plugin for adding a `pkg` method that exposes pkg-store to your base application.\")\n* [base-plugins](https://www.npmjs.com/package/base-plugins): Adds 'smart plugin' support to your base application. | [homepage](https://github.com/node-base/base-plugins \"Adds 'smart plugin' support to your base application.\")\n* [base-questions](https://www.npmjs.com/package/base-questions): Plugin for base-methods that adds methods for prompting the user and storing the answers on\u2026 [more](https://github.com/node-base/base-questions) | [homepage](https://github.com/node-base/base-questions \"Plugin for base-methods that adds methods for prompting the user and storing the answers on a project-by-project basis.\")\n* [base-store](https://www.npmjs.com/package/base-store): Plugin for getting and persisting config values with your base-methods application. Adds a 'store' object\u2026 [more](https://github.com/node-base/base-store) | [homepage](https://github.com/node-base/base-store \"Plugin for getting and persisting config values with your base-methods application. Adds a 'store' object that exposes all of the methods from the data-store library. Also now supports sub-stores!\")\n* [base-task](https://www.npmjs.com/package/base-task): Base plugin that provides a very thin wrapper around [https://github.com/doowb/composer](https://github.com/doowb/composer) for adding task methods to\u2026 [more](https://github.com/base/base-task) | [homepage](https://github.com/base/base-task \"Base plugin that provides a very thin wrapper around <https://github.com/doowb/composer> for adding task methods to your Base application.\")\n\n### Tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nIf Base doesn't do what you need, [please let us know](../../issues).\n\n### Release History\n\nSee the [changelog](CHANGELOG.md);\n\n### Authors\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n**Brian Woodward**\n\n* [github/doowb](https://github.com/doowb)\n* [twitter/doowb](http://twitter.com/doowb)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nMIT\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on March 29, 2018._"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2002902}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 10510484}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 44764861}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 114529897}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 227774711}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 425825672}], "dependentsCount": 67, "starsCount": 4}, "github": {"homepage": "http://base.github.io/base/", "starsCount": 63, "forksCount": 9, "subscribersCount": 5, "issues": {"count": 37, "openCount": 9, "distribution": {"3600": 11, "10800": 0, "32400": 3, "97200": 3, "291600": 2, "874800": 0, "2624400": 1, "7873200": 5, "23619600": 5, "70858800": 1, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 169}, {"username": "doowb", "commitsCount": 27}, {"username": "tunnckoCore", "commitsCount": 3}, {"username": "Andy-Blatecky", "commitsCount": 1}, {"username": "criticalmash", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 3}]}, "source": {"files": {"readmeSize": 16663, "testsSize": 15991, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/base.svg?style=flat", "shields": "https://img.shields.io/npm/v/base.svg", "content": "https://img.shields.io/npm/v/base.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/base.svg?style=flat", "shields": "https://img.shields.io/npm/dm/base.svg", "content": "https://img.shields.io/npm/dm/base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/node-base/base.svg?style=flat", "service": "https://api.travis-ci.org/node-base/base.svg", "shields": "https://img.shields.io/travis/node-base/base.svg", "content": "https://img.shields.io/travis/node-base/base.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"pascalcase": {"required": "^0.1.1", "stable": "1.0.0", "latest": "1.0.0"}, "mixin-deep": {"required": "^1.3.1", "stable": "2.0.1", "latest": "1.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 87, "downloadsCount": 38176632.333333336, "downloadsAcceleration": 106071.43525494676, "dependentsCount": 67}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9279279279279279, "issuesDistribution": 0.9}}, "score": {"final": 0.7965455623932969, "detail": {"quality": 0.8807471123811743, "popularity": 0.5210403586588085, "maintenance": 0.999878008995319}}}
{"analyzedAt": "2020-02-09T04:18:56.371Z", "collected": {"metadata": {"name": "brace-expansion", "scope": "unscoped", "version": "1.1.11", "description": "Brace expansion as known from sh/bash", "date": "2018-02-10T07:42:22.313Z", "author": {"name": "Julian Gruber", "email": "mail@juliangruber.com", "url": "http://juliangruber.com"}, "publisher": {"username": "juliangruber", "email": "julian@juliangruber.com"}, "maintainers": [{"username": "isaacs", "email": "isaacs@npmjs.com"}, {"username": "juliangruber", "email": "julian@juliangruber.com"}], "repository": {"type": "git", "url": "git://github.com/juliangruber/brace-expansion.git"}, "links": {"npm": "https://www.npmjs.com/package/brace-expansion", "homepage": "https://github.com/juliangruber/brace-expansion", "repository": "https://github.com/juliangruber/brace-expansion", "bugs": "https://github.com/juliangruber/brace-expansion/issues"}, "license": "MIT", "dependencies": {"balanced-match": "^1.0.0", "concat-map": "0.0.1"}, "devDependencies": {"matcha": "^0.7.0", "tape": "^4.6.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# brace-expansion\n\n[Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html), \nas known from sh/bash, in JavaScript.\n\n[![build status](https://secure.travis-ci.org/juliangruber/brace-expansion.svg)](http://travis-ci.org/juliangruber/brace-expansion)\n[![downloads](https://img.shields.io/npm/dm/brace-expansion.svg)](https://www.npmjs.org/package/brace-expansion)\n[![Greenkeeper badge](https://badges.greenkeeper.io/juliangruber/brace-expansion.svg)](https://greenkeeper.io/)\n\n[![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)\n\n## Example\n\n```js\nvar expand = require('brace-expansion');\n\nexpand('file-{a,b,c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('-v{,,}')\n// => ['-v', '-v', '-v']\n\nexpand('file{0..2}.jpg')\n// => ['file0.jpg', 'file1.jpg', 'file2.jpg']\n\nexpand('file-{a..c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('file{2..0}.jpg')\n// => ['file2.jpg', 'file1.jpg', 'file0.jpg']\n\nexpand('file{0..4..2}.jpg')\n// => ['file0.jpg', 'file2.jpg', 'file4.jpg']\n\nexpand('file-{a..e..2}.jpg')\n// => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg']\n\nexpand('file{00..10..5}.jpg')\n// => ['file00.jpg', 'file05.jpg', 'file10.jpg']\n\nexpand('{{A..C},{a..c}}')\n// => ['A', 'B', 'C', 'a', 'b', 'c']\n\nexpand('ppp{,config,oe{,conf}}')\n// => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']\n```\n\n## API\n\n```js\nvar expand = require('brace-expansion');\n```\n\n### var expanded = expand(str)\n\nReturn an array of all possible and valid expansions of `str`. If none are\nfound, `[str]` is returned.\n\nValid expansions are:\n\n```js\n/^(.*,)+(.+)?$/\n// {a,b,...}\n```\n\nA comma separated list of options, like `{a,b}` or `{a,{b,c}}` or `{,a,}`.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nA numeric sequence from `x` to `y` inclusive, with optional increment.\nIf `x` or `y` start with a leading `0`, all the numbers will be padded\nto have equal length. Negative numbers and backwards iteration work too.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nAn alphabetic sequence from `x` to `y` inclusive, with optional increment.\n`x` and `y` must be exactly one character, and if given, `incr` must be a\nnumber.\n\nFor compatibility reasons, the string `${` is not eligible for brace expansion.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install brace-expansion\n```\n\n## Contributors\n\n- [Julian Gruber](https://github.com/juliangruber)\n- [Isaac Z. Schlueter](https://github.com/isaacs)\n\n## Sponsors\n\nThis module is proudly supported by my [Sponsors](https://github.com/juliangruber/sponsors)!\n\nDo you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my [Patreon](https://www.patreon.com/juliangruber). Not sure how much of my modules you're using? Try [feross/thanks](https://github.com/feross/thanks)!\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 709937}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 13626273}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 55578087}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 153742390}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 303469196}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 588529950}], "dependentsCount": 150, "starsCount": 5}, "github": {"starsCount": 134, "forksCount": 19, "subscribersCount": 2, "issues": {"count": 45, "openCount": 4, "distribution": {"3600": 11, "10800": 2, "32400": 14, "97200": 6, "291600": 0, "874800": 2, "2624400": 0, "7873200": 4, "23619600": 2, "70858800": 0, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "juliangruber", "commitsCount": 35}, {"username": "isaacs", "commitsCount": 25}, {"username": "greenkeeperio-bot", "commitsCount": 8}, {"username": "notslang", "commitsCount": 3}, {"username": "greenkeeper[bot]", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "Parcley", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "myme", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "dependency-ci", "state": "pending"}]}, "source": {"files": {"readmeSize": 4058, "testsSize": 16108, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/juliangruber/brace-expansion.svg", "service": "https://api.travis-ci.org/juliangruber/brace-expansion.svg", "shields": "https://img.shields.io/travis/juliangruber/brace-expansion.svg", "content": "https://img.shields.io/travis/juliangruber/brace-expansion.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/dm/brace-expansion.svg", "shields": "https://img.shields.io/npm/dm/brace-expansion.svg", "content": "https://img.shields.io/npm/dm/brace-expansion.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.7625, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 173, "downloadsCount": 51247463.333333336, "downloadsAcceleration": 78430.30848554033, "dependentsCount": 150}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.82607434385033, "detail": {"quality": 0.9357829829267276, "popularity": 0.558223048694184, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-03T23:00:11.104Z", "collected": {"metadata": {"name": "braces", "scope": "unscoped", "version": "3.0.2", "description": "Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.", "keywords": ["alpha", "alphabetical", "bash", "brace", "braces", "expand", "expansion", "filepath", "fill", "fs", "glob", "globbing", "letter", "match", "matches", "matching", "number", "numerical", "path", "range", "ranges", "sh"], "date": "2019-04-16T19:51:12.829Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "es128", "email": "elan.shanker+npm@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Elan Shanker", "url": "https://github.com/es128"}, {"name": "Eugene Sharygin", "url": "https://github.com/eush77"}, {"name": "hemanth.hm", "url": "http://h3manth.com"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/braces.git"}, "links": {"npm": "https://www.npmjs.com/package/braces", "homepage": "https://github.com/micromatch/braces", "repository": "https://github.com/micromatch/braces", "bugs": "https://github.com/micromatch/braces/issues"}, "license": "MIT", "dependencies": {"fill-range": "^7.0.1"}, "devDependencies": {"ansi-colors": "^3.2.4", "bash-path": "^2.0.1", "gulp-format-md": "^2.0.0", "mocha": "^6.1.1"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# braces [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/braces.svg?style=flat)](https://www.npmjs.com/package/braces) [![NPM monthly downloads](https://img.shields.io/npm/dm/braces.svg?style=flat)](https://npmjs.org/package/braces) [![NPM total downloads](https://img.shields.io/npm/dt/braces.svg?style=flat)](https://npmjs.org/package/braces) [![Linux Build Status](https://img.shields.io/travis/micromatch/braces.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/braces)\n\n> Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save braces\n```\n\n## v3.0.0 Released!!\n\nSee the [changelog](CHANGELOG.md) for details.\n\n## Why use braces?\n\nBrace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters.\n\n* **Accurate** - complete support for the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/) specification (passes all of the Bash braces tests)\n* **[fast and performant](#benchmarks)** - Starts fast, runs fast and [scales well](#performance) as patterns increase in complexity.\n* **Organized code base** - The parser and compiler are easy to maintain and update when edge cases crop up.\n* **Well-tested** - Thousands of test assertions, and passes all of the Bash, minimatch, and [brace-expansion](https://github.com/juliangruber/brace-expansion) unit tests (as of the date this was written).\n* **Safer** - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)).\n* [Supports lists](#lists) - (aka \"sets\") `a/{b,c}/d` => `['a/b/d', 'a/c/d']`\n* [Supports sequences](#sequences) - (aka \"ranges\") `{01..03}` => `['01', '02', '03']`\n* [Supports steps](#steps) - (aka \"increments\") `{2..10..2}` => `['2', '4', '6', '8', '10']`\n* [Supports escaping](#escaping) - To prevent evaluation of special characters.\n\n## Usage\n\nThe main export is a function that takes one or more brace `patterns` and `options`.\n\n```js\nconst braces = require('braces');\n// braces(patterns[, options]);\n\nconsole.log(braces(['{01..05}', '{a..e}']));\n//=> ['(0[1-5])', '([a-e])']\n\nconsole.log(braces(['{01..05}', '{a..e}'], { expand: true }));\n//=> ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e']\n```\n\n### Brace Expansion vs. Compilation\n\nBy default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching.\n\n**Compiled**\n\n```js\nconsole.log(braces('a/{x,y,z}/b')); \n//=> ['a/(x|y|z)/b']\nconsole.log(braces(['a/{01..20}/b', 'a/{1..5}/b'])); \n//=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ]\n```\n\n**Expanded**\n\nEnable brace expansion by setting the `expand` option to true, or by using [braces.expand()](#expand) (returns an array similar to what you'd expect from Bash, or `echo {1..5}`, or [minimatch](https://github.com/isaacs/minimatch)):\n\n```js\nconsole.log(braces('a/{x,y,z}/b', { expand: true }));\n//=> ['a/x/b', 'a/y/b', 'a/z/b']\n\nconsole.log(braces.expand('{01..10}'));\n//=> ['01','02','03','04','05','06','07','08','09','10']\n```\n\n### Lists\n\nExpand lists (like Bash \"sets\"):\n\n```js\nconsole.log(braces('a/{foo,bar,baz}/*.js'));\n//=> ['a/(foo|bar|baz)/*.js']\n\nconsole.log(braces.expand('a/{foo,bar,baz}/*.js'));\n//=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']\n```\n\n### Sequences\n\nExpand ranges of characters (like Bash \"sequences\"):\n\n```js\nconsole.log(braces.expand('{1..3}'));                // ['1', '2', '3']\nconsole.log(braces.expand('a/{1..3}/b'));            // ['a/1/b', 'a/2/b', 'a/3/b']\nconsole.log(braces('{a..c}', { expand: true }));     // ['a', 'b', 'c']\nconsole.log(braces('foo/{a..c}', { expand: true })); // ['foo/a', 'foo/b', 'foo/c']\n\n// supports zero-padded ranges\nconsole.log(braces('a/{01..03}/b'));   //=> ['a/(0[1-3])/b']\nconsole.log(braces('a/{001..300}/b')); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b']\n```\n\nSee [fill-range](https://github.com/jonschlinkert/fill-range) for all available range-expansion options.\n\n### Steppped ranges\n\nSteps, or increments, may be used with ranges:\n\n```js\nconsole.log(braces.expand('{2..10..2}'));\n//=> ['2', '4', '6', '8', '10']\n\nconsole.log(braces('{2..10..2}'));\n//=> ['(2|4|6|8|10)']\n```\n\nWhen the [.optimize](#optimize) method is used, or [options.optimize](#optionsoptimize) is set to true, sequences are passed to [to-regex-range](https://github.com/jonschlinkert/to-regex-range) for expansion.\n\n### Nesting\n\nBrace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved.\n\n**\"Expanded\" braces**\n\n```js\nconsole.log(braces.expand('a{b,c,/{x,y}}/e'));\n//=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e']\n\nconsole.log(braces.expand('a/{x,{1..5},y}/c'));\n//=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c']\n```\n\n**\"Optimized\" braces**\n\n```js\nconsole.log(braces('a{b,c,/{x,y}}/e'));\n//=> ['a(b|c|/(x|y))/e']\n\nconsole.log(braces('a/{x,{1..5},y}/c'));\n//=> ['a/(x|([1-5])|y)/c']\n```\n\n### Escaping\n\n**Escaping braces**\n\nA brace pattern will not be expanded or evaluted if _either the opening or closing brace is escaped_:\n\n```js\nconsole.log(braces.expand('a\\\\{d,c,b}e'));\n//=> ['a{d,c,b}e']\n\nconsole.log(braces.expand('a{d,c,b\\\\}e'));\n//=> ['a{d,c,b}e']\n```\n\n**Escaping commas**\n\nCommas inside braces may also be escaped:\n\n```js\nconsole.log(braces.expand('a{b\\\\,c}d'));\n//=> ['a{b,c}d']\n\nconsole.log(braces.expand('a{d\\\\,c,b}e'));\n//=> ['ad,ce', 'abe']\n```\n\n**Single items**\n\nFollowing bash conventions, a brace pattern is also not expanded when it contains a single character:\n\n```js\nconsole.log(braces.expand('a{b}c'));\n//=> ['a{b}c']\n```\n\n## Options\n\n### options.maxLength\n\n**Type**: `Number`\n\n**Default**: `65,536`\n\n**Description**: Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.\n\n```js\nconsole.log(braces('a/{b,c}/d', { maxLength: 3 }));  //=> throws an error\n```\n\n### options.expand\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: Generate an \"expanded\" brace pattern (alternatively you can use the `braces.expand()` method, which does the same thing).\n\n```js\nconsole.log(braces('a/{b,c}/d', { expand: true }));\n//=> [ 'a/b/d', 'a/c/d' ]\n```\n\n### options.nodupes\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: Remove duplicates from the returned array.\n\n### options.rangeLimit\n\n**Type**: `Number`\n\n**Default**: `1000`\n\n**Description**: To prevent malicious patterns from being passed by users, an error is thrown when `braces.expand()` is used or `options.expand` is true and the generated range will exceed the `rangeLimit`.\n\nYou can customize `options.rangeLimit` or set it to `Inifinity` to disable this altogether.\n\n**Examples**\n\n```js\n// pattern exceeds the \"rangeLimit\", so it's optimized automatically\nconsole.log(braces.expand('{1..1000}'));\n//=> ['([1-9]|[1-9][0-9]{1,2}|1000)']\n\n// pattern does not exceed \"rangeLimit\", so it's NOT optimized\nconsole.log(braces.expand('{1..100}'));\n//=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']\n```\n\n### options.transform\n\n**Type**: `Function`\n\n**Default**: `undefined`\n\n**Description**: Customize range expansion.\n\n**Example: Transforming non-numeric values**\n\n```js\nconst alpha = braces.expand('x/{a..e}/y', {\n  transform(value, index) {\n    // When non-numeric values are passed, \"value\" is a character code.\n    return 'foo/' + String.fromCharCode(value) + '-' + index;\n  }\n});\nconsole.log(alpha);\n//=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ]\n```\n\n**Example: Transforming numeric values**\n\n```js\nconst numeric = braces.expand('{1..5}', {\n  transform(value) {\n    // when numeric values are passed, \"value\" is a number\n    return 'foo/' + value * 2;\n  }\n});\nconsole.log(numeric); \n//=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]\n```\n\n### options.quantifiers\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, `a{1,3}` will match the letter `a` one to three times.\n\nUnfortunately, regex quantifiers happen to share the same syntax as [Bash lists](#lists)\n\nThe `quantifiers` option tells braces to detect when [regex quantifiers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#quantifiers) are defined in the given pattern, and not to try to expand them as lists.\n\n**Examples**\n\n```js\nconst braces = require('braces');\nconsole.log(braces('a/b{1,3}/{x,y,z}'));\n//=> [ 'a/b(1|3)/(x|y|z)' ]\nconsole.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true}));\n//=> [ 'a/b{1,3}/(x|y|z)' ]\nconsole.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true, expand: true}));\n//=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]\n```\n\n### options.unescape\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Description**: Strip backslashes that were used for escaping from the result.\n\n## What is \"brace expansion\"?\n\nBrace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs).\n\nIn addition to \"expansion\", braces are also used for matching. In other words:\n\n* [brace expansion](#brace-expansion) is for generating new lists\n* [brace matching](#brace-matching) is for filtering existing lists\n\n<details>\n<summary><strong>More about brace expansion</strong> (click to expand)</summary>\n\nThere are two main types of brace expansion:\n\n1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}`\n2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a \"step\" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as \"ranges\".\n\nHere are some example brace patterns to illustrate how they work:\n\n**Sets**\n\n```\n{a,b,c}       => a b c\n{a,b,c}{1,2}  => a1 a2 b1 b2 c1 c2\n```\n\n**Sequences**\n\n```\n{1..9}        => 1 2 3 4 5 6 7 8 9\n{4..-4}       => 4 3 2 1 0 -1 -2 -3 -4\n{1..20..3}    => 1 4 7 10 13 16 19\n{a..j}        => a b c d e f g h i j\n{j..a}        => j i h g f e d c b a\n{a..z..3}     => a d g j m p s v y\n```\n\n**Combination**\n\nSets and sequences can be mixed together or used along with any other strings.\n\n```\n{a,b,c}{1..3}   => a1 a2 a3 b1 b2 b3 c1 c2 c3\nfoo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar\n```\n\nThe fact that braces can be \"expanded\" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases.\n\n## Brace matching\n\nIn addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching.\n\nFor example, the pattern `foo/{1..3}/bar` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\n```\n\nBut not:\n\n```\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\nBraces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\n## Brace matching pitfalls\n\nAlthough brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of.\n\n### tldr\n\n**\"brace bombs\"**\n\n* brace expansion can eat up a huge amount of processing resources\n* as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially\n* users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)\n\nFor a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section.\n\n### The solution\n\nJump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries.\n\n### Geometric complexity\n\nAt minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`.\n\nFor example, the following sets demonstrate quadratic (`O(n^2)`) complexity:\n\n```\n{1,2}{3,4}      => (2X2)    => 13 14 23 24\n{1,2}{3,4}{5,6} => (2X2X2)  => 135 136 145 146 235 236 245 246\n```\n\nBut add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity:\n\n```\n{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 \n                                    249 257 258 259 267 268 269 347 348 349 357 \n                                    358 359 367 368 369\n```\n\nNow, imagine how this complexity grows given that each element is a n-tuple:\n\n```\n{1..100}{1..100}         => (100X100)     => 10,000 elements (38.4 kB)\n{1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB)\n```\n\nAlthough these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control.\n\n**More information**\n\nInterested in learning more about brace expansion?\n\n* [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion)\n* [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion)\n* [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)\n\n</details>\n\n## Performance\n\nBraces is not only screaming fast, it's also more accurate the other brace expansion libraries.\n\n### Better algorithms\n\nFortunately there is a solution to the [\"brace bomb\" problem](#brace-matching-pitfalls): _don't expand brace patterns into an array when they're used for matching_.\n\nInstead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently.\n\n**The proof is in the numbers**\n\nMinimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using `braces()` and `minimatch.braceExpand()`, respectively.\n\n| **Pattern**                 | **braces**         | **[minimatch][]**            |\n| ---                         | ---                | ---                          |\n| `{1..9007199254740991}`[^1] | `298 B` (5ms 459\u03bcs)|  N/A (freezes)               |\n| `{1..1000000000000000}`     | `41 B` (1ms 15\u03bcs)  |  N/A (freezes)               |\n| `{1..100000000000000}`      | `40 B` (890\u03bcs)     |  N/A (freezes)               |\n| `{1..10000000000000}`       | `39 B` (2ms 49\u03bcs)  |  N/A (freezes)               |\n| `{1..1000000000000}`        | `38 B` (608\u03bcs)     |  N/A (freezes)               |\n| `{1..100000000000}`         | `37 B` (397\u03bcs)     |  N/A (freezes)               |\n| `{1..10000000000}`          | `35 B` (983\u03bcs)     |  N/A (freezes)               |\n| `{1..1000000000}`           | `34 B` (798\u03bcs)     |  N/A (freezes)               |\n| `{1..100000000}`            | `33 B` (733\u03bcs)     |  N/A (freezes)               |\n| `{1..10000000}`             | `32 B` (5ms 632\u03bcs) | `78.89 MB` (16s 388ms 569\u03bcs) |\n| `{1..1000000}`              | `31 B` (1ms 381\u03bcs) | `6.89 MB` (1s 496ms 887\u03bcs)   |\n| `{1..100000}`               | `30 B` (950\u03bcs)     | `588.89 kB` (146ms 921\u03bcs)    |\n| `{1..10000}`                | `29 B` (1ms 114\u03bcs) | `48.89 kB` (14ms 187\u03bcs)      |\n| `{1..1000}`                 | `28 B` (760\u03bcs)     | `3.89 kB` (1ms 453\u03bcs)        |\n| `{1..100}`                  | `22 B` (345\u03bcs)     | `291 B` (196\u03bcs)              |\n| `{1..10}`                   | `10 B` (533\u03bcs)     | `20 B` (37\u03bcs)                |\n| `{1..3}`                    | `7 B` (190\u03bcs)      | `5 B` (27\u03bcs)                 |\n\n### Faster algorithms\n\nWhen you need expansion, braces is still much faster.\n\n_(the following results were generated using `braces.expand()` and `minimatch.braceExpand()`, respectively)_\n\n| **Pattern**     | **braces**                  | **[minimatch][]**            |\n| ---             | ---                         | ---                          |\n| `{1..10000000}` | `78.89 MB` (2s 698ms 642\u03bcs) | `78.89 MB` (18s 601ms 974\u03bcs) |\n| `{1..1000000}`  | `6.89 MB` (458ms 576\u03bcs)     | `6.89 MB` (1s 491ms 621\u03bcs)   |\n| `{1..100000}`   | `588.89 kB` (20ms 728\u03bcs)    | `588.89 kB` (156ms 919\u03bcs)    |\n| `{1..10000}`    | `48.89 kB` (2ms 202\u03bcs)      | `48.89 kB` (13ms 641\u03bcs)      |\n| `{1..1000}`     | `3.89 kB` (1ms 796\u03bcs)       | `3.89 kB` (1ms 958\u03bcs)        |\n| `{1..100}`      | `291 B` (424\u03bcs)             | `291 B` (211\u03bcs)              |\n| `{1..10}`       | `20 B` (487\u03bcs)              | `20 B` (72\u03bcs)                |\n| `{1..3}`        | `5 B` (166\u03bcs)               | `5 B` (27\u03bcs)                 |\n\nIf you'd like to run these comparisons yourself, see [test/support/generate.js](test/support/generate.js).\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm benchmark\n```\n\n### Latest results\n\nBraces is more accurate, without sacrificing performance.\n\n```bash\n# range (expanded)\n  braces x 29,040 ops/sec \u00b13.69% (91 runs sampled))\n  minimatch x 4,735 ops/sec \u00b11.28% (90 runs sampled)\n\n# range (optimized for regex)\n  braces x 382,878 ops/sec \u00b10.56% (94 runs sampled)\n  minimatch x 1,040 ops/sec \u00b10.44% (93 runs sampled)\n\n# nested ranges (expanded)\n  braces x 19,744 ops/sec \u00b12.27% (92 runs sampled))\n  minimatch x 4,579 ops/sec \u00b10.50% (93 runs sampled)\n\n# nested ranges (optimized for regex)\n  braces x 246,019 ops/sec \u00b12.02% (93 runs sampled)\n  minimatch x 1,028 ops/sec \u00b10.39% (94 runs sampled)\n\n# set (expanded) \n  braces x 138,641 ops/sec \u00b10.53% (95 runs sampled)\n  minimatch x 219,582 ops/sec \u00b10.98% (94 runs sampled)\n\n# set (optimized for regex)\n  braces x 388,408 ops/sec \u00b10.41% (95 runs sampled)\n  minimatch x 44,724 ops/sec \u00b10.91% (89 runs sampled)\n\n# nested sets (expanded)\n  braces x 84,966 ops/sec \u00b10.48% (94 runs sampled)\n  minimatch x 140,720 ops/sec \u00b10.37% (95 runs sampled)\n\n# nested sets (optimized for regex)\n  braces x 263,340 ops/sec \u00b12.06% (92 runs sampled)\n  minimatch x 28,714 ops/sec \u00b10.40% (90 runs sampled)\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 197 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 4   | [doowb](https://github.com/doowb) |  \n| 1   | [es128](https://github.com/es128) |  \n| 1   | [eush77](https://github.com/eush77) |  \n| 1   | [hemanth](https://github.com/hemanth) |  \n| 1   | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4162662}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 23171250}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 93521402}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 239478520}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 464789650}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 857130591}], "dependentsCount": 150, "starsCount": 3}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 107, "forksCount": 18, "subscribersCount": 6, "issues": {"count": 30, "openCount": 1, "distribution": {"3600": 7, "10800": 1, "32400": 2, "97200": 4, "291600": 1, "874800": 3, "2624400": 2, "7873200": 4, "23619600": 4, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 202}, {"username": "paulmillr", "commitsCount": 6}, {"username": "doowb", "commitsCount": 4}, {"username": "es128", "commitsCount": 1}, {"username": "eush77", "commitsCount": 1}, {"username": "koopero", "commitsCount": 1}, {"username": "vemoo", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 22}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 21130, "testsSize": 103122, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/braces.svg?style=flat", "shields": "https://img.shields.io/npm/v/braces.svg", "content": "https://img.shields.io/npm/v/braces.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/braces.svg?style=flat", "shields": "https://img.shields.io/npm/dm/braces.svg", "content": "https://img.shields.io/npm/dm/braces.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/braces.svg?style=flat", "shields": "https://img.shields.io/npm/dt/braces.svg", "content": "https://img.shields.io/npm/dt/braces.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/braces.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/braces.svg", "shields": "https://img.shields.io/travis/micromatch/braces.svg", "content": "https://img.shields.io/travis/micromatch/braces.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 142, "downloadsCount": 79826173.33333333, "downloadsAcceleration": 250734.7027016742, "dependentsCount": 150}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8466808805894703, "detail": {"quality": 0.9791932954197882, "popularity": 0.5798900286691043, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-05T06:52:03.511Z", "collected": {"metadata": {"name": "buffer-from", "scope": "unscoped", "version": "1.1.1", "description": "A [ponyfill](https://ponyfill.com) for `Buffer.from`, uses native implementation if available.", "keywords": ["buffer", "buffer from"], "date": "2018-07-31T14:41:23.906Z", "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "linusu", "email": "linus@folkdatorn.se"}], "repository": {"type": "git", "url": "git+https://github.com/LinusU/buffer-from.git"}, "links": {"npm": "https://www.npmjs.com/package/buffer-from", "homepage": "https://github.com/LinusU/buffer-from#readme", "repository": "https://github.com/LinusU/buffer-from", "bugs": "https://github.com/LinusU/buffer-from/issues"}, "license": "MIT", "devDependencies": {"standard": "^7.1.2"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Buffer From\n\nA [ponyfill](https://ponyfill.com) for `Buffer.from`, uses native implementation if available.\n\n## Installation\n\n```sh\nnpm install --save buffer-from\n```\n\n## Usage\n\n```js\nconst bufferFrom = require('buffer-from')\n\nconsole.log(bufferFrom([1, 2, 3, 4]))\n//=> <Buffer 01 02 03 04>\n\nconst arr = new Uint8Array([1, 2, 3, 4])\nconsole.log(bufferFrom(arr.buffer, 1, 2))\n//=> <Buffer 02 03>\n\nconsole.log(bufferFrom('test', 'utf8'))\n//=> <Buffer 74 65 73 74>\n\nconst buf = bufferFrom('test')\nconsole.log(bufferFrom(buf))\n//=> <Buffer 74 65 73 74>\n```\n\n## API\n\n### bufferFrom(array)\n\n- `array` &lt;Array&gt;\n\nAllocates a new `Buffer` using an `array` of octets.\n\n### bufferFrom(arrayBuffer[, byteOffset[, length]])\n\n- `arrayBuffer` &lt;ArrayBuffer&gt; The `.buffer` property of a TypedArray or ArrayBuffer\n- `byteOffset` &lt;Integer&gt; Where to start copying from `arrayBuffer`. **Default:** `0`\n- `length` &lt;Integer&gt; How many bytes to copy from `arrayBuffer`. **Default:** `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a TypedArray instance, the\nnewly created `Buffer` will share the same allocated memory as the TypedArray.\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n### bufferFrom(buffer)\n\n- `buffer` &lt;Buffer&gt; An existing `Buffer` to copy data from\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n### bufferFrom(string[, encoding])\n\n- `string` &lt;String&gt; A string to encode.\n- `encoding` &lt;String&gt; The encoding of `string`. **Default:** `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `string`. If\nprovided, the `encoding` parameter identifies the character encoding of\n`string`.\n\n## See also\n\n- [buffer-alloc](https://github.com/LinusU/buffer-alloc) A ponyfill for `Buffer.alloc`\n- [buffer-alloc-unsafe](https://github.com/LinusU/buffer-alloc-unsafe) A ponyfill for `Buffer.allocUnsafe`"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2424281}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 13208177}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 55463458}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 141122983}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 275601050}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 511124456}], "dependentsCount": 131, "starsCount": 0}, "github": {"starsCount": 14, "forksCount": 5, "subscribersCount": 1, "issues": {"count": 10, "openCount": 5, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 2, "7873200": 4, "23619600": 1, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "LinusU", "commitsCount": 14}, {"username": "sindresorhus", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}]}, "source": {"files": {"readmeSize": 1990, "testsSize": 395}, "linters": ["standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.5925, "health": 1, "branding": 0}, "popularity": {"communityInterest": 22, "downloadsCount": 47040994.333333336, "downloadsAcceleration": 144804.23177321156, "dependentsCount": 131}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7842197855432045, "detail": {"quality": 0.8327088854315892, "popularity": 0.5270205629477445, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-05T05:16:32.449Z", "collected": {"metadata": {"name": "cache-base", "scope": "unscoped", "version": "4.0.0", "description": "Basic object cache with `get`, `set`, `del`, and `has` methods for node.js/javascript projects.", "keywords": ["base", "cache", "config", "data", "get", "has", "hash", "hasown", "object", "set", "store"], "date": "2018-03-30T03:01:35.538Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/cache-base.git"}, "links": {"npm": "https://www.npmjs.com/package/cache-base", "homepage": "https://github.com/jonschlinkert/cache-base", "repository": "https://github.com/jonschlinkert/cache-base", "bugs": "https://github.com/jonschlinkert/cache-base/issues"}, "license": "MIT", "dependencies": {"@sellside/emitter": "^1.2.1", "collection-visit": "^1.0.0", "get-value": "^3.0.1", "has-own-deep": "^1.1.0", "kind-of": "^6.0.2", "set-value": "^3.0.0", "union-value": "^1.0.0", "unset-value": "^1.0.0"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3", "nyc": "^11.6.0"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# cache-base [![NPM version](https://img.shields.io/npm/v/cache-base.svg?style=flat)](https://www.npmjs.com/package/cache-base) [![NPM monthly downloads](https://img.shields.io/npm/dm/cache-base.svg?style=flat)](https://npmjs.org/package/cache-base) [![NPM total downloads](https://img.shields.io/npm/dt/cache-base.svg?style=flat)](https://npmjs.org/package/cache-base) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/cache-base.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/cache-base)\n\n> Basic object cache with `get`, `set`, `del`, and `has` methods for node.js/javascript projects.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n- [Install](#install)\n- [Quickstart](#quickstart)\n- [API](#api)\n- [Usage examples](#usage-examples)\n- [About](#about)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save cache-base\n```\n\n## Quickstart\n\n```js\nconst CacheBase = require('cache-base');\nconst app = new CacheBase();\n\napp.set('a.b', 'c');\n\nconsole.log(app.cache.a);    //=> { b: 'c' }\nconsole.log(app.cache.a.b);  //=> 'c'\n\nconsole.log(app.get('a'));   //=> { b: 'c' }\nconsole.log(app.get('a.b')); //=> 'c'\n```\n\nMore [usage examples](#usage-examples) below.\n\n## API\n\n**Params**\n\n* `prop` **{String|Object}**: (optional) Property name to use for the cache, or the object to initialize with.\n* `cache` **{Object}**: (optional) An object to initialize with.\n\n**Example**\n\n```js\nconst app = new CacheBase();\n```\n\n### [.set](index.js#L65)\n\nAssign `value` to `key`. Also emits `set` with the key and value.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the property to set. Dot-notation may be used to set nested properties.\n* `value` **{any}**\n* `returns` **{Object}**: Returns the instance for chaining.\n\n**Events**\n\n* `emits`: `set` with `key` and `value` as arguments.\n\n**Example**\n\n```js\napp.on('set', function(key, val) {\n  // do something when `set` is emitted\n});\n\napp.set('admin', true);\n\n// also takes an object or an array of objects\napp.set({ name: 'Brian' });\napp.set([{ foo: 'bar' }, { baz: 'quux' }]);\nconsole.log(app);\n//=> { name: 'Brian', foo: 'bar', baz: 'quux' }\n```\n\n### [.get](index.js#L90)\n\nReturn the value of `key`.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the property to get. Dot-notation may be used to set nested properties.\n* `returns` **{any}**: Returns the value of `key`\n\n**Events**\n\n* `emits`: `get` with `key` and `value` as arguments.\n\n**Example**\n\n```js\napp.set('a.b.c', 'd');\napp.get('a.b');\n//=> { c: 'd' }\n```\n\n### [.prime](index.js#L120)\n\nCreate a property on the cache with the given `value` only if it doesn't already exist.\n\n**Params**\n\n* `key` **{String}**: Property name or object path notation.\n* `val` **{any}**\n* `returns` **{Object}**: Returns the instance for chaining.\n\n**Example**\n\n```js\nconsole.log(app.cache); //=> {}\napp.set('one', { foo: 'bar' });\napp.prime('one', { a: 'b' });\napp.prime('two', { c: 'd' });\nconsole.log(app.cache.one); //=> { foo: 'bar' }\nconsole.log(app.cache.two); //=> { c: 'd' }\n```\n\n### [.default](index.js#L162)\n\nSet a default value to be used when `.get()` is called and the value is not defined on the cache. Returns a value from the defaults when only a key is passed.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the property to set. Dot-notation may be used to set nested properties.\n* `value` **{any}**: (optional) The value to set on the defaults object.\n* `returns` **{Object}**: Returns the instance for chaining.\n\n**Example**\n\n```js\napp.set('foo', 'xxx');\napp.default('foo', 'one');\napp.default('bar', 'two');\napp.default('baz', 'three');\napp.set('baz', 'zzz');\n\nconsole.log(app.get('foo'));\n//=> 'xxx'\n\nconsole.log(app.get('bar'));\n//=> 'two'\n\nconsole.log(app.get('baz'));\n//=> 'zzz'\n\nconsole.log(app);\n// CacheBase {\n//   cache: { foo: 'xxx', bar: 'two', baz: 'zzz' },\n//   defaults: { foo: 'one', bar: 'two', baz: 'three' } }\n```\n\n### [.union](index.js#L199)\n\nSet an array of unique values on cache `key`.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the property to union. Dot-notation may be used to set nested properties.\n* `value` **{any}**\n* `returns` **{Object}**: Returns the instance for chaining.\n\n**Example**\n\n```js\napp.union('a.b.c', 'foo');\napp.union('a.b.c', 'bar');\napp.union('a.b.c', ['bar', 'baz']);\nconsole.log(app.get('a'));\n//=> { b: { c: ['foo', 'bar', 'baz'] } }\n```\n\n### [.has](index.js#L223)\n\nReturn true if the value of property `key` is not `undefined`.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the property to check. Dot-notation may be used to set nested properties.\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\napp.set('foo', true);\napp.set('baz', null);\napp.set('bar', undefined);\n\napp.has('foo'); //=> true\napp.has('bar'); //=> true\napp.has('baz'); //=> false\n```\n\n### [.hasOwn](index.js#L253)\n\nReturns true if the specified property is an own (not inherited) property. Similar to [.has()](#has), but returns true if the key exists, even if the value is `undefined`.\n\n**Params**\n\n* `key` **{String}**\n* `returns` **{Boolean}**: Returns true if object `key` exists. Dot-notation may be used to set nested properties.\n\n**Example**\n\n```js\napp.set('a.b.c', 'd');\napp.set('x', false);\napp.set('y', null);\napp.set('z', undefined);\n\napp.hasOwn('a');      //=> true\napp.hasOwn('b');      //=> true\napp.hasOwn('c');      //=> true\napp.hasOwn('a.b.c');  //=> true\napp.hasOwn('x');      //=> true\napp.hasOwn('y');      //=> true\napp.hasOwn('z');      //=> true\napp.hasOwn('lslsls'); //=> false\n```\n\n### [.del](index.js#L278)\n\nDelete one or more properties from the instance.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the property to delete. Dot-notation may be used to set nested properties.\n* `returns` **{Object}**: Returns the instance for chaining.\n\n**Events**\n\n* `emits`: `del` with the `key` as the only argument.\n\n**Example**\n\n```js\n// setup a listener to update a property with a default\n// value when it's deleted by the user\napp.on('del', key => app.set(key, app.default(key)));\n\napp.del(); // delete all properties on the cache\n// or\napp.del('foo');\n// or an array of keys\napp.del(['foo', 'bar']);\n```\n\n### [.clear](index.js#L301)\n\nReset the entire cache to an empty object. Note that this does not also clear the `defaults` object, since you can manually do `cache.defaults = {}` if you want to reset that object as well.\n\n**Example**\n\n```js\n// clear \"defaults\" whenever the cache is cleared\napp.on('clear', key => (app.defaults = {}));\napp.clear();\n```\n\n### [.visit](index.js#L318)\n\nVisit (or map visit) the specified method (`key`) over the properties in the\ngiven object or array.\n\n**Params**\n\n* `key` **{String|Array}**: The name of the method to visit.\n* `val` **{Object|Array}**: The object or array to iterate over.\n* `returns` **{Object}**: Returns the instance for chaining.\n\n### [.keys](index.js#L338)\n\nGets an array of names of all enumerable properties on the cache.\n\n**Example**\n\n```js\nconst app = new CacheBase();\napp.set('user', true);\napp.set('admin', false);\n\nconsole.log(app.keys);\n//=> ['user', 'admin']\n```\n\n### [.size](index.js#L357)\n\nGets the length of [keys](#keys).\n\n**Example**\n\n```js\nconst app = new CacheBase();\napp.set('user', true);\napp.set('admin', false);\n\nconsole.log(app.size);\n//=> 2\n```\n\n## Usage examples\n\n**Create an instance of cache-base**\n\n```js\nconst app = new CacheBase();\n\napp.set('a', 'b');\napp.set('c.d', 'e');\n\nconsole.log(app.get('a'));\n//=> 'b'\nconsole.log(app.get('c'));\n//=> { d: 'e' }\nconsole.log(app);\n//=> CacheBase { a: 'b' }\n```\n\n**Initialize with an object**\n\n```js\nconst app = new CacheBase({ a: 'b', c: { d: 'e' } });\n\nconsole.log(app.get('a'));\n//=> 'b'\nconsole.log(app.get('c'));\n//=> { d: 'e' }\nconsole.log(app.get('c.d'));\n//=> 'e'\nconsole.log(app);\n//=> CacheBase { cache: { a: 'b' } }\n```\n\n**Inherit**\n\n```js\nclass MyApp extends CacheBase {}\n\nconst app = new MyApp();\napp.set('a', 'b');\napp.set('c', 'd');\n\nconsole.log(app.get('a'));\n//=> 'b'\n\nconsole.log(app);\n//=> MyApp { cache: { a: 'b', c: 'd' } }\n```\n\n**Custom namespace**\n\nPass a string as the first value to the contructor to define a custom property name to use for the cache. By default values are stored on the `cache` property.\n\n```js\nconst CacheBase = require('cache-base');\nconst app = new CacheBase('data', { a: 'b' });\napp.set('c.d', 'e');\n\n// get values\nconsole.log(app.get('a'));\n//=> 'b'\nconsole.log(app.get('c'));\n//=> { d: 'e' }\nconsole.log(app.data);\n//=> { a: 'b', c: { d: 'e' } }\nconsole.log(app);\n//=> CacheBase { data: { a: 'b', c: { d: 'e' } } }\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [base-methods](https://www.npmjs.com/package/base-methods): base-methods is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting\u2026 [more](https://github.com/jonschlinkert/base-methods) | [homepage](https://github.com/jonschlinkert/base-methods \"base-methods is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting with a handful of common methods, like `set`, `get`, `del` and `use`.\")\n* [get-value](https://www.npmjs.com/package/get-value): Use property paths like 'a.b.c' to get a nested value from an object. Even works\u2026 [more](https://github.com/jonschlinkert/get-value) | [homepage](https://github.com/jonschlinkert/get-value \"Use property paths like 'a.b.c' to get a nested value from an object. Even works when keys have dots in them (no other dot-prop library can do this!).\")\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using\u2026 [more](https://github.com/jonschlinkert/has-value) | [homepage](https://github.com/jonschlinkert/has-value \"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.\")\n* [option-cache](https://www.npmjs.com/package/option-cache): Simple API for managing options in JavaScript applications. | [homepage](https://github.com/jonschlinkert/option-cache \"Simple API for managing options in JavaScript applications.\")\n* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value \"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.\")\n* [unset-value](https://www.npmjs.com/package/unset-value): Delete nested properties from an object using dot notation. | [homepage](https://github.com/jonschlinkert/unset-value \"Delete nested properties from an object using dot notation.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 67 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on March 23, 2018._"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2029230}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 10866956}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 45717332}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 115816669}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 229078087}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 429255561}], "dependentsCount": 53, "starsCount": 3}, "github": {"starsCount": 36, "forksCount": 4, "subscribersCount": 2, "issues": {"count": 17, "openCount": 2, "distribution": {"3600": 3, "10800": 2, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 3, "7873200": 2, "23619600": 1, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 77}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 12433, "testsSize": 14787, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/cache-base.svg?style=flat", "shields": "https://img.shields.io/npm/v/cache-base.svg", "content": "https://img.shields.io/npm/v/cache-base.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/cache-base.svg?style=flat", "shields": "https://img.shields.io/npm/dm/cache-base.svg", "content": "https://img.shields.io/npm/dm/cache-base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/cache-base.svg?style=flat", "shields": "https://img.shields.io/npm/dt/cache-base.svg", "content": "https://img.shields.io/npm/dt/cache-base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/cache-base.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/cache-base.svg", "shields": "https://img.shields.io/travis/jonschlinkert/cache-base.svg", "content": "https://img.shields.io/travis/jonschlinkert/cache-base.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"union-value": {"required": "^1.0.0", "stable": "2.0.1", "latest": "1.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 47, "downloadsCount": 38605556.333333336, "downloadsAcceleration": 111120.4599505327, "dependentsCount": 53}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8181626475811866, "detail": {"quality": 0.9696985847430144, "popularity": 0.5065476863683858, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-09T18:27:01.061Z", "collected": {"metadata": {"name": "call-me-maybe", "scope": "unscoped", "version": "1.0.1", "description": "Let your JS API users either give you a callback or receive a promise", "keywords": ["promise", "callback", "denodeify", "promisify", "carlyraejepsen"], "date": "2015-09-12T20:55:39.573Z", "author": {"name": "Eric McCarthy", "email": "eric@limulus.net", "url": "http://www.limulus.net/", "username": "limulus"}, "publisher": {"username": "limulus", "email": "eric@limulus.net"}, "maintainers": [{"username": "limulus", "email": "eric@limulus.net"}], "repository": {"type": "git", "url": "git+https://github.com/limulus/call-me-maybe.git"}, "links": {"npm": "https://www.npmjs.com/package/call-me-maybe", "homepage": "https://github.com/limulus/call-me-maybe#readme", "repository": "https://github.com/limulus/call-me-maybe", "bugs": "https://github.com/limulus/call-me-maybe/issues"}, "license": "MIT", "devDependencies": {"mocha": "^2.3.2", "promise": "^7.0.4", "zuul": "^3.4.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# call-me-maybe [![Build Status](https://travis-ci.org/limulus/call-me-maybe.svg?branch=master)](https://travis-ci.org/limulus/call-me-maybe)\n\nLet your JS API users either give you a callback or receive a promise.\n\n## Usage\n\n```javascript\nvar maybe = require(\"call-me-maybe\")\n\nmodule.exports = function asyncFunc (cb) {\n  return maybe(cb, new Promise(function(resolve, reject) {\n    // ...\n  }))\n}\n```\n\n## API\n\n### maybe(cb, promise)\n\nIf the callback `cb` is truthy, returns `undefined` and will call `cb` when `promise` is settled. The parameters passed to `cb` are standard error-first:\n\n  - If `promise` is fulfilled, then it is called with the result of the promise: `cb(null, result)`\n  - If `promise` is rejected, then it is called with the rejection error: `cb(err)`\n\nIf `cb` is falsey, then `promise` is retuned."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 212298}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4991356}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 20395398}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 55255136}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 107473049}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 190637252}], "dependentsCount": 64, "starsCount": 4}, "github": {"starsCount": 32, "forksCount": 2, "subscribersCount": 1, "issues": {"count": 4, "openCount": 3, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "limulus", "commitsCount": 10}, {"username": "MikeRalphson", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 821, "testsSize": 3847}, "badges": [{"urls": {"original": "https://travis-ci.org/limulus/call-me-maybe.svg?branch=master", "service": "https://api.travis-ci.org/limulus/call-me-maybe.svg?branch=master", "shields": "https://img.shields.io/travis/limulus/call-me-maybe/master.svg", "content": "https://img.shields.io/travis/limulus/call-me-maybe/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 41, "downloadsCount": 18418378.666666668, "downloadsAcceleration": 58082.85306316591, "dependentsCount": 64}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7923511415357737, "detail": {"quality": 0.9262615076490556, "popularity": 0.470065046740114, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-03T12:05:19.225Z", "collected": {"metadata": {"name": "callsites", "scope": "unscoped", "version": "3.1.0", "description": "Get callsites from the V8 stack trace API", "keywords": ["stacktrace", "v8", "callsite", "callsites", "stack", "trace", "function", "file", "line", "debug"], "date": "2019-04-06T11:57:30.657Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/callsites.git"}, "links": {"npm": "https://www.npmjs.com/package/callsites", "homepage": "https://github.com/sindresorhus/callsites#readme", "repository": "https://github.com/sindresorhus/callsites", "bugs": "https://github.com/sindresorhus/callsites/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 2}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://v8.dev/docs/stack-trace-api)\n\n\n## Install\n\n```\n$ npm install callsites\n```\n\n\n## Usage\n\n```js\nconst callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> '/Users/sindresorhus/dev/callsites/test.js'\n}\n\nunicorn();\n```\n\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getThis`: returns the value of `this`.\n- `getTypeName`: returns the type of `this` as a string. This is the name of the function stored in the constructor field of `this`, if available, otherwise the object's `[[Class]]` internal property.\n- `getFunction`: returns the current function.\n- `getFunctionName`: returns the name of the current function, typically its `name` property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of `this` or one of its prototypes that holds the current function.\n- `getFileName`: if this function was defined in a script returns the name of the script.\n- `getLineNumber`: if this function was defined in a script returns the current line number.\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to `eval` returns a string representing the location where `eval` was called.\n- `isToplevel`: is this a top-level invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to `eval`?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3267084}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 18199285}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 73794563}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 193478486}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 377955075}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 676427744}], "dependentsCount": 160, "starsCount": 4}, "github": {"starsCount": 147, "forksCount": 5, "subscribersCount": 11, "issues": {"count": 14, "openCount": 1, "distribution": {"3600": 5, "10800": 2, "32400": 2, "97200": 4, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 18}, {"username": "SamVerschueren", "commitsCount": 5}, {"username": "BendingBender", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1887, "testsSize": 164}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/callsites.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/callsites.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/callsites/master.svg", "content": "https://img.shields.io/travis/sindresorhus/callsites/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.496, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 171, "downloadsCount": 64492828.666666664, "downloadsAcceleration": 213278.94788812776, "dependentsCount": 160}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8235033433315364, "detail": {"quality": 0.9017657290521727, "popularity": 0.5800349791043924, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-21T20:41:01.049Z", "collected": {"metadata": {"name": "chalk", "scope": "unscoped", "version": "3.0.0", "description": "Terminal string styling done right", "keywords": ["color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2019-11-09T06:59:09.065Z", "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/chalk.git"}, "links": {"npm": "https://www.npmjs.com/package/chalk", "homepage": "https://github.com/chalk/chalk#readme", "repository": "https://github.com/chalk/chalk", "bugs": "https://github.com/chalk/chalk/issues"}, "license": "MIT", "dependencies": {"ansi-styles": "^4.1.0", "supports-color": "^7.1.0"}, "devDependencies": {"ava": "^2.4.0", "coveralls": "^3.0.7", "execa": "^3.2.0", "import-fresh": "^3.1.0", "matcha": "^0.7.0", "nyc": "^14.1.1", "resolve-from": "^5.0.0", "tsd": "^0.7.4", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 3}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 3}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![npm dependents](https://badgen.net/npm/dependents/chalk)](https://www.npmjs.com/package/chalk?activeTab=dependents) [![Downloads](https://badgen.net/npm/dt/chalk)](https://www.npmjs.com/package/chalk) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) ![TypeScript-ready](https://img.shields.io/npm/types/chalk.svg)\n\n<img src=\"https://cdn.jsdelivr.net/gh/chalk/ansi-styles@8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~46,000 packages](https://www.npmjs.com/browse/depended/chalk) as of October 1, 2019\n\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.level\n\nSpecifies the level of color support.\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.Instance({level: 0});\n```\n\n| Level | Description |\n| :---: | :--- |\n| `0` | All colors disabled |\n| `1` | Basic color support (16 colors) |\n| `2` | 256 color support |\n| `3` | Truecolor support (16 million colors) |\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, use the environment variable `FORCE_COLOR=1` (level 1), `FORCE_COLOR=2` (level 2), or `FORCE_COLOR=3` (level 3) to forcefully enable color, or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n### chalk.stderr and chalk.stderr.supportsColor\n\n`chalk.stderr` contains a separate instance configured with color support detected for `stderr` stream instead of `stdout`. Override rules from `chalk.supportsColor` apply to this too. `chalk.stderr.supportsColor` is exposed for convenience.\n\n\n## Styles\n\n### Modifiers\n\n- `reset` - Resets the current color chain.\n- `bold` - Make text bold.\n- `dim` - Emitting only a small amount of light.\n- `italic` - Make text italic. *(Not widely supported)*\n- `underline` - Make text underline. *(Not widely supported)*\n- `inverse`- Inverse background and foreground colors.\n- `hidden` - Prints the text, but makes it invisible.\n- `strikethrough` - Puts a horizontal line through the center of the text. *(Not widely supported)*\n- `visible`- Prints the text only when Chalk has a color level > 0. Can be useful for things that are purely cosmetic.\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright` (alias: `gray`, `grey`)\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright` (alias: `bgGray`, `bgGrey`)\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](http://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n\tThere are {bold 5280 feet} in a mile.\n\tIn {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following two statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- [`ansi`](https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit) - Example: `chalk.ansi(31).bgAnsi(93)('red on yellowBright')`\n- [`ansi256`](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) - Example: `chalk.bgAnsi256(194)('Honeydew, more or less')`\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [Windows Terminal](https://github.com/microsoft/terminal) instead of `cmd.exe`.\n\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n\n## chalk for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of chalk and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-chalk?utm_source=npm-chalk&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)"}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6692637}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 34855103}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 147362124}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 369105033}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 724116988}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1384840070}], "dependentsCount": 45438, "starsCount": 933}, "github": {"starsCount": 13964, "forksCount": 536, "subscribersCount": 142, "issues": {"count": 382, "openCount": 11, "distribution": {"3600": 97, "10800": 38, "32400": 35, "97200": 38, "291600": 20, "874800": 31, "2624400": 33, "7873200": 34, "23619600": 38, "70858800": 18, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 142}, {"username": "Qix-", "commitsCount": 34}, {"username": "kevva", "commitsCount": 3}, {"username": "pedrottimark", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "stroncium", "commitsCount": 3}, {"username": "LitoMore", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "calebboyd", "commitsCount": 2}, {"username": "nazrhyn", "commitsCount": 2}, {"username": "popey456963", "commitsCount": 2}, {"username": "seanmonstar", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 2}, {"username": "vadimdemedes", "commitsCount": 2}, {"username": "AndrewKvalheim", "commitsCount": 1}, {"username": "BendingBender", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "GeorgeGkas", "commitsCount": 1}, {"username": "Haroenv", "commitsCount": 1}, {"username": "KSXGitHub", "commitsCount": 1}, {"username": "L1fescape", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "apsknight", "commitsCount": 1}, {"username": "atifaziz", "commitsCount": 1}, {"username": "brandon93s", "commitsCount": 1}, {"username": "danielhusar", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "eankeen", "commitsCount": 1}, {"username": "farnabaz", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jbnicolai", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "keis", "commitsCount": 1}, {"username": "loilo", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "marado", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "martinheidegger", "commitsCount": 1}, {"username": "mischah", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "partheseas", "commitsCount": 1}, {"username": "paulmelnikow", "commitsCount": 1}, {"username": "saadq", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tom-sherman", "commitsCount": 1}, {"username": "vanbujm", "commitsCount": 1}, {"username": "weikinhuang", "commitsCount": 1}, {"username": "yungsters", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 14}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 35}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 11809, "testsSize": 15373}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/chalk.svg?branch=master", "service": "https://api.travis-ci.org/chalk/chalk.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/chalk/master.svg", "content": "https://img.shields.io/travis/chalk/chalk/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/chalk/chalk/master.svg", "content": "https://img.shields.io/coveralls/chalk/chalk/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/types/chalk.svg", "shields": "https://img.shields.io/npm/types/chalk.svg", "content": "https://img.shields.io/npm/types/chalk.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "types"}}}], "linters": ["editorconfig", "xo"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 15624, "downloadsCount": 123035011, "downloadsAcceleration": 336694.54710806697, "dependentsCount": 45438}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9751727140205227, "detail": {"quality": 0.988301924677847, "popularity": 0.9392021562509181, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-09T07:44:04.067Z", "collected": {"metadata": {"name": "chardet", "scope": "unscoped", "version": "0.8.0", "description": "Character detector", "keywords": ["encoding", "character", "utf8", "detector", "chardet", "icu"], "date": "2019-07-11T23:24:19.369Z", "author": {"name": "Dmitry Shirokov", "email": "deadrunk@gmail.com", "username": "runk"}, "publisher": {"username": "runk", "email": "deadrunk@gmail.com"}, "maintainers": [{"username": "runk", "email": "deadrunk@gmail.com"}], "contributors": [{"name": "@spikying"}, {"name": "@wtgtybhertgeghgtwtg"}, {"name": "@suisho"}, {"name": "@seangarner"}, {"name": "@zevanty"}], "repository": {"type": "git", "url": "git+https://github.com/runk/node-chardet.git"}, "links": {"npm": "https://www.npmjs.com/package/chardet", "homepage": "https://github.com/runk/node-chardet", "repository": "https://github.com/runk/node-chardet", "bugs": "http://github.com/runk/node-chardet/issues"}, "license": "MIT", "devDependencies": {"mocha": "^6.1.4", "semantic-release": "^15.13.18"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "chardet [![Build Status](https://travis-ci.org/runk/node-chardet.png)](https://travis-ci.org/runk/node-chardet)\n=====\n\nChardet is a character detection module for NodeJS written in pure Javascript.\nModule is based on ICU project http://site.icu-project.org/, which uses character\noccurency analysis to determine the most probable encoding.\n\n## Installation\n\n```\nnpm i chardet\n```\n\n## Usage\n\nTo return the encoding with the highest confidence:\n```javascript\nvar chardet = require('chardet');\nchardet.detect(Buffer.from('hello there!'));\n// or\nchardet.detectFile('/path/to/file', function(err, encoding) {});\n// or\nchardet.detectFileSync('/path/to/file');\n```\n\n\nTo return the full list of possible encodings:\n```javascript\nvar chardet = require('chardet');\nchardet.detectAll(Buffer.from('hello there!'));\n// or\nchardet.detectFileAll('/path/to/file', function(err, encoding) {});\n// or\nchardet.detectFileAllSync('/path/to/file');\n\n//Returned value is an array of objects sorted by confidence value in decending order\n//e.g. [{ confidence: 90, name: 'UTF-8'}, {confidence: 20, name: 'windows-1252', lang: 'fr'}]\n```\n\n## Working with large data sets\n\nSometimes, when data set is huge and you want to optimize performace (in tradeoff of less accuracy),\nyou can sample only first N bytes of the buffer:\n\n```javascript\nchardet.detectFile('/path/to/file', { sampleSize: 32 }, function(err, encoding) {});\n```\n\n## Supported Encodings:\n\n* UTF-8\n* UTF-16 LE\n* UTF-16 BE\n* UTF-32 LE\n* UTF-32 BE\n* ISO-2022-JP\n* ISO-2022-KR\n* ISO-2022-CN\n* Shift-JIS\n* Big5\n* EUC-JP\n* EUC-KR\n* GB18030\n* ISO-8859-1\n* ISO-8859-2\n* ISO-8859-5\n* ISO-8859-6\n* ISO-8859-7\n* ISO-8859-8\n* ISO-8859-9\n* windows-1250\n* windows-1251\n* windows-1252\n* windows-1253\n* windows-1254\n* windows-1255\n* windows-1256\n* KOI8-R\n\nCurrently only these encodings are supported, more will be added soon."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 494831}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10660273}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 43439509}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 119006369}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 232924485}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 424831494}], "dependentsCount": 83, "starsCount": 5}, "github": {"starsCount": 86, "forksCount": 14, "subscribersCount": 4, "issues": {"count": 23, "openCount": 1, "distribution": {"3600": 4, "10800": 2, "32400": 2, "97200": 4, "291600": 3, "874800": 1, "2624400": 2, "7873200": 0, "23619600": 4, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "runk", "commitsCount": 55}, {"username": "spikying", "commitsCount": 3}, {"username": "zevanty", "commitsCount": 2}, {"username": "aduh95", "commitsCount": 1}, {"username": "seangarner", "commitsCount": 1}, {"username": "suisho", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1849, "testsSize": 1460277, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/runk/node-chardet.png", "service": "https://api.travis-ci.org/runk/node-chardet.svg", "shields": "https://img.shields.io/travis/runk/node-chardet.svg", "content": "https://img.shields.io/travis/runk/node-chardet.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 116, "downloadsCount": 39668789.666666664, "downloadsAcceleration": 103541.18681506853, "dependentsCount": 83}, "maintenance": {"releasesFrequency": 0.16027397260273973, "commitsFrequency": 0.13952054794520546, "openIssues": 1, "issuesDistribution": 0.6597054272342995}}, "score": {"final": 0.7058173751943027, "detail": {"quality": 0.844591420691052, "popularity": 0.5322933407125049, "maintenance": 0.7603922278217441}}}
{"analyzedAt": "2020-02-06T08:05:44.015Z", "collected": {"metadata": {"name": "class-utils", "scope": "unscoped", "version": "0.3.6", "description": "Utils for working with JavaScript classes and prototype methods.", "keywords": ["array", "assign", "class", "copy", "ctor", "define", "delegate", "descriptor", "extend", "extends", "inherit", "inheritance", "merge", "method", "object", "prop", "properties", "property", "prototype", "util", "utils"], "date": "2018-01-11T14:49:23.288Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/class-utils.git"}, "links": {"npm": "https://www.npmjs.com/package/class-utils", "homepage": "https://github.com/jonschlinkert/class-utils", "repository": "https://github.com/jonschlinkert/class-utils", "bugs": "https://github.com/jonschlinkert/class-utils/issues"}, "license": "MIT", "dependencies": {"arr-union": "^3.1.0", "define-property": "^0.2.5", "isobject": "^3.0.0", "static-extend": "^0.1.1"}, "devDependencies": {"gulp": "^3.9.1", "gulp-eslint": "^2.0.0", "gulp-format-md": "^0.1.7", "gulp-istanbul": "^0.10.3", "gulp-mocha": "^2.2.0", "mocha": "^2.4.5", "should": "^8.2.2", "through2": "^2.0.1"}, "releases": [{"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2018-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# class-utils [![NPM version](https://img.shields.io/npm/v/class-utils.svg?style=flat)](https://www.npmjs.com/package/class-utils) [![NPM monthly downloads](https://img.shields.io/npm/dm/class-utils.svg?style=flat)](https://npmjs.org/package/class-utils) [![NPM total downloads](https://img.shields.io/npm/dt/class-utils.svg?style=flat)](https://npmjs.org/package/class-utils) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/class-utils.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/class-utils)\n\n> Utils for working with JavaScript classes and prototype methods.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save class-utils\n```\n\n## Usage\n\n```js\nvar cu = require('class-utils');\n```\n\n## API\n\n### [.has](index.js#L43)\n\nReturns true if an array has any of the given elements, or an object has any of the give keys.\n\n**Params**\n\n* `obj` **{Object}**\n* `val` **{String|Array}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\ncu.has(['a', 'b', 'c'], 'c');\n//=> true\n\ncu.has(['a', 'b', 'c'], ['c', 'z']);\n//=> true\n\ncu.has({a: 'b', c: 'd'}, ['c', 'z']);\n//=> true\n```\n\n### [.hasAll](index.js#L90)\n\nReturns true if an array or object has all of the given values.\n\n**Params**\n\n* `val` **{Object|Array}**\n* `values` **{String|Array}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\ncu.hasAll(['a', 'b', 'c'], 'c');\n//=> true\n\ncu.hasAll(['a', 'b', 'c'], ['c', 'z']);\n//=> false\n\ncu.hasAll({a: 'b', c: 'd'}, ['c', 'z']);\n//=> false\n```\n\n### [.arrayify](index.js#L117)\n\nCast the given value to an array.\n\n**Params**\n\n* `val` **{String|Array}**\n* `returns` **{Array}**\n\n**Example**\n\n```js\ncu.arrayify('foo');\n//=> ['foo']\n\ncu.arrayify(['foo']);\n//=> ['foo']\n```\n\n### [.hasConstructor](index.js#L152)\n\nReturns true if a value has a `contructor`\n\n**Params**\n\n* `value` **{Object}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\ncu.hasConstructor({});\n//=> true\n\ncu.hasConstructor(Object.create(null));\n//=> false\n```\n\n### [.nativeKeys](index.js#L174)\n\nGet the native `ownPropertyNames` from the constructor of the given `object`. An empty array is returned if the object does not have a constructor.\n\n**Params**\n\n* `obj` **{Object}**: Object that has a `constructor`.\n* `returns` **{Array}**: Array of keys.\n\n**Example**\n\n```js\ncu.nativeKeys({a: 'b', b: 'c', c: 'd'})\n//=> ['a', 'b', 'c']\n\ncu.nativeKeys(function(){})\n//=> ['length', 'caller']\n```\n\n### [.getDescriptor](index.js#L208)\n\nReturns property descriptor `key` if it's an \"own\" property of the given object.\n\n**Params**\n\n* `obj` **{Object}**\n* `key` **{String}**\n* `returns` **{Object}**: Returns descriptor `key`\n\n**Example**\n\n```js\nfunction App() {}\nObject.defineProperty(App.prototype, 'count', {\n  get: function() {\n    return Object.keys(this).length;\n  }\n});\ncu.getDescriptor(App.prototype, 'count');\n// returns:\n// {\n//   get: [Function],\n//   set: undefined,\n//   enumerable: false,\n//   configurable: false\n// }\n```\n\n### [.copyDescriptor](index.js#L238)\n\nCopy a descriptor from one object to another.\n\n**Params**\n\n* `receiver` **{Object}**\n* `provider` **{Object}**\n* `name` **{String}**\n* `returns` **{Object}**\n\n**Example**\n\n```js\nfunction App() {}\nObject.defineProperty(App.prototype, 'count', {\n  get: function() {\n    return Object.keys(this).length;\n  }\n});\nvar obj = {};\ncu.copyDescriptor(obj, App.prototype, 'count');\n```\n\n### [.copy](index.js#L264)\n\nCopy static properties, prototype properties, and descriptors\nfrom one object to another.\n\n**Params**\n\n* `receiver` **{Object}**\n* `provider` **{Object}**\n* `omit` **{String|Array}**: One or more properties to omit\n* `returns` **{Object}**\n\n### [.inherit](index.js#L299)\n\nInherit the static properties, prototype properties, and descriptors\nfrom of an object.\n\n**Params**\n\n* `receiver` **{Object}**\n* `provider` **{Object}**\n* `omit` **{String|Array}**: One or more properties to omit\n* `returns` **{Object}**\n\n### [.extend](index.js#L343)\n\nReturns a function for extending the static properties, prototype properties, and descriptors from the `Parent` constructor onto `Child` constructors.\n\n**Params**\n\n* `Parent` **{Function}**: Parent ctor\n* `extend` **{Function}**: Optional extend function to handle custom extensions. Useful when updating methods that require a specific prototype.\n* `Child` **{Function}**: Child ctor\n* `proto` **{Object}**: Optionally pass additional prototype properties to inherit.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nvar extend = cu.extend(Parent);\nParent.extend(Child);\n\n// optional methods\nParent.extend(Child, {\n  foo: function() {},\n  bar: function() {}\n});\n```\n\n### [.bubble](index.js#L356)\n\nBubble up events emitted from static methods on the Parent ctor.\n\n**Params**\n\n* `Parent` **{Object}**\n* `events` **{Array}**: Event names to bubble up\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [define-property](https://www.npmjs.com/package/define-property): Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty. | [homepage](https://github.com/jonschlinkert/define-property \"Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty.\")\n* [delegate-properties](https://www.npmjs.com/package/delegate-properties): Deep-clone properties from one object to another and make them non-enumerable, or make existing properties\u2026 [more](https://github.com/jonschlinkert/delegate-properties) | [homepage](https://github.com/jonschlinkert/delegate-properties \"Deep-clone properties from one object to another and make them non-enumerable, or make existing properties on an object non-enumerable.\")\n* [is-descriptor](https://www.npmjs.com/package/is-descriptor): Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for\u2026 [more](https://github.com/jonschlinkert/is-descriptor) | [homepage](https://github.com/jonschlinkert/is-descriptor \"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 34 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 8 | [doowb](https://github.com/doowb) |\n| 2 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on January 11, 2018._"}, "npm": {"downloads": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 1855833}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 9874796}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 41524877}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 109893028}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 219351601}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 412477922}], "dependentsCount": 42, "starsCount": 0}, "github": {"starsCount": 14, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 5, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 3, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 37}, {"username": "doowb", "commitsCount": 7}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "mootari", "commitsCount": 1}], "commits": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7887, "testsSize": 13602}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/class-utils.svg?style=flat", "shields": "https://img.shields.io/npm/v/class-utils.svg", "content": "https://img.shields.io/npm/v/class-utils.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/class-utils.svg?style=flat", "shields": "https://img.shields.io/npm/dm/class-utils.svg", "content": "https://img.shields.io/npm/dm/class-utils.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/class-utils.svg?style=flat", "shields": "https://img.shields.io/npm/dt/class-utils.svg", "content": "https://img.shields.io/npm/dt/class-utils.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/class-utils.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/class-utils.svg", "shields": "https://img.shields.io/travis/jonschlinkert/class-utils.svg", "content": "https://img.shields.io/travis/jonschlinkert/class-utils.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "define-property": {"required": "^0.2.5", "stable": "2.0.2", "latest": "2.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 22, "downloadsCount": 36631009.333333336, "downloadsAcceleration": 85657.39374048705, "dependentsCount": 42}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0.8065797077922078}}, "score": {"final": 0.5914068377781354, "detail": {"quality": 0.8227775525027178, "popularity": 0.48491551140875594, "maintenance": 0.4995804086693013}}}
{"analyzedAt": "2020-02-09T09:25:04.607Z", "collected": {"metadata": {"name": "cli-cursor", "scope": "unscoped", "version": "3.1.0", "description": "Toggle the CLI cursor", "keywords": ["cli", "cursor", "ansi", "toggle", "display", "show", "hide", "term", "terminal", "console", "tty", "shell", "command-line"], "date": "2019-06-11T16:57:35.876Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/cli-cursor.git"}, "links": {"npm": "https://www.npmjs.com/package/cli-cursor", "homepage": "https://github.com/sindresorhus/cli-cursor#readme", "repository": "https://github.com/sindresorhus/cli-cursor", "bugs": "https://github.com/sindresorhus/cli-cursor/issues"}, "license": "MIT", "dependencies": {"restore-cursor": "^3.1.0"}, "devDependencies": {"@types/node": "^12.0.7", "ava": "^2.1.0", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# cli-cursor [![Build Status](https://travis-ci.org/sindresorhus/cli-cursor.svg?branch=master)](https://travis-ci.org/sindresorhus/cli-cursor)\n\n> Toggle the CLI cursor\n\nThe cursor is [gracefully restored](https://github.com/sindresorhus/restore-cursor) if the process exits.\n\n\n## Install\n\n```\n$ npm install cli-cursor\n```\n\n\n## Usage\n\n```js\nconst cliCursor = require('cli-cursor');\n\ncliCursor.hide();\n\nconst unicornsAreAwesome = true;\ncliCursor.toggle(unicornsAreAwesome);\n```\n\n\n## API\n\n### .show(stream?)\n\n### .hide(stream?)\n\n### .toggle(force?, stream?)\n\n#### force\n\nUseful for showing or hiding the cursor based on a boolean.\n\n#### stream\n\nType: `stream.Writable`<br>\nDefault: `process.stderr`\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-cli-cursor?utm_source=npm-cli-cursor&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 695198}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 15134716}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 61366298}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 162734761}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 302980909}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 522342028}], "dependentsCount": 178, "starsCount": 3}, "github": {"starsCount": 64, "forksCount": 7, "subscribersCount": 7, "issues": {"count": 6, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 2, "97200": 2, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 19}, {"username": "BendingBender", "commitsCount": 1}, {"username": "alebelcor", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "wooorm", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1135, "testsSize": 1206}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/cli-cursor.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/cli-cursor.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/cli-cursor/master.svg", "content": "https://img.shields.io/travis/sindresorhus/cli-cursor/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 86, "downloadsCount": 54244920.333333336, "downloadsAcceleration": 216655.61006468802, "dependentsCount": 178}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8341903287011005, "detail": {"quality": 0.9547045235275585, "popularity": 0.5651931134671021, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-01-31T17:37:20.315Z", "collected": {"metadata": {"name": "cli-width", "scope": "unscoped", "version": "2.2.0", "description": "Get stdout window width, with two fallbacks, tty and then a default.", "date": "2017-08-22T13:46:06.289Z", "author": {"name": "Ilya Radchenko", "email": "ilya@burstcreations.com", "username": "knownasilya"}, "publisher": {"username": "knownasilya", "email": "ilya@burstcreations.com"}, "maintainers": [{"username": "knownasilya", "email": "ilya@burstcreations.com"}, {"username": "sboudrias", "email": "admin@simonboudrias.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/knownasilya/cli-width.git"}, "links": {"npm": "https://www.npmjs.com/package/cli-width", "homepage": "https://github.com/knownasilya/cli-width", "repository": "https://github.com/knownasilya/cli-width", "bugs": "https://github.com/knownasilya/cli-width/issues"}, "license": "ISC", "devDependencies": {"coveralls": "^2.11.4", "isparta": "^3.0.4", "rimraf": "^2.4.3", "standard-version": "^4.2.0", "tap-spec": "^4.1.0", "tape": "^3.4.0"}, "releases": [{"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2018-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "cli-width\n=========\n\nGet stdout window width, with four fallbacks, `tty`, `output.columns`, a custom environment variable and then a default.\n\n[![npm version](https://badge.fury.io/js/cli-width.svg)](http://badge.fury.io/js/cli-width)\n[![Build Status](https://travis-ci.org/knownasilya/cli-width.svg)](https://travis-ci.org/knownasilya/cli-width)\n[![Coverage Status](https://coveralls.io/repos/knownasilya/cli-width/badge.svg?branch=master&service=github)](https://coveralls.io/github/knownasilya/cli-width?branch=master)\n\n## Usage\n\n```\nnpm install --save cli-width\n```\n\n```js\n'use strict';\n\nvar cliWidth = require('cli-width');\n\ncliWidth(); // maybe 204 :)\n```\n\nYou can also set the `CLI_WIDTH` environment variable.\n\nIf none of the methods are supported, and the environment variable isn't set,\nthe default width value is going to be `0`, that can be changed using the configurable `options`.\n\n## API\n\n### cliWidth([options])\n\n`cliWidth` can be configured using an `options` parameter, the possible properties are:\n\n- **defaultWidth**\\<number\\> Defines a default value to be used if none of the methods are available, defaults to `0`\n- **output**\\<object\\> A stream to be used to read width values from, defaults to `process.stdout`\n- **tty**\\<object\\> TTY module to try to read width from as a fallback, defaults to `require('tty')`\n\n\n### Examples\n\nDefining both a default width value and a stream output to try to read from:\n\n```js\nvar cliWidth = require('cli-width');\nvar ttys = require('ttys');\n\ncliWidth({\n  defaultWidth: 80,\n  output: ttys.output\n});\n```\n\nDefines a different tty module to read width from:\n\n```js\nvar cliWidth = require('cli-width');\nvar ttys = require('ttys');\n\ncliWidth({\n  tty: ttys\n});\n```\n\n## Tests\n\n```bash\nnpm install\nnpm test\n```\n\nCoverage can be generated with `npm run coverage`."}, "npm": {"downloads": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 1649658}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 8732322}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 34978150}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 99055317}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 194324330}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 361147520}], "dependentsCount": 78, "starsCount": 1}, "github": {"starsCount": 20, "forksCount": 5, "subscribersCount": 1, "issues": {"count": 13, "openCount": 1, "distribution": {"3600": 2, "10800": 2, "32400": 1, "97200": 4, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 2, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "Ginden", "commitsCount": 1}, {"username": "dawsbot", "commitsCount": 1}, {"username": "eistaa", "commitsCount": 1}, {"username": "mkillianey", "commitsCount": 1}, {"username": "ruyadorno", "commitsCount": 1}], "commits": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1815, "testsSize": 2935, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/knownasilya/cli-width.svg", "service": "https://api.travis-ci.org/knownasilya/cli-width.svg", "shields": "https://img.shields.io/travis/knownasilya/cli-width.svg", "content": "https://img.shields.io/travis/knownasilya/cli-width.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/knownasilya/cli-width/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/knownasilya/cli-width/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/knownasilya/cli-width/master.svg", "content": "https://img.shields.io/coveralls/knownasilya/cli-width/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 32, "downloadsCount": 33018439, "downloadsAcceleration": 66656.85597412474, "dependentsCount": 78}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8168891124701883, "detail": {"quality": 0.9787377884089109, "popularity": 0.4951611257661933, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-01T22:14:34.143Z", "collected": {"metadata": {"name": "collection-visit", "scope": "unscoped", "version": "1.0.0", "description": "Visit a method over the items in an object, or map visit over the objects in an array.", "keywords": ["array", "arrays", "collection", "context", "function", "helper", "invoke", "key", "map", "method", "object", "objects", "value", "visit", "visitor"], "date": "2017-04-09T22:00:31.200Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "email": "brian.woodward@gmail.com", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/collection-visit.git"}, "links": {"npm": "https://www.npmjs.com/package/collection-visit", "homepage": "https://github.com/jonschlinkert/collection-visit", "repository": "https://github.com/jonschlinkert/collection-visit", "bugs": "https://github.com/jonschlinkert/collection-visit/issues"}, "license": "MIT", "dependencies": {"map-visit": "^1.0.0", "object-visit": "^1.0.0"}, "devDependencies": {"clone-deep": "^0.2.4", "gulp": "^3.9.1", "gulp-eslint": "^3.0.1", "gulp-format-md": "^0.1.12", "gulp-istanbul": "^1.1.1", "gulp-mocha": "^3.0.0", "mocha": "^3.2.0"}, "releases": [{"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2018-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# collection-visit [![NPM version](https://img.shields.io/npm/v/collection-visit.svg?style=flat)](https://www.npmjs.com/package/collection-visit) [![NPM monthly downloads](https://img.shields.io/npm/dm/collection-visit.svg?style=flat)](https://npmjs.org/package/collection-visit)  [![NPM total downloads](https://img.shields.io/npm/dt/collection-visit.svg?style=flat)](https://npmjs.org/package/collection-visit) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/collection-visit.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/collection-visit)\n\n> Visit a method over the items in an object, or map visit over the objects in an array.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save collection-visit\n```\n\n## Usage\n\n```js\nvar visit = require('collection-visit');\n\nvar ctx = {\n  data: {},\n  set: function (key, value) {\n    if (typeof key === 'object') {\n      visit(ctx, 'set', key);\n    } else {\n      ctx.data[key] = value;\n    }\n  }\n};\n\nctx.set('a', 'a');\nctx.set('b', 'b');\nctx.set('c', 'c');\nctx.set({d: {e: 'f'}});\n\nconsole.log(ctx.data);\n//=> {a: 'a', b: 'b', c: 'c', d: { e: 'f' }};\n```\n\n## About\n\n### Related projects\n\n* [base-methods](https://www.npmjs.com/package/base-methods): base-methods is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting\u2026 [more](https://github.com/jonschlinkert/base-methods) | [homepage](https://github.com/jonschlinkert/base-methods \"base-methods is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting with a handful of common methods, like `set`, `get`, `del` and `use`.\")\n* [map-visit](https://www.npmjs.com/package/map-visit): Map `visit` over an array of objects. | [homepage](https://github.com/jonschlinkert/map-visit \"Map `visit` over an array of objects.\")\n* [object-visit](https://www.npmjs.com/package/object-visit): Call a specified method on each value in the given object. | [homepage](https://github.com/jonschlinkert/object-visit \"Call a specified method on each value in the given object.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 13 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 9 | [doowb](https://github.com/doowb) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.5.0, on April 09, 2017._"}, "npm": {"downloads": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1615758}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 9539904}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 39204780}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 109526291}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 217598590}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 405042550}], "dependentsCount": 48, "starsCount": 0}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 15, "forksCount": 0, "subscribersCount": 3, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 17}, {"username": "doowb", "commitsCount": 8}], "commits": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3439, "testsSize": 2063}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/collection-visit.svg?style=flat", "shields": "https://img.shields.io/npm/v/collection-visit.svg", "content": "https://img.shields.io/npm/v/collection-visit.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/collection-visit.svg?style=flat", "shields": "https://img.shields.io/npm/dm/collection-visit.svg", "content": "https://img.shields.io/npm/dm/collection-visit.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/collection-visit.svg?style=flat", "shields": "https://img.shields.io/npm/dt/collection-visit.svg", "content": "https://img.shields.io/npm/dt/collection-visit.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/collection-visit.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/collection-visit.svg", "shields": "https://img.shields.io/travis/jonschlinkert/collection-visit.svg", "content": "https://img.shields.io/travis/jonschlinkert/collection-visit.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 20, "downloadsCount": 36508763.666666664, "downloadsAcceleration": 74073.95566971076, "dependentsCount": 48}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8099866092862036, "detail": {"quality": 0.9691397075145873, "popularity": 0.48361743697834836, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-22T02:21:07.530Z", "collected": {"metadata": {"name": "color-convert", "scope": "unscoped", "version": "2.0.1", "description": "Plain color conversion functions", "keywords": ["color", "colour", "convert", "converter", "conversion", "rgb", "hsl", "hsv", "hwb", "cmyk", "ansi", "ansi16"], "date": "2019-08-19T21:05:36.605Z", "author": {"name": "Heather Arthur", "email": "fayearthur@gmail.com"}, "publisher": {"username": "qix", "email": "i.am.qix@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/Qix-/color-convert.git"}, "links": {"npm": "https://www.npmjs.com/package/color-convert", "homepage": "https://github.com/Qix-/color-convert#readme", "repository": "https://github.com/Qix-/color-convert", "bugs": "https://github.com/Qix-/color-convert/issues"}, "license": "MIT", "dependencies": {"color-name": "~1.1.4"}, "devDependencies": {"chalk": "^2.4.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100);             // [96, 48, 59]\nconvert.keyword.rgb('blue');                // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels;     // 3\nvar cmykChannels = convert.cmyk.channels;   // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF');         // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF');     // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4);     // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67);      // '7B2D43'\nconvert.rgb.hex([123, 45, 67]);    // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3267685}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 19378482}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 79829844}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 193521321}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 356433896}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 630140929}], "dependentsCount": 253, "starsCount": 11}, "github": {"starsCount": 445, "forksCount": 78, "subscribersCount": 5, "issues": {"count": 78, "openCount": 12, "distribution": {"3600": 7, "10800": 10, "32400": 3, "97200": 12, "291600": 8, "874800": 2, "2624400": 3, "7873200": 9, "23619600": 14, "70858800": 10, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "Qix-", "commitsCount": 60}, {"username": "harthur", "commitsCount": 20}, {"username": "MoOx", "commitsCount": 6}, {"username": "dy", "commitsCount": 5}, {"username": "bluej100", "commitsCount": 2}, {"username": "realityking", "commitsCount": 2}, {"username": "Ignigena", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "TorbenKoehn", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "ZuBB", "commitsCount": 1}, {"username": "ben-eb", "commitsCount": 1}, {"username": "georgezzhang", "commitsCount": 1}, {"username": "ianstormtaylor", "commitsCount": 1}, {"username": "joshuacoles", "commitsCount": 1}, {"username": "klamping", "commitsCount": 1}, {"username": "mattbasta", "commitsCount": 1}, {"username": "oclyke", "commitsCount": 1}, {"username": "saabi", "commitsCount": 1}, {"username": "sebdeckers", "commitsCount": 1}, {"username": "silverwind", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}, {"username": "zbarbuto", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2853, "testsSize": 11667, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/Qix-/color-convert.svg?branch=master", "service": "https://api.travis-ci.org/Qix-/color-convert.svg?branch=master", "shields": "https://img.shields.io/travis/Qix-/color-convert/master.svg", "content": "https://img.shields.io/travis/Qix-/color-convert/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 563, "downloadsCount": 64507107, "downloadsAcceleration": 297089.0257229832, "dependentsCount": 253}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8587936273741477, "detail": {"quality": 0.9647581114327594, "popularity": 0.6268708914713501, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-01-31T12:56:29.108Z", "collected": {"metadata": {"name": "color-name", "scope": "unscoped", "version": "1.1.4", "description": "A list of color names and its values", "keywords": ["color-name", "color", "color-keyword", "keyword"], "date": "2018-09-21T10:48:56.546Z", "author": {"name": "DY", "email": "dfcreative@gmail.com"}, "publisher": {"username": "dfcreative", "email": "df.creative@gmail.com"}, "maintainers": [{"username": "dfcreative", "email": "df.creative@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/colorjs/color-name.git"}, "links": {"npm": "https://www.npmjs.com/package/color-name", "homepage": "https://github.com/colorjs/color-name", "repository": "https://github.com/colorjs/color-name", "bugs": "https://github.com/colorjs/color-name/issues"}, "license": "MIT", "releases": [{"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2018-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "A JSON with color names and its values. Based on http://dev.w3.org/csswg/css-color/#named-colors.\r\n\r\n[![NPM](https://nodei.co/npm/color-name.png?mini=true)](https://nodei.co/npm/color-name/)\r\n\r\n\r\n```js\r\nvar colors = require('color-name');\r\ncolors.red //[255,0,0]\r\n```\r\n\r\n<a href=\"LICENSE\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0c/MIT_logo.svg\" width=\"120\"/></a>"}, "npm": {"downloads": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 3372575}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 17581422}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 68555368}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 187573106}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 356362369}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 640526221}], "dependentsCount": 103, "starsCount": 0}, "github": {"starsCount": 45, "forksCount": 18, "subscribersCount": 3, "issues": {"count": 15, "openCount": 0, "distribution": {"3600": 7, "10800": 2, "32400": 1, "97200": 2, "291600": 2, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "dy", "commitsCount": 21}, {"username": "hirejohnsalcedo", "commitsCount": 2}, {"username": "Jameskmonger", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "sebdeckers", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}], "commits": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 373, "testsSize": 164}, "badges": [{"urls": {"original": "https://nodei.co/npm/color-name.png?mini=true", "shields": "https://img.shields.io/npm/v/color-name.svg", "content": "https://img.shields.io/npm/v/color-name.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.89435, "tests": 0.24599999999999997, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 72, "downloadsCount": 62524368.666666664, "downloadsAcceleration": 188809.2886035007, "dependentsCount": 103}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9815320211038961}}, "score": {"final": 0.7915651133865447, "detail": {"quality": 0.8311089366906598, "popularity": 0.5492969527176981, "maintenance": 0.9999385683661501}}}
{"analyzedAt": "2020-03-03T05:35:52.665Z", "collected": {"metadata": {"name": "commander", "scope": "unscoped", "version": "4.1.1", "description": "the complete solution for node.js command-line programs", "keywords": ["commander", "command", "option", "parser"], "date": "2020-02-03T06:15:56.861Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "abetomo", "email": "abe@enzou.tokyo"}, "maintainers": [{"username": "abetomo", "email": "abe@enzou.tokyo"}, {"username": "shadowspawn", "email": "npm_j@ruru.gen.nz"}, {"username": "somekittens", "email": "rkoutnik@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "vanesyan", "email": "romain.vanesyan@gmail.com"}, {"username": "zhiyelee", "email": "zhiyelee@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/tj/commander.js.git"}, "links": {"npm": "https://www.npmjs.com/package/commander", "homepage": "https://github.com/tj/commander.js#readme", "repository": "https://github.com/tj/commander.js", "bugs": "https://github.com/tj/commander.js/issues"}, "license": "MIT", "devDependencies": {"@types/jest": "^24.0.23", "@types/node": "^12.12.11", "eslint": "^6.7.0", "eslint-plugin-jest": "^22.21.0", "jest": "^24.8.0", "standard": "^14.3.1", "typescript": "^3.7.2"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 6}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 14}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 18}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 25}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 7001771}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 39278170}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 160188324}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 419594642}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 816962741}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1491543295}], "dependentsCount": 36318, "starsCount": 1011}, "github": {"starsCount": 17252, "forksCount": 1207, "subscribersCount": 241, "issues": {"count": 1202, "openCount": 35, "distribution": {"3600": 133, "10800": 60, "32400": 78, "97200": 111, "291600": 75, "874800": 72, "2624400": 103, "7873200": 93, "23619600": 102, "70858800": 181, "212576400": 194}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 142}, {"username": "shadowspawn", "commitsCount": 117}, {"username": "zhiyelee", "commitsCount": 76}, {"username": "abetomo", "commitsCount": 44}, {"username": "tonylukasavage", "commitsCount": 9}, {"username": "mojavelinux", "commitsCount": 8}, {"username": "alan-agius4", "commitsCount": 6}, {"username": "jaredpetersen", "commitsCount": 6}, {"username": "itay", "commitsCount": 5}, {"username": "Mithgol", "commitsCount": 4}, {"username": "focusaurus", "commitsCount": 4}, {"username": "oGsLP", "commitsCount": 4}, {"username": "sebastiendb", "commitsCount": 4}, {"username": "banli17", "commitsCount": 3}, {"username": "felixge", "commitsCount": 3}, {"username": "jamesgeorge007", "commitsCount": 3}, {"username": "kira1928", "commitsCount": 3}, {"username": "sorohan", "commitsCount": 3}, {"username": "tandrewnichols", "commitsCount": 3}, {"username": "thethomaseffect", "commitsCount": 3}, {"username": "AlphaHydrae", "commitsCount": 2}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "Globegitter", "commitsCount": 2}, {"username": "JustATrick", "commitsCount": 2}, {"username": "Quentin01", "commitsCount": 2}, {"username": "SomeKittens", "commitsCount": 2}, {"username": "ajfranzoia", "commitsCount": 2}, {"username": "codyj110", "commitsCount": 2}, {"username": "jhamlet", "commitsCount": 2}, {"username": "karfau", "commitsCount": 2}, {"username": "miyajan", "commitsCount": 2}, {"username": "noway", "commitsCount": 2}, {"username": "pRizz", "commitsCount": 2}, {"username": "palanik", "commitsCount": 2}, {"username": "rrthomas", "commitsCount": 2}, {"username": "usmonster", "commitsCount": 2}, {"username": "viniciusls", "commitsCount": 2}, {"username": "yausername", "commitsCount": 2}, {"username": "zce", "commitsCount": 2}, {"username": "zxqfox", "commitsCount": 2}, {"username": "AMoreaux", "commitsCount": 1}, {"username": "ForJing", "commitsCount": 1}, {"username": "HakurouKen", "commitsCount": 1}, {"username": "KillWolfVlad", "commitsCount": 1}, {"username": "ManoelLobo", "commitsCount": 1}, {"username": "MarshallOfSound", "commitsCount": 1}, {"username": "Nepomuceno", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "TheRoSS", "commitsCount": 1}, {"username": "TheToolbox", "commitsCount": 1}, {"username": "ThomasSimoens", "commitsCount": 1}, {"username": "ValentinTrinque", "commitsCount": 1}, {"username": "Willv19", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "akvamalin", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "blair", "commitsCount": 1}, {"username": "bodinsamuel", "commitsCount": 1}, {"username": "buerkle", "commitsCount": 1}, {"username": "bzoz", "commitsCount": 1}, {"username": "c-geek", "commitsCount": 1}, {"username": "chdh", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chengkungui", "commitsCount": 1}, {"username": "chengluyu", "commitsCount": 1}, {"username": "ciceropablo", "commitsCount": 1}, {"username": "claylo", "commitsCount": 1}, {"username": "daevidpreis", "commitsCount": 1}, {"username": "deepakpathania", "commitsCount": 1}, {"username": "djulien", "commitsCount": 1}, {"username": "eduardbadillo", "commitsCount": 1}, {"username": "ffflorian", "commitsCount": 1}, {"username": "grant", "commitsCount": 1}, {"username": "hxsf", "commitsCount": 1}, {"username": "idmontie", "commitsCount": 1}, {"username": "ignacioiglesias", "commitsCount": 1}, {"username": "jamesr73", "commitsCount": 1}, {"username": "jayphelps", "commitsCount": 1}, {"username": "jsamr", "commitsCount": 1}, {"username": "junajan", "commitsCount": 1}, {"username": "malthejorgensen", "commitsCount": 1}, {"username": "monkeym4ster", "commitsCount": 1}, {"username": "nazieb", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "pbnj", "commitsCount": 1}, {"username": "prokopsimek", "commitsCount": 1}, {"username": "radiovisual", "commitsCount": 1}, {"username": "reviewher", "commitsCount": 1}, {"username": "revington", "commitsCount": 1}, {"username": "rike422", "commitsCount": 1}, {"username": "simeg", "commitsCount": 1}, {"username": "snow01", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "sunorry", "commitsCount": 1}, {"username": "tugrul", "commitsCount": 1}, {"username": "twk-b", "commitsCount": 1}, {"username": "xcatliu", "commitsCount": 1}, {"username": "yanick", "commitsCount": 1}, {"username": "ycmjason", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 24}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 74}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 154}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 99163, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "standard"], "coverage": 0.79}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.9684999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 19811, "downloadsCount": 139864880.66666666, "downloadsAcceleration": 426363.180460426, "dependentsCount": 36318}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9896301369863014, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8178869979375873, "detail": {"quality": 0.8419895823278594, "popularity": 0.9484479842153731, "maintenance": 0.6666666536109974}}}
{"analyzedAt": "2020-02-10T21:34:48.688Z", "collected": {"metadata": {"name": "component-emitter", "scope": "unscoped", "version": "1.3.0", "description": "Event emitter", "date": "2019-04-15T20:48:08.367Z", "publisher": {"username": "nami-doc", "email": "vendethiel@hotmail.fr"}, "maintainers": [{"username": "amasad", "email": "amjad.masad@gmail.com"}, {"username": "anthonyshort", "email": "antshort@gmail.com"}, {"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "calvinfo", "email": "calvin@calv.info"}, {"username": "clintwood", "email": "clint@anotherway.co.za"}, {"username": "coreh", "email": "thecoreh@gmail.com"}, {"username": "cristiandouce", "email": "cristiandouce@gmail.com"}, {"username": "defunctzombie", "email": "shtylman@gmail.com"}, {"username": "dfcreative", "email": "df.creative@gmail.com"}, {"username": "dominicbarnes", "email": "dominic@dbarnes.info"}, {"username": "forbeslindesay", "email": "forbes@lindesay.co.uk"}, {"username": "hughsk", "email": "hughskennedy@gmail.com"}, {"username": "ianstormtaylor", "email": "ian@ianstormtaylor.com"}, {"username": "jonathanong", "email": "jonathanrichardong@gmail.com"}, {"username": "jongleberry", "email": "jonathanrichardong@gmail.com"}, {"username": "juliangruber", "email": "julian@juliangruber.com"}, {"username": "kelonye", "email": "kelonyemitchel@gmail.com"}, {"username": "mattmueller", "email": "mattmuelle@gmail.com"}, {"username": "nami-doc", "email": "vendethiel@hotmail.fr"}, {"username": "queckezz", "email": "fabian.eichenberger@gmail.com"}, {"username": "rauchg", "email": "rauchg@gmail.com"}, {"username": "retrofox", "email": "rdsuarez@gmail.com"}, {"username": "stagas", "email": "gstagas@gmail.com"}, {"username": "stephenmathieson", "email": "me@stephenmathieson.com"}, {"username": "swatinem", "email": "arpad.borsos@googlemail.com"}, {"username": "thehydroimpulse", "email": "dnfagnan@gmail.com"}, {"username": "timaschew", "email": "timaschew@gmail.com"}, {"username": "timoxley", "email": "secoif@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "tootallnate", "email": "nathan@tootallnate.net"}, {"username": "trevorgerhardt", "email": "trevorgerhardt@gmail.com"}, {"username": "yields", "email": "yields@icloud.com"}], "repository": {"type": "git", "url": "git+https://github.com/component/emitter.git"}, "links": {"npm": "https://www.npmjs.com/package/component-emitter", "homepage": "https://github.com/component/emitter#readme", "repository": "https://github.com/component/emitter", "bugs": "https://github.com/component/emitter/issues"}, "license": "MIT", "devDependencies": {"mocha": "*", "should": "*"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Emitter [![Build Status](https://travis-ci.org/component/emitter.png)](https://travis-ci.org/component/emitter)\r\n\r\n  Event emitter component.\r\n\r\n## Installation\r\n\r\n```\r\n$ component install component/emitter\r\n```\r\n\r\n## API\r\n\r\n### Emitter(obj)\r\n\r\n  The `Emitter` may also be used as a mixin. For example\r\n  a \"plain\" object may become an emitter, or you may\r\n  extend an existing prototype.\r\n\r\n  As an `Emitter` instance:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nvar emitter = new Emitter;\r\nemitter.emit('something');\r\n```\r\n\r\n  As a mixin:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nvar user = { name: 'tobi' };\r\nEmitter(user);\r\n\r\nuser.emit('im a user');\r\n```\r\n\r\n  As a prototype mixin:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nEmitter(User.prototype);\r\n```\r\n\r\n### Emitter#on(event, fn)\r\n\r\n  Register an `event` handler `fn`.\r\n\r\n### Emitter#once(event, fn)\r\n\r\n  Register a single-shot `event` handler `fn`,\r\n  removed immediately after it is invoked the\r\n  first time.\r\n\r\n### Emitter#off(event, fn)\r\n\r\n  * Pass `event` and `fn` to remove a listener.\r\n  * Pass `event` to remove all listeners on that event.\r\n  * Pass nothing to remove all listeners on all events.\r\n\r\n### Emitter#emit(event, ...)\r\n\r\n  Emit an `event` with variable option args.\r\n\r\n### Emitter#listeners(event)\r\n\r\n  Return an array of callbacks, or an empty array.\r\n\r\n### Emitter#hasListeners(event)\r\n\r\n  Check if this emitter has `event` handlers.\r\n\r\n## License\r\n\r\nMIT"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 681429}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 14471379}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 57229049}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 160223292}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 319099789}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 582476746}], "dependentsCount": 432, "starsCount": 7}, "github": {"starsCount": 493, "forksCount": 103, "subscribersCount": 18, "issues": {"count": 87, "openCount": 11, "distribution": {"3600": 13, "10800": 2, "32400": 12, "97200": 5, "291600": 4, "874800": 6, "2624400": 5, "7873200": 8, "23619600": 7, "70858800": 10, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 35}, {"username": "TooTallNate", "commitsCount": 6}, {"username": "jonathanong", "commitsCount": 6}, {"username": "vendethiel", "commitsCount": 3}, {"username": "juliangruber", "commitsCount": 2}, {"username": "rauchg", "commitsCount": 2}, {"username": "yields", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "HaykoKoryun", "commitsCount": 1}, {"username": "STRML", "commitsCount": 1}, {"username": "bripkens", "commitsCount": 1}, {"username": "btd", "commitsCount": 1}, {"username": "julienfouilhe", "commitsCount": 1}, {"username": "lusever", "commitsCount": 1}, {"username": "matthewmueller", "commitsCount": 1}, {"username": "michaelsanford", "commitsCount": 1}, {"username": "nkzawa", "commitsCount": 1}, {"username": "nulltask", "commitsCount": 1}, {"username": "rschmukler", "commitsCount": 1}, {"username": "stephenmathieson", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1372, "testsSize": 5627, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/component/emitter.png", "service": "https://api.travis-ci.org/component/emitter.svg", "shields": "https://img.shields.io/travis/component/emitter.svg", "content": "https://img.shields.io/travis/component/emitter.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 641, "downloadsCount": 53407764, "downloadsAcceleration": 122189.54237062403, "dependentsCount": 432}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8562684618212625, "detail": {"quality": 0.9483324248775872, "popularity": 0.6337352926532542, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-27T10:48:17.584Z", "collected": {"metadata": {"name": "concat-map", "scope": "unscoped", "version": "0.0.1", "description": "concatenative mapdashery", "keywords": ["concat", "concatMap", "map", "functional", "higher-order"], "date": "2014-01-30T03:06:35.982Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net", "username": "substack"}, "publisher": {"username": "substack", "email": "mail@substack.net"}, "maintainers": [{"username": "substack", "email": "mail@substack.net"}], "repository": {"type": "git", "url": "git://github.com/substack/node-concat-map.git"}, "links": {"npm": "https://www.npmjs.com/package/concat-map", "homepage": "https://github.com/substack/node-concat-map", "repository": "https://github.com/substack/node-concat-map", "bugs": "https://github.com/substack/node-concat-map/issues"}, "license": "MIT", "devDependencies": {"tape": "~2.4.0"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "concat-map\n==========\n\nConcatenative mapdashery.\n\n[![browser support](http://ci.testling.com/substack/node-concat-map.png)](http://ci.testling.com/substack/node-concat-map)\n\n[![build status](https://secure.travis-ci.org/substack/node-concat-map.png)](http://travis-ci.org/substack/node-concat-map)\n\nexample\n=======\n\n``` js\nvar concatMap = require('concat-map');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n```\n\n***\n\n```\n[ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]\n```\n\nmethods\n=======\n\n``` js\nvar concatMap = require('concat-map')\n```\n\nconcatMap(xs, fn)\n-----------------\n\nReturn an array of concatenated elements by calling `fn(x, i)` for each element\n`x` and each index `i` in the array `xs`.\n\nWhen `fn(x, i)` returns an array, its result will be concatenated with the\nresult array. If `fn(x, i)` returns anything else, that value will be pushed\nonto the end of the result array.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install concat-map\n```\n\nlicense\n=======\n\nMIT\n\nnotes\n=====\n\nThis module was written while sitting high above the ground in a tree."}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2599012}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 13553027}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 57326724}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 147569925}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 291143264}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 546651525}], "dependentsCount": 136, "starsCount": 3}, "github": {"starsCount": 29, "forksCount": 11, "subscribersCount": 4, "issues": {"count": 10, "openCount": 8, "distribution": {"3600": 0, "10800": 1, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 2, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 17}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}], "statuses": [{"context": "default", "state": "success"}]}, "source": {"files": {"readmeSize": 1165, "testsSize": 1075}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/node-concat-map.png", "service": "https://api.travis-ci.org/substack/node-concat-map.svg", "shields": "https://img.shields.io/travis/substack/node-concat-map.svg", "content": "https://img.shields.io/travis/substack/node-concat-map.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.355, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 48, "downloadsCount": 49189975, "downloadsAcceleration": 133250.63896499242, "dependentsCount": 136}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.19999999999999996, "issuesDistribution": 0}}, "score": {"final": 0.46553174987511736, "detail": {"quality": 0.8262027133723037, "popularity": 0.5391727788370536, "maintenance": 0.08274418077273583}}}
{"analyzedAt": "2020-02-01T12:45:19.084Z", "collected": {"metadata": {"name": "copy-descriptor", "scope": "unscoped", "version": "0.1.1", "description": "Copy a descriptor from object A to object B", "keywords": ["copy", "descriptor"], "date": "2016-06-09T18:32:05.080Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/copy-descriptor.git"}, "links": {"npm": "https://www.npmjs.com/package/copy-descriptor", "homepage": "https://github.com/jonschlinkert/copy-descriptor", "repository": "https://github.com/jonschlinkert/copy-descriptor", "bugs": "https://github.com/jonschlinkert/copy-descriptor/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^0.1.9", "mocha": "^2.5.3"}, "releases": [{"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2018-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# copy-descriptor [![NPM version](https://img.shields.io/npm/v/copy-descriptor.svg?style=flat)](https://www.npmjs.com/package/copy-descriptor) [![NPM downloads](https://img.shields.io/npm/dm/copy-descriptor.svg?style=flat)](https://npmjs.org/package/copy-descriptor) [![Build Status](https://img.shields.io/travis/jonschlinkert/copy-descriptor.svg?style=flat)](https://travis-ci.org/jonschlinkert/copy-descriptor)\n\nCopy a descriptor from object A to object B\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install copy-descriptor --save\n```\n\n## Usage\n\n```js\nvar copy = require('copy-descriptor');\n```\n\n## API\n\n### [copy](index.js#L50)\n\nCopy a descriptor from one object to another.\n\n**Params**\n\n* `receiver` **{Object}**: The target object\n* `provider` **{Object}**: The provider object\n* `from` **{String}**: The key to copy on provider.\n* `to` **{String}**: Optionally specify a new key name to use.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nfunction App() {\n  this.cache = {};\n}\nApp.prototype.set = function(key, val) {\n  this.cache[key] = val;\n  return this;\n};\nObject.defineProperty(App.prototype, 'count', {\n  get: function() {\n    return Object.keys(this.cache).length;\n  }\n});\n\ncopy(App.prototype, 'count', 'len');\n\n// create an instance\nvar app = new App();\n\napp.set('a', true);\napp.set('b', true);\napp.set('c', true);\n\nconsole.log(app.count);\n//=> 3\nconsole.log(app.len);\n//=> 3\n```\n\n## Related projects\n\nYou might also be interested in these projects:\n\n* [is-accessor-descriptor](https://www.npmjs.com/package/is-accessor-descriptor): Returns true if a value has the characteristics of a valid JavaScript accessor descriptor. | [homepage](https://github.com/jonschlinkert/is-accessor-descriptor \"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.\")\n* [is-data-descriptor](https://www.npmjs.com/package/is-data-descriptor): Returns true if a value has the characteristics of a valid JavaScript data descriptor. | [homepage](https://github.com/jonschlinkert/is-data-descriptor \"Returns true if a value has the characteristics of a valid JavaScript data descriptor.\")\n* [is-descriptor](https://www.npmjs.com/package/is-descriptor): Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for\u2026 [more](https://github.com/jonschlinkert/is-descriptor) | [homepage](https://github.com/jonschlinkert/is-descriptor \"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n\n## Contributing\n\nThis document was generated by [verb-readme-generator](https://github.com/verbose/verb-readme-generator) (a [verb](https://github.com/verbose/verb) generator), please don't edit directly. Any changes to the readme must be made in [.verb.md](.verb.md). See [Building Docs](#building-docs).\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Or visit the [verb-readme-generator](https://github.com/verbose/verb-readme-generator) project to submit bug reports or pull requests for the readme layout template.\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-readme-generator && verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/copy-descriptor/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on June 09, 2016._"}, "npm": {"downloads": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1608889}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 9498538}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 39116797}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 109198467}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 216795769}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 402720200}], "dependentsCount": 40, "starsCount": 0}, "github": {"starsCount": 9, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 7}], "commits": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1816}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/copy-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/v/copy-descriptor.svg", "content": "https://img.shields.io/npm/v/copy-descriptor.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/copy-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dm/copy-descriptor.svg", "content": "https://img.shields.io/npm/dm/copy-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/copy-descriptor.svg?style=flat", "service": "https://api.travis-ci.org/jonschlinkert/copy-descriptor.svg", "shields": "https://img.shields.io/travis/jonschlinkert/copy-descriptor.svg", "content": "https://img.shields.io/travis/jonschlinkert/copy-descriptor.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.27, "tests": 0.6, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 12, "downloadsCount": 36399489, "downloadsAcceleration": 75407.03620624053, "dependentsCount": 40}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.7, "issuesDistribution": 0.7}}, "score": {"final": 0.5674562992044206, "detail": {"quality": 0.7587159563212651, "popularity": 0.47425142974486645, "maintenance": 0.49672431970667963}}}
{"analyzedAt": "2020-02-23T05:44:56.198Z", "collected": {"metadata": {"name": "cross-spawn", "scope": "unscoped", "version": "7.0.1", "description": "Cross platform child_process#spawn and child_process#spawnSync", "keywords": ["spawn", "spawnSync", "windows", "cross-platform", "path-ext", "shebang", "cmd", "execute"], "date": "2019-10-07T09:17:51.547Z", "author": {"name": "Andr\u00e9 Cruz", "email": "andre@moxy.studio"}, "publisher": {"username": "satazor", "email": "andremiguelcruz@msn.com"}, "maintainers": [{"username": "satazor", "email": "andremiguelcruz@msn.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/moxystudio/node-cross-spawn.git"}, "links": {"npm": "https://www.npmjs.com/package/cross-spawn", "homepage": "https://github.com/moxystudio/node-cross-spawn", "repository": "https://github.com/moxystudio/node-cross-spawn", "bugs": "https://github.com/moxystudio/node-cross-spawn/issues"}, "license": "MIT", "dependencies": {"path-key": "^3.1.0", "shebang-command": "^2.0.0", "which": "^2.0.1"}, "devDependencies": {"@commitlint/cli": "^8.1.0", "@commitlint/config-conventional": "^8.1.0", "babel-core": "^6.26.3", "babel-jest": "^24.9.0", "babel-preset-moxy": "^3.1.0", "eslint": "^5.16.0", "eslint-config-moxy": "^7.1.0", "husky": "^3.0.5", "jest": "^24.9.0", "lint-staged": "^9.2.5", "mkdirp": "^0.5.1", "rimraf": "^3.0.0", "standard-version": "^7.0.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# cross-spawn\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Build status][appveyor-image]][appveyor-url] [![Coverage Status][codecov-image]][codecov-url] [![Dependency status][david-dm-image]][david-dm-url] [![Dev Dependency status][david-dm-dev-image]][david-dm-dev-url]\n\n[npm-url]:https://npmjs.org/package/cross-spawn\n[downloads-image]:http://img.shields.io/npm/dm/cross-spawn.svg\n[npm-image]:http://img.shields.io/npm/v/cross-spawn.svg\n[travis-url]:https://travis-ci.org/moxystudio/node-cross-spawn\n[travis-image]:http://img.shields.io/travis/moxystudio/node-cross-spawn/master.svg\n[appveyor-url]:https://ci.appveyor.com/project/satazor/node-cross-spawn\n[appveyor-image]:https://img.shields.io/appveyor/ci/satazor/node-cross-spawn/master.svg\n[codecov-url]:https://codecov.io/gh/moxystudio/node-cross-spawn\n[codecov-image]:https://img.shields.io/codecov/c/github/moxystudio/node-cross-spawn/master.svg\n[david-dm-url]:https://david-dm.org/moxystudio/node-cross-spawn\n[david-dm-image]:https://img.shields.io/david/moxystudio/node-cross-spawn.svg\n[david-dm-dev-url]:https://david-dm.org/moxystudio/node-cross-spawn?type=dev\n[david-dm-dev-image]:https://img.shields.io/david/dev/moxystudio/node-cross-spawn.svg\n\nA cross platform solution to node's spawn and spawnSync.\n\n\n## Installation\n\nNode.js version 8 and up:\n`$ npm install cross-spawn`\n\nNode.js version 7 and under:\n`$ npm install cross-spawn@6`\n\n## Why\n\nNode has issues when using spawn on Windows:\n\n- It ignores [PATHEXT](https://github.com/joyent/node/issues/2318)\n- It does not support [shebangs](https://en.wikipedia.org/wiki/Shebang_(Unix))\n- Has problems running commands with [spaces](https://github.com/nodejs/node/issues/7367)\n- Has problems running commands with posix relative paths (e.g.: `./my-folder/my-executable`)\n- Has an [issue](https://github.com/moxystudio/node-cross-spawn/issues/82) with command shims (files in `node_modules/.bin/`), where arguments with quotes and parenthesis would result in [invalid syntax error](https://github.com/moxystudio/node-cross-spawn/blob/e77b8f22a416db46b6196767bcd35601d7e11d54/test/index.test.js#L149)\n- No `options.shell` support on node `<v4.8`\n\nAll these issues are handled correctly by `cross-spawn`.\nThere are some known modules, such as [win-spawn](https://github.com/ForbesLindesay/win-spawn), that try to solve this but they are either broken or provide faulty escaping of shell arguments.\n\n\n## Usage\n\nExactly the same way as node's [`spawn`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) or [`spawnSync`](https://nodejs.org/api/child_process.html#child_process_child_process_spawnsync_command_args_options), so it's a drop in replacement.\n\n\n```js\nconst spawn = require('cross-spawn');\n\n// Spawn NPM asynchronously\nconst child = spawn('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' });\n\n// Spawn NPM synchronously\nconst result = spawn.sync('npm', ['list', '-g', '-depth', '0'], { stdio: 'inherit' });\n```\n\n\n## Caveats\n\n### Using `options.shell` as an alternative to `cross-spawn`\n\nStarting from node `v4.8`, `spawn` has a `shell` option that allows you run commands from within a shell. This new option solves\nthe [PATHEXT](https://github.com/joyent/node/issues/2318) issue but:\n\n- It's not supported in node `<v4.8`\n- You must manually escape the command and arguments which is very error prone, specially when passing user input\n- There are a lot of other unresolved issues from the [Why](#why) section that you must take into account\n\nIf you are using the `shell` option to spawn a command in a cross platform way, consider using `cross-spawn` instead. You have been warned.\n\n### `options.shell` support\n\nWhile `cross-spawn` adds support for `options.shell` in node `<v4.8`, all of its enhancements are disabled.\n\nThis mimics the Node.js behavior. More specifically, the command and its arguments will not be automatically escaped nor shebang support will be offered. This is by design because if you are using `options.shell` you are probably targeting a specific platform anyway and you don't want things to get into your way.\n\n### Shebangs support\n\nWhile `cross-spawn` handles shebangs on Windows, its support is limited. More specifically, it just supports `#!/usr/bin/env <program>` where `<program>` must not contain any arguments.   \nIf you would like to have the shebang support improved, feel free to contribute via a pull-request.\n\nRemember to always test your code on Windows!\n\n\n## Tests\n\n`$ npm test`   \n`$ npm test -- --watch` during development\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php)."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1386780}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 29333603}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 121181935}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 320768466}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 621080206}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1129388022}], "dependentsCount": 3735, "starsCount": 49}, "github": {"starsCount": 686, "forksCount": 58, "subscribersCount": 24, "issues": {"count": 129, "openCount": 3, "distribution": {"3600": 19, "10800": 8, "32400": 7, "97200": 12, "291600": 12, "874800": 12, "2624400": 15, "7873200": 29, "23619600": 11, "70858800": 4, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "satazor", "commitsCount": 173}, {"username": "JamesMessinger", "commitsCount": 4}, {"username": "greenkeeper[bot]", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "johanneswuerbach", "commitsCount": 2}, {"username": "timdp", "commitsCount": 2}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "Siilwyn", "commitsCount": 1}, {"username": "andys8", "commitsCount": 1}, {"username": "claudiopro", "commitsCount": 1}, {"username": "ehmicky", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "knpwrs", "commitsCount": 1}, {"username": "typicode", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 12}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 15}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4724, "testsSize": 19792, "hasChangelog": true}, "badges": [{"urls": {"original": "http://img.shields.io/npm/dm/cross-spawn.svg", "shields": "https://img.shields.io/npm/dm/cross-spawn.svg", "content": "https://img.shields.io/npm/dm/cross-spawn.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "http://img.shields.io/npm/v/cross-spawn.svg", "shields": "https://img.shields.io/npm/v/cross-spawn.svg", "content": "https://img.shields.io/npm/v/cross-spawn.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/moxystudio/node-cross-spawn/master.svg", "service": "https://api.travis-ci.org/moxystudio/node-cross-spawn.svg?branch=master", "shields": "https://img.shields.io/travis/moxystudio/node-cross-spawn/master.svg", "content": "https://img.shields.io/travis/moxystudio/node-cross-spawn/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/satazor/node-cross-spawn/master.svg", "service": "https://ci.appveyor.com/api/projects/status/satazor/node-cross-spawn/branch/master", "shields": "https://img.shields.io/appveyor/ci/satazor/node-cross-spawn/master.svg", "content": "https://img.shields.io/appveyor/ci/satazor/node-cross-spawn/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/moxystudio/node-cross-spawn/master.svg", "service": "https://codecov.io/github/moxystudio/node-cross-spawn/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/moxystudio/node-cross-spawn/master.svg", "content": "https://img.shields.io/codecov/c/github/moxystudio/node-cross-spawn/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/moxystudio/node-cross-spawn.svg", "service": "https://david-dm.org/moxystudio/node-cross-spawn.svg", "shields": "https://img.shields.io/david/moxystudio/node-cross-spawn.svg", "content": "https://img.shields.io/david/moxystudio/node-cross-spawn.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/moxystudio/node-cross-spawn.svg", "service": "https://david-dm.org/moxystudio/node-cross-spawn/dev-status.svg", "shields": "https://img.shields.io/david/dev/moxystudio/node-cross-spawn.svg", "content": "https://img.shields.io/david/dev/moxystudio/node-cross-spawn.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["editorconfig", "eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 833, "downloadsCount": 106922822, "downloadsAcceleration": 325353.9761035007, "dependentsCount": 3735}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9125609860333718, "detail": {"quality": 0.9995172027272996, "popularity": 0.7506984093880988, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-22T12:10:23.501Z", "collected": {"metadata": {"name": "debug", "scope": "unscoped", "version": "4.1.1", "description": "small debugging utility", "keywords": ["debug", "log", "debugger"], "date": "2018-12-22T16:40:22.538Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "qix", "email": "i.am.qix@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "thebigredgeek", "email": "rhyneandrew@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "tootallnate", "email": "nathan@tootallnate.net"}], "contributors": [{"name": "Nathan Rajlich", "email": "nathan@tootallnate.net", "url": "http://n8.io"}, {"name": "Andrew Rhyne", "email": "rhyneandrew@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/visionmedia/debug.git"}, "links": {"npm": "https://www.npmjs.com/package/debug", "homepage": "https://github.com/visionmedia/debug#readme", "repository": "https://github.com/visionmedia/debug", "bugs": "https://github.com/visionmedia/debug/issues"}, "license": "MIT", "dependencies": {"ms": "^2.1.1"}, "devDependencies": {"@babel/cli": "^7.0.0", "@babel/core": "^7.0.0", "@babel/preset-env": "^7.0.0", "browserify": "14.4.0", "chai": "^3.5.0", "concurrently": "^3.1.0", "coveralls": "^3.0.2", "istanbul": "^0.4.5", "karma": "^3.0.0", "karma-chai": "^0.1.0", "karma-mocha": "^1.3.0", "karma-phantomjs-launcher": "^1.0.2", "mocha": "^5.2.0", "mocha-lcov-reporter": "^1.2.0", "rimraf": "^2.5.4", "xo": "^0.23.0"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)\n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nA tiny JavaScript debugging utility modelled after Node.js core's debugging\ntechnique. Works in Node.js and web browsers.\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample [_app.js_](./examples/node/app.js):\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %o', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample [_worker.js_](./examples/node/worker.js):\n\n```js\nvar a = require('debug')('worker:a')\n  , b = require('debug')('worker:b');\n\nfunction work() {\n  a('doing lots of uninteresting work');\n  setTimeout(work, Math.random() * 1000);\n}\n\nwork();\n\nfunction workb() {\n  b('doing some work');\n  setTimeout(workb, Math.random() * 2000);\n}\n\nworkb();\n```\n\nThe `DEBUG` environment variable is then used to enable these based on space or\ncomma-delimited names.\n\nHere are some examples:\n\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 04 pm\" src=\"https://user-images.githubusercontent.com/71256/29091703-a6302cdc-7c38-11e7-8304-7c0b3bc600cd.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 38 pm\" src=\"https://user-images.githubusercontent.com/71256/29091700-a62a6888-7c38-11e7-800b-db911291ca2b.png\">\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 25 pm\" src=\"https://user-images.githubusercontent.com/71256/29091701-a62ea114-7c38-11e7-826a-2692bedca740.png\">\n\n#### Windows command prompt notes\n\n##### CMD\n\nOn Windows the environment variable is set using the `set` command.\n\n```cmd\nset DEBUG=*,-not_this\n```\n\nExample:\n\n```cmd\nset DEBUG=* & node app.js\n```\n\n##### PowerShell (VS Code default)\n\nPowerShell uses different syntax to set environment variables.\n\n```cmd\n$env:DEBUG = \"*,-not_this\"\n```\n\nExample:\n\n```cmd\n$env:DEBUG='app';node app.js\n```\n\nThen, run the program to be debugged as usual.\n\nnpm script example:\n```js\n  \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",\n```\n\n## Namespace Colors\n\nEvery debug instance has a color generated for it based on its namespace name.\nThis helps when visually parsing the debug output to identify which debug instance\na debug line belongs to.\n\n#### Node.js\n\nIn Node.js, colors are enabled when stderr is a TTY. You also _should_ install\nthe [`supports-color`](https://npmjs.org/supports-color) module alongside debug,\notherwise debug will only use a small handful of basic colors.\n\n<img width=\"521\" src=\"https://user-images.githubusercontent.com/71256/29092181-47f6a9e6-7c3a-11e7-9a14-1928d8a711cd.png\">\n\n#### Web Browser\n\nColors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\noption. These are WebKit web inspectors, Firefox ([since version\n31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\nand the Firebug plugin for Firefox (any version).\n\n<img width=\"524\" src=\"https://user-images.githubusercontent.com/71256/29092033-b65f9f2e-7c39-11e7-8e32-f6f0d8e865c1.png\">\n\n\n## Millisecond diff\n\nWhen actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\n\nWhen stdout is not a TTY, `Date#toISOString()` is used, making it more useful for logging the debug information as shown below:\n\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091956-6bd78372-7c39-11e7-8c55-c948396d6edd.png\">\n\n\n## Conventions\n\nIf you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".  If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable.  You can then use it for normal output as well as debug output.\n\n## Wildcards\n\nThe `*` character may be used as a wildcard. Suppose for example your library has\ndebuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\",\ninstead of listing all three with\n`DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do\n`DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\nYou can also exclude specific debuggers by prefixing them with a \"-\" character.\nFor example, `DEBUG=*,-connect:*` would include all debuggers except those\nstarting with \"connect:\".\n\n## Environment Variables\n\nWhen running through Node.js, you can set a few environment variables that will\nchange the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_HIDE_DATE` | Hide date from debug output (non-TTY).  |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth.                    |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n__Note:__ The environment variables beginning with `DEBUG_` end up being\nconverted into an Options object that gets used with `%o`/`%O` formatters.\nSee the Node.js documentation for\n[`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\nfor the complete list.\n\n## Formatters\n\nDebug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting.\nBelow are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n\n### Custom formatters\n\nYou can add custom formatters by extending the `debug.formatters` object.\nFor example, if you wanted to add support for rendering a Buffer as hex with\n`%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// \u2026elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n\n## Browser Support\n\nYou can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\nor just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\nif you don't want to build it yourself.\n\nDebug's enable state is currently persisted by `localStorage`.\nConsider the situation shown below where you have `worker:a` and `worker:b`,\nand wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample [_stdout.js_](./examples/node/stdout.js):\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n## Extend\nYou can simply extend debugger \n```js\nconst log = require('debug')('auth');\n\n//creates new debug instance with extended namespace\nconst logSign = log.extend('sign');\nconst logLogin = log.extend('login');\n\nlog('hello'); // auth hello\nlogSign('hello'); //auth:sign hello\nlogLogin('hello'); //auth:login hello\n```\n\n## Set dynamically\n\nYou can also enable debug dynamically by calling the `enable()` method :\n\n```js\nlet debug = require('debug');\n\nconsole.log(1, debug.enabled('test'));\n\ndebug.enable('test');\nconsole.log(2, debug.enabled('test'));\n\ndebug.disable();\nconsole.log(3, debug.enabled('test'));\n\n```\n\nprint :   \n```\n1 false\n2 true\n3 false\n```\n\nUsage :  \n`enable(namespaces)`  \n`namespaces` can include modes separated by a colon and wildcards.\n   \nNote that calling `enable()` completely overrides previously set DEBUG variable : \n\n```\n$ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))'\n=> false\n```\n\n`disable()`\n\nWill disable all namespaces. The functions returns the namespaces currently\nenabled (and skipped). This can be useful if you want to disable debugging\ntemporarily without knowing what was enabled to begin with.\n\nFor example:\n\n```js\nlet debug = require('debug');\ndebug.enable('foo:*,-foo:bar');\nlet namespaces = debug.disable();\ndebug.enable(namespaces);\n```\n\nNote: There is no guarantee that the string will be identical to the initial\nenable string, but semantically they will be identical.\n\n## Checking whether a debug target is enabled\n\nAfter you've created a debug instance, you can determine whether or not it is\nenabled by checking the `enabled` property:\n\n```javascript\nconst debug = require('debug')('http');\n\nif (debug.enabled) {\n  // do stuff...\n}\n```\n\nYou can also manually toggle this property to force the debug instance to be\nenabled or disabled.\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2017 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 9696373}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 58339953}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 252207788}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 670443547}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1320776448}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2419757751}], "dependentsCount": 25529, "starsCount": 700}, "github": {"starsCount": 8504, "forksCount": 718, "subscribersCount": 144, "issues": {"count": 743, "openCount": 39, "distribution": {"3600": 118, "10800": 40, "32400": 40, "97200": 49, "291600": 45, "874800": 57, "2624400": 61, "7873200": 76, "23619600": 105, "70858800": 140, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "TooTallNate", "commitsCount": 139}, {"username": "tj", "commitsCount": 67}, {"username": "thebigredgeek", "commitsCount": 38}, {"username": "Qix-", "commitsCount": 36}, {"username": "yamikuronue", "commitsCount": 16}, {"username": "anaisbetts", "commitsCount": 6}, {"username": "slaskis", "commitsCount": 5}, {"username": "dmarcelino", "commitsCount": 4}, {"username": "ossdev07", "commitsCount": 4}, {"username": "dougwilson", "commitsCount": 3}, {"username": "marmolejo", "commitsCount": 3}, {"username": "stephenmathieson", "commitsCount": 3}, {"username": "timoxley", "commitsCount": 3}, {"username": "vpulim", "commitsCount": 3}, {"username": "escwald", "commitsCount": 2}, {"username": "gscottolson", "commitsCount": 2}, {"username": "mooyoul", "commitsCount": 2}, {"username": "nopnop", "commitsCount": 2}, {"username": "sdaitzman", "commitsCount": 2}, {"username": "vkarpov15", "commitsCount": 2}, {"username": "zhuangya", "commitsCount": 2}, {"username": "AccaliaDeElementia", "commitsCount": 1}, {"username": "DanielOchoa", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "DevSide", "commitsCount": 1}, {"username": "DiegoRBaquero", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "EirikBirkeland", "commitsCount": 1}, {"username": "FantasticFiasco", "commitsCount": 1}, {"username": "ForsakenHarmony", "commitsCount": 1}, {"username": "HaykoKoryun", "commitsCount": 1}, {"username": "KlausTrainer", "commitsCount": 1}, {"username": "KyleStay", "commitsCount": 1}, {"username": "LucianBuzzo", "commitsCount": 1}, {"username": "MylesBorins", "commitsCount": 1}, {"username": "abenhamdine", "commitsCount": 1}, {"username": "alexey-pelykh", "commitsCount": 1}, {"username": "amir-s", "commitsCount": 1}, {"username": "andrzejdus", "commitsCount": 1}, {"username": "bnoordhuis", "commitsCount": 1}, {"username": "botverse", "commitsCount": 1}, {"username": "denouche", "commitsCount": 1}, {"username": "diedsmiling", "commitsCount": 1}, {"username": "dvicory", "commitsCount": 1}, {"username": "es128", "commitsCount": 1}, {"username": "exoticknight", "commitsCount": 1}, {"username": "febbraro", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "freewil", "commitsCount": 1}, {"username": "gimre", "commitsCount": 1}, {"username": "gorangajic", "commitsCount": 1}, {"username": "gtjoseph", "commitsCount": 1}, {"username": "hsiliev", "commitsCount": 1}, {"username": "hubdotcom", "commitsCount": 1}, {"username": "ibc", "commitsCount": 1}, {"username": "inca", "commitsCount": 1}, {"username": "jalleyne", "commitsCount": 1}, {"username": "jaredly", "commitsCount": 1}, {"username": "joaovieira", "commitsCount": 1}, {"username": "jochenberger", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "justmatt", "commitsCount": 1}, {"username": "kkirsche", "commitsCount": 1}, {"username": "kribblo", "commitsCount": 1}, {"username": "kwolfy", "commitsCount": 1}, {"username": "lchenay", "commitsCount": 1}, {"username": "leedm777", "commitsCount": 1}, {"username": "letharion", "commitsCount": 1}, {"username": "levithomason", "commitsCount": 1}, {"username": "lurch", "commitsCount": 1}, {"username": "lwolf", "commitsCount": 1}, {"username": "marbemac", "commitsCount": 1}, {"username": "matthewmueller", "commitsCount": 1}, {"username": "mattlyons0", "commitsCount": 1}, {"username": "mblarsen", "commitsCount": 1}, {"username": "medikoo", "commitsCount": 1}, {"username": "miaulightouch", "commitsCount": 1}, {"username": "miensol", "commitsCount": 1}, {"username": "mlucool", "commitsCount": 1}, {"username": "msasad", "commitsCount": 1}, {"username": "musikov", "commitsCount": 1}, {"username": "mykwillis", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "outsideris", "commitsCount": 1}, {"username": "panuhorsmalahti", "commitsCount": 1}, {"username": "pi0", "commitsCount": 1}, {"username": "piamancini", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "slavaGanzin", "commitsCount": 1}, {"username": "sorccu", "commitsCount": 1}, {"username": "tellnes", "commitsCount": 1}, {"username": "timaschew", "commitsCount": 1}, {"username": "timruffles", "commitsCount": 1}, {"username": "tomtomau", "commitsCount": 1}, {"username": "vgoma", "commitsCount": 1}, {"username": "vitalikpi", "commitsCount": 1}, {"username": "wryk", "commitsCount": 1}, {"username": "yields", "commitsCount": 1}, {"username": "zacronos", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 21551, "testsSize": 3301, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/visionmedia/debug.svg?branch=master", "service": "https://api.travis-ci.org/visionmedia/debug.svg?branch=master", "shields": "https://img.shields.io/travis/visionmedia/debug/master.svg", "content": "https://img.shields.io/travis/visionmedia/debug/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/visionmedia/debug/master.svg", "content": "https://img.shields.io/coveralls/visionmedia/debug/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "xo"], "coverage": 0.88}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.982, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 10166, "downloadsCount": 223481182.33333334, "downloadsAcceleration": 621406.6547945207, "dependentsCount": 25529}, "maintenance": {"releasesFrequency": 0.4222602739726028, "commitsFrequency": 0.25602739726027396, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8345596617261278, "detail": {"quality": 0.9927329445375813, "popularity": 0.9172789892721125, "maintenance": 0.6162632346274686}}}
{"analyzedAt": "2020-02-09T00:04:20.221Z", "collected": {"metadata": {"name": "decode-uri-component", "scope": "unscoped", "version": "0.2.0", "description": "A better decodeURIComponent", "keywords": ["decode", "uri", "component", "decodeuricomponent", "components", "decoder", "url"], "date": "2017-06-28T18:16:07.372Z", "author": {"name": "Sam Verschueren", "email": "sam.verschueren@gmail.com", "url": "github.com/SamVerschueren", "username": "samverschueren"}, "publisher": {"username": "samverschueren", "email": "sam.verschueren@gmail.com"}, "maintainers": [{"username": "samverschueren", "email": "sam.verschueren@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/samverschueren/decode-uri-component.git"}, "links": {"npm": "https://www.npmjs.com/package/decode-uri-component", "homepage": "https://github.com/samverschueren/decode-uri-component#readme", "repository": "https://github.com/samverschueren/decode-uri-component", "bugs": "https://github.com/samverschueren/decode-uri-component/issues"}, "license": "MIT", "devDependencies": {"ava": "^0.17.0", "coveralls": "^2.13.1", "nyc": "^10.3.2", "xo": "^0.16.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# decode-uri-component\n\n[![Build Status](https://travis-ci.org/SamVerschueren/decode-uri-component.svg?branch=master)](https://travis-ci.org/SamVerschueren/decode-uri-component) [![Coverage Status](https://coveralls.io/repos/SamVerschueren/decode-uri-component/badge.svg?branch=master&service=github)](https://coveralls.io/github/SamVerschueren/decode-uri-component?branch=master)\n\n> A better [decodeURIComponent](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)\n\n\n## Why?\n\n- Decodes `+` to a space.\n- Converts the [BOM](https://en.wikipedia.org/wiki/Byte_order_mark) to a [replacement character](https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character) `\ufffd`.\n- Does not throw with invalid encoded input.\n- Decodes as much of the string as possible.\n\n\n## Install\n\n```\n$ npm install --save decode-uri-component\n```\n\n\n## Usage\n\n```js\nconst decodeUriComponent = require('decode-uri-component');\n\ndecodeUriComponent('%25');\n//=> '%'\n\ndecodeUriComponent('%');\n//=> '%'\n\ndecodeUriComponent('st%C3%A5le');\n//=> 'st\u00e5le'\n\ndecodeUriComponent('%st%C3%A5le%');\n//=> '%st\u00e5le%'\n\ndecodeUriComponent('%%7Bst%C3%A5le%7D%');\n//=> '%{st\u00e5le}%'\n\ndecodeUriComponent('%7B%ab%%7C%de%%7D');\n//=> '{%ab%|%de%}'\n\ndecodeUriComponent('%FE%FF');\n//=> '\\uFFFD\\uFFFD'\n\ndecodeUriComponent('%C2');\n//=> '\\uFFFD'\n\ndecodeUriComponent('%C2%B5');\n//=> '\u00b5'\n```\n\n\n## API\n\n### decodeUriComponent(encodedURI)\n\n#### encodedURI\n\nType: `string`\n\nAn encoded component of a Uniform Resource Identifier.\n\n\n## License\n\nMIT \u00a9 [Sam Verschueren](https://github.com/SamVerschueren)"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 9640705}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 40617784}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 112186275}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 222554846}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 418984844}], "dependentsCount": 87, "starsCount": 0}, "github": {"starsCount": 95, "forksCount": 9, "subscribersCount": 3, "issues": {"count": 3, "openCount": 2, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "SamVerschueren", "commitsCount": 7}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 1605, "testsSize": 1142}, "badges": [{"urls": {"original": "https://travis-ci.org/SamVerschueren/decode-uri-component.svg?branch=master", "service": "https://api.travis-ci.org/SamVerschueren/decode-uri-component.svg?branch=master", "shields": "https://img.shields.io/travis/SamVerschueren/decode-uri-component/master.svg", "content": "https://img.shields.io/travis/SamVerschueren/decode-uri-component/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/SamVerschueren/decode-uri-component/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/SamVerschueren/decode-uri-component/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/SamVerschueren/decode-uri-component/master.svg", "content": "https://img.shields.io/coveralls/SamVerschueren/decode-uri-component/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 108, "downloadsCount": 37395425, "downloadsAcceleration": 73633.64501522074, "dependentsCount": 87}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0.12801369863013698, "openIssues": 0.33333333333333337, "issuesDistribution": 0}}, "score": {"final": 0.5330545246327831, "detail": {"quality": 0.9002836545764928, "popularity": 0.524087069336616, "maintenance": 0.22725415426291345}}}
{"analyzedAt": "2020-03-05T18:05:13.033Z", "collected": {"metadata": {"name": "deep-is", "scope": "unscoped", "version": "0.1.3", "description": "node's assert.deepEqual algorithm except for NaN being equal to NaN", "keywords": ["equality", "equal", "compare"], "date": "2014-08-24T20:02:55.885Z", "author": {"name": "Thorsten Lorenz", "email": "thlorenz@gmx.de", "url": "http://thlorenz.com", "username": "thlorenz"}, "publisher": {"username": "thlorenz", "email": "thlorenz@gmx.de"}, "maintainers": [{"username": "thlorenz", "email": "thlorenz@gmx.de"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/thlorenz/deep-is.git"}, "links": {"npm": "https://www.npmjs.com/package/deep-is", "homepage": "https://github.com/thlorenz/deep-is", "repository": "https://github.com/thlorenz/deep-is", "bugs": "https://github.com/thlorenz/deep-is/issues"}, "license": "MIT", "devDependencies": {"tape": "~1.0.2"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "deep-is\n==========\n\nNode's `assert.deepEqual() algorithm` as a standalone module. Exactly like\n[deep-equal](https://github.com/substack/node-deep-equal) except for the fact that `deepEqual(NaN, NaN) === true`.\n\nThis module is around [5 times faster](https://gist.github.com/2790507)\nthan wrapping `assert.deepEqual()` in a `try/catch`.\n\n[![browser support](http://ci.testling.com/thlorenz/deep-is.png)](http://ci.testling.com/thlorenz/deep-is)\n\n[![build status](https://secure.travis-ci.org/thlorenz/deep-is.png)](http://travis-ci.org/thlorenz/deep-is)\n\nexample\n=======\n\n``` js\nvar equal = require('deep-is');\nconsole.dir([\n    equal(\n        { a : [ 2, 3 ], b : [ 4 ] },\n        { a : [ 2, 3 ], b : [ 4 ] }\n    ),\n    equal(\n        { x : 5, y : [6] },\n        { x : 5, y : 6 }\n    )\n]);\n```\n\nmethods\n=======\n\nvar deepIs = require('deep-is')\n\ndeepIs(a, b)\n---------------\n\nCompare objects `a` and `b`, returning whether they are equal according to a\nrecursive equality algorithm.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install deep-is\n```\n\ntest\n====\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm test\n```\n\nlicense\n=======\n\nCopyright (c) 2012, 2013 Thorsten Lorenz <thlorenz@gmx.de>\nCopyright (c) 2012 James Halliday <mail@substack.net>\n\nDerived largely from node's assert module, which has the copyright statement:\n\nCopyright (c) 2009 Thomas Robinson <280north.com>\n\nReleased under the MIT license, see LICENSE for details."}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1907460}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 10268560}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 42907241}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 108177652}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 211452563}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 391361167}], "dependentsCount": 74, "starsCount": 1}, "github": {"forkOf": "inspect-js/node-deep-equal", "starsCount": 15, "forksCount": 3, "subscribersCount": 1, "issues": {"count": 7, "openCount": 3, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 2, "874800": 1, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 11}, {"username": "thlorenz", "commitsCount": 10}, {"username": "diocles", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci", "state": "error"}]}, "source": {"files": {"readmeSize": 1443, "testsSize": 1118}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/thlorenz/deep-is.png", "service": "https://api.travis-ci.org/thlorenz/deep-is.svg", "shields": "https://img.shields.io/travis/thlorenz/deep-is.svg", "content": "https://img.shields.io/travis/thlorenz/deep-is.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.355, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 23, "downloadsCount": 36059217.333333336, "downloadsAcceleration": 115133.2692732116, "dependentsCount": 74}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.6190476190476191, "issuesDistribution": 0}}, "score": {"final": 0.47001558545709143, "detail": {"quality": 0.790454143007422, "popularity": 0.5020526153896817, "maintenance": 0.16331693476707507}}}
{"analyzedAt": "2020-03-05T12:33:27.348Z", "collected": {"metadata": {"name": "define-property", "scope": "unscoped", "version": "2.0.2", "description": "Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty.", "keywords": ["define", "define-property", "enumerable", "key", "non", "non-enumerable", "object", "prop", "property", "value"], "date": "2018-01-26T20:24:22.283Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/define-property.git"}, "links": {"npm": "https://www.npmjs.com/package/define-property", "homepage": "https://github.com/jonschlinkert/define-property", "repository": "https://github.com/jonschlinkert/define-property", "bugs": "https://github.com/jonschlinkert/define-property/issues"}, "license": "MIT", "dependencies": {"is-descriptor": "^1.0.2", "isobject": "^3.0.1"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# define-property [![NPM version](https://img.shields.io/npm/v/define-property.svg?style=flat)](https://www.npmjs.com/package/define-property) [![NPM monthly downloads](https://img.shields.io/npm/dm/define-property.svg?style=flat)](https://npmjs.org/package/define-property) [![NPM total downloads](https://img.shields.io/npm/dt/define-property.svg?style=flat)](https://npmjs.org/package/define-property) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/define-property.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/define-property)\n\n> Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save define-property\n```\n\n## Release history\n\nSee [the CHANGELOG](changelog.md) for updates.\n\n## Usage\n\n**Params**\n\n* `object`: The object on which to define the property.\n* `key`: The name of the property to be defined or modified.\n* `value`: The value or descriptor of the property being defined or modified.\n\n```js\nvar define = require('define-property');\nvar obj = {};\ndefine(obj, 'foo', function(val) {\n  return val.toUpperCase();\n});\n\n// by default, defined properties are non-enumberable\nconsole.log(obj);\n//=> {}\n\nconsole.log(obj.foo('bar'));\n//=> 'BAR'\n```\n\n**defining setters/getters**\n\nPass the same properties you would if using [Object.defineProperty](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty) or [Reflect.defineProperty](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty).\n\n```js\ndefine(obj, 'foo', {\n  set: function() {},\n  get: function() {}\n});\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [assign-deep](https://www.npmjs.com/package/assign-deep): Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target\u2026 [more](https://github.com/jonschlinkert/assign-deep) | [homepage](https://github.com/jonschlinkert/assign-deep \"Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target (first) object.\")\n* [extend-shallow](https://www.npmjs.com/package/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util. | [homepage](https://github.com/jonschlinkert/extend-shallow \"Extend an object with the properties of additional objects. node.js/javascript util.\")\n* [merge-deep](https://www.npmjs.com/package/merge-deep): Recursively merge values in a javascript object. | [homepage](https://github.com/jonschlinkert/merge-deep \"Recursively merge values in a javascript object.\")\n* [mixin-deep](https://www.npmjs.com/package/mixin-deep): Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. | [homepage](https://github.com/jonschlinkert/mixin-deep \"Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 28 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [doowb](https://github.com/doowb) |\n\n### Author\n\n**Jon Schlinkert**\n\n* Connect with me on [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* Follow me on [github/jonschlinkert](https://github.com/jonschlinkert)\n* Follow me on [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on January 25, 2018._"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 6162757}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 33032928}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 140621285}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 360617734}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 718809616}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1362613522}], "dependentsCount": 126, "starsCount": 0}, "github": {"starsCount": 14, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 5, "openCount": 0, "distribution": {"3600": 1, "10800": 2, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 32}, {"username": "doowb", "commitsCount": 4}, {"username": "tibbon", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4826, "testsSize": 2748, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/define-property.svg?style=flat", "shields": "https://img.shields.io/npm/v/define-property.svg", "content": "https://img.shields.io/npm/v/define-property.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/define-property.svg?style=flat", "shields": "https://img.shields.io/npm/dm/define-property.svg", "content": "https://img.shields.io/npm/dm/define-property.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/define-property.svg?style=flat", "shields": "https://img.shields.io/npm/dt/define-property.svg", "content": "https://img.shields.io/npm/dt/define-property.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/define-property.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/define-property.svg", "shields": "https://img.shields.io/travis/jonschlinkert/define-property.svg", "content": "https://img.shields.io/travis/jonschlinkert/define-property.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}, "is-descriptor": {"required": "^1.0.2", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 21, "downloadsCount": 120205911.33333333, "downloadsAcceleration": 303596.8648021311, "dependentsCount": 126}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8178298894754841, "detail": {"quality": 0.917657372890308, "popularity": 0.5501545243399607, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-05T15:45:20.317Z", "collected": {"metadata": {"name": "diff", "scope": "unscoped", "version": "4.0.2", "description": "A javascript text diff implementation.", "keywords": ["diff", "javascript"], "date": "2020-01-13T04:49:04.133Z", "publisher": {"username": "kpdecker", "email": "kpdecker@gmail.com"}, "maintainers": [{"username": "kpdecker", "email": "kpdecker@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/kpdecker/jsdiff.git"}, "links": {"npm": "https://www.npmjs.com/package/diff", "homepage": "https://github.com/kpdecker/jsdiff#readme", "repository": "https://github.com/kpdecker/jsdiff", "bugs": "http://github.com/kpdecker/jsdiff/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@babel/cli": "^7.2.3", "@babel/core": "^7.2.2", "@babel/plugin-transform-modules-commonjs": "^7.2.0", "@babel/preset-env": "^7.2.3", "@babel/register": "^7.0.0", "babel-eslint": "^10.0.1", "babel-loader": "^8.0.5", "chai": "^4.2.0", "colors": "^1.3.3", "eslint": "^5.12.0", "grunt": "^1.0.3", "grunt-babel": "^8.0.0", "grunt-clean": "^0.4.0", "grunt-cli": "^1.3.2", "grunt-contrib-clean": "^2.0.0", "grunt-contrib-copy": "^1.0.0", "grunt-contrib-uglify": "^4.0.0", "grunt-contrib-watch": "^1.1.0", "grunt-eslint": "^21.0.0", "grunt-exec": "^3.0.0", "grunt-karma": "^3.0.1", "grunt-mocha-istanbul": "^5.0.2", "grunt-mocha-test": "^0.13.3", "grunt-webpack": "^3.1.3", "istanbul": "github:kpdecker/istanbul", "karma": "^3.1.4", "karma-chrome-launcher": "^2.2.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.0.0", "karma-sauce-launcher": "^2.0.2", "karma-sourcemap-loader": "^0.3.6", "karma-webpack": "^3.0.5", "mocha": "^5.2.0", "rollup": "^1.0.2", "rollup-plugin-babel": "^4.2.0", "semver": "^5.6.0", "webpack": "^4.28.3", "webpack-dev-server": "^3.1.14"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# jsdiff\n\n[![Build Status](https://secure.travis-ci.org/kpdecker/jsdiff.svg)](http://travis-ci.org/kpdecker/jsdiff)\n[![Sauce Test Status](https://saucelabs.com/buildstatus/jsdiff)](https://saucelabs.com/u/jsdiff)\n\nA javascript text differencing implementation.\n\nBased on the algorithm proposed in\n[\"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986)](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927).\n\n## Installation\n```bash\nnpm install diff --save\n```\n\n## API\n\n* `JsDiff.diffChars(oldStr, newStr[, options])` - diffs two blocks of text, comparing character by character.\n\n    Returns a list of change objects (See below).\n\n    Options\n    * `ignoreCase`: `true` to ignore casing difference. Defaults to `false`.\n\n* `JsDiff.diffWords(oldStr, newStr[, options])` - diffs two blocks of text, comparing word by word, ignoring whitespace.\n\n    Returns a list of change objects (See below).\n\n    Options\n    * `ignoreCase`: Same as in `diffChars`.\n\n* `JsDiff.diffWordsWithSpace(oldStr, newStr[, options])` - diffs two blocks of text, comparing word by word, treating whitespace as significant.\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.diffLines(oldStr, newStr[, options])` - diffs two blocks of text, comparing line by line.\n\n    Options\n    * `ignoreWhitespace`: `true` to ignore leading and trailing whitespace. This is the same as `diffTrimmedLines`\n    * `newlineIsToken`: `true` to treat newline characters as separate tokens.  This allows for changes to the newline structure to occur independently of the line content and to be treated as such. In general this is the more human friendly form of `diffLines` and `diffLines` is better suited for patches and other computer friendly output.\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.diffTrimmedLines(oldStr, newStr[, options])` - diffs two blocks of text, comparing line by line, ignoring leading and trailing whitespace.\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.diffSentences(oldStr, newStr[, options])` - diffs two blocks of text, comparing sentence by sentence.\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.diffCss(oldStr, newStr[, options])` - diffs two blocks of text, comparing CSS tokens.\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.diffJson(oldObj, newObj[, options])` - diffs two JSON objects, comparing the fields defined on each. The order of fields, etc does not matter in this comparison.\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.diffArrays(oldArr, newArr[, options])` - diffs two arrays, comparing each item for strict equality (===).\n\n    Options\n    * `comparator`: `function(left, right)` for custom equality checks\n\n    Returns a list of change objects (See below).\n\n* `JsDiff.createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader)` - creates a unified diff patch.\n\n    Parameters:\n    * `oldFileName` : String to be output in the filename section of the patch for the removals\n    * `newFileName` : String to be output in the filename section of the patch for the additions\n    * `oldStr` : Original string value\n    * `newStr` : New string value\n    * `oldHeader` : Additional information to include in the old file header\n    * `newHeader` : Additional information to include in the new file header\n    * `options` : An object with options. Currently, only `context` is supported and describes how many lines of context should be included.\n\n* `JsDiff.createPatch(fileName, oldStr, newStr, oldHeader, newHeader)` - creates a unified diff patch.\n\n    Just like JsDiff.createTwoFilesPatch, but with oldFileName being equal to newFileName.\n\n\n* `JsDiff.structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options)` - returns an object with an array of hunk objects.\n\n    This method is similar to createTwoFilesPatch, but returns a data structure\n    suitable for further processing. Parameters are the same as createTwoFilesPatch. The data structure returned may look like this:\n\n    ```js\n    {\n      oldFileName: 'oldfile', newFileName: 'newfile',\n      oldHeader: 'header1', newHeader: 'header2',\n      hunks: [{\n        oldStart: 1, oldLines: 3, newStart: 1, newLines: 3,\n        lines: [' line2', ' line3', '-line4', '+line5', '\\\\ No newline at end of file'],\n      }]\n    }\n    ```\n\n* `JsDiff.applyPatch(source, patch[, options])` - applies a unified diff patch.\n\n    Return a string containing new version of provided data. `patch` may be a string diff or the output from the `parsePatch` or `structuredPatch` methods.\n\n    The optional `options` object may have the following keys:\n\n    - `fuzzFactor`: Number of lines that are allowed to differ before rejecting a patch. Defaults to 0.\n    - `compareLine(lineNumber, line, operation, patchContent)`: Callback used to compare to given lines to determine if they should be considered equal when patching. Defaults to strict equality but may be overridden to provide fuzzier comparison. Should return false if the lines should be rejected.\n\n* `JsDiff.applyPatches(patch, options)` - applies one or more patches.\n\n    This method will iterate over the contents of the patch and apply to data provided through callbacks. The general flow for each patch index is:\n\n    - `options.loadFile(index, callback)` is called. The caller should then load the contents of the file and then pass that to the `callback(err, data)` callback. Passing an `err` will terminate further patch execution.\n    - `options.patched(index, content, callback)` is called once the patch has been applied. `content` will be the return value from `applyPatch`. When it's ready, the caller should call `callback(err)` callback. Passing an `err` will terminate further patch execution.\n\n    Once all patches have been applied or an error occurs, the `options.complete(err)` callback is made.\n\n* `JsDiff.parsePatch(diffStr)` - Parses a patch into structured data\n\n    Return a JSON object representation of the a patch, suitable for use with the `applyPatch` method. This parses to the same structure returned by `JsDiff.structuredPatch`.\n\n* `convertChangesToXML(changes)` - converts a list of changes to a serialized XML format\n\n\nAll methods above which accept the optional `callback` method will run in sync mode when that parameter is omitted and in async mode when supplied. This allows for larger diffs without blocking the event loop. This may be passed either directly as the final parameter or as the `callback` field in the `options` object.\n\n### Change Objects\nMany of the methods above return change objects. These objects consist of the following fields:\n\n* `value`: Text content\n* `added`: True if the value was inserted into the new string\n* `removed`: True if the value was removed from the old string\n\nNote that some cases may omit a particular flag field. Comparison on the flag fields should always be done in a truthy or falsy manner.\n\n## Examples\n\nBasic example in Node\n\n```js\nrequire('colors');\nvar jsdiff = require('diff');\n\nvar one = 'beep boop';\nvar other = 'beep boob blah';\n\nvar diff = jsdiff.diffChars(one, other);\n\ndiff.forEach(function(part){\n  // green for additions, red for deletions\n  // grey for common parts\n  var color = part.added ? 'green' :\n    part.removed ? 'red' : 'grey';\n  process.stderr.write(part.value[color]);\n});\n\nconsole.log();\n```\nRunning the above program should yield\n\n<img src=\"images/node_example.png\" alt=\"Node Example\">\n\nBasic example in a web page\n\n```html\n<pre id=\"display\"></pre>\n<script src=\"diff.js\"></script>\n<script>\nvar one = 'beep boop',\n    other = 'beep boob blah',\n    color = '',\n    span = null;\n\nvar diff = JsDiff.diffChars(one, other),\n    display = document.getElementById('display'),\n    fragment = document.createDocumentFragment();\n\ndiff.forEach(function(part){\n  // green for additions, red for deletions\n  // grey for common parts\n  color = part.added ? 'green' :\n    part.removed ? 'red' : 'grey';\n  span = document.createElement('span');\n  span.style.color = color;\n  span.appendChild(document\n    .createTextNode(part.value));\n  fragment.appendChild(span);\n});\n\ndisplay.appendChild(fragment);\n</script>\n```\n\nOpen the above .html file in a browser and you should see\n\n<img src=\"images/web_example.png\" alt=\"Node Example\">\n\n**[Full online demo](http://kpdecker.github.com/jsdiff)**\n\n## Compatibility\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/jsdiff.svg)](https://saucelabs.com/u/jsdiff)\n\njsdiff supports all ES3 environments with some known issues on IE8 and below. Under these browsers some diff algorithms such as word diff and others may fail due to lack of support for capturing groups in the `split` operation.\n\n## License\n\nSee [LICENSE](https://github.com/kpdecker/jsdiff/blob/master/LICENSE)."}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2212130}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 11788172}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 49444296}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 122873514}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 240767030}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 448368177}], "dependentsCount": 973, "starsCount": 77}, "github": {"starsCount": 4668, "forksCount": 323, "subscribersCount": 83, "issues": {"count": 280, "openCount": 86, "distribution": {"3600": 13, "10800": 15, "32400": 6, "97200": 13, "291600": 24, "874800": 29, "2624400": 35, "7873200": 32, "23619600": 26, "70858800": 40, "212576400": 47}, "isDisabled": false}, "contributors": [{"username": "kpdecker", "commitsCount": 226}, {"username": "piranna", "commitsCount": 19}, {"username": "papandreou", "commitsCount": 10}, {"username": "soulbeing", "commitsCount": 7}, {"username": "bittrance", "commitsCount": 6}, {"username": "bp-dev", "commitsCount": 6}, {"username": "NV", "commitsCount": 4}, {"username": "airportyh", "commitsCount": 4}, {"username": "vprimachenko", "commitsCount": 4}, {"username": "wvanderdeijl", "commitsCount": 4}, {"username": "artemv", "commitsCount": 3}, {"username": "pedrottimark", "commitsCount": 3}, {"username": "vmariano", "commitsCount": 3}, {"username": "felicienfrancois", "commitsCount": 2}, {"username": "ironhee", "commitsCount": 2}, {"username": "ramya-rao-a", "commitsCount": 2}, {"username": "rgeissert", "commitsCount": 2}, {"username": "tbroadley", "commitsCount": 2}, {"username": "tyomitch", "commitsCount": 2}, {"username": "zzen", "commitsCount": 2}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "FranDias", "commitsCount": 1}, {"username": "Kiougar", "commitsCount": 1}, {"username": "Martii", "commitsCount": 1}, {"username": "Mingun", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "abnbgist", "commitsCount": 1}, {"username": "ad-si", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "benogle", "commitsCount": 1}, {"username": "bg451", "commitsCount": 1}, {"username": "bitdeli-chef", "commitsCount": 1}, {"username": "chaaz", "commitsCount": 1}, {"username": "codeclown", "commitsCount": 1}, {"username": "ewnd9", "commitsCount": 1}, {"username": "fluxxu", "commitsCount": 1}, {"username": "ipanasenko", "commitsCount": 1}, {"username": "jarthorn", "commitsCount": 1}, {"username": "krizalys", "commitsCount": 1}, {"username": "loretoparisi", "commitsCount": 1}, {"username": "motiz88", "commitsCount": 1}, {"username": "mroderick", "commitsCount": 1}, {"username": "olivia", "commitsCount": 1}, {"username": "ossdev07", "commitsCount": 1}, {"username": "ovcharik", "commitsCount": 1}, {"username": "schornio", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "snadrus", "commitsCount": 1}, {"username": "stephenmathieson", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "takenspc", "commitsCount": 1}, {"username": "vasek", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 8751, "testsSize": 148984, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/kpdecker/jsdiff.svg", "service": "https://api.travis-ci.org/kpdecker/jsdiff.svg", "shields": "https://img.shields.io/travis/kpdecker/jsdiff.svg", "content": "https://img.shields.io/travis/kpdecker/jsdiff.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 5204, "downloadsCount": 40957838, "downloadsAcceleration": 132231.47058599693, "dependentsCount": 973}, "maintenance": {"releasesFrequency": 0.548972602739726, "commitsFrequency": 0.09205479452054795, "openIssues": 0.8214285714285714, "issuesDistribution": 0}}, "score": {"final": 0.7450375059247364, "detail": {"quality": 0.9647581114327594, "popularity": 0.7343985031229848, "maintenance": 0.5673445611481825}}}
{"analyzedAt": "2020-02-24T15:57:09.670Z", "collected": {"metadata": {"name": "dir-glob", "scope": "unscoped", "version": "3.0.1", "description": "Convert directories to glob compatible strings", "keywords": ["convert", "directory", "extensions", "files", "glob"], "date": "2019-06-29T16:22:06.207Z", "author": {"name": "Kevin M\u00e5rtensson", "email": "kevinmartensson@gmail.com", "url": "github.com/kevva", "username": "kevva"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "kevva", "email": "kevinmartensson@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/kevva/dir-glob.git"}, "links": {"npm": "https://www.npmjs.com/package/dir-glob", "homepage": "https://github.com/kevva/dir-glob#readme", "repository": "https://github.com/kevva/dir-glob", "bugs": "https://github.com/kevva/dir-glob/issues"}, "license": "MIT", "dependencies": {"path-type": "^4.0.0"}, "devDependencies": {"ava": "^2.1.0", "del": "^4.1.1", "make-dir": "^3.0.0", "rimraf": "^2.5.0", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# dir-glob [![Build Status](https://travis-ci.org/kevva/dir-glob.svg?branch=master)](https://travis-ci.org/kevva/dir-glob)\n\n> Convert directories to glob compatible strings\n\n\n## Install\n\n```\n$ npm install dir-glob\n```\n\n\n## Usage\n\n```js\nconst dirGlob = require('dir-glob');\n\n(async () => {\n\tconsole.log(await dirGlob(['index.js', 'test.js', 'fixtures']));\n\t//=> ['index.js', 'test.js', 'fixtures/**']\n\n\tconsole.log(await dirGlob(['index.js', 'inner_folder'], {cwd: 'fixtures'}));\n\t//=> ['index.js', 'inner_folder/**']\n\n\tconsole.log(await dirGlob(['lib/**', 'fixtures'], {\n\t\tfiles: ['test', 'unicorn']\n\t\textensions: ['js']\n\t}));\n\t//=> ['lib/**', 'fixtures/**/test.js', 'fixtures/**/unicorn.js']\n\n\tconsole.log(await dirGlob(['lib/**', 'fixtures'], {\n\t\tfiles: ['test', 'unicorn', '*.jsx'],\n\t\textensions: ['js', 'png']\n\t}));\n\t//=> ['lib/**', 'fixtures/**/test.{js,png}', 'fixtures/**/unicorn.{js,png}', 'fixtures/**/*.jsx']\n})();\n```\n\n\n## API\n\n### dirGlob(input, options?)\n\nReturns a `Promise<string[]>` with globs.\n\n### dirGlob.sync(input, options?)\n\nReturns a `string[]` with globs.\n\n#### input\n\nType: `string | string[]`\n\nPaths.\n\n#### options\n\nType: `object`\n\n##### extensions\n\nType: `string[]`\n\nAppend extensions to the end of your globs.\n\n##### files\n\nType: `string[]`\n\nOnly glob for certain files.\n\n##### cwd\n\nType: `string[]`\n\nTest in specific directory."}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 407183}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 9754158}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 38727110}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 103249893}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 196481166}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 326276120}], "dependentsCount": 31, "starsCount": 1}, "github": {"starsCount": 40, "forksCount": 7, "subscribersCount": 2, "issues": {"count": 19, "openCount": 0, "distribution": {"3600": 4, "10800": 2, "32400": 0, "97200": 5, "291600": 0, "874800": 1, "2624400": 3, "7873200": 0, "23619600": 2, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kevva", "commitsCount": 23}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "yhatt", "commitsCount": 2}, {"username": "dead-horse", "commitsCount": 1}, {"username": "sgtlambda", "commitsCount": 1}, {"username": "termosa", "commitsCount": 1}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1357, "testsSize": 3849}, "badges": [{"urls": {"original": "https://travis-ci.org/kevva/dir-glob.svg?branch=master", "service": "https://api.travis-ci.org/kevva/dir-glob.svg?branch=master", "shields": "https://img.shields.io/travis/kevva/dir-glob/master.svg", "content": "https://img.shields.io/travis/kevva/dir-glob/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 56, "downloadsCount": 34416631, "downloadsAcceleration": 148662.83595890418, "dependentsCount": 31}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8112267489196117, "detail": {"quality": 0.9547045235275585, "popularity": 0.49958288551999075, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-25T23:09:07.001Z", "collected": {"metadata": {"name": "doctrine", "scope": "unscoped", "version": "3.0.0", "description": "JSDoc parser", "date": "2018-11-10T02:38:01.125Z", "publisher": {"username": "eslint", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}, {"username": "constellation", "email": "utatane.tea@gmail.com"}, {"username": "ivolodin", "email": "ivolodin@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/doctrine.git"}, "links": {"npm": "https://www.npmjs.com/package/doctrine", "homepage": "https://github.com/eslint/doctrine", "repository": "https://github.com/eslint/doctrine", "bugs": "https://github.com/eslint/doctrine/issues"}, "license": "Apache-2.0", "dependencies": {"esutils": "^2.0.2"}, "devDependencies": {"coveralls": "^3.0.1", "dateformat": "^1.0.11", "eslint": "^1.10.3", "eslint-release": "^1.0.0", "linefix": "^0.1.1", "mocha": "^3.4.2", "npm-license": "^0.3.1", "nyc": "^10.3.2", "semver": "^5.0.3", "shelljs": "^0.5.3", "shelljs-nodecli": "^0.1.1", "should": "^5.0.1"}, "releases": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2018-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Join the chat at https://gitter.im/eslint/doctrine](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eslint/doctrine?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# Doctrine\n\nDoctrine is a [JSDoc](http://usejsdoc.org) parser that parses documentation comments from JavaScript (you need to pass in the comment, not a whole JavaScript file).\n\n## Installation\n\nYou can install Doctrine using [npm](https://npmjs.com):\n\n```\n$ npm install doctrine --save-dev\n```\n\nDoctrine can also be used in web browsers using [Browserify](http://browserify.org).\n\n## Usage\n\nRequire doctrine inside of your JavaScript:\n\n```js\nvar doctrine = require(\"doctrine\");\n```\n\n### parse()\n\nThe primary method is `parse()`, which accepts two arguments: the JSDoc comment to parse and an optional options object. The available options are:\n\n* `unwrap` - set to `true` to delete the leading `/**`, any `*` that begins a line, and the trailing `*/` from the source text. Default: `false`.\n* `tags` - an array of tags to return. When specified, Doctrine returns only tags in this array. For example, if `tags` is `[\"param\"]`, then only `@param` tags will be returned. Default: `null`.\n* `recoverable` - set to `true` to keep parsing even when syntax errors occur. Default: `false`.\n* `sloppy` - set to `true` to allow optional parameters to be specified in brackets (`@param {string} [foo]`). Default: `false`.\n* `lineNumbers` - set to `true` to add `lineNumber` to each node, specifying the line on which the node is found in the source. Default: `false`.\n* `range` - set to `true` to add `range` to each node, specifying the start and end index of the node in the original comment. Default: `false`.\n\nHere's a simple example:\n\n```js\nvar ast = doctrine.parse(\n    [\n        \"/**\",\n        \" * This function comment is parsed by doctrine\",\n        \" * @param {{ok:String}} userName\",\n        \"*/\"\n    ].join('\\n'), { unwrap: true });\n```\n\nThis example returns the following AST:\n\n    {\n        \"description\": \"This function comment is parsed by doctrine\",\n        \"tags\": [\n            {\n                \"title\": \"param\",\n                \"description\": null,\n                \"type\": {\n                    \"type\": \"RecordType\",\n                    \"fields\": [\n                        {\n                            \"type\": \"FieldType\",\n                            \"key\": \"ok\",\n                            \"value\": {\n                                \"type\": \"NameExpression\",\n                                \"name\": \"String\"\n                            }\n                        }\n                    ]\n                },\n                \"name\": \"userName\"\n            }\n        ]\n    }\n\nSee the [demo page](http://eslint.org/doctrine/demo/) more detail.\n\n## Team\n\nThese folks keep the project moving and are resources for help:\n\n* Nicholas C. Zakas ([@nzakas](https://github.com/nzakas)) - project lead\n* Yusuke Suzuki ([@constellation](https://github.com/constellation)) - reviewer\n\n## Contributing\n\nIssues and pull requests will be triaged and responded to as quickly as possible. We operate under the [ESLint Contributor Guidelines](http://eslint.org/docs/developer-guide/contributing), so please be sure to read them before contributing. If you're not sure where to dig in, check out the [issues](https://github.com/eslint/doctrine/issues).\n\n## Frequently Asked Questions\n\n### Can I pass a whole JavaScript file to Doctrine?\n\nNo. Doctrine can only parse JSDoc comments, so you'll need to pass just the JSDoc comment to Doctrine in order to work.\n\n\n### License\n\n#### doctrine\n\nCopyright JS Foundation and other contributors, https://js.foundation\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n#### esprima\n\nsome of functions is derived from esprima\n\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\n (twitter: [@ariyahidayat](http://twitter.com/ariyahidayat)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n#### closure-compiler\n\nsome of extensions is derived from closure-compiler\n\nApache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\n\n### Where to ask for help?\n\nJoin our [Chatroom](https://gitter.im/eslint/doctrine)\n\n[npm-image]: https://img.shields.io/npm/v/doctrine.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/doctrine\n[travis-image]: https://img.shields.io/travis/eslint/doctrine/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eslint/doctrine\n[coveralls-image]: https://img.shields.io/coveralls/eslint/doctrine/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/eslint/doctrine?branch=master\n[downloads-image]: http://img.shields.io/npm/dm/doctrine.svg?style=flat-square\n[downloads-url]: https://www.npmjs.com/package/doctrine"}, "npm": {"downloads": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 3092834}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 17903933}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 71901239}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 187451126}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 367827960}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 669982543}], "dependentsCount": 281, "starsCount": 3}, "github": {"starsCount": 422, "forksCount": 74, "subscribersCount": 24, "issues": {"count": 227, "openCount": 0, "distribution": {"3600": 48, "10800": 10, "32400": 14, "97200": 21, "291600": 25, "874800": 17, "2624400": 9, "7873200": 19, "23619600": 25, "70858800": 18, "212576400": 21}, "isDisabled": false}, "contributors": [{"username": "Constellation", "commitsCount": 113}, {"username": "jonathanKingston", "commitsCount": 37}, {"username": "nzakas", "commitsCount": 26}, {"username": "dtao", "commitsCount": 9}, {"username": "teppeis", "commitsCount": 7}, {"username": "tmcw", "commitsCount": 5}, {"username": "georgewfraser", "commitsCount": 4}, {"username": "kaicataldo", "commitsCount": 4}, {"username": "gyandeeps", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "JaKXz", "commitsCount": 2}, {"username": "eslint[bot]", "commitsCount": 2}, {"username": "maxnordlund", "commitsCount": 2}, {"username": "platinumazure", "commitsCount": 2}, {"username": "BYK", "commitsCount": 1}, {"username": "Emeegeemee", "commitsCount": 1}, {"username": "RobLoach", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "alberto", "commitsCount": 1}, {"username": "arv", "commitsCount": 1}, {"username": "atotic", "commitsCount": 1}, {"username": "cevou", "commitsCount": 1}, {"username": "chriswong", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "fredj", "commitsCount": 1}, {"username": "ikokostya", "commitsCount": 1}, {"username": "lorefnon", "commitsCount": 1}, {"username": "medanat", "commitsCount": 1}, {"username": "mister-walter", "commitsCount": 1}, {"username": "mitermayer", "commitsCount": 1}, {"username": "petebacondarwin", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "ryanjduffy", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "tschaub", "commitsCount": 1}], "commits": [{"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6615, "testsSize": 131709, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/doctrine.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/doctrine.svg", "content": "https://img.shields.io/npm/v/doctrine.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/eslint/doctrine/master.svg?style=flat-square", "service": "https://api.travis-ci.org/eslint/doctrine.svg?branch=master", "shields": "https://img.shields.io/travis/eslint/doctrine/master.svg", "content": "https://img.shields.io/travis/eslint/doctrine/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/eslint/doctrine/master.svg?style=flat-square", "service": "https://coveralls.io/repos/eslint/doctrine/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/eslint/doctrine/master.svg", "content": "https://img.shields.io/coveralls/eslint/doctrine/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/npm/dm/doctrine.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/doctrine.svg", "content": "https://img.shields.io/npm/dm/doctrine.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "jshint"], "coverage": 0.99}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 558, "downloadsCount": 62483708.666666664, "downloadsAcceleration": 192264.85285388137, "dependentsCount": 281}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8686083091781142, "detail": {"quality": 0.9993146668907649, "popularity": 0.6252929348043925, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-05T14:47:22.677Z", "collected": {"metadata": {"name": "emoji-regex", "scope": "unscoped", "version": "8.0.0", "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.", "keywords": ["unicode", "regex", "regexp", "regular expressions", "code points", "symbols", "characters", "emoji"], "date": "2019-03-05T18:58:23.040Z", "author": {"name": "Mathias Bynens", "url": "https://mathiasbynens.be/"}, "publisher": {"username": "mathias", "email": "mathias@qiwi.be"}, "maintainers": [{"username": "mathias", "email": "mathias@qiwi.be"}], "repository": {"type": "git", "url": "git+https://github.com/mathiasbynens/emoji-regex.git"}, "links": {"npm": "https://www.npmjs.com/package/emoji-regex", "homepage": "https://mths.be/emoji-regex", "repository": "https://github.com/mathiasbynens/emoji-regex", "bugs": "https://github.com/mathiasbynens/emoji-regex/issues"}, "license": "MIT", "devDependencies": {"@babel/cli": "^7.2.3", "@babel/core": "^7.3.4", "@babel/plugin-proposal-unicode-property-regex": "^7.2.0", "@babel/preset-env": "^7.3.4", "mocha": "^6.0.2", "regexgen": "^1.3.0", "unicode-12.0.0": "^0.7.9"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [the data from Unicode v12](https://github.com/mathiasbynens/unicode-12.0.0). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: \u231a default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: \u2194\ufe0f default text presentation character rendered as emoji\n\\u{1F469}: \ud83d\udc69 emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: \ud83d\udc69\ud83c\udfff emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n  const emoji = match[0];\n  console.log(`Matched sequence ${ emoji } \u2014 code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence \u231a \u2014 code points: 1\nMatched sequence \u231a \u2014 code points: 1\nMatched sequence \u2194\ufe0f \u2014 code points: 2\nMatched sequence \u2194\ufe0f \u2014 code points: 2\nMatched sequence \ud83d\udc69 \u2014 code points: 1\nMatched sequence \ud83d\udc69 \u2014 code points: 1\nMatched sequence \ud83d\udc69\ud83c\udfff \u2014 code points: 2\nMatched sequence \ud83d\udc69\ud83c\udfff \u2014 code points: 2\n```\n\nTo match emoji in their textual representation as well (i.e. emoji that are not `Emoji_Presentation` symbols and that aren\u2019t forced to render as emoji by a variation selector), `require` the other regex:\n\n```js\nconst emojiRegex = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license."}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3343812}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 18038903}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 74272533}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 178674845}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 315266336}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 482650633}], "dependentsCount": 136, "starsCount": 3}, "github": {"homepage": "https://mths.be/emoji-regex", "starsCount": 789, "forksCount": 89, "subscribersCount": 15, "issues": {"count": 67, "openCount": 18, "distribution": {"3600": 6, "10800": 4, "32400": 4, "97200": 9, "291600": 1, "874800": 8, "2624400": 7, "7873200": 11, "23619600": 4, "70858800": 13, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mathiasbynens", "commitsCount": 55}, {"username": "gilmoreorless", "commitsCount": 2}, {"username": "ticky", "commitsCount": 2}, {"username": "Fazendaaa", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "devsnek", "commitsCount": 1}, {"username": "henrikra", "commitsCount": 1}, {"username": "nizaroni", "commitsCount": 1}, {"username": "patrickkettner", "commitsCount": 1}, {"username": "sameoldmadness", "commitsCount": 1}, {"username": "toolmantim", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2691, "testsSize": 4306}, "badges": [{"urls": {"original": "https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master", "service": "https://api.travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master", "shields": "https://img.shields.io/travis/mathiasbynens/emoji-regex/master.svg", "content": "https://img.shields.io/travis/mathiasbynens/emoji-regex/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.55}, "popularity": {"communityInterest": 907, "downloadsCount": 59558281.666666664, "downloadsAcceleration": 395642.4354261796, "dependentsCount": 136}, "maintenance": {"releasesFrequency": 0.07397260273972604, "commitsFrequency": 0.011506849315068493, "openIssues": 0.8855721393034826, "issuesDistribution": 0.10587102955864602}}, "score": {"final": 0.6393819978317742, "detail": {"quality": 0.9891992239671635, "popularity": 0.6234703464162397, "maintenance": 0.35545031255983245}}}
{"analyzedAt": "2020-03-01T04:55:25.779Z", "collected": {"metadata": {"name": "escape-string-regexp", "scope": "unscoped", "version": "2.0.0", "description": "Escape RegExp special characters", "keywords": ["escape", "regex", "regexp", "re", "regular", "expression", "string", "str", "special", "characters"], "date": "2019-04-17T07:49:09.559Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/escape-string-regexp.git"}, "links": {"npm": "https://www.npmjs.com/package/escape-string-regexp", "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme", "repository": "https://github.com/sindresorhus/escape-string-regexp", "bugs": "https://github.com/sindresorhus/escape-string-regexp/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('How much $ for a \ud83e\udd84?');\n//=> 'How much \\\\$ for a \ud83e\udd84\\\\?'\n\nnew RegExp(escapedString);\n```\n\nYou can also use this to escape a string that is inserted into the middle of a regex, for example, into a character class.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 843440}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 15248644}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 62451845}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 164711531}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 317705235}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 587508740}], "dependentsCount": 1243, "starsCount": 36}, "github": {"starsCount": 349, "forksCount": 31, "subscribersCount": 17, "issues": {"count": 19, "openCount": 0, "distribution": {"3600": 7, "10800": 5, "32400": 1, "97200": 3, "291600": 0, "874800": 1, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 10}, {"username": "jbnicolai", "commitsCount": 2}, {"username": "BendingBender", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 666, "testsSize": 305}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/escape-string-regexp/master.svg", "content": "https://img.shields.io/travis/sindresorhus/escape-string-regexp/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7075, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 437, "downloadsCount": 54903843.666666664, "downloadsAcceleration": 156882.81934931502, "dependentsCount": 1243}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8637093887002206, "detail": {"quality": 0.9348767764265628, "popularity": 0.6665284966940127, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-28T21:13:39.743Z", "collected": {"metadata": {"name": "eslint", "scope": "unscoped", "version": "6.8.0", "description": "An AST-based pattern checker for JavaScript.", "keywords": ["ast", "lint", "javascript", "ecmascript", "espree"], "date": "2019-12-20T21:04:35.627Z", "author": {"name": "Nicholas C. Zakas", "email": "nicholas+npm@nczconsulting.com"}, "publisher": {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "ivolodin", "email": "ivolodin@gmail.com"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint", "homepage": "https://eslint.org", "repository": "https://github.com/eslint/eslint", "bugs": "https://github.com/eslint/eslint/issues/"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "ajv": "^6.10.0", "chalk": "^2.1.0", "cross-spawn": "^6.0.5", "debug": "^4.0.1", "doctrine": "^3.0.0", "eslint-scope": "^5.0.0", "eslint-utils": "^1.4.3", "eslint-visitor-keys": "^1.1.0", "espree": "^6.1.2", "esquery": "^1.0.1", "esutils": "^2.0.2", "file-entry-cache": "^5.0.1", "functional-red-black-tree": "^1.0.1", "glob-parent": "^5.0.0", "globals": "^12.1.0", "ignore": "^4.0.6", "import-fresh": "^3.0.0", "imurmurhash": "^0.1.4", "inquirer": "^7.0.0", "is-glob": "^4.0.0", "js-yaml": "^3.13.1", "json-stable-stringify-without-jsonify": "^1.0.1", "levn": "^0.3.0", "lodash": "^4.17.14", "minimatch": "^3.0.4", "mkdirp": "^0.5.1", "natural-compare": "^1.4.0", "optionator": "^0.8.3", "progress": "^2.0.0", "regexpp": "^2.0.1", "semver": "^6.1.2", "strip-ansi": "^5.2.0", "strip-json-comments": "^3.0.1", "table": "^5.2.3", "text-table": "^0.2.0", "v8-compile-cache": "^2.0.3"}, "devDependencies": {"@babel/core": "^7.4.3", "@babel/preset-env": "^7.4.3", "acorn": "^7.1.0", "babel-loader": "^8.0.5", "chai": "^4.0.1", "cheerio": "^0.22.0", "common-tags": "^1.8.0", "core-js": "^3.1.3", "dateformat": "^3.0.3", "ejs": "^2.6.1", "eslint": "file:.", "eslint-config-eslint": "file:packages/eslint-config-eslint", "eslint-plugin-eslint-plugin": "^2.0.1", "eslint-plugin-internal-rules": "file:tools/internal-rules", "eslint-plugin-jsdoc": "^15.9.5", "eslint-plugin-node": "^9.0.0", "eslint-release": "^1.2.0", "eslump": "^2.0.0", "esprima": "^4.0.1", "glob": "^7.1.3", "jsdoc": "^3.5.5", "karma": "^4.0.1", "karma-chrome-launcher": "^2.2.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.3", "karma-webpack": "^4.0.0-rc.6", "leche": "^2.2.3", "lint-staged": "^8.1.5", "load-perf": "^0.2.0", "markdownlint": "^0.15.0", "markdownlint-cli": "^0.17.0", "metro-memory-fs": "^0.54.1", "mocha": "^6.1.2", "mocha-junit-reporter": "^1.23.0", "npm-license": "^0.3.3", "nyc": "^14.1.1", "proxyquire": "^2.0.1", "puppeteer": "^1.18.0", "recast": "^0.18.1", "regenerator-runtime": "^0.13.2", "shelljs": "^0.8.2", "sinon": "^7.3.2", "temp": "^0.9.0", "webpack": "^4.35.0", "webpack-cli": "^3.3.5", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 4}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 10}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 26}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 55}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1914896}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 10002074}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 42035048}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 107304517}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 211030104}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 394730609}], "dependentsCount": 9045, "starsCount": 329}, "github": {"homepage": "https://eslint.org", "starsCount": 15911, "forksCount": 2794, "subscribersCount": 296, "issues": {"count": 12911, "openCount": 188, "distribution": {"3600": 1472, "10800": 946, "32400": 1153, "97200": 1734, "291600": 1847, "874800": 1618, "2624400": 1300, "7873200": 1476, "23619600": 1026, "70858800": 321, "212576400": 18}, "isDisabled": false}, "contributors": [{"username": "nzakas", "commitsCount": 758}, {"username": "not-an-aardvark", "commitsCount": 510}, {"username": "mysticatea", "commitsCount": 329}, {"username": "alberto", "commitsCount": 231}, {"username": "gyandeeps", "commitsCount": 182}, {"username": "eslint[bot]", "commitsCount": 157}, {"username": "ilyavolodin", "commitsCount": 148}, {"username": "platinumazure", "commitsCount": 133}, {"username": "aladdin-add", "commitsCount": 132}, {"username": "btmills", "commitsCount": 132}, {"username": "mdjermanovic", "commitsCount": 126}, {"username": "kaicataldo", "commitsCount": 120}, {"username": "michaelficarra", "commitsCount": 112}, {"username": "BYK", "commitsCount": 82}, {"username": "iancmyers", "commitsCount": 71}, {"username": "lo1tuma", "commitsCount": 68}, {"username": "IanVS", "commitsCount": 57}, {"username": "mduvall", "commitsCount": 42}, {"username": "g-plane", "commitsCount": 41}, {"username": "vitorbal", "commitsCount": 37}, {"username": "pedrottimark", "commitsCount": 34}, {"username": "roadhump", "commitsCount": 24}, {"username": "yeonjuan", "commitsCount": 24}, {"username": "DavidAnson", "commitsCount": 23}, {"username": "jrajav", "commitsCount": 23}, {"username": "gcochard", "commitsCount": 19}, {"username": "VictorHom", "commitsCount": 18}, {"username": "jamesallardice", "commitsCount": 17}, {"username": "jrpool", "commitsCount": 17}, {"username": "ljharb", "commitsCount": 16}, {"username": "scriptdaemon", "commitsCount": 16}, {"username": "jrvidal", "commitsCount": 15}, {"username": "golopot", "commitsCount": 13}, {"username": "j-f1", "commitsCount": 11}, {"username": "goatslacker", "commitsCount": 10}, {"username": "makepanic", "commitsCount": 10}, {"username": "mgol", "commitsCount": 10}, {"username": "sstern6", "commitsCount": 10}, {"username": "albertosantini", "commitsCount": 9}, {"username": "bradzacher", "commitsCount": 9}, {"username": "mamacdon", "commitsCount": 9}, {"username": "tschaub", "commitsCount": 9}, {"username": "xjamundx", "commitsCount": 9}, {"username": "knunery", "commitsCount": 8}, {"username": "madbence", "commitsCount": 8}, {"username": "soda0289", "commitsCount": 8}, {"username": "vegetableman", "commitsCount": 8}, {"username": "andrewdeandrade", "commitsCount": 7}, {"username": "brettz9", "commitsCount": 7}, {"username": "gkz", "commitsCount": 7}, {"username": "jonathanKingston", "commitsCount": 7}, {"username": "pmcelhaney", "commitsCount": 7}, {"username": "spadgos", "commitsCount": 7}, {"username": "spmurrayzzz", "commitsCount": 7}, {"username": "vsemozhetbyt", "commitsCount": 7}, {"username": "Krinkle", "commitsCount": 6}, {"username": "PoziWorld", "commitsCount": 6}, {"username": "TheSavior", "commitsCount": 6}, {"username": "Trott", "commitsCount": 6}, {"username": "alefteris", "commitsCount": 6}, {"username": "annie", "commitsCount": 6}, {"username": "aparajita", "commitsCount": 6}, {"username": "briandipalma", "commitsCount": 6}, {"username": "dguo", "commitsCount": 6}, {"username": "glenjamin", "commitsCount": 6}, {"username": "hzoo", "commitsCount": 6}, {"username": "jrfeenst", "commitsCount": 6}, {"username": "pdehaan", "commitsCount": 6}, {"username": "puzrin", "commitsCount": 6}, {"username": "revolter", "commitsCount": 6}, {"username": "rpatil26", "commitsCount": 6}, {"username": "sindresorhus", "commitsCount": 6}, {"username": "Delapouite", "commitsCount": 5}, {"username": "Mardak", "commitsCount": 5}, {"username": "MichaelPaulukonis", "commitsCount": 5}, {"username": "NateEag", "commitsCount": 5}, {"username": "aubergine10", "commitsCount": 5}, {"username": "cjihrig", "commitsCount": 5}, {"username": "ilovejary", "commitsCount": 5}, {"username": "malcolmsgroves", "commitsCount": 5}, {"username": "mathieumg", "commitsCount": 5}, {"username": "meeber", "commitsCount": 5}, {"username": "mjomble", "commitsCount": 5}, {"username": "molee1905", "commitsCount": 5}, {"username": "nre", "commitsCount": 5}, {"username": "onurtemizkan", "commitsCount": 5}, {"username": "tikotzky", "commitsCount": 5}, {"username": "valorkin", "commitsCount": 5}, {"username": "whitneyit", "commitsCount": 5}, {"username": "BridgeAR", "commitsCount": 4}, {"username": "JPeer264", "commitsCount": 4}, {"username": "NickHeiner", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 4}, {"username": "gajus", "commitsCount": 4}, {"username": "i-ron-y", "commitsCount": 4}, {"username": "nwoltman", "commitsCount": 4}, {"username": "preco21", "commitsCount": 4}, {"username": "realityking", "commitsCount": 4}, {"username": "scottohara", "commitsCount": 4}, {"username": "silverwind", "commitsCount": 4}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 19}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 47}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 140}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 320}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 592}]}, "source": {"files": {"readmeSize": 0, "testsSize": 8349039, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"chalk": {"required": "^2.1.0", "stable": "3.0.0", "latest": "3.0.0"}, "strip-ansi": {"required": "^5.2.0", "stable": "6.0.0", "latest": "6.0.0"}, "regexpp": {"required": "^2.0.1", "stable": "3.0.0", "latest": "3.0.0"}, "eslint-utils": {"required": "^1.4.3", "stable": "2.0.0", "latest": "2.0.0"}, "mkdirp": {"required": "^0.5.1", "stable": "1.0.3", "latest": "1.0.3"}, "cross-spawn": {"required": "^6.0.5", "stable": "7.0.1", "latest": "7.0.1"}, "semver": {"required": "^6.1.2", "stable": "7.1.3", "latest": "7.1.3"}, "ignore": {"required": "^4.0.6", "stable": "5.1.4", "latest": "5.1.4"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.6, "health": 0.5675675675675675, "branding": 0.4}, "popularity": {"communityInterest": 19430, "downloadsCount": 35768172.333333336, "downloadsAcceleration": 102662.57168949762, "dependentsCount": 9045}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8120956368562697}}, "score": {"final": 0.9079997918130611, "detail": {"quality": 0.843158463174563, "popularity": 0.871958652993146, "maintenance": 0.9996192123231179}}}
{"analyzedAt": "2020-02-27T14:15:28.911Z", "collected": {"metadata": {"name": "eslint-scope", "scope": "unscoped", "version": "5.0.0", "description": "ECMAScript scope analyzer for ESLint", "date": "2019-07-21T03:21:14.967Z", "publisher": {"username": "eslint", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}, {"username": "ivolodin", "email": "ivolodin@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/eslint-scope.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-scope", "homepage": "http://github.com/eslint/eslint-scope", "repository": "https://github.com/eslint/eslint-scope", "bugs": "https://github.com/eslint/eslint-scope/issues"}, "license": "BSD-2-Clause", "dependencies": {"esrecurse": "^4.1.0", "estraverse": "^4.1.1"}, "devDependencies": {"@typescript-eslint/parser": "^1.11.0", "chai": "^4.2.0", "eslint": "^6.0.1", "eslint-config-eslint": "^5.0.1", "eslint-plugin-node": "^9.1.0", "eslint-release": "^1.0.0", "espree": "^6.0.0", "istanbul": "^0.4.5", "mocha": "^6.1.4", "npm-license": "^0.3.3", "shelljs": "^0.8.3", "typescript": "^3.5.2"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 5}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 10}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ESLint Scope\n\nESLint Scope is the [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm) scope analyzer used in ESLint. It is a fork of [escope](http://github.com/estools/escope).\n\n## Usage\n\nInstall:\n\n```\nnpm i eslint-scope --save\n```\n\nExample:\n\n```js\nvar eslintScope = require('eslint-scope');\nvar espree = require('espree');\nvar estraverse = require('estraverse');\n\nvar ast = espree.parse(code);\nvar scopeManager = eslintScope.analyze(ast);\n\nvar currentScope = scopeManager.acquire(ast);   // global scope\n\nestraverse.traverse(ast, {\n    enter: function(node, parent) {\n        // do stuff\n\n        if (/Function/.test(node.type)) {\n            currentScope = scopeManager.acquire(node);  // get current function scope\n        }\n    },\n    leave: function(node, parent) {\n        if (/Function/.test(node.type)) {\n            currentScope = currentScope.upper;  // set to parent scope\n        }\n\n        // do stuff\n    }\n});\n```\n\n## Contributing\n\nIssues and pull requests will be triaged and responded to as quickly as possible. We operate under the [ESLint Contributor Guidelines](http://eslint.org/docs/developer-guide/contributing), so please be sure to read them before contributing. If you're not sure where to dig in, check out the [issues](https://github.com/eslint/eslint-scope/issues).\n\n## Build Commands\n\n* `npm test` - run all linting and tests\n* `npm run lint` - run all linting\n\n## License\n\nESLint Scope is licensed under a permissive BSD 2-clause license."}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3065063}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 15637185}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 65446758}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 164503238}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 324328109}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 591901260}], "dependentsCount": 71, "starsCount": 0}, "github": {"starsCount": 60, "forksCount": 19, "subscribersCount": 25, "issues": {"count": 55, "openCount": 4, "distribution": {"3600": 13, "10800": 4, "32400": 3, "97200": 10, "291600": 5, "874800": 3, "2624400": 10, "7873200": 1, "23619600": 0, "70858800": 3, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "Constellation", "commitsCount": 162}, {"username": "mysticatea", "commitsCount": 15}, {"username": "eslint[bot]", "commitsCount": 8}, {"username": "thron7", "commitsCount": 8}, {"username": "corbinu", "commitsCount": 7}, {"username": "JamesHenry", "commitsCount": 6}, {"username": "eventualbuddha", "commitsCount": 6}, {"username": "not-an-aardvark", "commitsCount": 5}, {"username": "nzakas", "commitsCount": 5}, {"username": "alex-seville", "commitsCount": 4}, {"username": "shz", "commitsCount": 4}, {"username": "ilyavolodin", "commitsCount": 3}, {"username": "kaicataldo", "commitsCount": 3}, {"username": "michaelficarra", "commitsCount": 3}, {"username": "futpib", "commitsCount": 2}, {"username": "kevinbarabash", "commitsCount": 2}, {"username": "pdehaan", "commitsCount": 2}, {"username": "soda0289", "commitsCount": 2}, {"username": "Mindonaut", "commitsCount": 1}, {"username": "Stuk", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "btmills", "commitsCount": 1}, {"username": "fczuardi", "commitsCount": 1}, {"username": "glasser", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "kumavis", "commitsCount": 1}, {"username": "mazurov", "commitsCount": 1}, {"username": "nkzawa", "commitsCount": 1}, {"username": "nre", "commitsCount": 1}, {"username": "platinumazure", "commitsCount": 1}, {"username": "robcolburn", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1504, "testsSize": 214547, "hasChangelog": true}, "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 136, "downloadsCount": 54834412.666666664, "downloadsAcceleration": 185021.71310882806, "dependentsCount": 71}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8061256881058304, "detail": {"quality": 0.8796760926924885, "popularity": 0.5493185096249614, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-17T15:37:44.373Z", "collected": {"metadata": {"name": "eslint-utils", "scope": "unscoped", "version": "2.0.0", "description": "Utilities for ESLint plugins.", "keywords": ["eslint"], "date": "2019-12-26T09:03:45.070Z", "author": {"name": "Toru Nagashima"}, "publisher": {"username": "mysticatea", "email": "public@mysticatea.dev"}, "maintainers": [{"username": "mysticatea", "email": "star.ctor@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mysticatea/eslint-utils.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-utils", "homepage": "https://github.com/mysticatea/eslint-utils#readme", "repository": "https://github.com/mysticatea/eslint-utils", "bugs": "https://github.com/mysticatea/eslint-utils/issues"}, "license": "MIT", "dependencies": {"eslint-visitor-keys": "^1.1.0"}, "devDependencies": {"@mysticatea/eslint-plugin": "^12.0.0", "codecov": "^3.6.1", "dot-prop": "^4.2.0", "eslint": "^6.5.1", "esm": "^3.2.25", "espree": "^6.1.1", "mocha": "^6.2.2", "npm-run-all": "^4.1.5", "nyc": "^14.1.1", "opener": "^1.5.1", "rimraf": "^3.0.0", "rollup": "^1.25.0", "rollup-plugin-sourcemaps": "^0.4.2", "vuepress": "^1.2.0", "warun": "^1.0.0"}, "releases": [{"from": "2020-01-18T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 2}, {"from": "2019-08-21T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 3}, {"from": "2019-02-17T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 6}, {"from": "2018-02-17T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-utils\n\n[![npm version](https://img.shields.io/npm/v/eslint-utils.svg)](https://www.npmjs.com/package/eslint-utils)\n[![Downloads/month](https://img.shields.io/npm/dm/eslint-utils.svg)](http://www.npmtrends.com/eslint-utils)\n[![Build Status](https://github.com/mysticatea/eslint-utils/workflows/CI/badge.svg)](https://github.com/mysticatea/eslint-utils/actions)\n[![Coverage Status](https://codecov.io/gh/mysticatea/eslint-utils/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/eslint-utils)\n[![Dependency Status](https://david-dm.org/mysticatea/eslint-utils.svg)](https://david-dm.org/mysticatea/eslint-utils)\n\n## \ud83c\udfc1 Goal\n\nThis package provides utility functions and classes for make ESLint custom rules.\n\nFor examples:\n\n- [getStaticValue](https://eslint-utils.mysticatea.dev/api/ast-utils.html#getstaticvalue) evaluates static value on AST.\n- [ReferenceTracker](https://eslint-utils.mysticatea.dev/api/scope-utils.html#referencetracker-class) checks the members of modules/globals as handling assignments and destructuring.\n\n## \ud83d\udcd6 Usage\n\nSee [documentation](https://eslint-utils.mysticatea.dev/).\n\n## \ud83d\udcf0 Changelog\n\nSee [releases](https://github.com/mysticatea/eslint-utils/releases).\n\n## \u2764\ufe0f Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run clean` removes the coverage result of `npm test` command.\n- `npm run coverage` shows the coverage result of the last `npm test` command.\n- `npm run lint` runs ESLint.\n- `npm run watch` runs tests on each file change."}, "npm": {"downloads": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 350625}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 7208831}, {"from": "2020-01-18T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 27068376}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 72037712}, {"from": "2019-08-21T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 135689513}, {"from": "2019-02-17T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 222041992}], "dependentsCount": 55, "starsCount": 0}, "github": {"homepage": "https://eslint-utils.mysticatea.dev/", "starsCount": 29, "forksCount": 18, "subscribersCount": 4, "issues": {"count": 2, "openCount": 0, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mysticatea", "commitsCount": 57}], "commits": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 0}, {"from": "2020-01-18T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 2}, {"from": "2019-08-21T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 11}, {"from": "2019-02-17T00:00:00.000Z", "to": "2020-02-17T00:00:00.000Z", "count": 23}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 1593, "testsSize": 90094}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-utils.svg", "shields": "https://img.shields.io/npm/v/eslint-utils.svg", "content": "https://img.shields.io/npm/v/eslint-utils.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-utils.svg", "shields": "https://img.shields.io/npm/dm/eslint-utils.svg", "content": "https://img.shields.io/npm/dm/eslint-utils.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/mysticatea/eslint-utils.svg", "service": "https://david-dm.org/mysticatea/eslint-utils.svg", "shields": "https://img.shields.io/david/mysticatea/eslint-utils.svg", "content": "https://img.shields.io/david/mysticatea/eslint-utils.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.994, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 52, "downloadsCount": 24012570.666666668, "downloadsAcceleration": 109860.34461567728, "dependentsCount": 55}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8185513253937655, "detail": {"quality": 0.9874917778751571, "popularity": 0.49235770840517984, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-25T23:09:16.943Z", "collected": {"metadata": {"name": "eslint-visitor-keys", "scope": "unscoped", "version": "1.1.0", "description": "Constants and utilities about visitor keys to traverse AST.", "date": "2019-08-13T14:11:08.272Z", "author": {"name": "Toru Nagashima", "url": "https://github.com/mysticatea"}, "publisher": {"username": "eslint", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/eslint-visitor-keys.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-visitor-keys", "homepage": "https://github.com/eslint/eslint-visitor-keys#readme", "repository": "https://github.com/eslint/eslint-visitor-keys", "bugs": "https://github.com/eslint/eslint-visitor-keys/issues"}, "license": "Apache-2.0", "devDependencies": {"eslint": "^4.7.2", "eslint-config-eslint": "^4.0.0", "eslint-release": "^1.0.0", "mocha": "^3.5.3", "nyc": "^11.2.1", "opener": "^1.4.3"}, "releases": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1}, {"from": "2018-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-visitor-keys\n\n[![npm version](https://img.shields.io/npm/v/eslint-visitor-keys.svg)](https://www.npmjs.com/package/eslint-visitor-keys)\n[![Downloads/month](https://img.shields.io/npm/dm/eslint-visitor-keys.svg)](http://www.npmtrends.com/eslint-visitor-keys)\n[![Build Status](https://travis-ci.org/eslint/eslint-visitor-keys.svg?branch=master)](https://travis-ci.org/eslint/eslint-visitor-keys)\n[![Dependency Status](https://david-dm.org/eslint/eslint-visitor-keys.svg)](https://david-dm.org/eslint/eslint-visitor-keys)\n\nConstants and utilities about visitor keys to traverse AST.\n\n## \ud83d\udcbf Installation\n\nUse [npm] to install.\n\n```bash\n$ npm install eslint-visitor-keys\n```\n\n### Requirements\n\n- [Node.js] 4.0.0 or later.\n\n## \ud83d\udcd6 Usage\n\n```js\nconst evk = require(\"eslint-visitor-keys\")\n```\n\n### evk.KEYS\n\n> type: `{ [type: string]: string[] | undefined }`\n\nVisitor keys. This keys are frozen.\n\nThis is an object. Keys are the type of [ESTree] nodes. Their values are an array of property names which have child nodes.\n\nFor example:\n\n```\nconsole.log(evk.KEYS.AssignmentExpression) // \u2192 [\"left\", \"right\"]\n```\n\n### evk.getKeys(node)\n\n> type: `(node: object) => string[]`\n\nGet the visitor keys of a given AST node.\n\nThis is similar to `Object.keys(node)` of ES Standard, but some keys are excluded: `parent`, `leadingComments`, `trailingComments`, and names which start with `_`.\n\nThis will be used to traverse unknown nodes.\n\nFor example:\n\n```\nconst node = {\n    type: \"AssignmentExpression\",\n    left: { type: \"Identifier\", name: \"foo\" },\n    right: { type: \"Literal\", value: 0 }\n}\nconsole.log(evk.getKeys(node)) // \u2192 [\"type\", \"left\", \"right\"]\n```\n\n### evk.unionWith(additionalKeys)\n\n> type: `(additionalKeys: object) => { [type: string]: string[] | undefined }`\n\nMake the union set with `evk.KEYS` and the given keys.\n\n- The order of keys is, `additionalKeys` is at first, then `evk.KEYS` is concatenated after that.\n- It removes duplicated keys as keeping the first one.\n\nFor example:\n\n```\nconsole.log(evk.unionWith({\n    MethodDefinition: [\"decorators\"]\n})) // \u2192 { ..., MethodDefinition: [\"decorators\", \"key\", \"value\"], ... }\n```\n\n## \ud83d\udcf0 Change log\n\nSee [GitHub releases](https://github.com/eslint/eslint-visitor-keys/releases).\n\n## \ud83c\udf7b Contributing\n\nWelcome. See [ESLint contribution guidelines](https://eslint.org/docs/developer-guide/contributing/).\n\n### Development commands\n\n- `npm test` runs tests and measures code coverage.\n- `npm run lint` checks source codes with ESLint.\n- `npm run coverage` opens the code coverage report of the previous test with your default browser.\n- `npm run release` publishes this package to [npm] registory.\n\n\n[npm]: https://www.npmjs.com/\n[Node.js]: https://nodejs.org/en/\n[ESTree]: https://github.com/estree/estree"}, "npm": {"downloads": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1390168}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 8030319}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 32090260}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 83054567}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 160808736}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 277708701}], "dependentsCount": 57, "starsCount": 0}, "github": {"starsCount": 14, "forksCount": 4, "subscribersCount": 18, "issues": {"count": 7, "openCount": 0, "distribution": {"3600": 1, "10800": 1, "32400": 0, "97200": 2, "291600": 1, "874800": 0, "2624400": 1, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mysticatea", "commitsCount": 5}, {"username": "eslint[bot]", "commitsCount": 2}, {"username": "ilyavolodin", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}], "commits": [{"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2770, "testsSize": 2611, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-visitor-keys.svg", "shields": "https://img.shields.io/npm/v/eslint-visitor-keys.svg", "content": "https://img.shields.io/npm/v/eslint-visitor-keys.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-visitor-keys.svg", "shields": "https://img.shields.io/npm/dm/eslint-visitor-keys.svg", "content": "https://img.shields.io/npm/dm/eslint-visitor-keys.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://travis-ci.org/eslint/eslint-visitor-keys.svg?branch=master", "service": "https://api.travis-ci.org/eslint/eslint-visitor-keys.svg?branch=master", "shields": "https://img.shields.io/travis/eslint/eslint-visitor-keys/master.svg", "content": "https://img.shields.io/travis/eslint/eslint-visitor-keys/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/eslint/eslint-visitor-keys.svg", "service": "https://david-dm.org/eslint/eslint-visitor-keys.svg", "shields": "https://img.shields.io/david/eslint/eslint-visitor-keys.svg", "content": "https://img.shields.io/david/eslint/eslint-visitor-keys.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 41, "downloadsCount": 27684855.666666668, "downloadsAcceleration": 110341.42191780818, "dependentsCount": 57}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8168749941777179, "detail": {"quality": 0.9791932954197882, "popularity": 0.4946811756067888, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-02T17:05:00.349Z", "collected": {"metadata": {"name": "espree", "scope": "unscoped", "version": "6.2.0", "description": "An Esprima-compatible JavaScript parser built on Acorn", "keywords": ["ast", "ecmascript", "javascript", "parser", "syntax", "acorn"], "date": "2020-03-02T17:04:43.249Z", "author": {"name": "Nicholas C. Zakas", "email": "nicholas+npm@nczconsulting.com"}, "publisher": {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/espree.git"}, "links": {"npm": "https://www.npmjs.com/package/espree", "homepage": "https://github.com/eslint/espree", "repository": "https://github.com/eslint/espree", "bugs": "http://github.com/eslint/espree.git"}, "license": "BSD-2-Clause", "dependencies": {"acorn": "^7.1.0", "acorn-jsx": "^5.2.0", "eslint-visitor-keys": "^1.1.0"}, "devDependencies": {"browserify": "^16.5.0", "chai": "^4.2.0", "eslint": "^6.0.1", "eslint-config-eslint": "^5.0.1", "eslint-plugin-node": "^9.1.0", "eslint-release": "^1.0.0", "esprima": "latest", "esprima-fb": "^8001.2001.0-dev-harmony-fb", "json-diff": "^0.5.4", "leche": "^2.3.0", "mocha": "^6.2.0", "nyc": "^14.1.1", "regenerate": "^1.4.0", "shelljs": "^0.3.0", "shelljs-nodecli": "^0.1.1", "unicode-6.3.0": "^0.7.5"}, "releases": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 1}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 5}, {"from": "2018-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm version](https://img.shields.io/npm/v/espree.svg)](https://www.npmjs.com/package/espree)\n[![Build Status](https://travis-ci.org/eslint/espree.svg?branch=master)](https://travis-ci.org/eslint/espree)\n[![npm downloads](https://img.shields.io/npm/dm/espree.svg)](https://www.npmjs.com/package/espree)\n[![Bountysource](https://www.bountysource.com/badge/tracker?tracker_id=9348450)](https://www.bountysource.com/trackers/9348450-eslint?utm_source=9348450&utm_medium=shield&utm_campaign=TRACKER_BADGE)\n\n# Espree\n\nEspree started out as a fork of [Esprima](http://esprima.org) v1.2.2, the last stable published released of Esprima before work on ECMAScript 6 began. Espree is now built on top of [Acorn](https://github.com/ternjs/acorn), which has a modular architecture that allows extension of core functionality. The goal of Espree is to produce output that is similar to Esprima with a similar API so that it can be used in place of Esprima.\n\n## Usage\n\nInstall:\n\n```\nnpm i espree\n```\n\nAnd in your Node.js code:\n\n```javascript\nconst espree = require(\"espree\");\n\nconst ast = espree.parse(code);\n```\n\nThere is a second argument to `parse()` that allows you to specify various options:\n\n```javascript\nconst espree = require(\"espree\");\n\n// Optional second options argument with the following default settings\nconst ast = espree.parse(code, {\n\n    // attach range information to each node\n    range: false,\n\n    // attach line/column location information to each node\n    loc: false,\n\n    // create a top-level comments array containing all comments\n    comment: false,\n\n    // create a top-level tokens array containing all tokens\n    tokens: false,\n\n    // Set to 3, 5 (default), 6, 7, 8, 9, or 10 to specify the version of ECMAScript syntax you want to use.\n    // You can also set to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10), or 2020 (same as 11) to use the year-based naming.\n    ecmaVersion: 5,\n\n    // specify which type of script you're parsing (\"script\" or \"module\")\n    sourceType: \"script\",\n\n    // specify additional language features\n    ecmaFeatures: {\n\n        // enable JSX parsing\n        jsx: false,\n\n        // enable return in global scope\n        globalReturn: false,\n\n        // enable implied strict mode (if ecmaVersion >= 5)\n        impliedStrict: false\n    }\n});\n```\n\n## Esprima Compatibility Going Forward\n\nThe primary goal is to produce the exact same AST structure and tokens as Esprima, and that takes precedence over anything else. (The AST structure being the [ESTree](https://github.com/estree/estree) API with JSX extensions.) Separate from that, Espree may deviate from what Esprima outputs in terms of where and how comments are attached, as well as what additional information is available on AST nodes. That is to say, Espree may add more things to the AST nodes than Esprima does but the overall AST structure produced will be the same.\n\nEspree may also deviate from Esprima in the interface it exposes.\n\n## Contributing\n\nIssues and pull requests will be triaged and responded to as quickly as possible. We operate under the [ESLint Contributor Guidelines](http://eslint.org/docs/developer-guide/contributing), so please be sure to read them before contributing. If you're not sure where to dig in, check out the [issues](https://github.com/eslint/espree/issues).\n\nEspree is licensed under a permissive BSD 2-clause license.\n\n## Build Commands\n\n* `npm test` - run all linting and tests\n* `npm run lint` - run all linting\n* `npm run browserify` - creates a version of Espree that is usable in a browser\n\n## Differences from Espree 2.x\n\n* The `tokenize()` method does not use `ecmaFeatures`. Any string will be tokenized completely based on ECMAScript 6 semantics.\n* Trailing whitespace no longer is counted as part of a node.\n* `let` and `const` declarations are no longer parsed by default. You must opt-in by using an `ecmaVersion` newer than `5` or setting `sourceType` to `module`.\n* The `esparse` and `esvalidate` binary scripts have been removed.\n* There is no `tolerant` option. We will investigate adding this back in the future.\n\n## Known Incompatibilities\n\nIn an effort to help those wanting to transition from other parsers to Espree, the following is a list of noteworthy incompatibilities with other parsers. These are known differences that we do not intend to change.\n\n### Esprima 1.2.2\n\n* Esprima counts trailing whitespace as part of each AST node while Espree does not. In Espree, the end of a node is where the last token occurs.\n* Espree does not parse `let` and `const` declarations by default.\n* Error messages returned for parsing errors are different.\n* There are two addition properties on every node and token: `start` and `end`. These represent the same data as `range` and are used internally by Acorn.\n\n### Esprima 2.x\n\n* Esprima 2.x uses a different comment attachment algorithm that results in some comments being added in different places than Espree. The algorithm Espree uses is the same one used in Esprima 1.2.2.\n\n## Frequently Asked Questions\n\n### Why another parser\n\n[ESLint](http://eslint.org) had been relying on Esprima as its parser from the beginning. While that was fine when the JavaScript language was evolving slowly, the pace of development increased dramatically and Esprima had fallen behind. ESLint, like many other tools reliant on Esprima, has been stuck in using new JavaScript language features until Esprima updates, and that caused our users frustration.\n\nWe decided the only way for us to move forward was to create our own parser, bringing us inline with JSHint and JSLint, and allowing us to keep implementing new features as we need them. We chose to fork Esprima instead of starting from scratch in order to move as quickly as possible with a compatible API.\n\nWith Espree 2.0.0, we are no longer a fork of Esprima but rather a translation layer between Acorn and Esprima syntax. This allows us to put work back into a community-supported parser (Acorn) that is continuing to grow and evolve while maintaining an Esprima-compatible parser for those utilities still built on Esprima.\n\n### Have you tried working with Esprima?\n\nYes. Since the start of ESLint, we've regularly filed bugs and feature requests with Esprima and will continue to do so. However, there are some different philosophies around how the projects work that need to be worked through. The initial goal was to have Espree track Esprima and eventually merge the two back together, but we ultimately decided that building on top of Acorn was a better choice due to Acorn's plugin support.\n\n### Why don't you just use Acorn?\n\nAcorn is a great JavaScript parser that produces an AST that is compatible with Esprima. Unfortunately, ESLint relies on more than just the AST to do its job. It relies on Esprima's tokens and comment attachment features to get a complete picture of the source code. We investigated switching to Acorn, but the inconsistencies between Esprima and Acorn created too much work for a project like ESLint.\n\nWe are building on top of Acorn, however, so that we can contribute back and help make Acorn even better.\n\n### What ECMAScript 6 features do you support?\n\nAll of them.\n\n### What ECMAScript 7/2016 features do you support?\n\nThere is only one ECMAScript 2016 syntax change: the exponentiation operator. Espree supports this.\n\n### What ECMAScript 2017 features do you support?\n\nThere are two ECMAScript 2017 syntax changes: `async` functions, and trailing commas in function declarations and calls. Espree supports both of them.\n\n### What ECMAScript 2018 features do you support?\n\nThere are seven ECMAScript 2018 syntax changes:\n\n* Invalid escape sequences in tagged template literals\n* Rest/spread properties\n* Async iteration\n* RegExp `s` flag\n* RegExp named capture groups\n* RegExp lookbehind assertions\n* RegExp Unicode property escapes\n\nEspree supports all of them.\n\n### What ECMAScript 2019 features do you support?\n\nBecause ECMAScript 2019 is still under development, we are implementing features as they are finalized. Currently, Espree supports:\n\n* Optional `catch` binding\n* JSON superset (`\\u2028` and `\\u2029` in string literals)\n\n### How do you determine which experimental features to support?\n\nIn general, we do not support experimental JavaScript features. We may make exceptions from time to time depending on the maturity of the features."}, "npm": {"downloads": [{"from": "2020-03-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 473483}, {"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 10372361}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 40447795}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 108476503}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 212874775}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 387185207}], "dependentsCount": 198, "starsCount": 9}, "github": {"starsCount": 1110, "forksCount": 128, "subscribersCount": 44, "issues": {"count": 429, "openCount": 11, "distribution": {"3600": 67, "10800": 37, "32400": 31, "97200": 64, "291600": 61, "874800": 43, "2624400": 42, "7873200": 31, "23619600": 30, "70858800": 16, "212576400": 7}, "isDisabled": false}, "contributors": [{"username": "nzakas", "commitsCount": 167}, {"username": "mysticatea", "commitsCount": 20}, {"username": "eslint[bot]", "commitsCount": 18}, {"username": "kaicataldo", "commitsCount": 14}, {"username": "not-an-aardvark", "commitsCount": 12}, {"username": "aladdin-add", "commitsCount": 10}, {"username": "xjamundx", "commitsCount": 5}, {"username": "FredKSchott", "commitsCount": 4}, {"username": "btmills", "commitsCount": 4}, {"username": "Hirse", "commitsCount": 3}, {"username": "platinumazure", "commitsCount": 2}, {"username": "realityking", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "Calinou", "commitsCount": 1}, {"username": "Marsup", "commitsCount": 1}, {"username": "Skalman", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "caridy", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "eTorAken", "commitsCount": 1}, {"username": "finico", "commitsCount": 1}, {"username": "garlicnation", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "iancmyers", "commitsCount": 1}, {"username": "jasonLaster", "commitsCount": 1}, {"username": "jrvidal", "commitsCount": 1}, {"username": "kahwee", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "matz3", "commitsCount": 1}, {"username": "nre", "commitsCount": 1}, {"username": "okuryu", "commitsCount": 1}, {"username": "othree", "commitsCount": 1}, {"username": "peterkc", "commitsCount": 1}, {"username": "sstern6", "commitsCount": 1}], "commits": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 3}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 4}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 4}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 7}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 23}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 8394, "testsSize": 69526878, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/espree.svg", "shields": "https://img.shields.io/npm/v/espree.svg", "content": "https://img.shields.io/npm/v/espree.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/eslint/espree.svg?branch=master", "service": "https://api.travis-ci.org/eslint/espree.svg?branch=master", "shields": "https://img.shields.io/travis/eslint/espree/master.svg", "content": "https://img.shields.io/travis/eslint/espree/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/espree.svg", "shields": "https://img.shields.io/npm/dm/espree.svg", "content": "https://img.shields.io/npm/dm/espree.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1325, "downloadsCount": 36158834.333333336, "downloadsAcceleration": 102333.67353500758, "dependentsCount": 198}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8525108860264929, "detail": {"quality": 0.9535167403375537, "popularity": 0.61855566284537, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T03:16:06.417Z", "collected": {"metadata": {"name": "esprima", "scope": "unscoped", "version": "4.0.1", "description": "ECMAScript parsing infrastructure for multipurpose analysis", "keywords": ["ast", "ecmascript", "esprima", "javascript", "parser", "syntax"], "date": "2018-07-13T08:39:14.711Z", "author": {"name": "Ariya Hidayat", "email": "ariya.hidayat@gmail.com", "username": "ariya"}, "publisher": {"username": "ariya", "email": "ariya.hidayat@gmail.com"}, "maintainers": [{"username": "ariya", "email": "ariya.hidayat@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jquery/esprima.git"}, "links": {"npm": "https://www.npmjs.com/package/esprima", "homepage": "http://esprima.org", "repository": "https://github.com/jquery/esprima", "bugs": "https://github.com/jquery/esprima/issues"}, "license": "BSD-2-Clause", "devDependencies": {"codecov.io": "~0.1.6", "escomplex-js": "1.2.0", "everything.js": "~1.0.3", "glob": "~7.1.0", "istanbul": "~0.4.0", "json-diff": "~0.3.1", "karma": "~1.3.0", "karma-chrome-launcher": "~2.0.0", "karma-detect-browsers": "~2.2.3", "karma-edge-launcher": "~0.2.0", "karma-firefox-launcher": "~1.0.0", "karma-ie-launcher": "~1.0.0", "karma-mocha": "~1.3.0", "karma-safari-launcher": "~1.0.0", "karma-safaritechpreview-launcher": "~0.0.4", "karma-sauce-launcher": "~1.1.0", "lodash": "~3.10.1", "mocha": "~3.2.0", "node-tick-processor": "~0.0.2", "regenerate": "~1.3.2", "temp": "~0.8.3", "tslint": "~5.1.0", "typescript": "~2.3.2", "typescript-formatter": "~5.1.3", "unicode-8.0.0": "~0.7.0", "webpack": "~1.14.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![NPM version](https://img.shields.io/npm/v/esprima.svg)](https://www.npmjs.com/package/esprima)\n[![npm download](https://img.shields.io/npm/dm/esprima.svg)](https://www.npmjs.com/package/esprima)\n[![Build Status](https://img.shields.io/travis/jquery/esprima/master.svg)](https://travis-ci.org/jquery/esprima)\n[![Coverage Status](https://img.shields.io/codecov/c/github/jquery/esprima/master.svg)](https://codecov.io/github/jquery/esprima)\n\n**Esprima** ([esprima.org](http://esprima.org), BSD license) is a high performance,\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nparser written in ECMAScript (also popularly known as\n[JavaScript](https://en.wikipedia.org/wiki/JavaScript)).\nEsprima is created and maintained by [Ariya Hidayat](https://twitter.com/ariyahidayat),\nwith the help of [many contributors](https://github.com/jquery/esprima/contributors).\n\n### Features\n\n- Full support for ECMAScript 2017 ([ECMA-262 8th Edition](http://www.ecma-international.org/publications/standards/Ecma-262.htm))\n- Sensible [syntax tree format](https://github.com/estree/estree/blob/master/es5.md) as standardized by [ESTree project](https://github.com/estree/estree)\n- Experimental support for [JSX](https://facebook.github.io/jsx/), a syntax extension for [React](https://facebook.github.io/react/)\n- Optional tracking of syntax node location (index-based and line-column)\n- [Heavily tested](http://esprima.org/test/ci.html) (~1500 [unit tests](https://github.com/jquery/esprima/tree/master/test/fixtures) with [full code coverage](https://codecov.io/github/jquery/esprima))\n\n### API\n\nEsprima can be used to perform [lexical analysis](https://en.wikipedia.org/wiki/Lexical_analysis) (tokenization) or [syntactic analysis](https://en.wikipedia.org/wiki/Parsing) (parsing) of a JavaScript program.\n\nA simple example on Node.js REPL:\n\n```javascript\n> var esprima = require('esprima');\n> var program = 'const answer = 42';\n\n> esprima.tokenize(program);\n[ { type: 'Keyword', value: 'const' },\n  { type: 'Identifier', value: 'answer' },\n  { type: 'Punctuator', value: '=' },\n  { type: 'Numeric', value: '42' } ]\n  \n> esprima.parseScript(program);\n{ type: 'Program',\n  body:\n   [ { type: 'VariableDeclaration',\n       declarations: [Object],\n       kind: 'const' } ],\n  sourceType: 'script' }\n```\n\nFor more information, please read the [complete documentation](http://esprima.org/doc)."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1146847}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 23215974}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 96957397}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 268942951}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 541241113}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1033889985}], "dependentsCount": 1634, "starsCount": 74}, "github": {"homepage": "http://esprima.org", "starsCount": 5591, "forksCount": 696, "subscribersCount": 160, "issues": {"count": 1336, "openCount": 117, "distribution": {"3600": 90, "10800": 58, "32400": 102, "97200": 287, "291600": 227, "874800": 181, "2624400": 102, "7873200": 66, "23619600": 104, "70858800": 55, "212576400": 64}, "isDisabled": false}, "contributors": [{"username": "ariya", "commitsCount": 1011}, {"username": "Constellation", "commitsCount": 42}, {"username": "ikarienator", "commitsCount": 26}, {"username": "jboekesteijn", "commitsCount": 13}, {"username": "mathiasbynens", "commitsCount": 12}, {"username": "michaelficarra", "commitsCount": 10}, {"username": "jasonLaster", "commitsCount": 9}, {"username": "Swatinem", "commitsCount": 8}, {"username": "mikesherov", "commitsCount": 7}, {"username": "mrennie", "commitsCount": 6}, {"username": "JosephPecoraro", "commitsCount": 3}, {"username": "Kingwl", "commitsCount": 3}, {"username": "jugglinmike", "commitsCount": 3}, {"username": "fishbar", "commitsCount": 2}, {"username": "jifeon", "commitsCount": 2}, {"username": "jryans", "commitsCount": 2}, {"username": "kondi", "commitsCount": 2}, {"username": "mariusschulz", "commitsCount": 2}, {"username": "oxyc", "commitsCount": 2}, {"username": "WolfgangKluge", "commitsCount": 1}, {"username": "XeCycle", "commitsCount": 1}, {"username": "ad-si", "commitsCount": 1}, {"username": "beizhang", "commitsCount": 1}, {"username": "benjamn", "commitsCount": 1}, {"username": "bnjmnt4n", "commitsCount": 1}, {"username": "btmills", "commitsCount": 1}, {"username": "calvinf", "commitsCount": 1}, {"username": "caridy", "commitsCount": 1}, {"username": "cliffano", "commitsCount": 1}, {"username": "cvrebert", "commitsCount": 1}, {"username": "disnet", "commitsCount": 1}, {"username": "dvdotsenko", "commitsCount": 1}, {"username": "ef4", "commitsCount": 1}, {"username": "espadrine", "commitsCount": 1}, {"username": "eugeneotto", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "gibson042", "commitsCount": 1}, {"username": "insidewhy", "commitsCount": 1}, {"username": "jeffmo", "commitsCount": 1}, {"username": "johnjbarton", "commitsCount": 1}, {"username": "jordanstephens", "commitsCount": 1}, {"username": "markelog", "commitsCount": 1}, {"username": "mduvall", "commitsCount": 1}, {"username": "metafeather", "commitsCount": 1}, {"username": "mfitz3", "commitsCount": 1}, {"username": "nzakas", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "rdela", "commitsCount": 1}, {"username": "sanex3339", "commitsCount": 1}, {"username": "sebmarkbage", "commitsCount": 1}, {"username": "serima", "commitsCount": 1}, {"username": "squarooticus", "commitsCount": 1}, {"username": "syllant", "commitsCount": 1}, {"username": "thlorenz", "commitsCount": 1}, {"username": "tj", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "voloko", "commitsCount": 1}, {"username": "zaach", "commitsCount": 1}, {"username": "zjmiller", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}], "statuses": [{"context": "ci/circleci", "state": "success"}, {"context": "licence/cla", "state": "pending"}, {"context": "continuous-integration/appveyor/pr", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "error"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 2427, "testsSize": 53949352, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/esprima.svg", "shields": "https://img.shields.io/npm/v/esprima.svg", "content": "https://img.shields.io/npm/v/esprima.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/esprima.svg", "shields": "https://img.shields.io/npm/dm/esprima.svg", "content": "https://img.shields.io/npm/dm/esprima.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jquery/esprima/master.svg", "service": "https://api.travis-ci.org/jquery/esprima.svg?branch=master", "shields": "https://img.shields.io/travis/jquery/esprima/master.svg", "content": "https://img.shields.io/travis/jquery/esprima/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/jquery/esprima/master.svg", "service": "https://codecov.io/github/jquery/esprima/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/jquery/esprima/master.svg", "content": "https://img.shields.io/codecov/c/github/jquery/esprima/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "tslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.865, "health": 1, "branding": 1}, "popularity": {"communityInterest": 6580, "downloadsCount": 89647650.33333333, "downloadsAcceleration": 143414.42570395733, "dependentsCount": 1634}, "maintenance": {"releasesFrequency": 0.29897260273972603, "commitsFrequency": 0.34304794520547943, "openIssues": 1, "issuesDistribution": 0.1444904036623722}}, "score": {"final": 0.821903191812646, "detail": {"quality": 0.9817216364274325, "popularity": 0.7842235535807801, "maintenance": 0.7225955918032665}}}
{"analyzedAt": "2020-02-14T15:54:01.583Z", "collected": {"metadata": {"name": "esquery", "scope": "unscoped", "version": "1.1.0", "description": "A query library for ECMAScript AST using a CSS selector like query language.", "keywords": ["ast", "ecmascript", "javascript", "query"], "date": "2020-02-12T18:14:15.571Z", "author": {"name": "Joel Feenstra", "email": "jrfeenst+esquery@gmail.com"}, "publisher": {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}, "maintainers": [{"username": "jrfeenst", "email": "jrfeenst@gmail.com"}, {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}], "repository": {"type": "git", "url": "git+https://github.com/jrfeenst/esquery.git"}, "links": {"npm": "https://www.npmjs.com/package/esquery", "homepage": "https://github.com/jrfeenst/esquery#readme", "repository": "https://github.com/jrfeenst/esquery", "bugs": "https://github.com/jrfeenst/esquery/issues"}, "license": "BSD-3-Clause", "dependencies": {"estraverse": "^4.0.0"}, "devDependencies": {"jstestr": ">=0.4", "pegjs": "~0.7.0", "commonjs-everywhere": "~0.9.4", "esprima": "~1.1.1"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "ESQuery is a library for querying the AST output by Esprima for patterns of syntax using a CSS style selector system. Check out the demo:\n\n[demo](https://estools.github.io/esquery/)\n\nThe following selectors are supported:\n* AST node type: `ForStatement`\n* [wildcard](http://dev.w3.org/csswg/selectors4/#universal-selector): `*`\n* [attribute existence](http://dev.w3.org/csswg/selectors4/#attribute-selectors): `[attr]`\n* [attribute value](http://dev.w3.org/csswg/selectors4/#attribute-selectors): `[attr=\"foo\"]` or `[attr=123]`\n* attribute regex: `[attr=/foo.*/]`\n* attribute conditions: `[attr!=\"foo\"]`, `[attr>2]`, `[attr<3]`, `[attr>=2]`, or `[attr<=3]` \n* nested attribute: `[attr.level2=\"foo\"]`\n* field: `FunctionDeclaration > Identifier.id`\n* [First](http://dev.w3.org/csswg/selectors4/#the-first-child-pseudo) or [last](http://dev.w3.org/csswg/selectors4/#the-last-child-pseudo) child: `:first-child` or `:last-child`\n* [nth-child](http://dev.w3.org/csswg/selectors4/#the-nth-child-pseudo) (no ax+b support): `:nth-child(2)`\n* [nth-last-child](http://dev.w3.org/csswg/selectors4/#the-nth-last-child-pseudo) (no ax+b support): `:nth-last-child(1)`\n* [descendant](http://dev.w3.org/csswg/selectors4/#descendant-combinators): `ancestor descendant`\n* [child](http://dev.w3.org/csswg/selectors4/#child-combinators): `parent > child`\n* [following sibling](http://dev.w3.org/csswg/selectors4/#general-sibling-combinators): `node ~ sibling`\n* [adjacent sibling](http://dev.w3.org/csswg/selectors4/#adjacent-sibling-combinators): `node + adjacent`\n* [negation](http://dev.w3.org/csswg/selectors4/#negation-pseudo): `:not(ForStatement)`\n* [has](https://drafts.csswg.org/selectors-4/#has-pseudo): `:has(ForStatement)`\n* [matches-any](http://dev.w3.org/csswg/selectors4/#matches): `:matches([attr] > :first-child, :last-child)`\n* [subject indicator](http://dev.w3.org/csswg/selectors4/#subject): `!IfStatement > [name=\"foo\"]`\n* class of AST node: `:statement`, `:expression`, `:declaration`, `:function`, or `:pattern`\n\n[![Build Status](https://travis-ci.org/estools/esquery.png?branch=master)](https://travis-ci.org/estools/esquery)"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1558562}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 7460782}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 30184088}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 77378496}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 151910259}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 280461021}], "dependentsCount": 91, "starsCount": 3}, "github": {"homepage": "http://estools.github.io/esquery/", "starsCount": 394, "forksCount": 52, "subscribersCount": 10, "issues": {"count": 78, "openCount": 25, "distribution": {"3600": 3, "10800": 4, "32400": 7, "97200": 6, "291600": 10, "874800": 9, "2624400": 2, "7873200": 4, "23619600": 6, "70858800": 7, "212576400": 20}, "isDisabled": false}, "contributors": [{"username": "michaelficarra", "commitsCount": 37}, {"username": "jrfeenst", "commitsCount": 32}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "Qard", "commitsCount": 1}, {"username": "Quramy", "commitsCount": 1}, {"username": "cherryblossom000", "commitsCount": 1}, {"username": "goloroden", "commitsCount": 1}, {"username": "jupenur", "commitsCount": 1}, {"username": "mysticatea", "commitsCount": 1}, {"username": "nwronski", "commitsCount": 1}, {"username": "sebmck", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 4}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2129, "testsSize": 44823, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/estools/esquery.png?branch=master", "service": "https://api.travis-ci.org/estools/esquery.svg?branch=master", "shields": "https://img.shields.io/travis/estools/esquery/master.svg", "content": "https://img.shields.io/travis/estools/esquery/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 470, "downloadsCount": 25792832, "downloadsAcceleration": 78327.35804794522, "dependentsCount": 91}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.5010273972602739, "openIssues": 0.7991452991452991, "issuesDistribution": 0}}, "score": {"final": 0.7054133086839081, "detail": {"quality": 0.9377660342578539, "popularity": 0.548591781206406, "maintenance": 0.663075357098028}}}
{"analyzedAt": "2020-02-08T21:03:57.866Z", "collected": {"metadata": {"name": "esrecurse", "scope": "unscoped", "version": "4.2.1", "description": "ECMAScript AST recursive visitor", "date": "2018-02-26T15:47:34.732Z", "publisher": {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}, "maintainers": [{"username": "constellation", "email": "utatane.tea@gmail.com"}, {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/estools/esrecurse.git"}, "links": {"npm": "https://www.npmjs.com/package/esrecurse", "homepage": "https://github.com/estools/esrecurse", "repository": "https://github.com/estools/esrecurse", "bugs": "https://github.com/estools/esrecurse/issues"}, "license": "BSD-2-Clause", "dependencies": {"estraverse": "^4.1.0"}, "devDependencies": {"babel-cli": "^6.24.1", "babel-eslint": "^7.2.3", "babel-preset-es2015": "^6.24.1", "babel-register": "^6.24.1", "chai": "^4.0.2", "esprima": "^4.0.0", "gulp": "^3.9.0", "gulp-bump": "^2.7.0", "gulp-eslint": "^4.0.0", "gulp-filter": "^5.0.0", "gulp-git": "^2.4.1", "gulp-mocha": "^4.3.1", "gulp-tag-version": "^1.2.1", "jsdoc": "^3.3.0-alpha10", "minimist": "^1.1.0"}, "releases": [{"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2018-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "### Esrecurse [![Build Status](https://travis-ci.org/estools/esrecurse.svg?branch=master)](https://travis-ci.org/estools/esrecurse)\n\nEsrecurse ([esrecurse](https://github.com/estools/esrecurse)) is\n[ECMAScript](https://www.ecma-international.org/publications/standards/Ecma-262.htm)\nrecursive traversing functionality.\n\n### Example Usage\n\nThe following code will output all variables declared at the root of a file.\n\n```javascript\nesrecurse.visit(ast, {\n    XXXStatement: function (node) {\n        this.visit(node.left);\n        // do something...\n        this.visit(node.right);\n    }\n});\n```\n\nWe can use `Visitor` instance.\n\n```javascript\nvar visitor = new esrecurse.Visitor({\n    XXXStatement: function (node) {\n        this.visit(node.left);\n        // do something...\n        this.visit(node.right);\n    }\n});\n\nvisitor.visit(ast);\n```\n\nWe can inherit `Visitor` instance easily.\n\n```javascript\nclass Derived extends esrecurse.Visitor {\n    constructor()\n    {\n        super(null);\n    }\n\n    XXXStatement(node) {\n    }\n}\n```\n\n```javascript\nfunction DerivedVisitor() {\n    esrecurse.Visitor.call(/* this for constructor */  this  /* visitor object automatically becomes this. */);\n}\nutil.inherits(DerivedVisitor, esrecurse.Visitor);\nDerivedVisitor.prototype.XXXStatement = function (node) {\n    this.visit(node.left);\n    // do something...\n    this.visit(node.right);\n};\n```\n\nAnd you can invoke default visiting operation inside custom visit operation.\n\n```javascript\nfunction DerivedVisitor() {\n    esrecurse.Visitor.call(/* this for constructor */  this  /* visitor object automatically becomes this. */);\n}\nutil.inherits(DerivedVisitor, esrecurse.Visitor);\nDerivedVisitor.prototype.XXXStatement = function (node) {\n    // do something...\n    this.visitChildren(node);\n};\n```\n\nThe `childVisitorKeys` option does customize the behaviour of `this.visitChildren(node)`.\nWe can use user-defined node types.\n\n```javascript\n// This tree contains a user-defined `TestExpression` node.\nvar tree = {\n    type: 'TestExpression',\n\n    // This 'argument' is the property containing the other **node**.\n    argument: {\n        type: 'Literal',\n        value: 20\n    },\n\n    // This 'extended' is the property not containing the other **node**.\n    extended: true\n};\nesrecurse.visit(\n    ast,\n    {\n        Literal: function (node) {\n            // do something...\n        }\n    },\n    {\n        // Extending the existing traversing rules.\n        childVisitorKeys: {\n            // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ]\n            TestExpression: ['argument']\n        }\n    }\n);\n```\n\nWe can use the `fallback` option as well.\nIf the `fallback` option is `\"iteration\"`, `esrecurse` would visit all enumerable properties of unknown nodes.\nPlease note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. `node.parent`).\n\n```javascript\nesrecurse.visit(\n    ast,\n    {\n        Literal: function (node) {\n            // do something...\n        }\n    },\n    {\n        fallback: 'iteration'\n    }\n);\n```\n\nIf the `fallback` option is a function, `esrecurse` calls this function to determine the enumerable properties of unknown nodes.\nPlease note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. `node.parent`).\n\n```javascript\nesrecurse.visit(\n    ast,\n    {\n        Literal: function (node) {\n            // do something...\n        }\n    },\n    {\n        fallback: function (node) {\n            return Object.keys(node).filter(function(key) {\n                return key !== 'argument'\n            });\n        }\n    }\n);\n```\n\n### License\n\nCopyright (C) 2014 [Yusuke Suzuki](https://github.com/Constellation)\n (twitter: [@Constellation](https://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."}, "npm": {"downloads": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 1532323}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 9085655}, {"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 37954625}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 100439730}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 197517067}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 367252953}], "dependentsCount": 52, "starsCount": 2}, "github": {"starsCount": 59, "forksCount": 5, "subscribersCount": 14, "issues": {"count": 20, "openCount": 3, "distribution": {"3600": 5, "10800": 1, "32400": 1, "97200": 3, "291600": 2, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 5, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "Constellation", "commitsCount": 28}, {"username": "shinnn", "commitsCount": 8}, {"username": "michaelficarra", "commitsCount": 3}, {"username": "mysticatea", "commitsCount": 2}, {"username": "nzakas", "commitsCount": 2}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "willnode", "commitsCount": 1}], "commits": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5102, "testsSize": 8838, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/estools/esrecurse.svg?branch=master", "service": "https://api.travis-ci.org/estools/esrecurse.svg?branch=master", "shields": "https://img.shields.io/travis/estools/esrecurse/master.svg", "content": "https://img.shields.io/travis/estools/esrecurse/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 88, "downloadsCount": 33479910, "downloadsAcceleration": 87531.56440258754, "dependentsCount": 52}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.809169838407773, "detail": {"quality": 0.9377660342578539, "popularity": 0.5082247034316273, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T08:03:25.234Z", "collected": {"metadata": {"name": "estraverse", "scope": "unscoped", "version": "4.3.0", "description": "ECMAScript JS AST traversal functions", "date": "2019-08-13T22:08:56.155Z", "publisher": {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}, "maintainers": [{"username": "constellation", "email": "utatane.tea@gmail.com"}, {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/estools/estraverse.git"}, "links": {"npm": "https://www.npmjs.com/package/estraverse", "homepage": "https://github.com/estools/estraverse", "repository": "https://github.com/estools/estraverse", "bugs": "https://github.com/estools/estraverse/issues"}, "license": "BSD-2-Clause", "devDependencies": {"babel-preset-env": "^1.6.1", "babel-register": "^6.3.13", "chai": "^2.1.1", "espree": "^1.11.0", "gulp": "^3.8.10", "gulp-bump": "^0.2.2", "gulp-filter": "^2.0.0", "gulp-git": "^1.0.1", "gulp-tag-version": "^1.3.0", "jshint": "^2.5.6", "mocha": "^2.1.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "### Estraverse [![Build Status](https://secure.travis-ci.org/estools/estraverse.svg)](http://travis-ci.org/estools/estraverse)\n\nEstraverse ([estraverse](http://github.com/estools/estraverse)) is\n[ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\ntraversal functions from [esmangle project](http://github.com/estools/esmangle).\n\n### Documentation\n\nYou can find usage docs at [wiki page](https://github.com/estools/estraverse/wiki/Usage).\n\n### Example Usage\n\nThe following code will output all variables declared at the root of a file.\n\n```javascript\nestraverse.traverse(ast, {\n    enter: function (node, parent) {\n        if (node.type == 'FunctionExpression' || node.type == 'FunctionDeclaration')\n            return estraverse.VisitorOption.Skip;\n    },\n    leave: function (node, parent) {\n        if (node.type == 'VariableDeclarator')\n          console.log(node.id.name);\n    }\n});\n```\n\nWe can use `this.skip`, `this.remove` and `this.break` functions instead of using Skip, Remove and Break.\n\n```javascript\nestraverse.traverse(ast, {\n    enter: function (node) {\n        this.break();\n    }\n});\n```\n\nAnd estraverse provides `estraverse.replace` function. When returning node from `enter`/`leave`, current node is replaced with it.\n\n```javascript\nresult = estraverse.replace(tree, {\n    enter: function (node) {\n        // Replace it with replaced.\n        if (node.type === 'Literal')\n            return replaced;\n    }\n});\n```\n\nBy passing `visitor.keys` mapping, we can extend estraverse traversing functionality.\n\n```javascript\n// This tree contains a user-defined `TestExpression` node.\nvar tree = {\n    type: 'TestExpression',\n\n    // This 'argument' is the property containing the other **node**.\n    argument: {\n        type: 'Literal',\n        value: 20\n    },\n\n    // This 'extended' is the property not containing the other **node**.\n    extended: true\n};\nestraverse.traverse(tree, {\n    enter: function (node) { },\n\n    // Extending the existing traversing rules.\n    keys: {\n        // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ]\n        TestExpression: ['argument']\n    }\n});\n```\n\nBy passing `visitor.fallback` option, we can control the behavior when encountering unknown nodes.\n\n```javascript\n// This tree contains a user-defined `TestExpression` node.\nvar tree = {\n    type: 'TestExpression',\n\n    // This 'argument' is the property containing the other **node**.\n    argument: {\n        type: 'Literal',\n        value: 20\n    },\n\n    // This 'extended' is the property not containing the other **node**.\n    extended: true\n};\nestraverse.traverse(tree, {\n    enter: function (node) { },\n\n    // Iterating the child **nodes** of unknown nodes.\n    fallback: 'iteration'\n});\n```\n\nWhen `visitor.fallback` is a function, we can determine which keys to visit on each node.\n\n```javascript\n// This tree contains a user-defined `TestExpression` node.\nvar tree = {\n    type: 'TestExpression',\n\n    // This 'argument' is the property containing the other **node**.\n    argument: {\n        type: 'Literal',\n        value: 20\n    },\n\n    // This 'extended' is the property not containing the other **node**.\n    extended: true\n};\nestraverse.traverse(tree, {\n    enter: function (node) { },\n\n    // Skip the `argument` property of each node\n    fallback: function(node) {\n        return Object.keys(node).filter(function(key) {\n            return key !== 'argument';\n        });\n    }\n});\n```\n\n### License\n\nCopyright (C) 2012-2016 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 719523}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 14313707}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 57670942}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 154277021}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 306862832}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 560517381}], "dependentsCount": 641, "starsCount": 10}, "github": {"starsCount": 715, "forksCount": 111, "subscribersCount": 25, "issues": {"count": 105, "openCount": 30, "distribution": {"3600": 17, "10800": 6, "32400": 8, "97200": 6, "291600": 12, "874800": 4, "2624400": 6, "7873200": 3, "23619600": 8, "70858800": 12, "212576400": 23}, "isDisabled": false}, "contributors": [{"username": "Constellation", "commitsCount": 88}, {"username": "michaelficarra", "commitsCount": 10}, {"username": "RReverser", "commitsCount": 9}, {"username": "eventualbuddha", "commitsCount": 6}, {"username": "realityking", "commitsCount": 3}, {"username": "tricknotes", "commitsCount": 3}, {"username": "azu", "commitsCount": 2}, {"username": "nzakas", "commitsCount": 2}, {"username": "shz", "commitsCount": 2}, {"username": "twada", "commitsCount": 2}, {"username": "DamonOehlman", "commitsCount": 1}, {"username": "EsrefDurna", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "SimonDegraeve", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "aladdin-add", "commitsCount": 1}, {"username": "dkoleary88", "commitsCount": 1}, {"username": "edef1c", "commitsCount": 1}, {"username": "fpirsch", "commitsCount": 1}, {"username": "koba04", "commitsCount": 1}, {"username": "mazurov", "commitsCount": 1}, {"username": "mysticatea", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4865, "testsSize": 226261, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/estools/estraverse.svg", "service": "https://api.travis-ci.org/estools/estraverse.svg", "shields": "https://img.shields.io/travis/estools/estraverse.svg", "content": "https://img.shields.io/travis/estools/estraverse.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 884, "downloadsCount": 51425673.666666664, "downloadsAcceleration": 138957.5323439879, "dependentsCount": 641}, "maintenance": {"releasesFrequency": 0.12328767123287673, "commitsFrequency": 0.023013698630136987, "openIssues": 0.8571428571428572, "issuesDistribution": 0}}, "score": {"final": 0.6253172075967792, "detail": {"quality": 0.9547045235275585, "popularity": 0.6588139527587061, "maintenance": 0.30948847735132734}}}
{"analyzedAt": "2020-02-05T23:18:22.645Z", "collected": {"metadata": {"name": "esutils", "scope": "unscoped", "version": "2.0.3", "description": "utility box for ECMAScript language tools", "date": "2019-07-31T01:10:54.228Z", "publisher": {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}, "maintainers": [{"username": "constellation", "email": "utatane.tea@gmail.com"}, {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/estools/esutils.git"}, "links": {"npm": "https://www.npmjs.com/package/esutils", "homepage": "https://github.com/estools/esutils", "repository": "https://github.com/estools/esutils", "bugs": "https://github.com/estools/esutils/issues"}, "license": "BSD-2-Clause", "devDependencies": {"chai": "~1.7.2", "coffee-script": "~1.6.3", "jshint": "2.6.3", "mocha": "~2.2.1", "regenerate": "~1.3.1", "unicode-9.0.0": "~0.7.0"}, "releases": [{"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 2}, {"from": "2018-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "### esutils [![Build Status](https://secure.travis-ci.org/estools/esutils.svg)](http://travis-ci.org/estools/esutils)\nesutils ([esutils](http://github.com/estools/esutils)) is\nutility box for ECMAScript language tools.\n\n### API\n\n### ast\n\n#### ast.isExpression(node)\n\nReturns true if `node` is an Expression as defined in ECMA262 edition 5.1 section\n[11](https://es5.github.io/#x11).\n\n#### ast.isStatement(node)\n\nReturns true if `node` is a Statement as defined in ECMA262 edition 5.1 section\n[12](https://es5.github.io/#x12).\n\n#### ast.isIterationStatement(node)\n\nReturns true if `node` is an IterationStatement as defined in ECMA262 edition\n5.1 section [12.6](https://es5.github.io/#x12.6).\n\n#### ast.isSourceElement(node)\n\nReturns true if `node` is a SourceElement as defined in ECMA262 edition 5.1\nsection [14](https://es5.github.io/#x14).\n\n#### ast.trailingStatement(node)\n\nReturns `Statement?` if `node` has trailing `Statement`.\n```js\nif (cond)\n    consequent;\n```\nWhen taking this `IfStatement`, returns `consequent;` statement.\n\n#### ast.isProblematicIfStatement(node)\n\nReturns true if `node` is a problematic IfStatement. If `node` is a problematic `IfStatement`, `node` cannot be represented as an one on one JavaScript code.\n```js\n{\n    type: 'IfStatement',\n    consequent: {\n        type: 'WithStatement',\n        body: {\n            type: 'IfStatement',\n            consequent: {type: 'EmptyStatement'}\n        }\n    },\n    alternate: {type: 'EmptyStatement'}\n}\n```\nThe above node cannot be represented as a JavaScript code, since the top level `else` alternate belongs to an inner `IfStatement`.\n\n\n### code\n\n#### code.isDecimalDigit(code)\n\nReturn true if provided code is decimal digit.\n\n#### code.isHexDigit(code)\n\nReturn true if provided code is hexadecimal digit.\n\n#### code.isOctalDigit(code)\n\nReturn true if provided code is octal digit.\n\n#### code.isWhiteSpace(code)\n\nReturn true if provided code is white space. White space characters are formally defined in ECMA262.\n\n#### code.isLineTerminator(code)\n\nReturn true if provided code is line terminator. Line terminator characters are formally defined in ECMA262.\n\n#### code.isIdentifierStart(code)\n\nReturn true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n#### code.isIdentifierPart(code)\n\nReturn true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n### keyword\n\n#### keyword.isKeywordES5(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 5.1. They are formally defined in ECMA262 sections\n[7.6.1.1](http://es5.github.io/#x7.6.1.1) and [7.6.1.2](http://es5.github.io/#x7.6.1.2),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isKeywordES6(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 6. They are formally defined in ECMA262 sections\n[11.6.2.1](http://ecma-international.org/ecma-262/6.0/#sec-keywords) and\n[11.6.2.2](http://ecma-international.org/ecma-262/6.0/#sec-future-reserved-words),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isReservedWordES5(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 5.1.\nThey are formally defined in ECMA262 section [7.6.1](http://es5.github.io/#x7.6.1).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isReservedWordES6(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 6.\nThey are formally defined in ECMA262 section [11.6.2](http://ecma-international.org/ecma-262/6.0/#sec-reserved-words).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isRestrictedWord(id)\n\nReturns `true` if provided identifier string is one of `eval` or `arguments`.\nThey are restricted in strict mode code throughout ECMA262 edition 5.1 and\nin ECMA262 edition 6 section [12.1.1](http://ecma-international.org/ecma-262/6.0/#sec-identifiers-static-semantics-early-errors).\n\n#### keyword.isIdentifierNameES5(id)\n\nReturn true if provided identifier string is an IdentifierName as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6).\n\n#### keyword.isIdentifierNameES6(id)\n\nReturn true if provided identifier string is an IdentifierName as specified in\nECMA262 edition 6 section [11.6](http://ecma-international.org/ecma-262/6.0/#sec-names-and-keywords).\n\n#### keyword.isIdentifierES5(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6). If the `strict`\nflag is truthy, this function additionally checks whether `id` is an Identifier\nunder strict mode.\n\n#### keyword.isIdentifierES6(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 6 section [12.1](http://ecma-international.org/ecma-262/6.0/#sec-identifiers).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis an Identifier under strict mode.\n\n### License\n\nCopyright (C) 2013 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."}, "npm": {"downloads": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 2534327}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 13107655}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 54724980}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 146266181}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 291543988}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 527036408}], "dependentsCount": 194, "starsCount": 4}, "github": {"starsCount": 95, "forksCount": 21, "subscribersCount": 7, "issues": {"count": 32, "openCount": 5, "distribution": {"3600": 2, "10800": 2, "32400": 7, "97200": 9, "291600": 3, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 2, "70858800": 2, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "Constellation", "commitsCount": 23}, {"username": "michaelficarra", "commitsCount": 13}, {"username": "mathiasbynens", "commitsCount": 5}, {"username": "Zearin", "commitsCount": 2}, {"username": "c-okelly", "commitsCount": 1}, {"username": "leebyron", "commitsCount": 1}], "commits": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 2}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6828, "testsSize": 29852}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/estools/esutils.svg", "service": "https://api.travis-ci.org/estools/esutils.svg", "shields": "https://img.shields.io/travis/estools/esutils.svg", "content": "https://img.shields.io/travis/estools/esutils.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 133, "downloadsCount": 48755393.666666664, "downloadsAcceleration": 138996.02336377476, "dependentsCount": 194}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8351613066587209, "detail": {"quality": 0.9547045235275585, "popularity": 0.5679673362031602, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-02T23:59:34.057Z", "collected": {"metadata": {"name": "expand-brackets", "scope": "unscoped", "version": "4.0.0", "description": "Expand POSIX bracket expressions (character classes) in glob patterns.", "keywords": ["bracket", "brackets", "character class", "expand", "expression", "posix"], "date": "2018-04-30T10:28:42.598Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "danez", "email": "daniel@tschinder.de"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "es128", "email": "elan.shanker+npm@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Elan Shanker", "url": "https://github.com/es128"}, {"name": "Eugene Sharygin", "url": "https://github.com/eush77"}, {"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}, {"name": "Martin Kol\u00e1rik", "email": "martin@kolarik.sk", "url": "http://kolarik.sk"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/expand-brackets.git"}, "links": {"npm": "https://www.npmjs.com/package/expand-brackets", "homepage": "https://github.com/micromatch/expand-brackets", "repository": "https://github.com/micromatch/expand-brackets", "bugs": "https://github.com/micromatch/expand-brackets/issues"}, "license": "MIT", "dependencies": {"posix-character-classes": "^1.0.0", "regex-not": "^1.0.0", "snapdragon": "^0.12.0", "to-regex": "^3.0.1"}, "devDependencies": {"bash-match": "^1.0.2", "gulp-format-md": "^1.0.0", "helper-changelog": "^0.3.0", "minimatch": "^3.0.3", "mocha": "^5.1.1", "multimatch": "^2.1.0", "yargs-parser": "^10.0.0"}, "releases": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2018-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# expand-brackets [![NPM version](https://img.shields.io/npm/v/expand-brackets.svg?style=flat)](https://www.npmjs.com/package/expand-brackets) [![NPM monthly downloads](https://img.shields.io/npm/dm/expand-brackets.svg?style=flat)](https://npmjs.org/package/expand-brackets)  [![NPM total downloads](https://img.shields.io/npm/dt/expand-brackets.svg?style=flat)](https://npmjs.org/package/expand-brackets) [![Linux Build Status](https://img.shields.io/travis/micromatch/expand-brackets.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/expand-brackets) [![Windows Build Status](https://img.shields.io/appveyor/ci/micromatch/expand-brackets.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/micromatch/expand-brackets)\n\n> Expand POSIX bracket expressions (character classes) in glob patterns.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save expand-brackets\n```\n\nInstall with [yarn](https://yarnpkg.com):\n\n```sh\n$ yarn add expand-brackets\n```\n\n## Usage\n\n```js\nvar brackets = require('expand-brackets');\nbrackets(string[, options]);\n```\n\n**Params**\n\nThe main export is a function that takes the following parameters:\n\n* `pattern` **{String}**: the pattern to convert\n* `options` **{Object}**: optionally supply an options object\n* `returns` **{String}**: returns a string that can be used to create a regex\n\n**Example**\n\n```js\nconsole.log(brackets('[![:lower:]]'));\n//=> '[^a-z]'\n```\n\n## API\n\n### [brackets](index.js#L27)\n\nParses the given POSIX character class `pattern` and returns a\nstring that can be used for creating regular expressions for matching.\n\n**Params**\n\n* `pattern` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**\n\n### [.match](index.js#L51)\n\nTakes an array of strings and a POSIX character class pattern, and returns a new array with only the strings that matched the pattern.\n\n**Params**\n\n* `arr` **{Array}**: Array of strings to match\n* `pattern` **{String}**: POSIX character class pattern(s)\n* `options` **{Object}**\n* `returns` **{Array}**\n\n**Example**\n\n```js\nconst brackets = require('expand-brackets');\nconsole.log(brackets.match(['1', 'a', 'ab'], '[[:alpha:]]'));\n//=> ['a']\n\nconsole.log(brackets.match(['1', 'a', 'ab'], '[[:alpha:]]+'));\n//=> ['a', 'ab']\n```\n\n### [.isMatch](index.js#L97)\n\nReturns true if the specified `string` matches the given brackets `pattern`.\n\n**Params**\n\n* `string` **{String}**: String to match\n* `pattern` **{String}**: Poxis pattern\n* `options` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst brackets = require('expand-brackets');\n\nconsole.log(brackets.isMatch('a.a', '[[:alpha:]].[[:alpha:]]'));\n//=> true\nconsole.log(brackets.isMatch('1.2', '[[:alpha:]].[[:alpha:]]'));\n//=> false\n```\n\n### [.matcher](index.js#L120)\n\nTakes a POSIX character class pattern and returns a matcher function. The returned function takes the string to match as its only argument.\n\n**Params**\n\n* `pattern` **{String}**: Poxis pattern\n* `options` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst brackets = require('expand-brackets');\nconst isMatch = brackets.matcher('[[:lower:]].[[:upper:]]');\n\nconsole.log(isMatch('a.a'));\n//=> false\nconsole.log(isMatch('a.A'));\n//=> true\n```\n\n### [.makeRe](index.js#L140)\n\nCreate a regular expression from the given `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: The pattern to convert to regex.\n* `options` **{Object}**\n* `returns` **{RegExp}**\n\n**Example**\n\n```js\nconst brackets = require('expand-brackets');\nconst re = brackets.makeRe('[[:alpha:]]');\nconsole.log(re);\n//=> /^(?:[a-zA-Z])$/\n```\n\n### [.create](index.js#L182)\n\nParses the given POSIX character class `pattern` and returns an object with the compiled `output` and optional source `map`.\n\n**Params**\n\n* `pattern` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**\n\n**Example**\n\n```js\nconst brackets = require('expand-brackets');\nconsole.log(brackets('[[:alpha:]]'));\n// { options: { source: 'string' },\n//   input: '[[:alpha:]]',\n//   state: {},\n//   compilers:\n//    { eos: [Function],\n//      noop: [Function],\n//      bos: [Function],\n//      not: [Function],\n//      escape: [Function],\n//      text: [Function],\n//      posix: [Function],\n//      bracket: [Function],\n//      'bracket.open': [Function],\n//      'bracket.inner': [Function],\n//      'bracket.literal': [Function],\n//      'bracket.close': [Function] },\n//   output: '[a-zA-Z]',\n//   ast:\n//    { type: 'root',\n//      errors: [],\n//      nodes: [ [Object], [Object], [Object] ] },\n//   parsingErrors: [] }\n```\n\n## Options\n\n### options.sourcemap\n\nGenerate a source map for the given pattern.\n\n**Example**\n\n```js\nvar res = brackets('[:alpha:]', {sourcemap: true});\n\nconsole.log(res.map);\n// { version: 3,\n//   sources: [ 'brackets' ],\n//   names: [],\n//   mappings: 'AAAA,MAAS',\n//   sourcesContent: [ '[:alpha:]' ] }\n```\n\n### POSIX Character classes\n\nThe following named POSIX bracket expressions are supported:\n\n* `[:alnum:]`: Alphanumeric characters (`a-zA-Z0-9]`)\n* `[:alpha:]`: Alphabetic characters (`a-zA-Z]`)\n* `[:blank:]`: Space and tab (`[ t]`)\n* `[:digit:]`: Digits (`[0-9]`)\n* `[:lower:]`: Lowercase letters (`[a-z]`)\n* `[:punct:]`: Punctuation and symbols. (`[!\"#$%&'()*+, -./:;<=>?@ [\\]^_``{|}~]`)\n* `[:upper:]`: Uppercase letters (`[A-Z]`)\n* `[:word:]`: Word characters (letters, numbers and underscores) (`[A-Za-z0-9_]`)\n* `[:xdigit:]`: Hexadecimal digits (`[A-Fa-f0-9]`)\n\nSee [posix-character-classes](https://github.com/jonschlinkert/posix-character-classes) for more details.\n\n**Not supported**\n\n* [equivalence classes](https://www.gnu.org/software/gawk/manual/html_node/Bracket-Expressions.html) are not supported\n* [POSIX.2 collating symbols](https://www.gnu.org/software/gawk/manual/html_node/Bracket-Expressions.html) are not supported\n\n## Changelog\n\n### v4.0.0\n\n**Breaking changes**\n\n* Snapdragon was updated to 0.12. Other packages that integrate `expand-brackets` need to also use snapdragon 0.12.\n* Minimum Node.JS version is now version 4.\n\n### v3.0.0\n\n**Breaking changes**\n\n* Snapdragon was updated to 0.11. Other packages that integrate `expand-brackets` need to also use snapdragon 0.11.\n\n### v2.0.0\n\n**Breaking changes**\n\n* The main export now returns the compiled string, instead of the object returned from the compiler\n\n**Added features**\n\n* Adds a `.create` method to do what the main function did before v2.0.0\n\n### v0.2.0\n\nIn addition to performance and matching improvements, the v0.2.0 refactor adds complete POSIX character class support, with the exception of equivalence classes and POSIX.2 collating symbols which are not relevant to node.js usage.\n\n**Added features**\n\n* parser is exposed, so that expand-brackets parsers can be used by upstream parsers (like [micromatch](https://github.com/micromatch/micromatch))\n* compiler is exposed, so that expand-brackets compilers can be used by upstream compilers\n* source maps\n\n**source map example**\n\n```js\nvar brackets = require('expand-brackets');\nvar res = brackets('[:alpha:]');\nconsole.log(res.map);\n\n{ version: 3,\n     sources: [ 'brackets' ],\n     names: [],\n     mappings: 'AAAA,MAAS',\n     sourcesContent: [ '[:alpha:]' ] }\n```\n\n## About\n\n### Related projects\n\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support\u2026 [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [extglob](https://www.npmjs.com/package/extglob): Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob\u2026 [more](https://github.com/micromatch/extglob) | [homepage](https://github.com/micromatch/extglob \"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n* [nanomatch](https://www.npmjs.com/package/nanomatch): Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash\u2026 [more](https://github.com/micromatch/nanomatch) | [homepage](https://github.com/micromatch/nanomatch \"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 69 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 13 | [danez](https://github.com/danez) |  \n| 2  | [MartinKolarik](https://github.com/MartinKolarik) |  \n| 2  | [es128](https://github.com/es128) |  \n| 1  | [doowb](https://github.com/doowb) |  \n| 1  | [eush77](https://github.com/eush77) |  \n| 1  | [mjbvz](https://github.com/mjbvz) |  \n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on April 30, 2018._"}, "npm": {"downloads": [{"from": "2020-03-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 682208}, {"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 14306652}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 57786730}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 160303356}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 326643201}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 658516648}], "dependentsCount": 76, "starsCount": 1}, "github": {"starsCount": 21, "forksCount": 6, "subscribersCount": 6, "issues": {"count": 10, "openCount": 0, "distribution": {"3600": 2, "10800": 1, "32400": 0, "97200": 0, "291600": 1, "874800": 3, "2624400": 2, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 66}, {"username": "danez", "commitsCount": 16}, {"username": "MartinKolarik", "commitsCount": 2}, {"username": "es128", "commitsCount": 1}, {"username": "eush77", "commitsCount": 1}, {"username": "mjbvz", "commitsCount": 1}], "commits": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 10369, "testsSize": 23131, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/expand-brackets.svg?style=flat", "shields": "https://img.shields.io/npm/v/expand-brackets.svg", "content": "https://img.shields.io/npm/v/expand-brackets.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/expand-brackets.svg?style=flat", "shields": "https://img.shields.io/npm/dm/expand-brackets.svg", "content": "https://img.shields.io/npm/dm/expand-brackets.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/expand-brackets.svg?style=flat", "shields": "https://img.shields.io/npm/dt/expand-brackets.svg", "content": "https://img.shields.io/npm/dt/expand-brackets.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/expand-brackets.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/expand-brackets.svg", "shields": "https://img.shields.io/travis/micromatch/expand-brackets.svg", "content": "https://img.shields.io/travis/micromatch/expand-brackets.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/micromatch/expand-brackets.svg?label=AppVeyor", "service": "https://ci.appveyor.com/api/projects/status/micromatch/expand-brackets", "shields": "https://img.shields.io/appveyor/ci/micromatch/expand-brackets.svg", "content": "https://img.shields.io/appveyor/ci/micromatch/expand-brackets.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 40, "downloadsCount": 53434452, "downloadsAcceleration": 33149.595833333326, "dependentsCount": 76}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8179973689861461, "detail": {"quality": 0.9791932954197882, "popularity": 0.4979371383738922, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-07T02:01:59.252Z", "collected": {"metadata": {"name": "extend-shallow", "scope": "unscoped", "version": "3.0.2", "description": "Extend an object with the properties of additional objects. node.js/javascript util.", "keywords": ["assign", "clone", "extend", "merge", "obj", "object", "object-assign", "object.assign", "prop", "properties", "property", "props", "shallow", "util", "utility", "utils", "value"], "date": "2017-12-20T19:11:38.344Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "phated", "email": "blaine.bublitz@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Peter deHaan", "url": "http://about.me/peterdehaan"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/extend-shallow.git"}, "links": {"npm": "https://www.npmjs.com/package/extend-shallow", "homepage": "https://github.com/jonschlinkert/extend-shallow", "repository": "https://github.com/jonschlinkert/extend-shallow", "bugs": "https://github.com/jonschlinkert/extend-shallow/issues"}, "license": "MIT", "dependencies": {"assign-symbols": "^1.0.0", "is-extendable": "^1.0.1"}, "devDependencies": {"array-slice": "^1.0.0", "benchmarked": "^2.0.0", "for-own": "^1.0.0", "gulp-format-md": "^1.0.0", "is-plain-object": "^2.0.4", "kind-of": "^6.0.1", "minimist": "^1.2.0", "mocha": "^3.5.3", "object-assign": "^4.1.1"}, "releases": [{"from": "2020-01-08T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2019-08-11T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2019-02-07T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2018-02-07T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# extend-shallow [![NPM version](https://img.shields.io/npm/v/extend-shallow.svg?style=flat)](https://www.npmjs.com/package/extend-shallow) [![NPM monthly downloads](https://img.shields.io/npm/dm/extend-shallow.svg?style=flat)](https://npmjs.org/package/extend-shallow) [![NPM total downloads](https://img.shields.io/npm/dt/extend-shallow.svg?style=flat)](https://npmjs.org/package/extend-shallow) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/extend-shallow.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/extend-shallow)\n\n> Extend an object with the properties of additional objects. node.js/javascript util.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save extend-shallow\n```\n\n## Usage\n\n```js\nvar extend = require('extend-shallow');\n\nextend({a: 'b'}, {c: 'd'})\n//=> {a: 'b', c: 'd'}\n```\n\nPass an empty object to shallow clone:\n\n```js\nvar obj = {};\nextend(obj, {a: 'b'}, {c: 'd'})\n//=> {a: 'b', c: 'd'}\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [extend-shallow](https://www.npmjs.com/package/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util. | [homepage](https://github.com/jonschlinkert/extend-shallow \"Extend an object with the properties of additional objects. node.js/javascript util.\")\n* [for-in](https://www.npmjs.com/package/for-in): Iterate over the own and inherited enumerable properties of an object, and return an object\u2026 [more](https://github.com/jonschlinkert/for-in) | [homepage](https://github.com/jonschlinkert/for-in \"Iterate over the own and inherited enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js\")\n* [for-own](https://www.npmjs.com/package/for-own): Iterate over the own enumerable properties of an object, and return an object with properties\u2026 [more](https://github.com/jonschlinkert/for-own) | [homepage](https://github.com/jonschlinkert/for-own \"Iterate over the own enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 33 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [pdehaan](https://github.com/pdehaan) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on November 19, 2017._"}, "npm": {"downloads": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 4672895}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 24360362}, {"from": "2020-01-08T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 102605949}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 270619247}, {"from": "2019-08-11T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 545468168}, {"from": "2019-02-07T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 1018697312}], "dependentsCount": 420, "starsCount": 1}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 25, "forksCount": 4, "subscribersCount": 3, "issues": {"count": 5, "openCount": 1, "distribution": {"3600": 2, "10800": 0, "32400": 0, "97200": 1, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 39}, {"username": "phated", "commitsCount": 6}, {"username": "pdehaan", "commitsCount": 1}], "commits": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2020-01-08T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2019-08-11T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}, {"from": "2019-02-07T00:00:00.000Z", "to": "2020-02-07T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4597, "testsSize": 2784}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/extend-shallow.svg?style=flat", "shields": "https://img.shields.io/npm/v/extend-shallow.svg", "content": "https://img.shields.io/npm/v/extend-shallow.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/extend-shallow.svg?style=flat", "shields": "https://img.shields.io/npm/dm/extend-shallow.svg", "content": "https://img.shields.io/npm/dm/extend-shallow.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/extend-shallow.svg?style=flat", "shields": "https://img.shields.io/npm/dt/extend-shallow.svg", "content": "https://img.shields.io/npm/dt/extend-shallow.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/extend-shallow.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/extend-shallow.svg", "shields": "https://img.shields.io/travis/jonschlinkert/extend-shallow.svg", "content": "https://img.shields.io/travis/jonschlinkert/extend-shallow.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"assign-symbols": {"required": "^1.0.0", "stable": "2.0.2", "latest": "2.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 36, "downloadsCount": 90206415.66666667, "downloadsAcceleration": 217168.48291476408, "dependentsCount": 420}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.843607658311141, "detail": {"quality": 0.9596449968378136, "popularity": 0.5878650780869991, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-01-31T13:19:29.536Z", "collected": {"metadata": {"name": "external-editor", "scope": "unscoped", "version": "3.1.0", "description": "Edit a string with the users preferred text editor using $VISUAL or $ENVIRONMENT", "keywords": ["editor", "external", "user", "visual"], "date": "2019-07-08T16:07:13.082Z", "author": {"name": "Kevin Gravier", "email": "kevin@mrkmg.com", "url": "https://mrkmg.com", "username": "mrkmg"}, "publisher": {"username": "mrkmg", "email": "kevin@mrkmg.com"}, "maintainers": [{"username": "mrkmg", "email": "kevin@mrkmg.com"}], "repository": {"type": "git", "url": "git+https://github.com/mrkmg/node-external-editor.git"}, "links": {"npm": "https://www.npmjs.com/package/external-editor", "homepage": "https://github.com/mrkmg/node-external-editor#readme", "repository": "https://github.com/mrkmg/node-external-editor", "bugs": "https://github.com/mrkmg/node-external-editor/issues"}, "license": "MIT", "dependencies": {"chardet": "^0.7.0", "iconv-lite": "^0.4.24", "tmp": "^0.0.33"}, "devDependencies": {"@types/chai": "^4.1.4", "@types/chardet": "^0.5.0", "@types/mocha": "^5.2.5", "@types/node": "^10.14.12", "@types/tmp": "0.0.33", "chai": "^4.0.0", "es6-shim": "^0.35.3", "mocha": "^5.2.0", "ts-node": "^7.0.1", "tslint": "^5.18.0", "typescript": "^3.5.2"}, "releases": [{"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2}, {"from": "2018-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# External Editor\n\n[![ExternalEditor on Travis CI](https://img.shields.io/travis/mrkmg/node-external-editor.svg?style=flat-square)](https://travis-ci.org/mrkmg/node-external-editor/branches)\n[![ExternalEditor on NPM](https://img.shields.io/npm/v/external-editor.svg?style=flat-square)](https://www.npmjs.com/package/external-editor)\n[![ExternalEditor uses the MIT](https://img.shields.io/npm/l/external-editor.svg?style=flat-square)](https://opensource.org/licenses/MIT)\n\n\nA node module to edit a string with a users preferred text editor using $VISUAL or $ENVIRONMENT.\n\nVersion: 3.1.0\n\nAs of version 3.0.0, the minimum version of node supported is 4.\n\n## Install\n\n`npm install external-editor --save`\n\n## Usage\n\nA simple example using the `.edit` convenience method\n\n    import {edit} from \"external-editor\";\n    const data = edit('\\n\\n# Please write your text above');\n    console.log(data);\n\nA full featured example\n\n    import {ExternalEditor, CreateFileError, ReadFileError, RemoveFileError} from \"external-editor\"\n    \n    try {\n        const editor = new ExternalEditor();\n        const text = editor.run() // the text is also available in editor.text\n        \n        if (editor.last_exit_status !== 0) {\n            console.log(\"The editor exited with a non-zero code\");\n        }\n    } catch (err) {\n        if (err instanceOf CreateFileError) {\n            console.log('Failed to create the temporary file');\n        } else if (err instanceOf ReadFileError) {\n            console.log('Failed to read the temporary file');\n        } else if (err instanceOf LaunchEditorError) {\n            console.log('Failed to launch your editor');\n        } else {\n            throw err;\n        }\n    }\n    \n    // Do things with the text\n    \n    // Eventually call the cleanup to remove the temporary file\n    try {\n        editor.cleanup();   \n    } catch (err) {\n         if (err instanceOf RemoveFileError) {\n             console.log('Failed to remove the temporary file');\n         } else {\n            throw err\n        }\n    }\n    \n    \n#### API\n**Convenience Methods**\n\n- `edit(text, config)`\n    - `text` (string) *Optional* Defaults to empty string\n    - `config` (Config) *Optional* Options for temporary file creation\n    - **Returns** (string) The contents of the file\n    - Could throw `CreateFileError`, `ReadFileError`, or `LaunchEditorError`, or `RemoveFileError`\n- `editAsync(text, callback, config)`\n    - `text` (string) *Optional* Defaults to empty string\n    - `callback` (function (error, text))\n        - `error` could be of type `CreateFileError`, `ReadFileError`, or `LaunchEditorError`, or `RemoveFileError`\n        - `text`(string) The contents of the file\n    - `config` (Config) *Optional* Options for temporary file creation\n\n\n**Errors**\n\n- `CreateFileError` Error thrown if the temporary file could not be created. \n- `ReadFileError` Error thrown if the temporary file could not be read.\n- `RemoveFileError` Error thrown if the temporary file could not be removed during cleanup.\n- `LaunchEditorError` Error thrown if the editor could not be launched.\n\n**External Editor Public Methods**\n\n- `new ExternalEditor(text, config)`\n    - `text` (string) *Optional* Defaults to empty string\n    - `config` (Config) *Optional* Options for temporary file creation\n    - Could throw `CreateFileError`\n- `run()` Launches the editor.\n    - **Returns** (string) The contents of the file\n    - Could throw `LaunchEditorError` or `ReadFileError`\n- `runAsync(callback)` Launches the editor in an async way\n    - `callback` (function (error, text))\n        - `error` could be of type `ReadFileError` or `LaunchEditorError`\n        - `text`(string) The contents of the file\n- `cleanup()`  Removes the temporary file.\n    - Could throw `RemoveFileError`\n    \n**External Editor Public Properties**\n\n- `text` (string) *readonly* The text in the temporary file.\n- `editor.bin` (string) The editor determined from the environment.\n- `editor.args` (array) Default arguments for the bin\n- `tempFile` (string) Path to temporary file. Can be changed, but be careful as the temporary file probably already \n    exists and would need be removed manually.\n- `lastExitStatus` (number) The last exit code emitted from the editor.\n    \n**Config Options**\n\n- `prefix` (string) *Optional* A prefix for the file name.\n- `postfix` (string; *Optional* A postfix for the file name. Useful if you want to provide an extension.\n- `mode` (number) *Optional* Which mode to create the file with. e.g. 644\n- `template` (string) *Optional* A template for the filename. See [tmp](https://www.npmjs.com/package/tmp).\n- `dir` (string) *Optional* Which path to store the file.\n    \n## Errors\n\nAll errors have a simple message explaining what went wrong. They all also have an `originalError` property containing\nthe original error thrown for debugging purposes.\n    \n## Why Synchronous?\n \nEverything is synchronous to make sure the editor has complete control of the stdin and stdout. Testing has shown \nasync launching of the editor can lead to issues when using readline or other packages which try to read from stdin or \nwrite to stdout. Seeing as this will be used in an interactive CLI environment, I made the decision to force the package\nto be synchronous. If you know a reliable way to force all stdin and stdout to be limited only to the child_process,\nplease submit a PR.\n\nIf async is really needed, you can use `editAsync` or `runAsync`. If you are using readline or have anything else\nlistening to the stdin or you write to stdout, you will most likely have problem, so make sure to remove any other \nlisteners on stdin, stdout, or stderr.\n\n## Demo\n\n[![asciicast](https://asciinema.org/a/a1qh9lypbe65mj0ivfuoslz2s.png)](https://asciinema.org/a/a1qh9lypbe65mj0ivfuoslz2s)\n\n## Breaking Changes from v2 to v3\n\n- NodeJS 0.12 support dropped.\n- Switched to named imports.\n- All \"snake_cased\" variables and properties are now \"camelCased\".\n    - `ExternalEditor.temp_file` is now `ExternalEditor.tempFile`.\n    - `ExternalEditor.last_exit_status` is now `ExternalEditor.lastExitStatus`.\n    - `Error.original_error` is now `Error.originalError`.\n    \n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2016-2018 Kevin Gravier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."}, "npm": {"downloads": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2106674}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 11142991}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 44773962}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 128127142}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 257359387}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 468961953}], "dependentsCount": 56, "starsCount": 1}, "github": {"starsCount": 29, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 21, "openCount": 2, "distribution": {"3600": 0, "10800": 0, "32400": 1, "97200": 2, "291600": 3, "874800": 3, "2624400": 2, "7873200": 8, "23619600": 2, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mrkmg", "commitsCount": 57}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "mhchen", "commitsCount": 1}], "commits": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7235, "testsSize": 5629}, "badges": [{"urls": {"original": "https://img.shields.io/travis/mrkmg/node-external-editor.svg?style=flat-square", "service": "https://api.travis-ci.org/mrkmg/node-external-editor.svg", "shields": "https://img.shields.io/travis/mrkmg/node-external-editor.svg", "content": "https://img.shields.io/travis/mrkmg/node-external-editor.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/v/external-editor.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/external-editor.svg", "content": "https://img.shields.io/npm/v/external-editor.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/external-editor.svg?style=flat-square", "shields": "https://img.shields.io/npm/l/external-editor.svg", "content": "https://img.shields.io/npm/l/external-editor.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}], "linters": ["editorconfig", "tslint"], "outdatedDependencies": {"tmp": {"required": "^0.0.33", "stable": "0.1.0", "latest": "0.1.0"}, "chardet": {"required": "^0.7.0", "stable": "0.8.0", "latest": "0.8.0"}, "iconv-lite": {"required": "^0.4.24", "stable": "0.5.1", "latest": "0.5.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 42, "downloadsCount": 42709047.333333336, "downloadsAcceleration": 88146.30880898022, "dependentsCount": 56}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.798680914864066, "detail": {"quality": 0.9064420948408554, "popularity": 0.5051054413784631, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-29T11:40:05.157Z", "collected": {"metadata": {"name": "extglob", "scope": "unscoped", "version": "3.0.0", "description": "Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.", "keywords": ["bash", "extended", "extglob", "glob", "globbing", "ksh", "match", "pattern", "patterns", "regex", "test", "wildcard"], "date": "2018-04-30T13:12:05.961Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "danez", "email": "daniel@tschinder.de"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Devon Govett", "url": "http://badassjs.com"}, {"name": "Isiah Meadows", "url": "https://www.isiahmeadows.com"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Matt Bierner", "url": "http://mattbierner.com"}, {"name": "Shinnosuke Watanabe", "url": "https://shinnn.github.io"}, {"name": "Daniel Tschinder", "url": "https://github.com/danez"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/extglob.git"}, "links": {"npm": "https://www.npmjs.com/package/extglob", "homepage": "https://github.com/micromatch/extglob", "repository": "https://github.com/micromatch/extglob", "bugs": "https://github.com/micromatch/extglob/issues"}, "license": "MIT", "dependencies": {"array-unique": "^0.3.2", "define-property": "^2.0.2", "expand-brackets": "^4.0.0", "fragment-cache": "^0.2.1", "regex-not": "^1.0.0", "snapdragon": "^0.12.0", "snapdragon-capture": "^0.2.0", "to-regex": "^3.0.1"}, "devDependencies": {"bash-match": "^1.0.2", "for-own": "^1.0.0", "gulp": "^3.9.1", "gulp-eslint": "^4.0.0", "gulp-format-md": "^1.0.0", "gulp-istanbul": "^1.1.2", "gulp-mocha": "^3.0.1", "gulp-unused": "^0.2.1", "helper-changelog": "^0.3.0", "is-windows": "^1.0.1", "micromatch": "^3.0.4", "minimatch": "^3.0.4", "minimist": "^1.2.0", "mocha": "^3.5.0", "multimatch": "^2.1.0"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# extglob [![NPM version](https://img.shields.io/npm/v/extglob.svg?style=flat)](https://www.npmjs.com/package/extglob) [![NPM monthly downloads](https://img.shields.io/npm/dm/extglob.svg?style=flat)](https://npmjs.org/package/extglob)  [![NPM total downloads](https://img.shields.io/npm/dt/extglob.svg?style=flat)](https://npmjs.org/package/extglob) [![Linux Build Status](https://img.shields.io/travis/micromatch/extglob.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/extglob) [![Windows Build Status](https://img.shields.io/appveyor/ci/micromatch/extglob.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/micromatch/extglob)\n\n> Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save extglob\n```\n\nInstall with [yarn](https://yarnpkg.com):\n\n```sh\n$ yarn add extglob\n```\n\n* Convert an extglob string to a regex-compatible string.\n* More complete (and correct) support than [minimatch](https://github.com/isaacs/minimatch) (minimatch fails a large percentage of the extglob tests)\n* Handles [negation patterns](#extglob-patterns)\n* Handles [nested patterns](#extglob-patterns)\n* Organized code base, easy to maintain and make changes when edge cases arise\n* As you can see by the [benchmarks](#benchmarks), extglob doesn't pay with speed for it's completeness, accuracy and quality.\n\n**Heads up!**: This library only supports extglobs, to handle full glob patterns and other extended globbing features use [micromatch](https://github.com/jonschlinkert/micromatch) instead.\n\n## Usage\n\nThe main export is a function that takes a string and options, and returns an object with the parsed AST and the compiled `.output`, which is a regex-compatible string that can be used for matching.\n\n```js\nvar extglob = require('extglob');\nconsole.log(extglob('!(xyz)*.js'));\n```\n\n## Extglob cheatsheet\n\nExtended globbing patterns can be defined as follows (as described by the [bash man page](https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html)):\n\n| **pattern** | **regex equivalent** | **description** |\n| --- | --- | --- |\n| `?(pattern-list)` | `(...\\|...)?` |  Matches zero or one occurrence of the given pattern(s) |\n| `*(pattern-list)` | `(...\\|...)*` |  Matches zero or more occurrences of the given pattern(s) |\n| `+(pattern-list)` | `(...\\|...)+` |  Matches one or more occurrences of the given pattern(s) |\n| `@(pattern-list)` | `(...\\|...)` [^1] |  Matches one of the given pattern(s) |\n| `!(pattern-list)` | N/A |  Matches anything except one of the given pattern(s) |\n\n## API\n\n### [extglob](index.js#L35)\n\nConvert the given `extglob` pattern into a regex-compatible string. Returns an object with the compiled result and the parsed AST.\n\n**Params**\n\n* `pattern` **{String}**\n* `options` **{Object}**\n* `returns` **{String}**\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nconsole.log(extglob('*.!(*a)'));\n//=> '(?!\\\\.)[^/]*?\\\\.(?!(?!\\\\.)[^/]*?a\\\\b).*?'\n```\n\n### [.match](index.js#L55)\n\nTakes an array of strings and an extglob pattern and returns a new array that contains only the strings that match the pattern.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match\n* `pattern` **{String}**: Extglob pattern\n* `options` **{Object}**\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nconsole.log(extglob.match(['a.a', 'a.b', 'a.c'], '*.!(*a)'));\n//=> ['a.b', 'a.c']\n```\n\n### [.isMatch](index.js#L110)\n\nReturns true if the specified `string` matches the given extglob `pattern`.\n\n**Params**\n\n* `string` **{String}**: String to match\n* `pattern` **{String}**: Extglob pattern\n* `options` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst extglob = require('extglob');\n\nconsole.log(extglob.isMatch('a.a', '*.!(*a)'));\n//=> false\nconsole.log(extglob.isMatch('a.b', '*.!(*a)'));\n//=> true\n```\n\n### [.contains](index.js#L149)\n\nReturns true if the given `string` contains the given pattern. Similar to `.isMatch` but the pattern can match any part of the string.\n\n**Params**\n\n* `str` **{String}**: The string to match.\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `options` **{Object}**\n* `returns` **{Boolean}**: Returns true if the patter matches any part of `str`.\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nconsole.log(extglob.contains('aa/bb/cc', '*b'));\n//=> true\nconsole.log(extglob.contains('aa/bb/cc', '*d'));\n//=> false\n```\n\n### [.matcher](index.js#L183)\n\nTakes an extglob pattern and returns a matcher function. The returned function takes the string to match as its only argument.\n\n**Params**\n\n* `pattern` **{String}**: Extglob pattern\n* `options` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nconst isMatch = extglob.matcher('*.!(*a)');\n\nconsole.log(isMatch('a.a'));\n//=> false\nconsole.log(isMatch('a.b'));\n//=> true\n```\n\n### [.create](index.js#L213)\n\nConvert the given `extglob` pattern into a regex-compatible string. Returns an object with the compiled result and the parsed AST.\n\n**Params**\n\n* `str` **{String}**\n* `options` **{Object}**\n* `returns` **{String}**\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nconsole.log(extglob.create('*.!(*a)').output);\n//=> '(?!\\\\.)[^/]*?\\\\.(?!(?!\\\\.)[^/]*?a\\\\b).*?'\n```\n\n### [.capture](index.js#L247)\n\nReturns an array of matches captured by `pattern` in `string`, or `null` if the pattern did not match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `string` **{String}**: String to match\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns an array of captures if the string matches the glob pattern, otherwise `null`.\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nextglob.capture(pattern, string[, options]);\n\nconsole.log(extglob.capture('test/*.js', 'test/foo.js'));\n//=> ['foo']\nconsole.log(extglob.capture('test/*.js', 'foo/bar.css'));\n//=> null\n```\n\n### [.makeRe](index.js#L280)\n\nCreate a regular expression from the given `pattern` and `options`.\n\n**Params**\n\n* `pattern` **{String}**: The pattern to convert to regex.\n* `options` **{Object}**\n* `returns` **{RegExp}**\n\n**Example**\n\n```js\nconst extglob = require('extglob');\nconst re = extglob.makeRe('*.!(*a)');\nconsole.log(re);\n//=> /^[^\\/]*?\\.(?![^\\/]*?a)[^\\/]*?$/\n```\n\n## Options\n\nAvailable options are based on the options from Bash (and the option names used in bash).\n\n### options.nullglob\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\nWhen enabled, the pattern itself will be returned when no matches are found.\n\n### options.nonull\n\nAlias for [options.nullglob](#optionsnullglob), included for parity with minimatch.\n\n### options.cache\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\nFunctions are memoized based on the given glob patterns and options. Disable memoization by setting `options.cache` to false.\n\n### options.failglob\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\nThrow an error is no matches are found.\n\n## Benchmarks\n\nLast run on April 30, 2018\n\n```sh\n# negation-nested (49 bytes)\n  extglob x 1,380,148 ops/sec \u00b13.35% (62 runs sampled)\n  minimatch x 156,800 ops/sec \u00b14.13% (76 runs sampled)\n\n  fastest is extglob (by 880% avg)\n\n# negation-simple (43 bytes)\n  extglob x 1,821,746 ops/sec \u00b11.61% (76 runs sampled)\n  minimatch x 365,618 ops/sec \u00b11.87% (84 runs sampled)\n\n  fastest is extglob (by 498% avg)\n\n# range-false (57 bytes)\n  extglob x 2,038,592 ops/sec \u00b13.39% (85 runs sampled)\n  minimatch x 310,897 ops/sec \u00b112.62% (87 runs sampled)\n\n  fastest is extglob (by 656% avg)\n\n# range-true (56 bytes)\n  extglob x 2,105,081 ops/sec \u00b10.69% (91 runs sampled)\n  minimatch x 332,188 ops/sec \u00b10.45% (91 runs sampled)\n\n  fastest is extglob (by 634% avg)\n\n# star-simple (46 bytes)\n  extglob x 2,154,184 ops/sec \u00b10.99% (89 runs sampled)\n  minimatch x 452,812 ops/sec \u00b10.51% (88 runs sampled)\n\n  fastest is extglob (by 476% avg)\n\n```\n\n## Differences from Bash\n\nThis library has complete parity with Bash 4.3 with only a couple of minor differences.\n\n* In some cases Bash returns true if the given string \"contains\" the pattern, whereas this library returns true if the string is an exact match for the pattern. You can relax this by setting `options.contains` to true.\n* This library is more accurate than Bash and thus does not fail some of the tests that Bash 4.3 still lists as failing in their unit tests\n\n## About\n\n### Related projects\n\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support\u2026 [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [expand-brackets](https://www.npmjs.com/package/expand-brackets): Expand POSIX bracket expressions (character classes) in glob patterns. | [homepage](https://github.com/micromatch/expand-brackets \"Expand POSIX bracket expressions (character classes) in glob patterns.\")\n* [expand-range](https://www.npmjs.com/package/expand-range): Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used\u2026 [more](https://github.com/jonschlinkert/expand-range) | [homepage](https://github.com/jonschlinkert/expand-range \"Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used by [micromatch].\")\n* [fill-range](https://www.npmjs.com/package/fill-range): Fill in a range of numbers or letters, optionally passing an increment or `step` to\u2026 [more](https://github.com/jonschlinkert/fill-range) | [homepage](https://github.com/jonschlinkert/fill-range \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 54 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 6  | [danez](https://github.com/danez) |  \n| 2  | [isiahmeadows](https://github.com/isiahmeadows) |  \n| 1  | [doowb](https://github.com/doowb) |  \n| 1  | [devongovett](https://github.com/devongovett) |  \n| 1  | [mjbvz](https://github.com/mjbvz) |  \n| 1  | [shinnn](https://github.com/shinnn) |  \n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on April 30, 2018._"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2456930}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 14403029}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 61847229}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 163175321}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 332039256}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 665298620}], "dependentsCount": 80, "starsCount": 2}, "github": {"starsCount": 25, "forksCount": 6, "subscribersCount": 5, "issues": {"count": 13, "openCount": 2, "distribution": {"3600": 1, "10800": 1, "32400": 3, "97200": 0, "291600": 1, "874800": 0, "2624400": 1, "7873200": 2, "23619600": 2, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 52}, {"username": "devongovett", "commitsCount": 1}, {"username": "mjbvz", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 12006, "testsSize": 70605, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/extglob.svg?style=flat", "shields": "https://img.shields.io/npm/v/extglob.svg", "content": "https://img.shields.io/npm/v/extglob.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/extglob.svg?style=flat", "shields": "https://img.shields.io/npm/dm/extglob.svg", "content": "https://img.shields.io/npm/dm/extglob.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/extglob.svg?style=flat", "shields": "https://img.shields.io/npm/dt/extglob.svg", "content": "https://img.shields.io/npm/dt/extglob.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/extglob.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/extglob.svg", "shields": "https://img.shields.io/travis/micromatch/extglob.svg", "content": "https://img.shields.io/travis/micromatch/extglob.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/micromatch/extglob.svg?label=AppVeyor", "service": "https://ci.appveyor.com/api/projects/status/micromatch/extglob", "shields": "https://img.shields.io/appveyor/ci/micromatch/extglob.svg", "content": "https://img.shields.io/appveyor/ci/micromatch/extglob.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 42, "downloadsCount": 54391773.666666664, "downloadsAcceleration": 65191.235730593675, "dependentsCount": 80}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8236530619370317, "detail": {"quality": 0.9791932954197882, "popularity": 0.5140962610907083, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-16T05:48:09.913Z", "collected": {"metadata": {"name": "fast-deep-equal", "scope": "unscoped", "version": "3.1.1", "description": "Fast deep equal", "keywords": ["fast", "equal", "deep-equal"], "date": "2019-12-03T14:30:16.748Z", "author": {"name": "Evgeny Poberezkin"}, "publisher": {"username": "esp", "email": "e.poberezkin@me.com"}, "maintainers": [{"username": "esp", "email": "e.poberezkin@me.com"}], "repository": {"type": "git", "url": "git+https://github.com/epoberezkin/fast-deep-equal.git"}, "links": {"npm": "https://www.npmjs.com/package/fast-deep-equal", "homepage": "https://github.com/epoberezkin/fast-deep-equal#readme", "repository": "https://github.com/epoberezkin/fast-deep-equal", "bugs": "https://github.com/epoberezkin/fast-deep-equal/issues"}, "license": "MIT", "devDependencies": {"coveralls": "^2.13.1", "dot": "^1.1.2", "eslint": "^4.0.0", "mocha": "^3.4.2", "nyc": "^11.0.2", "pre-commit": "^1.2.2", "react": "^16.12.0", "react-test-renderer": "^16.12.0", "sinon": "^7.5.0", "typescript": "^2.6.1"}, "releases": [{"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 1}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 5}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 6}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 8}, {"from": "2018-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# fast-deep-equal\nThe fastest deep equal with ES6 Map, Set and Typed arrays support.\n\n[![Build Status](https://travis-ci.org/epoberezkin/fast-deep-equal.svg?branch=master)](https://travis-ci.org/epoberezkin/fast-deep-equal)\n[![npm](https://img.shields.io/npm/v/fast-deep-equal.svg)](https://www.npmjs.com/package/fast-deep-equal)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/fast-deep-equal/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/fast-deep-equal?branch=master)\n\n\n## Install\n\n```bash\nnpm install fast-deep-equal\n```\n\n\n## Features\n\n- ES5 compatible\n- works in node.js (8+) and browsers (IE9+)\n- checks equality of Date and RegExp objects by value.\n\nES6 equal (`require('fast-deep-equal/es6')`) also supports:\n- Maps\n- Sets\n- Typed arrays\n\n\n## Usage\n\n```javascript\nvar equal = require('fast-deep-equal');\nconsole.log(equal({foo: 'bar'}, {foo: 'bar'})); // true\n```\n\nTo support ES6 Maps, Sets and Typed arrays equality use:\n\n```javascript\nvar equal = require('fast-deep-equal/es6');\nconsole.log(equal(Int16Array([1, 2]), Int16Array([1, 2]))); // true\n```\n\nTo use with React (avoiding the traversal of React elements' _owner\nproperty that contains circular references and is not needed when\ncomparing the elements - borrowed from [react-fast-compare](https://github.com/FormidableLabs/react-fast-compare)):\n\n```javascript\nvar equal = require('fast-deep-equal/react');\nvar equal = require('fast-deep-equal/es6/react');\n```\n\n\n## Performance benchmark\n\nNode.js v12.6.0:\n\n```\nfast-deep-equal x 261,950 ops/sec \u00b10.52% (89 runs sampled)\nfast-deep-equal/es6 x 212,991 ops/sec \u00b10.34% (92 runs sampled)\nfast-equals x 230,957 ops/sec \u00b10.83% (85 runs sampled)\nnano-equal x 187,995 ops/sec \u00b10.53% (88 runs sampled)\nshallow-equal-fuzzy x 138,302 ops/sec \u00b10.49% (90 runs sampled)\nunderscore.isEqual x 74,423 ops/sec \u00b10.38% (89 runs sampled)\nlodash.isEqual x 36,637 ops/sec \u00b10.72% (90 runs sampled)\ndeep-equal x 2,310 ops/sec \u00b10.37% (90 runs sampled)\ndeep-eql x 35,312 ops/sec \u00b10.67% (91 runs sampled)\nramda.equals x 12,054 ops/sec \u00b10.40% (91 runs sampled)\nutil.isDeepStrictEqual x 46,440 ops/sec \u00b10.43% (90 runs sampled)\nassert.deepStrictEqual x 456 ops/sec \u00b10.71% (88 runs sampled)\n\nThe fastest is fast-deep-equal\n```\n\nTo run benchmark (requires node.js 6+):\n\n```bash\nnpm run benchmark\n```\n\n__Please note__: this benchmark runs against the available test cases. To choose the most performant library for your application, it is recommended to benchmark against your data and to NOT expect this benchmark to reflect the performance difference in your application.\n\n\n## Enterprise support\n\nfast-deep-equal package is a part of [Tidelift enterprise subscription](https://tidelift.com/subscription/pkg/npm-fast-deep-equal?utm_source=npm-fast-deep-equal&utm_medium=referral&utm_campaign=enterprise&utm_term=repo) - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers.\n\n\n## Security contact\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues.\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/fast-deep-equal/blob/master/LICENSE)"}, "npm": {"downloads": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 1227986}, {"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 20852761}, {"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 82600929}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 214057332}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 416263356}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 786391138}], "dependentsCount": 501, "starsCount": 7}, "github": {"starsCount": 669, "forksCount": 51, "subscribersCount": 8, "issues": {"count": 52, "openCount": 8, "distribution": {"3600": 9, "10800": 3, "32400": 1, "97200": 2, "291600": 6, "874800": 3, "2624400": 7, "7873200": 10, "23619600": 6, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "epoberezkin", "commitsCount": 52}, {"username": "streamich", "commitsCount": 14}, {"username": "xobotyi", "commitsCount": 4}, {"username": "langpavel", "commitsCount": 2}, {"username": "Ginden", "commitsCount": 1}, {"username": "MadRabbit", "commitsCount": 1}, {"username": "chrisbolin", "commitsCount": 1}, {"username": "danalloway", "commitsCount": 1}, {"username": "futurfrukt", "commitsCount": 1}, {"username": "krzysiek1507", "commitsCount": 1}], "commits": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 21}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 26}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 45}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3323, "testsSize": 21923}, "badges": [{"urls": {"original": "https://travis-ci.org/epoberezkin/fast-deep-equal.svg?branch=master", "service": "https://api.travis-ci.org/epoberezkin/fast-deep-equal.svg?branch=master", "shields": "https://img.shields.io/travis/epoberezkin/fast-deep-equal/master.svg", "content": "https://img.shields.io/travis/epoberezkin/fast-deep-equal/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/fast-deep-equal.svg", "shields": "https://img.shields.io/npm/v/fast-deep-equal.svg", "content": "https://img.shields.io/npm/v/fast-deep-equal.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://coveralls.io/repos/github/epoberezkin/fast-deep-equal/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/epoberezkin/fast-deep-equal/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/epoberezkin/fast-deep-equal/master.svg", "content": "https://img.shields.io/coveralls/epoberezkin/fast-deep-equal/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 745, "downloadsCount": 71352444, "downloadsAcceleration": 189236.4907534246, "dependentsCount": 501}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8760667793112628, "detail": {"quality": 0.988301924677847, "popularity": 0.6559943350737955, "maintenance": 0.9999376703773724}}}
{"analyzedAt": "2020-02-21T20:50:21.824Z", "collected": {"metadata": {"name": "fast-glob", "scope": "unscoped", "version": "3.2.2", "description": "It's a very fast and efficient glob library for Node.js", "keywords": ["glob", "patterns", "fast", "implementation"], "date": "2020-02-21T20:49:35.804Z", "author": {"name": "Denis Malinochkin", "url": "https://mrmlnc.com"}, "publisher": {"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}, "maintainers": [{"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}], "repository": {"type": "git", "url": "git+https://github.com/mrmlnc/fast-glob.git"}, "links": {"npm": "https://www.npmjs.com/package/fast-glob", "homepage": "https://github.com/mrmlnc/fast-glob#readme", "repository": "https://github.com/mrmlnc/fast-glob", "bugs": "https://github.com/mrmlnc/fast-glob/issues"}, "license": "MIT", "dependencies": {"@nodelib/fs.stat": "^2.0.2", "@nodelib/fs.walk": "^1.2.3", "glob-parent": "^5.1.0", "merge2": "^1.3.0", "micromatch": "^4.0.2", "picomatch": "^2.2.1"}, "devDependencies": {"@nodelib/fs.macchiato": "^1.0.1", "@types/compute-stdev": "^1.0.0", "@types/easy-table": "^0.0.32", "@types/glob": "^7.1.1", "@types/glob-parent": "^5.1.0", "@types/merge2": "^1.1.4", "@types/micromatch": "^4.0.0", "@types/minimist": "^1.2.0", "@types/mocha": "^5.2.7", "@types/node": "^12.7.8", "@types/rimraf": "^2.0.2", "@types/sinon": "^7.5.0", "compute-stdev": "^1.0.0", "easy-table": "^1.1.1", "eslint": "^6.5.1", "eslint-config-mrmlnc": "^1.1.0", "execa": "^2.0.4", "fast-glob": "^3.0.4", "glob": "^7.1.4", "minimist": "^1.2.0", "mocha": "^6.2.1", "rimraf": "^3.0.0", "sinon": "^7.5.0", "tiny-glob": "^0.2.6", "typescript": "^3.6.3"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 7}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 8}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 14}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 22}], "hasTestScript": true, "readme": "# fast-glob\n\n> It's a very fast and efficient [glob][glob_definition] library for [Node.js][node_js].\n\nThis package provides methods for traversing the file system and returning pathnames that matched a defined set of a specified pattern according to the rules used by the Unix Bash shell with some simplifications, meanwhile results are returned in **arbitrary order**. Quick, simple, effective.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n* [Highlights](#highlights)\n* [Donation](#donation)\n* [Old and modern mode](#old-and-modern-mode)\n* [Pattern syntax](#pattern-syntax)\n  * [Basic syntax](#basic-syntax)\n  * [Advanced syntax](#advanced-syntax)\n* [Installation](#installation)\n* [API](#api)\n  * [Asynchronous](#asynchronous)\n  * [Synchronous](#synchronous)\n  * [Stream](#stream)\n    * [patterns](#patterns)\n    * [[options]](#options)\n  * [Helpers](#helpers)\n    * [generateTasks](#generatetaskspatterns-options)\n    * [isDynamicPattern](#isdynamicpatternpattern-options)\n    * [escapePath](#escapepathpattern)\n* [Options](#options-3)\n  * [Common](#common)\n    * [concurrency](#concurrency)\n    * [cwd](#cwd)\n    * [deep](#deep)\n    * [followSymbolicLinks](#followsymboliclinks)\n    * [fs](#fs)\n    * [ignore](#ignore)\n    * [suppressErrors](#suppresserrors)\n    * [throwErrorOnBrokenSymbolicLink](#throwerroronbrokensymboliclink)\n  * [Output control](#output-control)\n    * [absolute](#absolute)\n    * [markDirectories](#markdirectories)\n    * [objectMode](#objectmode)\n    * [onlyDirectories](#onlydirectories)\n    * [onlyFiles](#onlyfiles)\n    * [stats](#stats)\n    * [unique](#unique)\n  * [Matching control](#matching-control)\n    * [braceExpansion](#braceexpansion)\n    * [caseSensitiveMatch](#casesensitivematch)\n    * [dot](#dot)\n    * [extglob](#extglob)\n    * [globstar](#globstar)\n    * [baseNameMatch](#basenamematch)\n* [FAQ](#faq)\n  * [What is a static or dynamic pattern?](#what-is-a-static-or-dynamic-pattern)\n  * [How to write patterns on Windows?](#how-to-write-patterns-on-windows)\n  * [Why are parentheses match wrong?](#why-are-parentheses-match-wrong)\n  * [How to exclude directory from reading?](#how-to-exclude-directory-from-reading)\n  * [How to use UNC path?](#how-to-use-unc-path)\n  * [Compatible with `node-glob`?](#compatible-with-node-glob)\n* [Benchmarks](#benchmarks)\n  * [Server](#server)\n  * [Nettop](#nettop)\n* [Changelog](#changelog)\n* [License](#license)\n\n</details>\n\n## Highlights\n\n* Fast. Probably the fastest.\n* Supports multiple and negative patterns.\n* Synchronous, Promise and Stream API.\n* Object mode. Can return more than just strings.\n* Error-tolerant.\n\n## Donation\n\nDo you like this project? Support it by donating, creating an issue or pull request.\n\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)][paypal_mrmlnc]\n\n## Old and modern mode\n\nThis package works in two modes, depending on the environment in which it is used.\n\n* **Old mode**. Node.js below 10.10 or when the [`stats`](#stats) option is *enabled*.\n* **Modern mode**. Node.js 10.10+ and the [`stats`](#stats) option is *disabled*.\n\nThe modern mode is faster. Learn more about the [internal mechanism][nodelib_fs_scandir_old_and_modern_modern].\n\n## Pattern syntax\n\n> :warning: Always use forward-slashes in glob expressions (patterns and [`ignore`](#ignore) option). Use backslashes for escaping characters.\n\nThere is more than one form of syntax: basic and advanced. Below is a brief overview of the supported features. Also pay attention to our [FAQ](#faq).\n\n> :book: This package uses a [`micromatch`][micromatch] as a library for pattern matching.\n\n### Basic syntax\n\n* An asterisk (`*`) \u2014 matches everything except slashes (path separators), hidden files (names starting with `.`).\n* A double star or globstar (`**`) \u2014 matches zero or more directories.\n* Question mark (`?`) \u2013 matches any single character except slashes (path separators).\n* Sequence (`[seq]`) \u2014 matches any character in sequence.\n\n> :book: A few additional words about the [basic matching behavior][picomatch_matching_behavior].\n\nSome examples:\n\n* `src/**/*.js` \u2014 matches all files in the `src` directory (any level of nesting) that have the `.js` extension.\n* `src/*.??` \u2014 matches all files in the `src` directory (only first level of nesting) that have a two-character extension.\n* `file-[01].js` \u2014 matches files: `file-0.js`, `file-1.js`.\n\n### Advanced syntax\n\n* [Escapes characters][micromatch_backslashes] (`\\\\`) \u2014 matching special characters (`$^*+?()[]`) as literals.\n* [POSIX character classes][picomatch_posix_brackets] (`[[:digit:]]`).\n* [Extended globs][micromatch_extglobs] (`?(pattern-list)`).\n* [Bash style brace expansions][micromatch_braces] (`{}`).\n* [Regexp character classes][micromatch_regex_character_classes] (`[1-5]`).\n* [Regex groups][regular_expressions_brackets] (`(a|b)`).\n\n> :book: A few additional words about the [advanced matching behavior][micromatch_extended_globbing].\n\nSome examples:\n\n* `src/**/*.{css,scss}` \u2014 matches all files in the `src` directory (any level of nesting) that have the `.css` or `.scss` extension.\n* `file-[[:digit:]].js` \u2014 matches files: `file-0.js`, `file-1.js`, \u2026, `file-9.js`.\n* `file-{1..3}.js` \u2014 matches files: `file-1.js`, `file-2.js`, `file-3.js`.\n* `file-(1|2)` \u2014 matches files: `file-1.js`, `file-2.js`.\n\n## Installation\n\n```console\nnpm install fast-glob\n```\n\n## API\n\n### Asynchronous\n\n```js\nfg(patterns, [options])\n```\n\nReturns a `Promise` with an array of matching entries.\n\n```js\nconst fg = require('fast-glob');\n\nconst entries = await fg(['.editorconfig', '**/index.js'], { dot: true });\n\n// ['.editorconfig', 'services/index.js']\n```\n\n### Synchronous\n\n```js\nfg.sync(patterns, [options])\n```\n\nReturns an array of matching entries.\n\n```js\nconst fg = require('fast-glob');\n\nconst entries = fg.sync(['.editorconfig', '**/index.js'], { dot: true });\n\n// ['.editorconfig', 'services/index.js']\n```\n\n### Stream\n\n```js\nfg.stream(patterns, [options])\n```\n\nReturns a [`ReadableStream`][node_js_stream_readable_streams] when the `data` event will be emitted with matching entry.\n\n```js\nconst fg = require('fast-glob');\n\nconst stream = fg.stream(['.editorconfig', '**/index.js'], { dot: true });\n\nfor await (const entry of stream) {\n\t// .editorconfig\n\t// services/index.js\n}\n```\n\n#### patterns\n\n* Required: `true`\n* Type: `string | string[]`\n\nAny correct pattern(s).\n\n> :1234: [Pattern syntax](#pattern-syntax)\n>\n> :warning: This package does not respect the order of patterns. First, all the negative patterns are applied, and only then the positive patterns. If you want to get a certain order of records, use sorting or split calls.\n\n#### [options]\n\n* Required: `false`\n* Type: [`Options`](#options-3)\n\nSee [Options](#options-3) section.\n\n### Helpers\n\n#### `generateTasks(patterns, [options])`\n\nReturns the internal representation of patterns ([`Task`](./src/managers/tasks.ts) is a combining patterns by base directory).\n\n```js\nfg.generateTasks('*');\n\n[{\n    base: '.', // Parent directory for all patterns inside this task\n    dynamic: true, // Dynamic or static patterns are in this task\n    patterns: ['*'],\n    positive: ['*'],\n    negative: []\n}]\n```\n\n##### patterns\n\n* Required: `true`\n* Type: `string | string[]`\n\nAny correct pattern(s).\n\n##### [options]\n\n* Required: `false`\n* Type: [`Options`](#options-3)\n\nSee [Options](#options-3) section.\n\n#### `isDynamicPattern(pattern, [options])`\n\nReturns `true` if the passed pattern is a dynamic pattern.\n\n> :1234: [What is a static or dynamic pattern?](#what-is-a-static-or-dynamic-pattern)\n\n```js\nfg.isDynamicPattern('*'); // true\nfg.isDynamicPattern('abc'); // false\n```\n\n##### pattern\n\n* Required: `true`\n* Type: `string`\n\nAny correct pattern.\n\n##### [options]\n\n* Required: `false`\n* Type: [`Options`](#options-3)\n\nSee [Options](#options-3) section.\n\n#### `escapePath(pattern)`\n\nReturns a path with escaped special characters (`*?|(){}[]`, `!` at the beginning of line, `@+!` before the opening parenthesis).\n\n```js\nfg.escapePath('!abc'); // \\\\!abc\nfg.escapePath('C:/Program Files (x86)'); // C:/Program Files \\\\(x86\\\\)\n```\n\n##### pattern\n\n* Required: `true`\n* Type: `string`\n\nAny string, for example, a path to a file.\n\n## Options\n\n### Common options\n\n#### concurrency\n\n* Type: `number`\n* Default: `os.cpus().length`\n\nSpecifies the maximum number of concurrent requests from a reader to read directories.\n\n> :book: The higher the number, the higher the performance and load on the file system. If you want to read in quiet mode, set the value to a comfortable number or `1`.\n\n#### cwd\n\n* Type: `string`\n* Default: `process.cwd()`\n\nThe current working directory in which to search.\n\n#### deep\n\n* Type: `number`\n* Default: `Infinity`\n\nSpecifies the maximum depth of a read directory relative to the start directory.\n\nFor example, you have the following tree:\n\n```js\ndir/\n\u2514\u2500\u2500 one/            // 1\n    \u2514\u2500\u2500 two/        // 2\n        \u2514\u2500\u2500 file.js // 3\n```\n\n```js\n// With base directory\nfg.sync('dir/**', { onlyFiles: false, deep: 1 }); // ['dir/one']\nfg.sync('dir/**', { onlyFiles: false, deep: 2 }); // ['dir/one', 'dir/one/two']\n\n// With cwd option\nfg.sync('**', { onlyFiles: false, cwd: 'dir', deep: 1 }); // ['one']\nfg.sync('**', { onlyFiles: false, cwd: 'dir', deep: 2 }); // ['one', 'one/two']\n```\n\n> :book: If you specify a pattern with some base directory, this directory will not participate in the calculation of the depth of the found directories. Think of it as a [`cwd`](#cwd) option.\n\n#### followSymbolicLinks\n\n* Type: `boolean`\n* Default: `true`\n\nIndicates whether to traverse descendants of symbolic link directories.\n\n> :book: If the [`stats`](#stats) option is specified, the information about the symbolic link (`fs.lstat`) will be replaced with information about the entry (`fs.stat`) behind it.\n\n#### fs\n\n* Type: `FileSystemAdapter`\n* Default: `fs.*`\n\nCustom implementation of methods for working with the file system.\n\n```ts\nexport interface FileSystemAdapter {\n    lstat?: typeof fs.lstat;\n    stat?: typeof fs.stat;\n    lstatSync?: typeof fs.lstatSync;\n    statSync?: typeof fs.statSync;\n    readdir?: typeof fs.readdir;\n    readdirSync?: typeof fs.readdirSync;\n}\n```\n\n#### ignore\n\n* Type: `string[]`\n* Default: `[]`\n\nAn array of glob patterns to exclude matches. This is an alternative way to use negative patterns.\n\n```js\ndir/\n\u251c\u2500\u2500 package-lock.json\n\u2514\u2500\u2500 package.json\n```\n\n```js\nfg.sync(['*.json', '!package-lock.json']);            // ['package.json']\nfg.sync('*.json', { ignore: ['package-lock.json'] }); // ['package.json']\n```\n\n#### suppressErrors\n\n* Type: `boolean`\n* Default: `false`\n\nBy default this package suppress only `ENOENT` errors. Set to `true` to suppress any error.\n\n> :book: Can be useful when the directory has entries with a special level of access.\n\n#### throwErrorOnBrokenSymbolicLink\n\n* Type: `boolean`\n* Default: `false`\n\nThrow an error when symbolic link is broken if `true` or safely return `lstat` call if `false`.\n\n> :book: This option has no effect on errors when reading the symbolic link directory.\n\n### Output control\n\n#### absolute\n\n* Type: `boolean`\n* Default: `false`\n\nReturn the absolute path for entries.\n\n```js\nfg.sync('*.js', { absolute: false }); // ['index.js']\nfg.sync('*.js', { absolute: true });  // ['/home/user/index.js']\n```\n\n> :book: This option is required if you want to use negative patterns with absolute path, for example, `!${__dirname}/*.js`.\n\n#### markDirectories\n\n* Type: `boolean`\n* Default: `false`\n\nMark the directory path with the final slash.\n\n```js\nfs.sync('*', { onlyFiles: false, markDirectories: false }); // ['index.js', 'controllers']\nfs.sync('*', { onlyFiles: false, markDirectories: true });  // ['index.js', 'controllers/']\n```\n\n#### objectMode\n\n* Type: `boolean`\n* Default: `false`\n\nReturns objects (instead of strings) describing entries.\n\n```js\nfg.sync('*', { objectMode: false }); // ['src/index.js']\nfg.sync('*', { objectMode: true });  // [{ name: 'index.js', path: 'src/index.js', dirent: <fs.Dirent> }]\n```\n\nThe object has the following fields:\n\n* name (`string`) \u2014 the last part of the path (basename)\n* path (`string`) \u2014 full path relative to the pattern base directory\n* dirent ([`fs.Dirent`][node_js_fs_class_fs_dirent]) \u2014 instance of `fs.Direct`\n\n> :book: An object is an internal representation of entry, so getting it does not affect performance.\n\n#### onlyDirectories\n\n* Type: `boolean`\n* Default: `false`\n\nReturn only directories.\n\n```js\nfg.sync('*', { onlyDirectories: false }); // ['index.js', 'src']\nfg.sync('*', { onlyDirectories: true });  // ['src']\n```\n\n> :book: If `true`, the [`onlyFiles`](#onlyfiles) option is automatically `false`.\n\n#### onlyFiles\n\n* Type: `boolean`\n* Default: `true`\n\nReturn only files.\n\n```js\nfg.sync('*', { onlyFiles: false }); // ['index.js', 'src']\nfg.sync('*', { onlyFiles: true });  // ['index.js']\n```\n\n#### stats\n\n* Type: `boolean`\n* Default: `false`\n\nEnables an [object mode](#objectmode) with an additional field:\n\n* stats ([`fs.Stats`][node_js_fs_class_fs_stats]) \u2014 instance of `fs.Stats`\n\n```js\nfg.sync('*', { stats: false }); // ['src/index.js']\nfg.sync('*', { stats: true });  // [{ name: 'index.js', path: 'src/index.js', dirent: <fs.Dirent>, stats: <fs.Stats> }]\n```\n\n> :book: Returns `fs.stat` instead of `fs.lstat` for symbolic links when the [`followSymbolicLinks`](#followsymboliclinks) option is specified.\n>\n> :warning: Unlike [object mode](#objectmode) this mode requires additional calls to the file system. On average, this mode is slower at least twice. See [old and modern mode](#old-and-modern-mode) for more details.\n\n#### unique\n\n* Type: `boolean`\n* Default: `true`\n\nEnsures that the returned entries are unique.\n\n```js\nfg.sync(['*.json', 'package.json'], { unique: false }); // ['package.json', 'package.json']\nfg.sync(['*.json', 'package.json'], { unique: true });  // ['package.json']\n```\n\nIf `true` and similar entries are found, the result is the first found.\n\n### Matching control\n\n#### braceExpansion\n\n* Type: `boolean`\n* Default: `true`\n\nEnables Bash-like brace expansion.\n\n> :1234: [Syntax description][bash_hackers_syntax_expansion_brace] or more [detailed description][micromatch_braces].\n\n```js\ndir/\n\u251c\u2500\u2500 abd\n\u251c\u2500\u2500 acd\n\u2514\u2500\u2500 a{b,c}d\n```\n\n```js\nfg.sync('a{b,c}d', { braceExpansion: false }); // ['a{b,c}d']\nfg.sync('a{b,c}d', { braceExpansion: true });  // ['abd', 'acd']\n```\n\n#### caseSensitiveMatch\n\n* Type: `boolean`\n* Default: `true`\n\nEnables a [case-sensitive][wikipedia_case_sensitivity] mode for matching files.\n\n```js\ndir/\n\u251c\u2500\u2500 file.txt\n\u2514\u2500\u2500 File.txt\n```\n\n```js\nfg.sync('file.txt', { caseSensitiveMatch: false }); // ['file.txt', 'File.txt']\nfg.sync('file.txt', { caseSensitiveMatch: true });  // ['file.txt']\n```\n\n#### dot\n\n* Type: `boolean`\n* Default: `false`\n\nAllow patterns to match entries that begin with a period (`.`).\n\n> :book: Note that an explicit dot in a portion of the pattern will always match dot files.\n\n```js\ndir/\n\u251c\u2500\u2500 .editorconfig\n\u2514\u2500\u2500 package.json\n```\n\n```js\nfg.sync('*', { dot: false }); // ['package.json']\nfg.sync('*', { dot: true });  // ['.editorconfig', 'package.json']\n```\n\n#### extglob\n\n* Type: `boolean`\n* Default: `true`\n\nEnables Bash-like `extglob` functionality.\n\n> :1234: [Syntax description][micromatch_extglobs].\n\n```js\ndir/\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 package.json\n```\n\n```js\nfg.sync('*.+(json|md)', { extglob: false }); // []\nfg.sync('*.+(json|md)', { extglob: true });  // ['README.md', 'package.json']\n```\n\n#### globstar\n\n* Type: `boolean`\n* Default: `true`\n\nEnables recursively repeats a pattern containing `**`. If `false`, `**` behaves exactly like `*`.\n\n```js\ndir/\n\u2514\u2500\u2500 a\n    \u2514\u2500\u2500 b\n```\n\n```js\nfg.sync('**', { onlyFiles: false, globstar: false }); // ['a']\nfg.sync('**', { onlyFiles: false, globstar: true });  // ['a', 'a/b']\n```\n\n#### baseNameMatch\n\n* Type: `boolean`\n* Default: `false`\n\nIf set to `true`, then patterns without slashes will be matched against the basename of the path if it contains slashes.\n\n```js\ndir/\n\u2514\u2500\u2500 one/\n    \u2514\u2500\u2500 file.md\n```\n\n```js\nfg.sync('*.md', { baseNameMatch: false }); // []\nfg.sync('*.md', { baseNameMatch: true });  // ['one/file.md']\n```\n\n## FAQ\n\n## What is a static or dynamic pattern?\n\nAll patterns can be divided into two types:\n\n* **static**. A pattern is considered static if it can be used to get an entry on the file system without using matching mechanisms. For example, the `file.js` pattern is a static pattern because we can just verify that it exists on the file system.\n* **dynamic**. A pattern is considered dynamic if it cannot be used directly to find occurrences without using a matching mechanisms. For example, the `*` pattern is a dynamic pattern because we cannot use this pattern directly.\n\nA pattern is considered dynamic if it contains the following characters (`\u2026` \u2014 any characters or their absence) or options:\n\n* The [`caseSensitiveMatch`](#casesensitivematch) option is disabled\n* `\\\\` (the escape character)\n* `*`, `?`, `!` (at the beginning of line)\n* `[\u2026]`\n* `(\u2026|\u2026)`\n* `@(\u2026)`, `!(\u2026)`, `*(\u2026)`, `?(\u2026)`, `+(\u2026)` (respects the [`extglob`](#extglob) option)\n* `{\u2026,\u2026}`, `{\u2026..\u2026}` (respects the [`braceExpansion`](#braceexpansion) option)\n\n## How to write patterns on Windows?\n\nAlways use forward-slashes in glob expressions (patterns and [`ignore`](#ignore) option). Use backslashes for escaping characters. With the [`cwd`](#cwd) option use a convenient format.\n\n**Bad**\n\n```ts\n[\n\t'directory\\\\*',\n\tpath.join(process.cwd(), '**')\n]\n```\n\n**Good**\n\n```ts\n[\n\t'directory/*',\n\tpath.join(process.cwd(), '**').replace(/\\\\/g, '/')\n]\n```\n\n> :book: Use the [`normalize-path`][npm_normalize_path] or the [`unixify`][npm_unixify] package to convert Windows-style path to a Unix-style path.\n\nRead more about [matching with backslashes][micromatch_backslashes].\n\n## Why are parentheses match wrong?\n\n```js\ndir/\n\u2514\u2500\u2500 (special-*file).txt\n```\n\n```js\nfg.sync(['(special-*file).txt']) // []\n```\n\nRefers to Bash. You need to escape special characters:\n\n```js\nfg.sync(['\\\\(special-*file\\\\).txt']) // ['(special-*file).txt']\n```\n\nRead more about [matching special characters as literals][picomatch_matching_special_characters_as_literals].\n\n## How to exclude directory from reading?\n\nYou can use a negative pattern like this: `!**/node_modules` or `!**/node_modules/**`. Also you can use [`ignore`](#ignore) option. Just look at the example below.\n\n```js\nfirst/\n\u251c\u2500\u2500 file.md\n\u2514\u2500\u2500 second/\n    \u2514\u2500\u2500 file.txt\n```\n\nIf you don't want to read the `second` directory, you must write the following pattern: `!**/second` or `!**/second/**`.\n\n```js\nfg.sync(['**/*.md', '!**/second']);                 // ['first/file.md']\nfg.sync(['**/*.md'], { ignore: ['**/second/**'] }); // ['first/file.md']\n```\n\n> :warning: When you write `!**/second/**/*` it means that the directory will be **read**, but all the entries will not be included in the results.\n\nYou have to understand that if you write the pattern to exclude directories, then the directory will not be read under any circumstances.\n\n## How to use UNC path?\n\nYou cannot use [Uniform Naming Convention (UNC)][unc_path] paths as patterns (due to syntax), but you can use them as [`cwd`](#cwd) directory.\n\n```ts\nfg.sync('*', { cwd: '\\\\\\\\?\\\\C:\\\\Python27' /* or //?/C:/Python27 */ });\nfg.sync('Python27/*', { cwd: '\\\\\\\\?\\\\C:\\\\' /* or //?/C:/ */ });\n```\n\n## Compatible with `node-glob`?\n\n| node-glob    | fast-glob |\n| :----------: | :-------: |\n| `cwd`        | [`cwd`](#cwd) |\n| `root`       | \u2013 |\n| `dot`        | [`dot`](#dot) |\n| `nomount`    | \u2013 |\n| `mark`       | [`markDirectories`](#markdirectories) |\n| `nosort`     | \u2013 |\n| `nounique`   | [`unique`](#unique) |\n| `nobrace`    | [`braceExpansion`](#braceexpansion) |\n| `noglobstar` | [`globstar`](#globstar) |\n| `noext`      | [`extglob`](#extglob) |\n| `nocase`     | [`caseSensitiveMatch`](#casesensitivematch) |\n| `matchBase`  | [`baseNameMatch`](#basenamematch) |\n| `nodir`      | [`onlyFiles`](#onlyfiles) |\n| `ignore`     | [`ignore`](#ignore) |\n| `follow`     | [`followSymbolicLinks`](#followsymboliclinks) |\n| `realpath`   | \u2013 |\n| `absolute`   | [`absolute`](#absolute) |\n\n## Benchmarks\n\n### Server\n\nLink: [Vultr Bare Metal][vultr_pricing_baremetal]\n\n* Processor: E3-1270v6 (8 CPU)\n* RAM: 32GB\n* Disk: SSD ([Intel DC S3520 SSDSC2BB240G7][intel_ssd])\n\nYou can see results [here][github_gist_benchmark_server] for latest release.\n\n### Nettop\n\nLink: [Zotac bi323][zotac_bi323]\n\n* Processor: Intel N3150 (4 CPU)\n* RAM: 8GB\n* Disk: SSD ([Silicon Power SP060GBSS3S55S25][silicon_power_ssd])\n\nYou can see results [here][github_gist_benchmark_nettop] for latest release.\n\n## Changelog\n\nSee the [Releases section of our GitHub project][github_releases] for changelog for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license.\n\n[bash_hackers_syntax_expansion_brace]: https://wiki.bash-hackers.org/syntax/expansion/brace\n[github_gist_benchmark_nettop]: https://gist.github.com/mrmlnc/f06246b197f53c356895fa35355a367c#file-fg-benchmark-nettop-product-txt\n[github_gist_benchmark_server]: https://gist.github.com/mrmlnc/f06246b197f53c356895fa35355a367c#file-fg-benchmark-server-product-txt\n[github_releases]: https://github.com/mrmlnc/fast-glob/releases\n[glob_definition]: https://en.wikipedia.org/wiki/Glob_(programming)\n[glob_linux_man]: http://man7.org/linux/man-pages/man3/glob.3.html\n[intel_ssd]: https://ark.intel.com/content/www/us/en/ark/products/93012/intel-ssd-dc-s3520-series-240gb-2-5in-sata-6gb-s-3d1-mlc.html\n[micromatch_backslashes]: https://github.com/micromatch/micromatch#backslashes\n[micromatch_braces]: https://github.com/micromatch/braces\n[micromatch_extended_globbing]: https://github.com/micromatch/micromatch#extended-globbing\n[micromatch_extglobs]: https://github.com/micromatch/micromatch#extglobs\n[micromatch_regex_character_classes]: https://github.com/micromatch/micromatch#regex-character-classes\n[micromatch]: https://github.com/micromatch/micromatch\n[node_js_fs_class_fs_dirent]: https://nodejs.org/api/fs.html#fs_class_fs_dirent\n[node_js_fs_class_fs_stats]: https://nodejs.org/api/fs.html#fs_class_fs_stats\n[node_js_stream_readable_streams]: https://nodejs.org/api/stream.html#stream_readable_streams\n[node_js]: https://nodejs.org/en\n[nodelib_fs_scandir_old_and_modern_modern]: https://github.com/nodelib/nodelib/blob/master/packages/fs/fs.scandir/README.md#old-and-modern-mode\n[npm_normalize_path]: https://www.npmjs.com/package/normalize-path\n[npm_unixify]: https://www.npmjs.com/package/unixify\n[paypal_mrmlnc]:https://paypal.me/mrmlnc\n[picomatch_matching_behavior]: https://github.com/micromatch/picomatch#matching-behavior-vs-bash\n[picomatch_matching_special_characters_as_literals]: https://github.com/micromatch/picomatch#matching-special-characters-as-literals\n[picomatch_posix_brackets]: https://github.com/micromatch/picomatch#posix-brackets\n[regular_expressions_brackets]: https://www.regular-expressions.info/brackets.html\n[silicon_power_ssd]: https://www.silicon-power.com/web/product-1\n[unc_path]: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dtyp/62e862f4-2a51-452e-8eeb-dc4ff5ee33cc\n[vultr_pricing_baremetal]: https://www.vultr.com/pricing/baremetal\n[wikipedia_case_sensitivity]: https://en.wikipedia.org/wiki/Case_sensitivity\n[zotac_bi323]: https://www.zotac.com/ee/product/mini_pcs/zbox-bi323"}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1536596}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 7847162}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 32229993}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 79868143}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 149785397}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 238831810}], "dependentsCount": 677, "starsCount": 3}, "github": {"starsCount": 878, "forksCount": 31, "subscribersCount": 7, "issues": {"count": 258, "openCount": 14, "distribution": {"3600": 62, "10800": 18, "32400": 12, "97200": 37, "291600": 28, "874800": 30, "2624400": 23, "7873200": 19, "23619600": 14, "70858800": 15, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mrmlnc", "commitsCount": 460}, {"username": "emelyanovtv", "commitsCount": 2}, {"username": "vladshcherbin", "commitsCount": 2}, {"username": "DudaGod", "commitsCount": 1}, {"username": "RandomByte", "commitsCount": 1}, {"username": "TehShrike", "commitsCount": 1}, {"username": "alan-agius4", "commitsCount": 1}, {"username": "bluelovers", "commitsCount": 1}, {"username": "garyking", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "lukeis", "commitsCount": 1}, {"username": "markelog", "commitsCount": 1}, {"username": "rijnhard", "commitsCount": 1}, {"username": "sipayRT", "commitsCount": 1}, {"username": "yuriydobryanskyyempeek", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 7}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 25}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 29}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 76}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 192}], "statuses": [{"context": "build", "state": "success"}, {"context": "benchmark.regression.absolute", "state": "pending"}, {"context": "benchmark.regression.object", "state": "pending"}, {"context": "benchmark.regression", "state": "pending"}, {"context": "benchmark", "state": "pending"}]}, "source": {"files": {"readmeSize": 23389, "testsSize": 117987, "hasNpmIgnore": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.71, "health": 1, "branding": 0}, "popularity": {"communityInterest": 935, "downloadsCount": 26622714.333333332, "downloadsAcceleration": 149451.68559741252, "dependentsCount": 677}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8300185694167814, "detail": {"quality": 0.8501518458182831, "popularity": 0.6428292223752992, "maintenance": 0.9999508223998339}}}
{"analyzedAt": "2020-02-29T20:47:48.188Z", "collected": {"metadata": {"name": "fast-json-stable-stringify", "scope": "unscoped", "version": "2.1.0", "description": "deterministic `JSON.stringify()` - a faster version of substack's json-stable-strigify without jsonify", "keywords": ["json", "stringify", "deterministic", "hash", "stable"], "date": "2019-12-14T16:17:57.583Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "esp", "email": "e.poberezkin@me.com"}, "maintainers": [{"username": "esp", "email": "e.poberezkin@me.com"}], "repository": {"type": "git", "url": "git://github.com/epoberezkin/fast-json-stable-stringify.git"}, "links": {"npm": "https://www.npmjs.com/package/fast-json-stable-stringify", "homepage": "https://github.com/epoberezkin/fast-json-stable-stringify", "repository": "https://github.com/epoberezkin/fast-json-stable-stringify", "bugs": "https://github.com/epoberezkin/fast-json-stable-stringify/issues"}, "license": "MIT", "devDependencies": {"benchmark": "^2.1.4", "coveralls": "^3.0.0", "eslint": "^6.7.0", "fast-stable-stringify": "latest", "faster-stable-stringify": "latest", "json-stable-stringify": "latest", "nyc": "^14.1.0", "pre-commit": "^1.2.2", "tape": "^4.11.0"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "# fast-json-stable-stringify\n\nDeterministic `JSON.stringify()` - a faster version of [@substack](https://github.com/substack)'s json-stable-strigify without [jsonify](https://github.com/substack/jsonify).\n\nYou can also pass in a custom comparison function.\n\n[![Build Status](https://travis-ci.org/epoberezkin/fast-json-stable-stringify.svg?branch=master)](https://travis-ci.org/epoberezkin/fast-json-stable-stringify)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/fast-json-stable-stringify/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/fast-json-stable-stringify?branch=master)\n\n# example\n\n``` js\nvar stringify = require('fast-json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n\n# methods\n\n``` js\nvar stringify = require('fast-json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('fast-json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('fast-json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### cycles\n\nPass `true` in `opts.cycles` to stringify circular property as `__cycle__` - the result will not be a valid JSON string in this case.\n\nTypeError will be thrown in case of circular object without this option.\n\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install fast-json-stable-stringify\n```\n\n\n# benchmark\n\nTo run benchmark (requires Node.js 6+):\n```\nnode benchmark\n```\n\nResults:\n```\nfast-json-stable-stringify x 17,189 ops/sec \u00b11.43% (83 runs sampled)\njson-stable-stringify x 13,634 ops/sec \u00b11.39% (85 runs sampled)\nfast-stable-stringify x 20,212 ops/sec \u00b11.20% (84 runs sampled)\nfaster-stable-stringify x 15,549 ops/sec \u00b11.12% (84 runs sampled)\nThe fastest is fast-stable-stringify\n```\n\n\n## Enterprise support\n\nfast-json-stable-stringify package is a part of [Tidelift enterprise subscription](https://tidelift.com/subscription/pkg/npm-fast-json-stable-stringify?utm_source=npm-fast-json-stable-stringify&utm_medium=referral&utm_campaign=enterprise&utm_term=repo) - it provides a centralised commercial support to open-source software users, in addition to the support provided by software maintainers.\n\n\n## Security contact\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure. Please do NOT report security vulnerability via GitHub issues.\n\n\n# license\n\n[MIT](https://github.com/epoberezkin/fast-json-stable-stringify/blob/master/LICENSE)"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2697310}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 16241942}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 67705247}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 175607749}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 327031910}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 588888725}], "dependentsCount": 158, "starsCount": 0}, "github": {"forkOf": "substack/json-stable-stringify", "starsCount": 68, "forksCount": 12, "subscribersCount": 3, "issues": {"count": 11, "openCount": 7, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 1, "23619600": 7, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "epoberezkin", "commitsCount": 24}, {"username": "substack", "commitsCount": 22}, {"username": "abdonrd", "commitsCount": 4}, {"username": "domoritz", "commitsCount": 2}, {"username": "kapetan", "commitsCount": 2}, {"username": "RickEyre", "commitsCount": 1}, {"username": "mvayngrib", "commitsCount": 1}, {"username": "rina-sleeping", "commitsCount": 1}, {"username": "rprieto", "commitsCount": 1}, {"username": "thomsbg", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 5}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 11}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 3517, "testsSize": 7058}, "badges": [{"urls": {"original": "https://travis-ci.org/epoberezkin/fast-json-stable-stringify.svg?branch=master", "service": "https://api.travis-ci.org/epoberezkin/fast-json-stable-stringify.svg?branch=master", "shields": "https://img.shields.io/travis/epoberezkin/fast-json-stable-stringify/master.svg", "content": "https://img.shields.io/travis/epoberezkin/fast-json-stable-stringify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/epoberezkin/fast-json-stable-stringify/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/epoberezkin/fast-json-stable-stringify/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/epoberezkin/fast-json-stable-stringify/master.svg", "content": "https://img.shields.io/coveralls/epoberezkin/fast-json-stable-stringify/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 93, "downloadsCount": 58535916.333333336, "downloadsAcceleration": 211724.49421613396, "dependentsCount": 158}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8401328726878969, "detail": {"quality": 0.9748454508337377, "popularity": 0.5649408987307385, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-28T14:48:22.369Z", "collected": {"metadata": {"name": "fast-levenshtein", "scope": "unscoped", "version": "2.0.6", "description": "Efficient implementation of Levenshtein algorithm  with locale-specific collator support.", "keywords": ["levenshtein", "distance", "string"], "date": "2016-12-27T21:15:07.820Z", "author": {"name": "Ramesh Nair", "email": "ram@hiddentao.com", "url": "http://www.hiddentao.com/", "username": "hiddentao"}, "publisher": {"username": "hiddentao", "email": "ram@hiddentao.com"}, "maintainers": [{"username": "hiddentao", "email": "ram@hiddentao.com"}], "repository": {"type": "git", "url": "git+https://github.com/hiddentao/fast-levenshtein.git"}, "links": {"npm": "https://www.npmjs.com/package/fast-levenshtein", "homepage": "https://github.com/hiddentao/fast-levenshtein#readme", "repository": "https://github.com/hiddentao/fast-levenshtein", "bugs": "https://github.com/hiddentao/fast-levenshtein/issues"}, "license": "MIT", "devDependencies": {"chai": "~1.5.0", "grunt": "~0.4.1", "grunt-benchmark": "~0.2.0", "grunt-cli": "^1.2.0", "grunt-contrib-jshint": "~0.4.3", "grunt-contrib-uglify": "~0.2.0", "grunt-mocha-test": "~0.2.2", "grunt-npm-install": "~0.1.0", "load-grunt-tasks": "~0.6.0", "lodash": "^4.0.1", "mocha": "~1.9.0"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# fast-levenshtein - Levenshtein algorithm in Javascript\n\n[![Build Status](https://secure.travis-ci.org/hiddentao/fast-levenshtein.png)](http://travis-ci.org/hiddentao/fast-levenshtein)\n[![NPM module](https://badge.fury.io/js/fast-levenshtein.png)](https://badge.fury.io/js/fast-levenshtein)\n[![NPM downloads](https://img.shields.io/npm/dm/fast-levenshtein.svg?maxAge=2592000)](https://www.npmjs.com/package/fast-levenshtein)\n[![Follow on Twitter](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Follow&maxAge=2592000)](https://twitter.com/hiddentao)\n\nAn efficient Javascript implementation of the [Levenshtein algorithm](http://en.wikipedia.org/wiki/Levenshtein_distance) with locale-specific collator support.\n\n## Features\n\n* Works in node.js and in the browser.\n* Better performance than other implementations by not needing to store the whole matrix ([more info](http://www.codeproject.com/Articles/13525/Fast-memory-efficient-Levenshtein-algorithm)).\n* Locale-sensitive string comparisions if needed.\n* Comprehensive test suite and performance benchmark.\n* Small: <1 KB minified and gzipped\n\n## Installation\n\n### node.js\n\nInstall using [npm](http://npmjs.org/):\n\n```bash\n$ npm install fast-levenshtein\n```\n\n### Browser\n\nUsing bower:\n\n```bash\n$ bower install fast-levenshtein\n```\n\nIf you are not using any module loader system then the API will then be accessible via the `window.Levenshtein` object.\n\n## Examples\n\n**Default usage**\n\n```javascript\nvar levenshtein = require('fast-levenshtein');\n\nvar distance = levenshtein.get('back', 'book');   // 2\nvar distance = levenshtein.get('\u6211\u611b\u4f60', '\u6211\u53eb\u4f60');   // 1\n```\n\n**Locale-sensitive string comparisons**\n\nIt supports using [Intl.Collator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator) for locale-sensitive  string comparisons:\n\n```javascript\nvar levenshtein = require('fast-levenshtein');\n\nlevenshtein.get('mikailovitch', 'Mikha\u00eflovitch', { useCollator: true});\n// 1\n```\n\n## Building and Testing\n\nTo build the code and run the tests:\n\n```bash\n$ npm install -g grunt-cli\n$ npm install\n$ npm run build\n```\n\n## Performance\n\n_Thanks to [Titus Wormer](https://github.com/wooorm) for [encouraging me](https://github.com/hiddentao/fast-levenshtein/issues/1) to do this._\n\nBenchmarked against other node.js levenshtein distance modules (on Macbook Air 2012, Core i7, 8GB RAM):\n\n```bash\nRunning suite Implementation comparison [benchmark/speed.js]...\n>> levenshtein-edit-distance x 234 ops/sec \u00b13.02% (73 runs sampled)\n>> levenshtein-component x 422 ops/sec \u00b14.38% (83 runs sampled)\n>> levenshtein-deltas x 283 ops/sec \u00b13.83% (78 runs sampled)\n>> natural x 255 ops/sec \u00b10.76% (88 runs sampled)\n>> levenshtein x 180 ops/sec \u00b13.55% (86 runs sampled)\n>> fast-levenshtein x 1,792 ops/sec \u00b12.72% (95 runs sampled)\nBenchmark done.\nFastest test is fast-levenshtein at 4.2x faster than levenshtein-component\n```\n\nYou can run this benchmark yourself by doing:\n\n```bash\n$ npm install\n$ npm run build\n$ npm run benchmark\n```\n\n## Contributing\n\nIf you wish to submit a pull request please update and/or create new tests for any changes you make and ensure the grunt build passes.\n\nSee [CONTRIBUTING.md](https://github.com/hiddentao/fast-levenshtein/blob/master/CONTRIBUTING.md) for details.\n\n## License\n\nMIT - see [LICENSE.md](https://github.com/hiddentao/fast-levenshtein/blob/master/LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1939931}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 10200336}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 43116527}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 109629469}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 215970970}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 399732123}], "dependentsCount": 187, "starsCount": 17}, "github": {"starsCount": 467, "forksCount": 39, "subscribersCount": 8, "issues": {"count": 27, "openCount": 5, "distribution": {"3600": 1, "10800": 2, "32400": 3, "97200": 3, "291600": 3, "874800": 1, "2624400": 4, "7873200": 2, "23619600": 0, "70858800": 5, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "hiddentao", "commitsCount": 42}, {"username": "JJ", "commitsCount": 2}, {"username": "neoPix", "commitsCount": 2}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "benchik", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "kellym", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3414, "testsSize": 16307}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/hiddentao/fast-levenshtein.png", "service": "https://api.travis-ci.org/hiddentao/fast-levenshtein.svg", "shields": "https://img.shields.io/travis/hiddentao/fast-levenshtein.svg", "content": "https://img.shields.io/travis/hiddentao/fast-levenshtein.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/dm/fast-levenshtein.svg?maxAge=2592000", "shields": "https://img.shields.io/npm/dm/fast-levenshtein.svg", "content": "https://img.shields.io/npm/dm/fast-levenshtein.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 539, "downloadsCount": 36543156.333333336, "downloadsAcceleration": 111685.8215372907, "dependentsCount": 187}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8407266732575849, "detail": {"quality": 0.9478474904816662, "popularity": 0.5897458405249648, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-27T23:40:14.106Z", "collected": {"metadata": {"name": "fastq", "scope": "unscoped", "version": "1.6.1", "description": "Fast, in memory work queue", "keywords": ["fast", "queue", "async", "worker"], "date": "2020-02-27T20:11:33.808Z", "author": {"name": "Matteo Collina", "email": "hello@matteocollina.com", "username": "matteo.collina"}, "publisher": {"username": "matteo.collina", "email": "hello@matteocollina.com"}, "maintainers": [{"username": "matteo.collina", "email": "hello@matteocollina.com"}], "repository": {"type": "git", "url": "git+https://github.com/mcollina/fastq.git"}, "links": {"npm": "https://www.npmjs.com/package/fastq", "homepage": "https://github.com/mcollina/fastq#readme", "repository": "https://github.com/mcollina/fastq", "bugs": "https://github.com/mcollina/fastq/issues"}, "license": "ISC", "dependencies": {"reusify": "^1.0.4"}, "devDependencies": {"async": "^3.1.0", "neo-async": "^2.6.1", "nyc": "^15.0.0", "pre-commit": "^1.2.2", "snazzy": "^8.0.0", "standard": "^14.0.0", "tape": "^4.13.0", "typescript": "^3.5.3"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# fastq\n\n![ci][ci-url]\n[![npm version][npm-badge]][npm-url]\n[![Dependency Status][david-badge]][david-url]\n\nFast, in memory work queue. `fastq` is API compatible with\n[`async.queue`](https://github.com/caolan/async#queueworker-concurrency)\n\nBenchmarks (1 million tasks):\n\n* setImmediate: 812ms\n* fastq: 854ms\n* async.queue: 1298ms\n* neoAsync.queue: 1249ms\n\nObtained on node 12.16.1, on a dedicated server.\n\nIf you need zero-overhead series function call, check out\n[fastseries](http://npm.im/fastseries). For zero-overhead parallel\nfunction call, check out [fastparallel](http://npm.im/fastparallel).\n\n[![js-standard-style](https://raw.githubusercontent.com/feross/standard/master/badge.png)](https://github.com/feross/standard)\n\n  * <a href=\"#install\">Installation</a>\n  * <a href=\"#usage\">Usage</a>\n  * <a href=\"#api\">API</a>\n  * <a href=\"#license\">Licence &amp; copyright</a>\n\n## Install\n\n`npm i fastq --save`\n\n## Usage\n\n```js\n'use strict'\n\nvar queue = require('fastq')(worker, 1)\n\nqueue.push(42, function (err, result) {\n  if (err) { throw err }\n  console.log('the result is', result)\n})\n\nfunction worker (arg, cb) {\n  cb(null, 42 * 2)\n}\n```\n\n### Setting this\n\n```js\n'use strict'\n\nvar that = { hello: 'world' }\nvar queue = require('fastq')(that, worker, 1)\n\nqueue.push(42, function (err, result) {\n  if (err) { throw err }\n  console.log(this)\n  console.log('the result is', result)\n})\n\nfunction worker (arg, cb) {\n  console.log(this)\n  cb(null, 42 * 2)\n}\n```\n\n## API\n\n* <a href=\"#fastqueue\"><code>fastqueue()</code></a>\n* <a href=\"#push\"><code>queue#<b>push()</b></code></a>\n* <a href=\"#unshift\"><code>queue#<b>unshift()</b></code></a>\n* <a href=\"#pause\"><code>queue#<b>pause()</b></code></a>\n* <a href=\"#resume\"><code>queue#<b>resume()</b></code></a>\n* <a href=\"#idle\"><code>queue#<b>idle()</b></code></a>\n* <a href=\"#length\"><code>queue#<b>length()</b></code></a>\n* <a href=\"#kill\"><code>queue#<b>kill()</b></code></a>\n* <a href=\"#killAndDrain\"><code>queue#<b>killAndDrain()</b></code></a>\n* <a href=\"#concurrency\"><code>queue#<b>concurrency</b></code></a>\n* <a href=\"#drain\"><code>queue#<b>drain</b></code></a>\n* <a href=\"#empty\"><code>queue#<b>empty</b></code></a>\n* <a href=\"#saturated\"><code>queue#<b>saturated</b></code></a>\n\n-------------------------------------------------------\n<a name=\"fastqueue\"></a>\n### fastqueue([that], worker, concurrency)\n\nCreates a new queue.\n\nArguments:\n\n* `that`, optional context of the `worker` function.\n* `worker`, worker function, it would be called with `that` as `this`,\n  if that is specified.\n* `concurrency`, number of concurrent tasks that could be executed in\n  parallel.\n\n-------------------------------------------------------\n<a name=\"push\"></a>\n### queue.push(task, done)\n\nAdd a task at the end of the queue. `done(err, result)` will be called\nwhen the task was processed.\n\n-------------------------------------------------------\n<a name=\"unshift\"></a>\n### queue.unshift(task, done)\n\nAdd a task at the beginning of the queue. `done(err, result)` will be called\nwhen the task was processed.\n\n-------------------------------------------------------\n<a name=\"pause\"></a>\n### queue.pause()\n\nPause the processing of tasks. Currently worked tasks are not\nstopped.\n\n-------------------------------------------------------\n<a name=\"resume\"></a>\n### queue.resume()\n\nResume the processing of tasks.\n\n-------------------------------------------------------\n<a name=\"idle\"></a>\n### queue.idle()\n\nReturns `false` if there are tasks being processed or waiting to be processed.\n`true` otherwise.\n\n-------------------------------------------------------\n<a name=\"length\"></a>\n### queue.length()\n\nReturns the number of tasks waiting to be processed (in the queue).\n\n-------------------------------------------------------\n<a name=\"kill\"></a>\n### queue.kill()\n\nRemoves all tasks waiting to be processed, and reset `drain` to an empty\nfunction.\n\n-------------------------------------------------------\n<a name=\"killAndDrain\"></a>\n### queue.killAndDrain()\n\nSame than `kill` but the `drain` function will be called before reset to empty.\n\n-------------------------------------------------------\n<a name=\"concurrency\"></a>\n### queue.concurrency\n\nProperty that returns the number of concurrent tasks that could be executed in\nparallel. It can be altered at runtime.\n\n-------------------------------------------------------\n<a name=\"drain\"></a>\n### queue.drain\n\nFunction that will be called when the last\nitem from the queue has been processed by a worker.\nIt can be altered at runtime.\n\n-------------------------------------------------------\n<a name=\"empty\"></a>\n### queue.empty\n\nFunction that will be called when the last\nitem from the queue has been assigned to a worker.\nIt can be altered at runtime.\n\n-------------------------------------------------------\n<a name=\"saturated\"></a>\n### queue.saturated\n\nFunction that will be called when the queue hits the concurrency\nlimit.\nIt can be altered at runtime.\n\n## License\n\nISC\n\n[ci-url]: https://github.com/mcollina/fastq/workflows/ci/badge.svg\n[npm-badge]: https://badge.fury.io/js/fastq.svg\n[npm-url]: https://badge.fury.io/js/fastq\n[david-badge]: https://david-dm.org/mcollina/fastq.svg\n[david-url]: https://david-dm.org/mcollina/fastq"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 523744}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2625719}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 10377476}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 24353455}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 40497561}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 44792830}], "dependentsCount": 22, "starsCount": 3}, "github": {"starsCount": 97, "forksCount": 7, "subscribersCount": 6, "issues": {"count": 12, "openCount": 0, "distribution": {"3600": 3, "10800": 2, "32400": 2, "97200": 2, "291600": 0, "874800": 2, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mcollina", "commitsCount": 44}, {"username": "gnought", "commitsCount": 4}, {"username": "AoDev", "commitsCount": 1}, {"username": "HelloEdit", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "dnlup", "commitsCount": 1}, {"username": "gswalden", "commitsCount": 1}, {"username": "yuchi", "commitsCount": 1}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 4}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 4}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 8}]}, "source": {"files": {"readmeSize": 5224, "testsSize": 10765}, "badges": [{"urls": {"original": "https://david-dm.org/mcollina/fastq.svg", "service": "https://david-dm.org/mcollina/fastq.svg", "shields": "https://img.shields.io/david/mcollina/fastq.svg", "content": "https://img.shields.io/david/mcollina/fastq.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["standard"]}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 121, "downloadsCount": 8117818.333333333, "downloadsAcceleration": 81365.53807077625, "dependentsCount": 22}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7769443886873852, "detail": {"quality": 0.9086915169375321, "popularity": 0.4410730047907953, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-16T15:02:13.447Z", "collected": {"metadata": {"name": "figures", "scope": "unscoped", "version": "3.2.0", "description": "Unicode symbols with Windows CMD fallbacks", "keywords": ["unicode", "cli", "cmd", "command-line", "characters", "symbol", "symbols", "figure", "figures", "fallback"], "date": "2020-02-16T14:55:52.820Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "https://sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/figures.git"}, "links": {"npm": "https://www.npmjs.com/package/figures", "homepage": "https://github.com/sindresorhus/figures#readme", "repository": "https://github.com/sindresorhus/figures", "bugs": "https://github.com/sindresorhus/figures/issues"}, "license": "MIT", "dependencies": {"escape-string-regexp": "^1.0.5"}, "devDependencies": {"ava": "^1.4.1", "markdown-table": "^1.1.2", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 1}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 2}, {"from": "2018-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# figures [![Build Status](https://travis-ci.org/sindresorhus/figures.svg?branch=master)](https://travis-ci.org/sindresorhus/figures)\n\n> Unicode symbols with Windows CMD fallbacks\n\n[![](screenshot.png)](index.js)\n\n[*and more...*](index.js)\n\nWindows CMD only supports a [limited character set](http://en.wikipedia.org/wiki/Code_page_437).\n\n## Install\n\n```\n$ npm install figures\n```\n\n## Usage\n\nSee the [source](index.js) for supported symbols.\n\n```js\nconst figures = require('figures');\n\nconsole.log(figures('\u2714\ufe0e check'));\n// On non-Windows OSes:  \u2714\ufe0e check\n// On Windows:           \u221a check\n\nconsole.log(figures.tick);\n// On non-Windows OSes:  \u2714\ufe0e\n// On Windows:           \u221a\n\nconsole.log(figures.main.tick);\n// On all OSes:  \u2714\ufe0e\n\nconsole.log(figures.windows.tick);\n// On all OSes:  \u221a\n```\n\n## API\n\n### figures(string)\n\nReturns the input with replaced fallback Unicode symbols on Windows.\n\nAll the below [figures](#figures) are attached to the main export as shown in the example above.\n\n#### string\n\nType: `string`\n\nString where the Unicode symbols will be replaced with fallback symbols depending on the OS.\n\n### figures.main\n\nSymbols to use when not running on Windows.\n\n### figures.windows\n\nSymbols to use when running on Windows.\n\n\n## Figures\n\n| Name               | Non-Windows | Windows |\n| ------------------ | :---------: | :-----: |\n| tick               |      \u2714      |    \u221a    |\n| cross              |      \u2716      |    \u00d7    |\n| star               |      \u2605      |    *    |\n| square             |      \u2587      |    \u2588    |\n| squareSmall        |      \u25fb      |   [ ]   |\n| squareSmallFilled  |      \u25fc      |   [\u2588]   |\n| play               |      \u25b6      |    \u25ba    |\n| circle             |      \u25ef      |   ( )   |\n| circleFilled       |      \u25c9      |   (*)   |\n| circleDotted       |      \u25cc      |   ( )   |\n| circleDouble       |      \u25ce      |   ( )   |\n| circleCircle       |      \u24de      |   (\u25cb)   |\n| circleCross        |      \u24e7      |   (\u00d7)   |\n| circlePipe         |      \u24be      |   (\u2502)   |\n| circleQuestionMark |      ?\u20dd     |   (?)   |\n| bullet             |      \u25cf      |    *    |\n| dot                |      \u2024      |    .    |\n| line               |      \u2500      |    \u2500    |\n| ellipsis           |      \u2026      |   ...   |\n| pointer            |      \u276f      |    >    |\n| pointerSmall       |      \u203a      |    \u00bb    |\n| info               |      \u2139      |    i    |\n| warning            |      \u26a0      |    \u203c    |\n| hamburger          |      \u2630      |    \u2261    |\n| smiley             |      \u32e1      |    \u263a    |\n| mustache           |      \u0df4      |   \u250c\u2500\u2510   |\n| heart              |      \u2665      |    \u2665    |\n| nodejs             |      \u2b22      |    \u2666    |\n| arrowUp            |      \u2191      |    \u2191    |\n| arrowDown          |      \u2193      |    \u2193    |\n| arrowLeft          |      \u2190      |    \u2190    |\n| arrowRight         |      \u2192      |    \u2192    |\n| radioOn            |      \u25c9      |   (*)   |\n| radioOff           |      \u25ef      |   ( )   |\n| checkboxOn         |      \u2612      |   [\u00d7]   |\n| checkboxOff        |      \u2610      |   [ ]   |\n| checkboxCircleOn   |      \u24e7      |   (\u00d7)   |\n| checkboxCircleOff  |      \u24be      |   ( )   |\n| questionMarkPrefix |      ?\u20dd     |    \uff1f    |\n| oneHalf            |      \u00bd      |   1/2   |\n| oneThird           |      \u2153      |   1/3   |\n| oneQuarter         |      \u00bc      |   1/4   |\n| oneFifth           |      \u2155      |   1/5   |\n| oneSixth           |      \u2159      |   1/6   |\n| oneSeventh         |      \u2150      |   1/7   |\n| oneEighth          |      \u215b      |   1/8   |\n| oneNinth           |      \u2151      |   1/9   |\n| oneTenth           |      \u2152      |   1/10  |\n| twoThirds          |      \u2154      |   2/3   |\n| twoFifths          |      \u2156      |   2/5   |\n| threeQuarters      |      \u00be      |   3/4   |\n| threeFifths        |      \u2157      |   3/5   |\n| threeEighths       |      \u215c      |   3/8   |\n| fourFifths         |      \u2158      |   4/5   |\n| fiveSixths         |      \u215a      |   5/6   |\n| fiveEighths        |      \u215d      |   5/8   |\n| sevenEighths       |      \u215e      |   7/8   |\n\n\n## Related\n\n- [log-symbols](https://github.com/sindresorhus/log-symbols) - Colored symbols for various log levels\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-figures?utm_source=npm-figures&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 815071}, {"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 18226915}, {"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 72469195}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 192304963}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 359334763}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 615133214}], "dependentsCount": 693, "starsCount": 12}, "github": {"starsCount": 380, "forksCount": 20, "subscribersCount": 14, "issues": {"count": 33, "openCount": 1, "distribution": {"3600": 5, "10800": 5, "32400": 3, "97200": 3, "291600": 4, "874800": 5, "2624400": 2, "7873200": 5, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 50}, {"username": "SamVerschueren", "commitsCount": 4}, {"username": "derhuerst", "commitsCount": 2}, {"username": "BendingBender", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "brandon93s", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "ehmicky", "commitsCount": 1}, {"username": "kevgo", "commitsCount": 1}], "commits": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 1}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 3}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 4740, "testsSize": 719}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/figures.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/figures.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/figures/master.svg", "content": "https://img.shields.io/travis/sindresorhus/figures/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"escape-string-regexp": {"required": "^1.0.5", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 436, "downloadsCount": 64101654.333333336, "downloadsAcceleration": 260337.77969939116, "dependentsCount": 693}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9940941558441558}}, "score": {"final": 0.8512985332843208, "detail": {"quality": 0.9094612424859031, "popularity": 0.6528044842921685, "maintenance": 0.9999388315322597}}}
{"analyzedAt": "2020-02-23T09:38:38.112Z", "collected": {"metadata": {"name": "file-entry-cache", "scope": "unscoped", "version": "5.0.1", "description": "Super simple cache for file metadata, useful for process that work o a given series of files and that only need to repeat the job on the changed ones since the previous run of the process", "keywords": ["file cache", "task cache files", "file cache", "key par", "key value", "cache"], "date": "2019-02-04T17:31:10.923Z", "author": {"name": "Roy Riojas", "url": "http://royriojas.com"}, "publisher": {"username": "royriojas", "email": "royriojas@gmail.com"}, "maintainers": [{"username": "royriojas", "email": "royriojas@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/royriojas/file-entry-cache.git"}, "links": {"npm": "https://www.npmjs.com/package/file-entry-cache", "homepage": "https://github.com/royriojas/file-entry-cache#readme", "repository": "https://github.com/royriojas/file-entry-cache", "bugs": "https://github.com/royriojas/file-entry-cache/issues"}, "license": "MIT", "dependencies": {"flat-cache": "^2.0.1"}, "devDependencies": {"chai": "^3.2.0", "changelogx": "3.0.0", "commander": "^2.6.0", "del": "^2.0.2", "esbeautifier": "^4.2.11", "eslinter": "^2.3.3", "glob-expand": "^0.1.0", "istanbul": "^0.3.6", "mocha": "^2.1.0", "precommit": "^1.1.5", "prepush": "^3.1.4", "proxyquire": "^1.3.1", "sinon": "^1.12.2", "sinon-chai": "^2.7.0", "watch-run": "^1.2.1", "write": "^0.3.1"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# file-entry-cache\n> Super simple cache for file metadata, useful for process that work o a given series of files\n> and that only need to repeat the job on the changed ones since the previous run of the process \u2014 Edit\n\n[![NPM Version](http://img.shields.io/npm/v/file-entry-cache.svg?style=flat)](https://npmjs.org/package/file-entry-cache)\n[![Build Status](http://img.shields.io/travis/royriojas/file-entry-cache.svg?style=flat)](https://travis-ci.org/royriojas/file-entry-cache)\n\n## install\n\n```bash\nnpm i --save file-entry-cache\n```\n\n## Usage\n\nThe module exposes two functions `create` and `createFromFile`.\n\n## `create(cacheName, [directory, useCheckSum])`\n- **cacheName**: the name of the cache to be created\n- **directory**: Optional the directory to load the cache from\n- **usecheckSum**: Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file.\n\n## `createFromFile(pathToCache, [useCheckSum])`\n- **pathToCache**: the path to the cache file (this combines the cache name and directory)\n- **useCheckSum**: Whether to use md5 checksum to verify if file changed. If false the default will be to use the mtime and size of the file.\n\n```js\n// loads the cache, if one does not exists for the given\n// Id a new one will be prepared to be created\nvar fileEntryCache = require('file-entry-cache');\n\nvar cache = fileEntryCache.create('testCache');\n\nvar files = expand('../fixtures/*.txt');\n\n// the first time this method is called, will return all the files\nvar oFiles = cache.getUpdatedFiles(files);\n\n// this will persist this to disk checking each file stats and\n// updating the meta attributes `size` and `mtime`.\n// custom fields could also be added to the meta object and will be persisted\n// in order to retrieve them later\ncache.reconcile();\n\n// use this if you want the non visited file entries to be kept in the cache\n// for more than one execution\n//\n// cache.reconcile( true /* noPrune */)\n\n// on a second run\nvar cache2 = fileEntryCache.create('testCache');\n\n// will return now only the files that were modified or none\n// if no files were modified previous to the execution of this function\nvar oFiles = cache.getUpdatedFiles(files);\n\n// if you want to prevent a file from being considered non modified\n// something useful if a file failed some sort of validation\n// you can then remove the entry from the cache doing\ncache.removeEntry('path/to/file'); // path to file should be the same path of the file received on `getUpdatedFiles`\n// that will effectively make the file to appear again as modified until the validation is passed. In that\n// case you should not remove it from the cache\n\n// if you need all the files, so you can determine what to do with the changed ones\n// you can call\nvar oFiles = cache.normalizeEntries(files);\n\n// oFiles will be an array of objects like the following\nentry = {\n  key: 'some/name/file', the path to the file\n  changed: true, // if the file was changed since previous run\n  meta: {\n    size: 3242, // the size of the file\n    mtime: 231231231, // the modification time of the file\n    data: {} // some extra field stored for this file (useful to save the result of a transformation on the file\n  }\n}\n\n```\n\n## Motivation for this module\n\nI needed a super simple and dumb **in-memory cache** with optional disk persistence (write-back cache) in order to make\na script that will beautify files with `esformatter` to execute only on the files that were changed since the last run.\n\nIn doing so the process of beautifying files was reduced from several seconds to a small fraction of a second.\n\nThis module uses [flat-cache](https://www.npmjs.com/package/flat-cache) a super simple `key/value` cache storage with\noptional file persistance.\n\nThe main idea is to read the files when the task begins, apply the transforms required, and if the process succeed,\nthen store the new state of the files. The next time this module request for `getChangedFiles` will return only\nthe files that were modified. Making the process to end faster.\n\nThis module could also be used by processes that modify the files applying a transform, in that case the result of the\ntransform could be stored in the `meta` field, of the entries. Anything added to the meta field will be persisted.\nThose processes won't need to call `getChangedFiles` they will instead call `normalizeEntries` that will return the\nentries with a `changed` field that can be used to determine if the file was changed or not. If it was not changed\nthe transformed stored data could be used instead of actually applying the transformation, saving time in case of only\na few files changed.\n\nIn the worst case scenario all the files will be processed. In the best case scenario only a few of them will be processed.\n\n## Important notes\n- The values set on the meta attribute of the entries should be `stringify-able` ones if possible, flat-cache uses `circular-json` to try to persist circular structures, but this should be considered experimental. The best results are always obtained with non circular values\n- All the changes to the cache state are done to memory first and only persisted after reconcile.\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 408651}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8980472}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 36785551}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 98590689}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 194304275}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 360415140}], "dependentsCount": 56, "starsCount": 1}, "github": {"starsCount": 19, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 17, "openCount": 7, "distribution": {"3600": 1, "10800": 1, "32400": 0, "97200": 1, "291600": 1, "874800": 2, "2624400": 2, "7873200": 3, "23619600": 1, "70858800": 3, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "royriojas", "commitsCount": 28}, {"username": "zeveshe", "commitsCount": 7}, {"username": "TrySound", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5190, "testsSize": 13073, "hasChangelog": true}, "badges": [{"urls": {"original": "http://img.shields.io/npm/v/file-entry-cache.svg?style=flat", "shields": "https://img.shields.io/npm/v/file-entry-cache.svg", "content": "https://img.shields.io/npm/v/file-entry-cache.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/royriojas/file-entry-cache.svg?style=flat", "service": "https://api.travis-ci.org/royriojas/file-entry-cache.svg", "shields": "https://img.shields.io/travis/royriojas/file-entry-cache.svg", "content": "https://img.shields.io/travis/royriojas/file-entry-cache.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 32, "downloadsCount": 32863563, "downloadsAcceleration": 82693.9370814308, "dependentsCount": 56}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8144831970657611, "detail": {"quality": 0.9748395676565716, "popularity": 0.49166115396220694, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-13T11:25:57.503Z", "collected": {"metadata": {"name": "fill-range", "scope": "unscoped", "version": "7.0.1", "description": "Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`", "keywords": ["alpha", "alphabetical", "array", "bash", "brace", "expand", "expansion", "fill", "glob", "match", "matches", "matching", "number", "numerical", "range", "ranges", "regex", "sh"], "date": "2019-04-08T13:42:36.186Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "es128", "email": "elan.shanker+npm@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "paulmillr", "email": "paul@paulmillr.com"}], "contributors": [{"name": "Edo Rivai", "url": "edo.rivai.nl"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Paul Miller", "url": "paulmillr.com"}, {"name": "Rouven We\u00dfling", "url": "www.rouvenwessling.de"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/fill-range.git"}, "links": {"npm": "https://www.npmjs.com/package/fill-range", "homepage": "https://github.com/jonschlinkert/fill-range", "repository": "https://github.com/jonschlinkert/fill-range", "bugs": "https://github.com/jonschlinkert/fill-range/issues"}, "license": "MIT", "dependencies": {"to-regex-range": "^5.0.1"}, "devDependencies": {"gulp-format-md": "^2.0.0", "mocha": "^6.1.1"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 3}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# fill-range [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/fill-range.svg?style=flat)](https://www.npmjs.com/package/fill-range) [![NPM monthly downloads](https://img.shields.io/npm/dm/fill-range.svg?style=flat)](https://npmjs.org/package/fill-range) [![NPM total downloads](https://img.shields.io/npm/dt/fill-range.svg?style=flat)](https://npmjs.org/package/fill-range) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/fill-range.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/fill-range)\n\n> Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save fill-range\n```\n\n## Usage\n\nExpands numbers and letters, optionally using a `step` as the last argument. _(Numbers may be defined as JavaScript numbers or strings)_.\n\n```js\nconst fill = require('fill-range');\n// fill(from, to[, step, options]);\n\nconsole.log(fill('1', '10')); //=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\nconsole.log(fill('1', '10', { toRegex: true })); //=> [1-9]|10\n```\n\n**Params**\n\n* `from`: **{String|Number}** the number or letter to start with\n* `to`: **{String|Number}** the number or letter to end with\n* `step`: **{String|Number|Object|Function}** Optionally pass a [step](#optionsstep) to use.\n* `options`: **{Object|Function}**: See all available [options](#options)\n\n## Examples\n\nBy default, an array of values is returned.\n\n**Alphabetical ranges**\n\n```js\nconsole.log(fill('a', 'e')); //=> ['a', 'b', 'c', 'd', 'e']\nconsole.log(fill('A', 'E')); //=> [ 'A', 'B', 'C', 'D', 'E' ]\n```\n\n**Numerical ranges**\n\nNumbers can be defined as actual numbers or strings.\n\n```js\nconsole.log(fill(1, 5));     //=> [ 1, 2, 3, 4, 5 ]\nconsole.log(fill('1', '5')); //=> [ 1, 2, 3, 4, 5 ]\n```\n\n**Negative ranges**\n\nNumbers can be defined as actual numbers or strings.\n\n```js\nconsole.log(fill('-5', '-1')); //=> [ '-5', '-4', '-3', '-2', '-1' ]\nconsole.log(fill('-5', '5')); //=> [ '-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5' ]\n```\n\n**Steps (increments)**\n\n```js\n// numerical ranges with increments\nconsole.log(fill('0', '25', 4)); //=> [ '0', '4', '8', '12', '16', '20', '24' ]\nconsole.log(fill('0', '25', 5)); //=> [ '0', '5', '10', '15', '20', '25' ]\nconsole.log(fill('0', '25', 6)); //=> [ '0', '6', '12', '18', '24' ]\n\n// alphabetical ranges with increments\nconsole.log(fill('a', 'z', 4)); //=> [ 'a', 'e', 'i', 'm', 'q', 'u', 'y' ]\nconsole.log(fill('a', 'z', 5)); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ]\nconsole.log(fill('a', 'z', 6)); //=> [ 'a', 'g', 'm', 's', 'y' ]\n```\n\n## Options\n\n### options.step\n\n**Type**: `number` (formatted as a string or number)\n\n**Default**: `undefined`\n\n**Description**: The increment to use for the range. Can be used with letters or numbers.\n\n**Example(s)**\n\n```js\n// numbers\nconsole.log(fill('1', '10', 2)); //=> [ '1', '3', '5', '7', '9' ]\nconsole.log(fill('1', '10', 3)); //=> [ '1', '4', '7', '10' ]\nconsole.log(fill('1', '10', 4)); //=> [ '1', '5', '9' ]\n\n// letters\nconsole.log(fill('a', 'z', 5)); //=> [ 'a', 'f', 'k', 'p', 'u', 'z' ]\nconsole.log(fill('a', 'z', 7)); //=> [ 'a', 'h', 'o', 'v' ]\nconsole.log(fill('a', 'z', 9)); //=> [ 'a', 'j', 's' ]\n```\n\n### options.strictRanges\n\n**Type**: `boolean`\n\n**Default**: `false`\n\n**Description**: By default, `null` is returned when an invalid range is passed. Enable this option to throw a `RangeError` on invalid ranges.\n\n**Example(s)**\n\nThe following are all invalid:\n\n```js\nfill('1.1', '2');   // decimals not supported in ranges\nfill('a', '2');     // incompatible range values\nfill(1, 10, 'foo'); // invalid \"step\" argument\n```\n\n### options.stringify\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\n**Description**: Cast all returned values to strings. By default, integers are returned as numbers.\n\n**Example(s)**\n\n```js\nconsole.log(fill(1, 5));                    //=> [ 1, 2, 3, 4, 5 ]\nconsole.log(fill(1, 5, { stringify: true })); //=> [ '1', '2', '3', '4', '5' ]\n```\n\n### options.toRegex\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\n**Description**: Create a regex-compatible source string, instead of expanding values to an array.\n\n**Example(s)**\n\n```js\n// alphabetical range\nconsole.log(fill('a', 'e', { toRegex: true })); //=> '[a-e]'\n// alphabetical with step\nconsole.log(fill('a', 'z', 3, { toRegex: true })); //=> 'a|d|g|j|m|p|s|v|y'\n// numerical range\nconsole.log(fill('1', '100', { toRegex: true })); //=> '[1-9]|[1-9][0-9]|100'\n// numerical range with zero padding\nconsole.log(fill('000001', '100000', { toRegex: true }));\n//=> '0{5}[1-9]|0{4}[1-9][0-9]|0{3}[1-9][0-9]{2}|0{2}[1-9][0-9]{3}|0[1-9][0-9]{4}|100000'\n```\n\n### options.transform\n\n**Type**: `function`\n\n**Default**: `undefined`\n\n**Description**: Customize each value in the returned array (or [string](#optionstoRegex)). _(you can also pass this function as the last argument to `fill()`)_.\n\n**Example(s)**\n\n```js\n// add zero padding\nconsole.log(fill(1, 5, value => String(value).padStart(4, '0')));\n//=> ['0001', '0002', '0003', '0004', '0005']\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 116 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 4   | [paulmillr](https://github.com/paulmillr) |  \n| 2   | [realityking](https://github.com/realityking) |  \n| 2   | [bluelovers](https://github.com/bluelovers) |  \n| 1   | [edorivai](https://github.com/edorivai) |  \n| 1   | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\nPlease consider supporting me on Patreon, or [start your own Patreon page](https://patreon.com/invite/bxpbvm)!\n\n<a href=\"https://www.patreon.com/jonschlinkert\">\n<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" height=\"50\">\n</a>\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._"}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 4037353}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 20871332}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 85903850}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 218676994}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 426708397}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 784543621}], "dependentsCount": 79, "starsCount": 2}, "github": {"starsCount": 34, "forksCount": 7, "subscribersCount": 4, "issues": {"count": 13, "openCount": 1, "distribution": {"3600": 3, "10800": 1, "32400": 0, "97200": 3, "291600": 0, "874800": 1, "2624400": 1, "7873200": 2, "23619600": 2, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 119}, {"username": "paulmillr", "commitsCount": 4}, {"username": "bluelovers", "commitsCount": 2}, {"username": "realityking", "commitsCount": 2}, {"username": "edorivai", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7486, "testsSize": 25050}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/fill-range.svg?style=flat", "shields": "https://img.shields.io/npm/v/fill-range.svg", "content": "https://img.shields.io/npm/v/fill-range.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/fill-range.svg?style=flat", "shields": "https://img.shields.io/npm/dm/fill-range.svg", "content": "https://img.shields.io/npm/dm/fill-range.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/fill-range.svg?style=flat", "shields": "https://img.shields.io/npm/dt/fill-range.svg", "content": "https://img.shields.io/npm/dt/fill-range.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/fill-range.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/fill-range.svg", "shields": "https://img.shields.io/travis/jonschlinkert/fill-range.svg", "content": "https://img.shields.io/travis/jonschlinkert/fill-range.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 53, "downloadsCount": 72892331.33333333, "downloadsAcceleration": 233798.6790144596, "dependentsCount": 79}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.830789656119958, "detail": {"quality": 0.9691397075145873, "popularity": 0.5431038912463843, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-24T01:11:18.640Z", "collected": {"metadata": {"name": "find-rc", "scope": "unscoped", "version": "4.0.0", "description": "Find a .rc file given a name", "date": "2019-01-27T20:49:48.160Z", "publisher": {"username": "wyatt", "email": "wpreul@gmail.com"}, "maintainers": [{"username": "wyatt", "email": "wpreul@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/geek/find-rc.git"}, "links": {"npm": "https://www.npmjs.com/package/find-rc", "homepage": "https://github.com/geek/find-rc#readme", "repository": "https://github.com/geek/find-rc", "bugs": "https://github.com/geek/find-rc/issues"}, "license": "BSD-3-Clause", "devDependencies": {"belly-button": "5.x.x", "code": "5.x.x", "lab": "18.x.x"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "# `npm install find-rc`\n\nFind a `rc` file given a name.  Inspiration from [rc](https://github.com/dominictarr/rc).\n\n[![Build Status](https://secure.travis-ci.org/geek/find-rc.svg)](http://travis-ci.org/geek/find-rc)\n\nThe rc file is assumed to be written in JavaScript, therefore the filename must\nbe `.${app}rc.js`.  If your app is named 'lab' then the rc file must be named\n`.labrc.js`.\n\nHere is the order that folders will be searched:\n\n1. Current directory\n2. Parent of current directory, until the root folder is encountered\n3. $HOME/.${app}rc.js\n4. $HOME/.config/.${app}rc.js\n\n\n### `(appname, [startDir])`\n\n- `appname` - name of file you are looking for.  Example: `lab`.  It will be formatted as `.{appname}rc.js`\n- `startDir` - (optional) directory to start looking for the file.  Defaults to `process.cwd`\n\nExample\n\n```js\nconst FindRc = require('find-rc');\n\nconst filePath = FindRc('lab');\nif (filePath) {\n  // load file and parse configuration\n  const rc = require(filePath);\n}\n```"}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 1199}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 27756}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 104242}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 299350}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 565745}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 1049648}], "dependentsCount": 3, "starsCount": 0}, "github": {"starsCount": 0, "forksCount": 2, "subscribersCount": 1, "issues": {"count": 2, "openCount": 0, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "geek", "commitsCount": 19}, {"username": "jon-walton", "commitsCount": 1}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 991, "testsSize": 947}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/geek/find-rc.svg", "service": "https://api.travis-ci.org/geek/find-rc.svg", "shields": "https://img.shields.io/travis/geek/find-rc.svg", "content": "https://img.shields.io/travis/geek/find-rc.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 5, "downloadsCount": 99783.33333333333, "downloadsAcceleration": 216.566305175038, "dependentsCount": 3}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6755351822111295, "detail": {"quality": 0.9262615076490556, "popularity": 0.1362232452200212, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-01-06T20:54:40.053Z", "collected": {"metadata": {"name": "flat-cache", "scope": "unscoped", "version": "2.0.1", "description": "A stupidly simple key/value storage using files to persist some data", "keywords": ["json cache", "simple cache", "file cache", "key par", "key value", "cache"], "date": "2019-01-09T02:52:09.223Z", "author": {"name": "Roy Riojas", "url": "http://royriojas.com"}, "publisher": {"username": "royriojas", "email": "royriojas@gmail.com"}, "maintainers": [{"username": "royriojas", "email": "royriojas@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/royriojas/flat-cache.git"}, "links": {"npm": "https://www.npmjs.com/package/flat-cache", "homepage": "https://github.com/royriojas/flat-cache#readme", "repository": "https://github.com/royriojas/flat-cache", "bugs": "https://github.com/royriojas/flat-cache/issues"}, "license": "MIT", "dependencies": {"flatted": "^2.0.0", "rimraf": "2.6.3", "write": "1.0.3"}, "devDependencies": {"chai": "^3.2.0", "changelogx": "3.0.0", "esbeautifier": "10.1.1", "eslinter": "^3.2.1", "glob-expand": "0.2.1", "istanbul": "0.4.5", "mocha": "5.2.0", "precommit": "^1.1.5", "prepush": "^3.1.4", "proxyquire": "^1.7.2", "sinon": "^1.16.1", "sinon-chai": "^2.8.0", "watch-run": "^1.2.2"}, "releases": [{"from": "2019-12-07T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 0}, {"from": "2019-10-08T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 0}, {"from": "2019-07-10T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 0}, {"from": "2019-01-06T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 3}, {"from": "2018-01-06T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# flat-cache\n> A stupidly simple key/value storage using files to persist the data\n\n[![NPM Version](http://img.shields.io/npm/v/flat-cache.svg?style=flat)](https://npmjs.org/package/flat-cache)\n[![Build Status](http://img.shields.io/travis/royriojas/flat-cache.svg?style=flat)](https://travis-ci.org/royriojas/flat-cache)\n\n## install\n\n```bash\nnpm i --save flat-cache\n```\n\n## Usage\n\n```js\nvar flatCache = require('flat-cache')\n// loads the cache, if one does not exists for the given\n// Id a new one will be prepared to be created\nvar cache = flatCache.load('cacheId');\n\n// sets a key on the cache\ncache.setKey('key', { foo: 'var' });\n\n// get a key from the cache\ncache.getKey('key') // { foo: 'var' }\n\n// fetch the entire persisted object\ncache.all() // { 'key': { foo: 'var' } }\n\n// remove a key\ncache.removeKey('key'); // removes a key from the cache\n\n// save it to disk\ncache.save(); // very important, if you don't save no changes will be persisted.\n// cache.save( true /* noPrune */) // can be used to prevent the removal of non visited keys\n\n// loads the cache from a given directory, if one does\n// not exists for the given Id a new one will be prepared to be created\nvar cache = flatCache.load('cacheId', path.resolve('./path/to/folder'));\n\n// The following methods are useful to clear the cache\n// delete a given cache\nflatCache.clearCacheById('cacheId') // removes the cacheId document if one exists.\n\n// delete all cache\nflatCache.clearAll(); // remove the cache directory\n```\n\n## Motivation for this module\n\nI needed a super simple and dumb **in-memory cache** with optional disk persistance in order to make\na script that will beutify files with `esformatter` only execute on the files that were changed since the last run.\nTo make that possible we need to store the `fileSize` and `modificationTime` of the files. So a simple `key/value`\nstorage was needed and Bam! this module was born.\n\n## Important notes\n- If no directory is especified when the `load` method is called, a folder named `.cache` will be created\n  inside the module directory when `cache.save` is called. If you're committing your `node_modules` to any vcs, you\n  might want to ignore the default `.cache` folder, or specify a custom directory.\n- The values set on the keys of the cache should be `stringify-able` ones, meaning no circular references\n- All the changes to the cache state are done to memory\n- I could have used a timer or `Object.observe` to deliver the changes to disk, but I wanted to keep this module\n  intentionally dumb and simple\n- Non visited keys are removed when `cache.save()` is called. If this is not desired, you can pass `true` to the save call\n  like: `cache.save( true /* noPrune */ )`.\n\n## License\n\nMIT\n\n## Changelog\n\n[changelog](./changelog.md)"}, "npm": {"downloads": [{"from": "2020-01-05T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 309165}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 4171345}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 23997506}, {"from": "2019-10-08T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 88281391}, {"from": "2019-07-10T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 173597532}, {"from": "2019-01-06T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 322319918}], "dependentsCount": 54, "starsCount": 6}, "github": {"starsCount": 69, "forksCount": 18, "subscribersCount": 6, "issues": {"count": 44, "openCount": 13, "distribution": {"3600": 7, "10800": 1, "32400": 1, "97200": 6, "291600": 4, "874800": 4, "2624400": 3, "7873200": 3, "23619600": 1, "70858800": 14, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "royriojas", "commitsCount": 39}, {"username": "nopnop", "commitsCount": 6}, {"username": "TrySound", "commitsCount": 2}, {"username": "KsRyY", "commitsCount": 1}, {"username": "OzairP", "commitsCount": 1}, {"username": "Teamop", "commitsCount": 1}, {"username": "WebReflection", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "cktang88", "commitsCount": 1}, {"username": "patricksmms", "commitsCount": 1}, {"username": "sgilroy85", "commitsCount": 1}, {"username": "wojtekmaj", "commitsCount": 1}, {"username": "xuexb", "commitsCount": 1}], "commits": [{"from": "2019-12-30T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 0}, {"from": "2019-10-08T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 1}, {"from": "2019-07-10T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 1}, {"from": "2019-01-06T00:00:00.000Z", "to": "2020-01-06T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2761, "testsSize": 12194, "hasChangelog": true}, "badges": [{"urls": {"original": "http://img.shields.io/npm/v/flat-cache.svg?style=flat", "shields": "https://img.shields.io/npm/v/flat-cache.svg", "content": "https://img.shields.io/npm/v/flat-cache.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/royriojas/flat-cache.svg?style=flat", "service": "https://api.travis-ci.org/royriojas/flat-cache.svg", "shields": "https://img.shields.io/travis/royriojas/flat-cache.svg", "content": "https://img.shields.io/travis/royriojas/flat-cache.json"}, "info": {"service": "travis", "type": "build"}}], "outdatedDependencies": {"write": {"required": "1.0.3", "stable": "2.0.0", "latest": "2.0.0"}, "rimraf": {"required": "2.6.3", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.85, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 112, "downloadsCount": 29427130.333333332, "downloadsAcceleration": -447.2342465753609, "dependentsCount": 54}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7534263182538703, "detail": {"quality": 0.8968779585719193, "popularity": 0.3840371651436496, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-12T20:23:39.315Z", "collected": {"metadata": {"name": "flatted", "scope": "unscoped", "version": "2.0.1", "description": "A super light and fast circular JSON parser.", "keywords": ["circular", "JSON", "fast", "parser", "minimal"], "date": "2019-06-25T12:36:44.430Z", "author": {"name": "Andrea Giammarchi"}, "publisher": {"username": "webreflection", "email": "andrea.giammarchi@gmail.com"}, "maintainers": [{"username": "webreflection", "email": "andrea.giammarchi@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/WebReflection/flatted.git"}, "links": {"npm": "https://www.npmjs.com/package/flatted", "homepage": "https://github.com/WebReflection/flatted#readme", "repository": "https://github.com/WebReflection/flatted", "bugs": "https://github.com/WebReflection/flatted/issues"}, "license": "ISC", "devDependencies": {"circular-json": "latest", "circular-json-es6": "latest", "coveralls": "latest", "istanbul": "latest", "jsan": "latest", "uglify-js": "latest"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 13}], "hasTestScript": true, "readme": "# flatted\n\n![Downloads](https://img.shields.io/npm/dm/flatted.svg) [![Coverage Status](https://coveralls.io/repos/github/WebReflection/flatted/badge.svg?branch=master)](https://coveralls.io/github/WebReflection/flatted?branch=master) [![Build Status](https://travis-ci.org/WebReflection/flatted.svg?branch=master)](https://travis-ci.org/WebReflection/flatted) [![License: ISC](https://img.shields.io/badge/License-ISC-yellow.svg)](https://opensource.org/licenses/ISC) ![WebReflection status](https://offline.report/status/webreflection.svg)\n\nA super light (0.5K) and fast circular JSON parser, directly from the creator of [CircularJSON](https://github.com/WebReflection/circular-json/#circularjson).\n\nUsable via [CDN](https://unpkg.com/flatted) or as regular module.\n\n```js\n// ESM\nimport {parse, stringify} from 'flatted/esm';\n\n// CJS\nconst {parse, stringify} = require('flatted/cjs');\n\nconst a = [{}];\na[0].a = a;\na.push(a);\n\nstringify(a); // [[\"1\",\"0\"],{\"a\":\"0\"}]\n```\n\n### New in V1: Exact same JSON API\n\n  * Added a [reviver](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Syntax) parameter to `.parse(string, reviver)` and revive your own objects.\n  * Added a [replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Syntax) and a `space` parameter to `.stringify(object, replacer, space)` for feature parity with JSON signature.\n\n\n### Compatibility\nAll ECMAScript engines compatible with `Map`, `Set`, `Object.keys`, and `Array.prototype.reduce` will work, even if polyfilled.\n\n\n### How does it work ?\nWhile stringifying, all Objects, including Arrays, and strings, are flattened out and replaced as unique index. `*`\n\nOnce parsed, all indexes will be replaced through the flattened collection.\n\n<sup><sub>`*` represented as string to avoid conflicts with numbers</sub></sup>\n\n```js\n// logic example\nvar a = [{one: 1}, {two: '2'}];\na[0].a = a;\n// a is the main object, will be at index '0'\n// {one: 1} is the second object, index '1'\n// {two: '2'} the third, in '2', and it has a string\n// which will be found at index '3'\n\nFlatted.stringify(a);\n// [[\"1\",\"2\"],{\"one\":1,\"a\":\"0\"},{\"two\":\"3\"},\"2\"]\n// a[one,two]    {one: 1, a}    {two: '2'}  '2'\n```"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1331973}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 6984903}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 28987651}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 73577476}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 137416915}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 213781642}], "dependentsCount": 138, "starsCount": 0}, "github": {"starsCount": 493, "forksCount": 21, "subscribersCount": 9, "issues": {"count": 33, "openCount": 0, "distribution": {"3600": 19, "10800": 5, "32400": 2, "97200": 4, "291600": 2, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "WebReflection", "commitsCount": 39}, {"username": "bigopon", "commitsCount": 1}, {"username": "dominik-meissner", "commitsCount": 1}, {"username": "ful-stackz", "commitsCount": 1}, {"username": "nicolashenry", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 3}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 12}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2248, "testsSize": 587895, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/flatted.svg", "shields": "https://img.shields.io/npm/dm/flatted.svg", "content": "https://img.shields.io/npm/dm/flatted.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://coveralls.io/repos/github/WebReflection/flatted/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/WebReflection/flatted/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/WebReflection/flatted/master.svg", "content": "https://img.shields.io/coveralls/WebReflection/flatted/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://travis-ci.org/WebReflection/flatted.svg?branch=master", "service": "https://api.travis-ci.org/WebReflection/flatted.svg?branch=master", "shields": "https://img.shields.io/travis/WebReflection/flatted/master.svg", "content": "https://img.shields.io/travis/WebReflection/flatted/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 1, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 528, "downloadsCount": 24525825.333333332, "downloadsAcceleration": 139569.02033866054, "dependentsCount": 138}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8409703777637578, "detail": {"quality": 0.9713634354081422, "popularity": 0.5702364372911706, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-27T14:02:35.410Z", "collected": {"metadata": {"name": "for-in", "scope": "unscoped", "version": "1.0.2", "description": "Iterate over the own and inherited enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js", "keywords": ["for", "for-in", "for-own", "has", "has-own", "hasOwn", "in", "key", "keys", "object", "own", "value"], "date": "2017-02-28T16:12:56.286Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}, {"name": "Paul Irish", "url": "http://paulirish.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/for-in.git"}, "links": {"npm": "https://www.npmjs.com/package/for-in", "homepage": "https://github.com/jonschlinkert/for-in", "repository": "https://github.com/jonschlinkert/for-in", "bugs": "https://github.com/jonschlinkert/for-in/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^0.1.11", "mocha": "^3.2.0"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# for-in [![NPM version](https://img.shields.io/npm/v/for-in.svg?style=flat)](https://www.npmjs.com/package/for-in) [![NPM monthly downloads](https://img.shields.io/npm/dm/for-in.svg?style=flat)](https://npmjs.org/package/for-in)  [![NPM total downloads](https://img.shields.io/npm/dt/for-in.svg?style=flat)](https://npmjs.org/package/for-in) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/for-in.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/for-in)\n\n> Iterate over the own and inherited enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save for-in\n```\n\n## Usage\n\n```js\nvar forIn = require('for-in');\n\nvar obj = {a: 'foo', b: 'bar', c: 'baz'};\nvar values = [];\nvar keys = [];\n\nforIn(obj, function (value, key, o) {\n  keys.push(key);\n  values.push(value);\n});\n\nconsole.log(keys);\n//=> ['a', 'b', 'c'];\n\nconsole.log(values);\n//=> ['foo', 'bar', 'baz'];\n```\n\n## About\n\n### Related projects\n\n* [arr-flatten](https://www.npmjs.com/package/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten. | [homepage](https://github.com/jonschlinkert/arr-flatten \"Recursively flatten an array or arrays. This is the fastest implementation of array flatten.\")\n* [collection-map](https://www.npmjs.com/package/collection-map): Returns an array of mapped values from an array or object. | [homepage](https://github.com/jonschlinkert/collection-map \"Returns an array of mapped values from an array or object.\")\n* [for-own](https://www.npmjs.com/package/for-own): Iterate over the own enumerable properties of an object, and return an object with properties\u2026 [more](https://github.com/jonschlinkert/for-own) | [homepage](https://github.com/jonschlinkert/for-own \"Iterate over the own enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 16 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [paulirish](https://github.com/paulirish) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.4.2, on February 28, 2017._"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2841524}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 14642664}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 61954251}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 159148736}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 320465995}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 616325469}], "dependentsCount": 97, "starsCount": 2}, "github": {"starsCount": 29, "forksCount": 4, "subscribersCount": 3, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 17}, {"username": "paulirish", "commitsCount": 2}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3452, "testsSize": 917}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/for-in.svg?style=flat", "shields": "https://img.shields.io/npm/v/for-in.svg", "content": "https://img.shields.io/npm/v/for-in.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/for-in.svg?style=flat", "shields": "https://img.shields.io/npm/dm/for-in.svg", "content": "https://img.shields.io/npm/dm/for-in.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/for-in.svg?style=flat", "shields": "https://img.shields.io/npm/dt/for-in.svg", "content": "https://img.shields.io/npm/dt/for-in.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/for-in.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/for-in.svg", "shields": "https://img.shields.io/travis/jonschlinkert/for-in.svg", "content": "https://img.shields.io/travis/jonschlinkert/for-in.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 40, "downloadsCount": 53049578.666666664, "downloadsAcceleration": 117095.6203386606, "dependentsCount": 97}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.814697881235702, "detail": {"quality": 0.9333911371497057, "popularity": 0.5277198457182424, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-05T18:25:50.272Z", "collected": {"metadata": {"name": "fragment-cache", "scope": "unscoped", "version": "0.2.1", "description": "A cache for managing namespaced sub-caches", "keywords": ["cache", "fragment"], "date": "2017-03-14T20:36:58.556Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/fragment-cache.git"}, "links": {"npm": "https://www.npmjs.com/package/fragment-cache", "homepage": "https://github.com/jonschlinkert/fragment-cache", "repository": "https://github.com/jonschlinkert/fragment-cache", "bugs": "https://github.com/jonschlinkert/fragment-cache/issues"}, "license": "MIT", "dependencies": {"map-cache": "^0.2.2"}, "devDependencies": {"gulp": "^3.9.1", "gulp-eslint": "^3.0.1", "gulp-format-md": "^0.1.11", "gulp-istanbul": "^1.1.1", "gulp-mocha": "^3.0.1", "mocha": "^3.2.0"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# fragment-cache [![NPM version](https://img.shields.io/npm/v/fragment-cache.svg?style=flat)](https://www.npmjs.com/package/fragment-cache) [![NPM downloads](https://img.shields.io/npm/dm/fragment-cache.svg?style=flat)](https://npmjs.org/package/fragment-cache) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/fragment-cache.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/fragment-cache)\n\n> A cache for managing namespaced sub-caches\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save fragment-cache\n```\n\n## Usage\n\n```js\nvar Fragment = require('fragment-cache');\nvar fragment = new Fragment();\n```\n\n## API\n\n### [FragmentCache](index.js#L24)\n\nCreate a new `FragmentCache` with an optional object to use for `caches`.\n\n**Example**\n\n```js\nvar fragment = new FragmentCache();\n```\n\n**Params**\n\n* `cacheName` **{String}**\n* `returns` **{Object}**: Returns the [map-cache](https://github.com/jonschlinkert/map-cache) instance.\n\n### [.cache](index.js#L49)\n\nGet cache `name` from the `fragment.caches` object. Creates a new `MapCache` if it doesn't already exist.\n\n**Example**\n\n```js\nvar cache = fragment.cache('files');\nconsole.log(fragment.caches.hasOwnProperty('files'));\n//=> true\n```\n\n**Params**\n\n* `cacheName` **{String}**\n* `returns` **{Object}**: Returns the [map-cache](https://github.com/jonschlinkert/map-cache) instance.\n\n### [.set](index.js#L67)\n\nSet a value for property `key` on cache `name`\n\n**Example**\n\n```js\nfragment.set('files', 'somefile.js', new File({path: 'somefile.js'}));\n```\n\n**Params**\n\n* `name` **{String}**\n* `key` **{String}**: Property name to set\n* `val` **{any}**: The value of `key`\n* `returns` **{Object}**: The cache instance for chaining\n\n### [.has](index.js#L93)\n\nReturns true if a non-undefined value is set for `key` on fragment cache `name`.\n\n**Example**\n\n```js\nvar cache = fragment.cache('files');\ncache.set('somefile.js');\n\nconsole.log(cache.has('somefile.js'));\n//=> true\n\nconsole.log(cache.has('some-other-file.js'));\n//=> false\n```\n\n**Params**\n\n* `name` **{String}**: Cache name\n* `key` **{String}**: Optionally specify a property to check for on cache `name`\n* `returns` **{Boolean}**\n\n### [.get](index.js#L115)\n\nGet `name`, or if specified, the value of `key`. Invokes the [cache](#cache) method, so that cache `name` will be created it doesn't already exist. If `key` is not passed, the entire cache (`name`) is returned.\n\n**Example**\n\n```js\nvar Vinyl = require('vinyl');\nvar cache = fragment.cache('files');\ncache.set('somefile.js', new Vinyl({path: 'somefile.js'}));\nconsole.log(cache.get('somefile.js'));\n//=> <File \"somefile.js\">\n```\n\n**Params**\n\n* `name` **{String}**\n* `returns` **{Object}**: Returns cache `name`, or the value of `key` if specified\n\n## About\n\n### Related projects\n\n* [base](https://www.npmjs.com/package/base): base is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting\u2026 [more](https://github.com/node-base/base) | [homepage](https://github.com/node-base/base \"base is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting with a handful of common methods, like `set`, `get`, `del` and `use`.\")\n* [map-cache](https://www.npmjs.com/package/map-cache): Basic cache object for storing key-value pairs. | [homepage](https://github.com/jonschlinkert/map-cache \"Basic cache object for storing key-value pairs.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/fragment-cache/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.2.0, on October 17, 2016._"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1995061}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 10688249}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 44963886}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 113819778}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 224709561}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 420403011}], "dependentsCount": 51, "starsCount": 0}, "github": {"starsCount": 13, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 9}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 4585, "testsSize": 3175}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/fragment-cache.svg?style=flat", "shields": "https://img.shields.io/npm/v/fragment-cache.svg", "content": "https://img.shields.io/npm/v/fragment-cache.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/fragment-cache.svg?style=flat", "shields": "https://img.shields.io/npm/dm/fragment-cache.svg", "content": "https://img.shields.io/npm/dm/fragment-cache.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/fragment-cache.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/fragment-cache.svg", "shields": "https://img.shields.io/travis/jonschlinkert/fragment-cache.svg", "content": "https://img.shields.io/travis/jonschlinkert/fragment-cache.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.6, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 16, "downloadsCount": 37939926, "downloadsAcceleration": 110901.1268835616, "dependentsCount": 51}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.7, "issuesDistribution": 0.7}}, "score": {"final": 0.5997362440186289, "detail": {"quality": 0.8474032145230641, "popularity": 0.49046219361249094, "maintenance": 0.49672431970667963}}}
{"analyzedAt": "2020-02-10T05:04:07.208Z", "collected": {"metadata": {"name": "fs.realpath", "scope": "unscoped", "version": "1.0.0", "description": "Use node's fs.realpath, but fall back to the JS implementation if the native one fails", "keywords": ["realpath", "fs", "polyfill"], "date": "2016-06-15T18:39:05.978Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git+https://github.com/isaacs/fs.realpath.git"}, "links": {"npm": "https://www.npmjs.com/package/fs.realpath", "homepage": "https://github.com/isaacs/fs.realpath#readme", "repository": "https://github.com/isaacs/fs.realpath", "bugs": "https://github.com/isaacs/fs.realpath/issues"}, "license": "ISC", "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# fs.realpath\n\nA backwards-compatible fs.realpath for Node v6 and above\n\nIn Node v6, the JavaScript implementation of fs.realpath was replaced\nwith a faster (but less resilient) native implementation.  That raises\nnew and platform-specific errors and cannot handle long or excessively\nsymlink-looping paths.\n\nThis module handles those cases by detecting the new errors and\nfalling back to the JavaScript implementation.  On versions of Node\nprior to v6, it has no effect.\n\n## USAGE\n\n```js\nvar rp = require('fs.realpath')\n\n// async version\nrp.realpath(someLongAndLoopingPath, function (er, real) {\n  // the ELOOP was handled, but it was a bit slower\n})\n\n// sync version\nvar real = rp.realpathSync(someLongAndLoopingPath)\n\n// monkeypatch at your own risk!\n// This replaces the fs.realpath/fs.realpathSync builtins\nrp.monkeypatch()\n\n// un-do the monkeypatching\nrp.unmonkeypatch()\n```"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 661309}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 12883128}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 50906916}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 142743629}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 281539759}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 534461142}], "dependentsCount": 123, "starsCount": 2}, "github": {"starsCount": 19, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 8}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 881, "testsSize": 1175}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 30, "downloadsCount": 47581209.666666664, "downloadsAcceleration": 83113.1923706241, "dependentsCount": 123}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7773210610599004, "detail": {"quality": 0.8169354451527011, "popularity": 0.5208300132344941, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-10T14:06:48.218Z", "collected": {"metadata": {"name": "functional-red-black-tree", "scope": "unscoped", "version": "1.0.1", "description": "A fully persistent balanced binary search tree", "keywords": ["functional", "red", "black", "tree", "binary", "search", "balance", "persistent", "fully", "dynamic", "data", "structure"], "date": "2014-09-29T16:05:12.335Z", "author": {"name": "Mikola Lysenko"}, "publisher": {"username": "mikolalysenko", "email": "mikolalysenko@gmail.com"}, "maintainers": [{"username": "mikolalysenko", "email": "mikolalysenko@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/mikolalysenko/functional-red-black-tree.git"}, "links": {"npm": "https://www.npmjs.com/package/functional-red-black-tree", "homepage": "https://github.com/mikolalysenko/functional-red-black-tree", "repository": "https://github.com/mikolalysenko/functional-red-black-tree", "bugs": "https://github.com/mikolalysenko/functional-red-black-tree/issues"}, "license": "MIT", "devDependencies": {"iota-array": "^0.0.1", "tape": "^2.12.0"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "functional-red-black-tree\n=========================\nA [fully persistent](http://en.wikipedia.org/wiki/Persistent_data_structure) [red-black tree](http://en.wikipedia.org/wiki/Red%E2%80%93black_tree) written 100% in JavaScript.  Works both in node.js and in the browser via [browserify](http://browserify.org/).\n\nFunctional (or fully presistent) data structures allow for non-destructive updates.  So if you insert an element into the tree, it returns a new tree with the inserted element rather than destructively updating the existing tree in place.  Doing this requires using extra memory, and if one were naive it could cost as much as reallocating the entire tree.  Instead, this data structure saves some memory by recycling references to previously allocated subtrees.  This requires using only O(log(n)) additional memory per update instead of a full O(n) copy.\n\nSome advantages of this is that it is possible to apply insertions and removals to the tree while still iterating over previous versions of the tree.  Functional and persistent data structures can also be useful in many geometric algorithms like point location within triangulations or ray queries, and can be used to analyze the history of executing various algorithms.  This added power though comes at a cost, since it is generally a bit slower to use a functional data structure than an imperative version.  However, if your application needs this behavior then you may consider using this module.\n\n# Install\n\n    npm install functional-red-black-tree\n\n# Example\n\nHere is an example of some basic usage:\n\n```javascript\n//Load the library\nvar createTree = require(\"functional-red-black-tree\")\n\n//Create a tree\nvar t1 = createTree()\n\n//Insert some items into the tree\nvar t2 = t1.insert(1, \"foo\")\nvar t3 = t2.insert(2, \"bar\")\n\n//Remove something\nvar t4 = t3.remove(1)\n```\n\n\n# API\n\n```javascript\nvar createTree = require(\"functional-red-black-tree\")\n```\n\n## Overview\n\n- [Tree methods](#tree-methods)\n  - [`var tree = createTree([compare])`](#var-tree-=-createtreecompare)\n  - [`tree.keys`](#treekeys)\n  - [`tree.values`](#treevalues)\n  - [`tree.length`](#treelength)\n  - [`tree.get(key)`](#treegetkey)\n  - [`tree.insert(key, value)`](#treeinsertkey-value)\n  - [`tree.remove(key)`](#treeremovekey)\n  - [`tree.find(key)`](#treefindkey)\n  - [`tree.ge(key)`](#treegekey)\n  - [`tree.gt(key)`](#treegtkey)\n  - [`tree.lt(key)`](#treeltkey)\n  - [`tree.le(key)`](#treelekey)\n  - [`tree.at(position)`](#treeatposition)\n  - [`tree.begin`](#treebegin)\n  - [`tree.end`](#treeend)\n  - [`tree.forEach(visitor(key,value)[, lo[, hi]])`](#treeforEachvisitorkeyvalue-lo-hi)\n  - [`tree.root`](#treeroot)\n- [Node properties](#node-properties)\n  - [`node.key`](#nodekey)\n  - [`node.value`](#nodevalue)\n  - [`node.left`](#nodeleft)\n  - [`node.right`](#noderight)\n- [Iterator methods](#iterator-methods)\n  - [`iter.key`](#iterkey)\n  - [`iter.value`](#itervalue)\n  - [`iter.node`](#iternode)\n  - [`iter.tree`](#itertree)\n  - [`iter.index`](#iterindex)\n  - [`iter.valid`](#itervalid)\n  - [`iter.clone()`](#iterclone)\n  - [`iter.remove()`](#iterremove)\n  - [`iter.update(value)`](#iterupdatevalue)\n  - [`iter.next()`](#iternext)\n  - [`iter.prev()`](#iterprev)\n  - [`iter.hasNext`](#iterhasnext)\n  - [`iter.hasPrev`](#iterhasprev)\n\n## Tree methods\n\n### `var tree = createTree([compare])`\nCreates an empty functional tree\n\n* `compare` is an optional comparison function, same semantics as array.sort()\n\n**Returns** An empty tree ordered by `compare`\n\n### `tree.keys`\nA sorted array of all the keys in the tree\n\n### `tree.values`\nAn array array of all the values in the tree\n\n### `tree.length`\nThe number of items in the tree\n\n### `tree.get(key)`\nRetrieves the value associated to the given key\n\n* `key` is the key of the item to look up\n\n**Returns** The value of the first node associated to `key`\n\n### `tree.insert(key, value)`\nCreates a new tree with the new pair inserted.\n\n* `key` is the key of the item to insert\n* `value` is the value of the item to insert\n\n**Returns** A new tree with `key` and `value` inserted\n\n### `tree.remove(key)`\nRemoves the first item with `key` in the tree\n\n* `key` is the key of the item to remove\n\n**Returns** A new tree with the given item removed if it exists\n\n### `tree.find(key)`\nReturns an iterator pointing to the first item in the tree with `key`, otherwise `null`.\n\n### `tree.ge(key)`\nFind the first item in the tree whose key is `>= key`\n\n* `key` is the key to search for\n\n**Returns** An iterator at the given element.\n\n### `tree.gt(key)`\nFinds the first item in the tree whose key is `> key`\n\n* `key` is the key to search for\n\n**Returns** An iterator at the given element\n\n### `tree.lt(key)`\nFinds the last item in the tree whose key is `< key`\n\n* `key` is the key to search for\n\n**Returns** An iterator at the given element\n\n### `tree.le(key)`\nFinds the last item in the tree whose key is `<= key`\n\n* `key` is the key to search for\n\n**Returns** An iterator at the given element\n\n### `tree.at(position)`\nFinds an iterator starting at the given element\n\n* `position` is the index at which the iterator gets created\n\n**Returns** An iterator starting at position\n\n### `tree.begin`\nAn iterator pointing to the first element in the tree\n\n### `tree.end`\nAn iterator pointing to the last element in the tree\n\n### `tree.forEach(visitor(key,value)[, lo[, hi]])`\nWalks a visitor function over the nodes of the tree in order.\n\n* `visitor(key,value)` is a callback that gets executed on each node.  If a truthy value is returned from the visitor, then iteration is stopped.\n* `lo` is an optional start of the range to visit (inclusive)\n* `hi` is an optional end of the range to visit (non-inclusive)\n\n**Returns** The last value returned by the callback\n\n### `tree.root`\nReturns the root node of the tree\n\n\n## Node properties\nEach node of the tree has the following properties:\n\n### `node.key`\nThe key associated to the node\n\n### `node.value`\nThe value associated to the node\n\n### `node.left`\nThe left subtree of the node\n\n### `node.right`\nThe right subtree of the node\n\n## Iterator methods\n\n### `iter.key`\nThe key of the item referenced by the iterator\n\n### `iter.value`\nThe value of the item referenced by the iterator\n\n### `iter.node`\nThe value of the node at the iterator's current position.  `null` is iterator is node valid.\n\n### `iter.tree`\nThe tree associated to the iterator\n\n### `iter.index`\nReturns the position of this iterator in the sequence.\n\n### `iter.valid`\nChecks if the iterator is valid\n\n### `iter.clone()`\nMakes a copy of the iterator\n\n### `iter.remove()`\nRemoves the item at the position of the iterator\n\n**Returns** A new binary search tree with `iter`'s item removed\n\n### `iter.update(value)`\nUpdates the value of the node in the tree at this iterator\n\n**Returns** A new binary search tree with the corresponding node updated\n\n### `iter.next()`\nAdvances the iterator to the next position\n\n### `iter.prev()`\nMoves the iterator backward one element\n\n### `iter.hasNext`\nIf true, then the iterator is not at the end of the sequence\n\n### `iter.hasPrev`\nIf true, then the iterator is not at the beginning of the sequence\n\n# Credits\n(c) 2013 Mikola Lysenko. MIT License"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 341274}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 7181871}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 28388486}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 77999493}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 150927115}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 274230457}], "dependentsCount": 69, "starsCount": 6}, "github": {"starsCount": 258, "forksCount": 31, "subscribersCount": 5, "issues": {"count": 9, "openCount": 6, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 2, "70858800": 3, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "mikolalysenko", "commitsCount": 27}, {"username": "Lambdac0re", "commitsCount": 1}, {"username": "mourner", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 7160, "testsSize": 11983}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 303, "downloadsCount": 25999831, "downloadsAcceleration": 70533.54944824963, "dependentsCount": 69}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7766077947795771, "detail": {"quality": 0.8054309185439028, "popularity": 0.5286531323839692, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-13T23:22:05.094Z", "collected": {"metadata": {"name": "get-value", "scope": "unscoped", "version": "3.0.1", "description": "Use property paths like 'a.b.c' to get a nested value from an object. Even works when keys have dots in them (no other dot-prop library can do this!).", "keywords": ["get", "key", "nested", "object", "path", "paths", "prop", "properties", "property", "props", "segment", "value", "values"], "date": "2018-03-07T05:27:53.926Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/get-value.git"}, "links": {"npm": "https://www.npmjs.com/package/get-value", "homepage": "https://github.com/jonschlinkert/get-value", "repository": "https://github.com/jonschlinkert/get-value", "bugs": "https://github.com/jonschlinkert/get-value/issues"}, "license": "MIT", "dependencies": {"isobject": "^3.0.1"}, "devDependencies": {"arr-reduce": "^1.0.1", "benchmarked": "^2.0.0", "dot-prop": "^4.2.0", "getobject": "^0.1.0", "glob": "^7.1.2", "gulp-format-md": "^1.0.0", "micromatch": "^3.1.5", "minimist": "^1.2.0", "mocha": "^3.5.3", "nyc": "^11.4.1", "object-path": "^0.11.4", "write": "^1.0.3"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# get-value [![NPM version](https://img.shields.io/npm/v/get-value.svg?style=flat)](https://www.npmjs.com/package/get-value) [![NPM monthly downloads](https://img.shields.io/npm/dm/get-value.svg?style=flat)](https://npmjs.org/package/get-value) [![NPM total downloads](https://img.shields.io/npm/dt/get-value.svg?style=flat)](https://npmjs.org/package/get-value) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/get-value.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/get-value)\n\n> Use property paths like 'a.b.c' to get a nested value from an object. Even works when keys have dots in them (no other dot-prop library can do this!).\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [Usage](#usage)\n  * [Supports keys with dots](#supports-keys-with-dots)\n  * [Supports arrays](#supports-arrays)\n  * [Supports functions](#supports-functions)\n  * [Supports passing object path as an array](#supports-passing-object-path-as-an-array)\n- [Options](#options)\n  * [options.default](#optionsdefault)\n  * [options.isValid](#optionsisvalid)\n  * [options.split](#optionssplit)\n  * [options.separator](#optionsseparator)\n  * [options.join](#optionsjoin)\n  * [options.joinChar](#optionsjoinchar)\n- [Benchmarks](#benchmarks)\n  * [Running the benchmarks](#running-the-benchmarks)\n- [Release history](#release-history)\n  * [v3.0.0](#v300)\n- [About](#about)\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save get-value\n```\n\n## Usage\n\nSee the [unit tests](test/test.js) for many more examples.\n\n```js\nconst get = require('foo');\nconst obj = { a: { b: { c: { d: 'foo' } } } };\n\nconsole.log(get(obj));            //=> { a: { b: { c: { d: 'foo' } } } };\nconsole.log(get(obj, 'a'));       //=> { b: { c: { d: 'foo' } } }\nconsole.log(get(obj, 'a.b'));     //=> { c: { d: 'foo' } }\nconsole.log(get(obj, 'a.b.c'));   //=> { d: 'foo' }\nconsole.log(get(obj, 'a.b.c.d')); //=> 'foo'\n```\n\n### Supports keys with dots\n\nUnlike other dot-prop libraries, get-value works when keys have dots in them:\n\n```js\nconsole.log(get({ 'a.b': { c: 'd' } }, 'a.b.c'));\n//=> 'd'\n\nconsole.log(get({ 'a.b': { c: { 'd.e': 'f' } } }, 'a.b.c.d.e'));\n//=> 'f'\n```\n\n### Supports arrays\n\n```js\nconsole.log(get({ a: { b: { c: { d: 'foo' } } }, e: [{ f: 'g' }, { f: 'h' }] }, 'e.1.f'));   \n//=> 'h'\n\nconsole.log(get({ a: { b: [{ c: 'd' }] } }, 'a.b.0.c')); \n//=> 'f'\n\nconsole.log(get({ a: { b: [{ c: 'd' }, { e: 'f' }] } }, 'a.b.1.e'));\n//=> 'f'\n```\n\n### Supports functions\n\n```js\nfunction foo() {}\nfoo.bar = { baz: 'qux' };\n\nconsole.log(get(foo));            \n//=> { [Function: foo] bar: { baz: 'qux' } }\n\nconsole.log(get(foo, 'bar'));     \n//=> { baz: 'qux' }\n\nconsole.log(get(foo, 'bar.baz')); \n//=> qux\n```\n\n### Supports passing object path as an array\n\nSlighly improve performance by passing an array of strings to use as object path segments (this is also useful when you need to dynamically build up the path segments):\n\n```js\nconsole.log(get({ a: { b: 'c' } }, ['a', 'b']));\n//=> 'c'\n```\n\n## Options\n\n### options.default\n\n**Type**: `any`\n\n**Default**: `undefined`\n\nThe default value to return when get-value cannot resolve a value from the given object.\n\n```js\nconst obj = { foo: { a: { b: { c: { d: 'e' } } } } };\nconsole.log(get(obj, 'foo.a.b.c.d', { default: true }));  //=> 'e'\nconsole.log(get(obj, 'foo.bar.baz', { default: true }));  //=> true\nconsole.log(get(obj, 'foo.bar.baz', { default: false })); //=> false\nconsole.log(get(obj, 'foo.bar.baz', { default: null }));  //=> null\n\n// you can also pass the default value as the last argument\n// (this is necessary if the default value is an object)\nconsole.log(get(obj, 'foo.a.b.c.d', true));  //=> 'e'\nconsole.log(get(obj, 'foo.bar.baz', true));  //=> true\nconsole.log(get(obj, 'foo.bar.baz', false)); //=> false\nconsole.log(get(obj, 'foo.bar.baz', null));  //=> null\n```\n\n### options.isValid\n\n**Type**: `function`\n\n**Default**: `true`\n\nIf defined, this function is called on each resolved value. Useful if you want to do `.hasOwnProperty` or `Object.prototype.propertyIsEnumerable`.\n\n```js\nconst isEnumerable = Object.prototype.propertyIsEnumerable;\nconst options = {\n  isValid: (key, obj) => isEnumerable.call(obj, key)\n};\n\nconst obj = {};\nObject.defineProperty(obj, 'foo', { value: 'bar', enumerable: false });\n\nconsole.log(get(obj, 'foo', options));           //=> undefined\nconsole.log(get({}, 'hasOwnProperty', options)); //=> undefined\nconsole.log(get({}, 'constructor', options));    //=> undefined\n\n// without \"isValid\" check\nconsole.log(get(obj, 'foo', options));           //=> bar\nconsole.log(get({}, 'hasOwnProperty', options)); //=> [Function: hasOwnProperty]\nconsole.log(get({}, 'constructor', options));    //=> [Function: Object]\n```\n\n### options.split\n\n**Type**: `function`\n\n**Default**: `String.split()`\n\nCustom function to use for splitting the string into object path segments.\n\n```js\nconst obj = { 'a.b': { c: { d: 'e' } } };\n\n// example of using a string to split the object path\nconst options = { split: path => path.split('/') };\nconsole.log(get(obj, 'a.b/c/d', options)); //=> 'e'\n\n// example of using a regex to split the object path\n// (removing escaped dots is unnecessary, this is just an example)\nconst options = { split: path => path.split(/\\\\?\\./) };\nconsole.log(get(obj, 'a\\\\.b.c.d', options)); //=> 'e'\n```\n\n### options.separator\n\n**Type**: `string|regex`\n\n**Default**: `.`\n\nThe separator to use for spliting the string (this is probably not needed when `options.split` is used).\n\n```js\nconst obj = { 'a.b': { c: { d: 'e' } } };\n\nconsole.log(get(obj, 'a.b/c/d', { separator: '/' }));       \n//=> 'e'\n\nconsole.log(get(obj, 'a\\\\.b.c.d', { separator: /\\\\?\\./ })); \n//=> 'e'\n```\n\n### options.join\n\n**Type**: `function`\n\n**Default**: `Array.join()`\n\nCustomize how the object path is created when iterating over path segments.\n\n```js\nconst obj = { 'a/b': { c: { d: 'e' } } };\nconst options = {\n  // when segs === ['a', 'b'] use a \"/\" to join, otherwise use a \".\"\n  join: segs => segs.join(segs[0] === 'a' ? '/' : '.')\n};\n\nconsole.log(get(obj, 'a.b.c.d', options));\n//=> 'e'\n```\n\n### options.joinChar\n\n**Type**: `string`\n\n**Default**: `.`\n\nThe character to use when re-joining the string to check for keys with dots in them (this is probably not needed when `options.join` is used). This can be a different value than the separator, since the separator can be a string or regex.\n\n```js\nconst target = { 'a-b': { c: { d: 'e' } } };\nconst options = { joinChar: '-' };\nconsole.log(get(target, 'a.b.c.d', options)); \n//=> 'e'\n```\n\n## Benchmarks\n\n_(benchmarks were run on a MacBook Pro 2.5 GHz Intel Core i7, 16 GB 1600 MHz DDR3)_.\n\nget-value is more reliable and has more features than dot-prop, without sacrificing performance.\n\n```\n# deep (175 bytes)\n  dot-prop x 883,166 ops/sec \u00b10.93% (86 runs sampled)\n  get-value x 1,448,928 ops/sec \u00b11.53% (87 runs sampled)\n  getobject x 213,797 ops/sec \u00b10.85% (90 runs sampled)\n  object-path x 184,347 ops/sec \u00b12.48% (85 runs sampled)\n\n  fastest is get-value (by 339% avg)\n\n# root (210 bytes)\n  dot-prop x 3,905,828 ops/sec \u00b11.36% (87 runs sampled)\n  get-value x 16,391,934 ops/sec \u00b11.43% (83 runs sampled)\n  getobject x 1,200,021 ops/sec \u00b11.81% (88 runs sampled)\n  object-path x 2,788,494 ops/sec \u00b11.81% (86 runs sampled)\n\n  fastest is get-value (by 623% avg)\n\n# shallow (84 bytes)\n  dot-prop x 2,553,558 ops/sec \u00b10.89% (89 runs sampled)\n  get-value x 3,070,159 ops/sec \u00b10.88% (90 runs sampled)\n  getobject x 726,670 ops/sec \u00b10.81% (86 runs sampled)\n  object-path x 922,351 ops/sec \u00b12.05% (86 runs sampled)\n\n  fastest is get-value (by 219% avg)\n\n```\n\n### Running the benchmarks\n\nClone this library into a local directory:\n\n```sh\n$ git clone https://github.com/jonschlinkert/get-value.git\n```\n\nThen install devDependencies and run benchmarks:\n\n```sh\n$ npm install && node benchmark\n```\n\n## Release history\n\n### v3.0.0\n\n* Improved support for escaping. It's no longer necessary to use backslashes to escape keys.\n* Adds `options.default` for defining a default value to return when no value is resolved.\n* Adds `options.isValid` to allow the user to check the object after each iteration.\n* Adds `options.separator` for customizing character to split on.\n* Adds `options.split` for customizing how the object path is split.\n* Adds `options.join` for customizing how the object path is joined when iterating over path segments.\n* Adds `options.joinChar` for customizing the join character.\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [has-any-deep](https://www.npmjs.com/package/has-any-deep): Return true if `key` exists deeply on the given object.  | [homepage](https://github.com/jonschlinkert/has-any-deep \"Return true if `key` exists deeply on the given object. \")\n* [has-any](https://www.npmjs.com/package/has-any): Returns true if an object has any of the specified keys. | [homepage](https://github.com/jonschlinkert/has-any \"Returns true if an object has any of the specified keys.\")\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using\u2026 [more](https://github.com/jonschlinkert/has-value) | [homepage](https://github.com/jonschlinkert/has-value \"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.\")\n* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value \"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.\")\n* [unset-value](https://www.npmjs.com/package/unset-value): Delete nested properties from an object using dot notation. | [homepage](https://github.com/jonschlinkert/unset-value \"Delete nested properties from an object using dot notation.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 81 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [ianwalter](https://github.com/ianwalter) |\n| 1 | [doowb](https://github.com/doowb) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on March 07, 2018._"}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2104286}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 11272086}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 46717755}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 123583610}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 247348996}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 463093430}], "dependentsCount": 235, "starsCount": 7}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 154, "forksCount": 15, "subscribersCount": 6, "issues": {"count": 19, "openCount": 2, "distribution": {"3600": 2, "10800": 1, "32400": 3, "97200": 1, "291600": 2, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 4, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 87}, {"username": "felladrin", "commitsCount": 2}, {"username": "ianwalter", "commitsCount": 2}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 11695, "testsSize": 20639}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/get-value.svg?style=flat", "shields": "https://img.shields.io/npm/v/get-value.svg", "content": "https://img.shields.io/npm/v/get-value.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/get-value.svg?style=flat", "shields": "https://img.shields.io/npm/dm/get-value.svg", "content": "https://img.shields.io/npm/dm/get-value.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/get-value.svg?style=flat", "shields": "https://img.shields.io/npm/dt/get-value.svg", "content": "https://img.shields.io/npm/dt/get-value.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/get-value.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/get-value.svg", "shields": "https://img.shields.io/travis/jonschlinkert/get-value.svg", "content": "https://img.shields.io/travis/jonschlinkert/get-value.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 185, "downloadsCount": 41194536.666666664, "downloadsAcceleration": 98480.33557838661, "dependentsCount": 235}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8375372739728042, "detail": {"quality": 0.9596449968378136, "popularity": 0.570521122834608, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-22T15:32:08.679Z", "collected": {"metadata": {"name": "glob", "scope": "unscoped", "version": "7.1.6", "description": "a little globber", "date": "2019-11-06T22:07:44.189Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/node-glob.git"}, "links": {"npm": "https://www.npmjs.com/package/glob", "homepage": "https://github.com/isaacs/node-glob#readme", "repository": "https://github.com/isaacs/node-glob", "bugs": "https://github.com/isaacs/node-glob/issues"}, "license": "ISC", "dependencies": {"fs.realpath": "^1.0.0", "inflight": "^1.0.4", "inherits": "2", "minimatch": "^3.0.4", "once": "^1.3.0", "path-is-absolute": "^1.0.0"}, "devDependencies": {"mkdirp": "0", "rimraf": "^2.2.8", "tap": "^12.0.1", "tick": "0.0.6"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n![](logo/glob.png)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set.  Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within.  Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n  If the first character of the range is `!` or `^` then it matches\n  any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n  any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n  patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n  patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n  provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n  zero or more directories and subdirectories searching for matches.\n  It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename.  For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned.  This\ndiffers from the shell, where the pattern itself is returned.  For\nexample:\n\n    $ echo a*s*d*f\n    a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results.  If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object.  Each field has the following possible\n  values:\n  * `false` - Path does not exist\n  * `true` - Path exists\n  * `'FILE'` - Path exists, and is not a directory\n  * `'DIR'` - Path exists, and is a directory\n  * `[file, entries, ...]` - Path exists, is a directory, and the\n    array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n  path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n  relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n  to minimize unnecessary syscalls.  It is stored on the instantiated\n  Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n  thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls.  At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n  Note that an explicit dot in a portion of the pattern will always\n  match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n  \"mounted\" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n  read a directory, a warning will be printed to stderr.  Set the\n  `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n  read a directory, the process will just continue on in search of\n  other matches.  Set the `strict` option to raise an error in these\n  cases.\n* `cache` See `cache` property above.  Pass in a previously generated\n  cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary\n  to set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links.  You may pass in a\n  previously generated `symlinks` object to save `lstat` calls when\n  resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.  Set this\n  flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames.  (Ie,\n  treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match.  Note: on\n  case-insensitive filesystems, non-magic patterns will match by\n  default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n  contain any slash characters.  That is, `*.js` would be treated as\n  equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files.  (Note: to match\n  *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n  Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n  of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n  Note that this can result in a lot of duplicate references in the\n  presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n  In the case of a symlink that cannot be resolved, the full absolute\n  path to the matched entry is returned (though it will usually be a\n  broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n  files.  Unlike `realpath`, this also affects the values returned in\n  the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern.  This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes.  For the vast majority\nof operations, this is never a problem.\n\n## Glob Logo\nGlob's logo was created by [Tanya Brassie](http://tanyabrassie.com/). Logo files can be found [here](https://github.com/isaacs/node-glob/tree/master/logo).\n\nThe logo is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/).\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n\n![](oh-my-glob.gif)"}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5607034}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 32852651}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 141102416}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 372972229}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 737407388}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1383796606}], "dependentsCount": 14481, "starsCount": 351}, "github": {"starsCount": 6173, "forksCount": 401, "subscribersCount": 100, "issues": {"count": 408, "openCount": 102, "distribution": {"3600": 32, "10800": 24, "32400": 36, "97200": 28, "291600": 24, "874800": 29, "2624400": 29, "7873200": 45, "23619600": 44, "70858800": 44, "212576400": 73}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 403}, {"username": "tanyabrassie", "commitsCount": 3}, {"username": "bcardarella", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "phated", "commitsCount": 2}, {"username": "schnittstabil", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "wdavidw", "commitsCount": 2}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "TooTallNate", "commitsCount": 1}, {"username": "amelon-bflo", "commitsCount": 1}, {"username": "basarat", "commitsCount": 1}, {"username": "benhutchins", "commitsCount": 1}, {"username": "contra", "commitsCount": 1}, {"username": "denis-sokolov", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "jakobmattsson", "commitsCount": 1}, {"username": "jimt", "commitsCount": 1}, {"username": "jldec", "commitsCount": 1}, {"username": "marclipovsky", "commitsCount": 1}, {"username": "maxg", "commitsCount": 1}, {"username": "mikeobrien", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "peterbraden", "commitsCount": 1}, {"username": "vegetableman", "commitsCount": 1}, {"username": "vkichline", "commitsCount": 1}, {"username": "zakhenry", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 13}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 15002, "testsSize": 52183, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/node-glob.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/node-glob.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/node-glob/master.svg", "content": "https://img.shields.io/travis/isaacs/node-glob/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/isaacs/node-glob/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/isaacs/node-glob/master.svg", "content": "https://img.shields.io/coveralls/isaacs/node-glob/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "coverage": 0.94, "outdatedDependencies": {"path-is-absolute": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.866, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 7054, "downloadsCount": 124324076.33333333, "downloadsAcceleration": 304418.60540334845, "dependentsCount": 14481}, "maintenance": {"releasesFrequency": 0.7169520547945206, "commitsFrequency": 0.4120890410958904, "openIssues": 0.9166666666666667, "issuesDistribution": 0}}, "score": {"final": 0.8252953907749728, "detail": {"quality": 0.9511009160460236, "popularity": 0.8843130828525005, "maintenance": 0.658444391322259}}}
{"analyzedAt": "2020-03-05T02:18:19.153Z", "collected": {"metadata": {"name": "globals", "scope": "unscoped", "version": "12.3.0", "description": "Global identifiers from different JavaScript environments", "keywords": ["globals", "global", "identifiers", "variables", "vars", "jshint", "eslint", "environments"], "date": "2019-11-19T05:58:21.319Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "byk", "email": "ben@byk.im"}, {"username": "lo1tuma", "email": "schreck.mathias@gmail.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/globals.git"}, "links": {"npm": "https://www.npmjs.com/package/globals", "homepage": "https://github.com/sindresorhus/globals#readme", "repository": "https://github.com/sindresorhus/globals", "bugs": "https://github.com/sindresorhus/globals/issues"}, "license": "MIT", "dependencies": {"type-fest": "^0.8.1"}, "devDependencies": {"ava": "^2.2.0", "tsd": "^0.9.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 5}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 7}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# globals [![Build Status](https://travis-ci.org/sindresorhus/globals.svg?branch=master)](https://travis-ci.org/sindresorhus/globals)\n\n> Global identifiers from different JavaScript environments\n\nExtracted from [JSHint](https://github.com/jshint/jshint/blob/3a8efa979dbb157bfb5c10b5826603a55a33b9ad/src/vars.js) and [ESLint](https://github.com/eslint/eslint/blob/b648406218f8a2d7302b98f5565e23199f44eb31/conf/environments.json) and merged.\n\nIt's just a [JSON file](globals.json), so use it in whatever environment you like.\n\n**This module [no longer accepts](https://github.com/sindresorhus/globals/issues/82) new environments. If you need it for ESLint, just [create a plugin](http://eslint.org/docs/developer-guide/working-with-plugins#environments-in-plugins).**\n\n\n## Install\n\n```\n$ npm install globals\n```\n\n\n## Usage\n\n```js\nconst globals = require('globals');\n\nconsole.log(globals.browser);\n/*\n{\n\taddEventListener: false,\n\tapplicationCache: false,\n\tArrayBuffer: false,\n\tatob: false,\n\t...\n}\n*/\n```\n\nEach global is given a value of `true` or `false`. A value of `true` indicates that the variable may be overwritten. A value of `false` indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be `false` unless we hear otherwise.\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-globals?utm_source=npm-globals&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3679267}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 19738252}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 82953639}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 207989127}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 394446797}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 741438958}], "dependentsCount": 145, "starsCount": 3}, "github": {"starsCount": 192, "forksCount": 84, "subscribersCount": 13, "issues": {"count": 160, "openCount": 8, "distribution": {"3600": 19, "10800": 10, "32400": 17, "97200": 30, "291600": 22, "874800": 20, "2624400": 14, "7873200": 14, "23619600": 7, "70858800": 5, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 107}, {"username": "nzakas", "commitsCount": 9}, {"username": "silverwind", "commitsCount": 7}, {"username": "es128", "commitsCount": 6}, {"username": "johanbrook", "commitsCount": 3}, {"username": "mysticatea", "commitsCount": 3}, {"username": "valorkin", "commitsCount": 3}, {"username": "BYK", "commitsCount": 2}, {"username": "aaronabramov", "commitsCount": 2}, {"username": "kevinoid", "commitsCount": 2}, {"username": "kfix", "commitsCount": 2}, {"username": "lencioni", "commitsCount": 2}, {"username": "AlexanderKozhevin", "commitsCount": 1}, {"username": "BendingBender", "commitsCount": 1}, {"username": "BenoitZugmeyer", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "James1x0", "commitsCount": 1}, {"username": "KarlCastle", "commitsCount": 1}, {"username": "Kerrick", "commitsCount": 1}, {"username": "Mouvedia", "commitsCount": 1}, {"username": "Mr0grog", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "Trott", "commitsCount": 1}, {"username": "UziTech", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "aleksandr-oleynikov", "commitsCount": 1}, {"username": "alshakero", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "atkinchris", "commitsCount": 1}, {"username": "bnoordhuis", "commitsCount": 1}, {"username": "boneskull", "commitsCount": 1}, {"username": "bwinton", "commitsCount": 1}, {"username": "captainbrosset", "commitsCount": 1}, {"username": "clessg", "commitsCount": 1}, {"username": "cpojer", "commitsCount": 1}, {"username": "dar5hak", "commitsCount": 1}, {"username": "davidmccabe", "commitsCount": 1}, {"username": "devsnek", "commitsCount": 1}, {"username": "dgraham", "commitsCount": 1}, {"username": "dillonkrug", "commitsCount": 1}, {"username": "dominicbarnes", "commitsCount": 1}, {"username": "feross", "commitsCount": 1}, {"username": "inukshuk", "commitsCount": 1}, {"username": "ismay", "commitsCount": 1}, {"username": "jeffposnick", "commitsCount": 1}, {"username": "jmalonzo", "commitsCount": 1}, {"username": "jonkeller", "commitsCount": 1}, {"username": "jrvidal", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "leader22", "commitsCount": 1}, {"username": "leobalter", "commitsCount": 1}, {"username": "loilo", "commitsCount": 1}, {"username": "michaelficarra", "commitsCount": 1}, {"username": "mmun", "commitsCount": 1}, {"username": "mo", "commitsCount": 1}, {"username": "mrrorinc", "commitsCount": 1}, {"username": "ncuillery", "commitsCount": 1}, {"username": "philipwalton", "commitsCount": 1}, {"username": "pioug", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "rhysd", "commitsCount": 1}, {"username": "rwjblue", "commitsCount": 1}, {"username": "takenspc", "commitsCount": 1}, {"username": "tschaub", "commitsCount": 1}, {"username": "userpixel", "commitsCount": 1}, {"username": "wagenet", "commitsCount": 1}, {"username": "whitneyit", "commitsCount": 1}, {"username": "winterbe", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 9}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 15}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1777, "testsSize": 421}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/globals.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/globals.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/globals/master.svg", "content": "https://img.shields.io/travis/sindresorhus/globals/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"type-fest": {"required": "^0.8.1", "stable": "0.11.0", "latest": "0.11.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 361, "downloadsCount": 69329709, "downloadsAcceleration": 223453.29313165904, "dependentsCount": 145}, "maintenance": {"releasesFrequency": 0.9137842465753425, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8426551374492817, "detail": {"quality": 0.9452098128507848, "popularity": 0.5974986732646981, "maintenance": 0.9999075941468627}}}
{"analyzedAt": "2020-02-27T04:19:35.623Z", "collected": {"metadata": {"name": "globby", "scope": "unscoped", "version": "11.0.0", "description": "User-friendly glob matching", "keywords": ["all", "array", "directories", "expand", "files", "filesystem", "filter", "find", "fnmatch", "folders", "fs", "glob", "globbing", "globs", "gulpfriendly", "match", "matcher", "minimatch", "multi", "multiple", "paths", "pattern", "patterns", "traverse", "util", "utility", "wildcard", "wildcards", "promise", "gitignore", "git"], "date": "2020-01-06T09:38:23.444Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/globby.git"}, "links": {"npm": "https://www.npmjs.com/package/globby", "homepage": "https://github.com/sindresorhus/globby#readme", "repository": "https://github.com/sindresorhus/globby", "bugs": "https://github.com/sindresorhus/globby/issues"}, "license": "MIT", "dependencies": {"array-union": "^2.1.0", "dir-glob": "^3.0.1", "fast-glob": "^3.1.1", "ignore": "^5.1.4", "merge2": "^1.3.0", "slash": "^3.0.0"}, "devDependencies": {"ava": "^2.1.0", "get-stream": "^5.1.0", "glob-stream": "^6.1.0", "globby": "github:sindresorhus/globby#master", "matcha": "^0.7.0", "rimraf": "^3.0.0", "tsd": "^0.11.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 7}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# globby [![Build Status](https://travis-ci.org/sindresorhus/globby.svg?branch=master)](https://travis-ci.org/sindresorhus/globby)\n\n> User-friendly glob matching\n\nBased on [`fast-glob`](https://github.com/mrmlnc/fast-glob) but adds a bunch of useful features.\n\n## Features\n\n- Promise API\n- Multiple patterns\n- Negated patterns: `['foo*', '!foobar']`\n- Expands directories: `foo` \u2192 `foo/**/*`\n- Supports `.gitignore`\n\n## Install\n\n```\n$ npm install globby\n```\n\n## Usage\n\n```\n\u251c\u2500\u2500 unicorn\n\u251c\u2500\u2500 cake\n\u2514\u2500\u2500 rainbow\n```\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tconst paths = await globby(['*', '!cake']);\n\n\tconsole.log(paths);\n\t//=> ['unicorn', 'rainbow']\n})();\n```\n\n## API\n\nNote that glob patterns can only contain forward-slashes, not backward-slashes, so if you want to construct a glob pattern from path components, you need to use `path.posix.join()` instead of `path.join()`.\n\n### globby(patterns, options?)\n\nReturns a `Promise<string[]>` of matching paths.\n\n#### patterns\n\nType: `string | string[]`\n\nSee supported `minimatch` [patterns](https://github.com/isaacs/minimatch#usage).\n\n#### options\n\nType: `object`\n\nSee the [`fast-glob` options](https://github.com/mrmlnc/fast-glob#options-3) in addition to the ones below.\n\n##### expandDirectories\n\nType: `boolean | string[] | object`\\\nDefault: `true`\n\nIf set to `true`, `globby` will automatically glob directories for you. If you define an `Array` it will only glob files that matches the patterns inside the `Array`. You can also define an `object` with `files` and `extensions` like below:\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tconst paths = await globby('images', {\n\t\texpandDirectories: {\n\t\t\tfiles: ['cat', 'unicorn', '*.jpg'],\n\t\t\textensions: ['png']\n\t\t}\n\t});\n\n\tconsole.log(paths);\n\t//=> ['cat.png', 'unicorn.png', 'cow.jpg', 'rainbow.jpg']\n})();\n```\n\nNote that if you set this option to `false`, you won't get back matched directories unless you set `onlyFiles: false`.\n\n##### gitignore\n\nType: `boolean`\\\nDefault: `false`\n\nRespect ignore patterns in `.gitignore` files that apply to the globbed files.\n\n### globby.sync(patterns, options?)\n\nReturns `string[]` of matching paths.\n\n### globby.stream(patterns, options?)\n\nReturns a [`stream.Readable`](https://nodejs.org/api/stream.html#stream_readable_streams) of matching paths.\n\nSince Node.js 10, [readable streams are iterable](https://nodejs.org/api/stream.html#stream_readable_symbol_asynciterator), so you can loop over glob matches in a [`for await...of` loop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of) like this:\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tfor await (const path of globby.stream('*.tmp')) {\n\t\tconsole.log(path);\n\t}\n})();\n```\n\n### globby.generateGlobTasks(patterns, options?)\n\nReturns an `object[]` in the format `{pattern: string, options: Object}`, which can be passed as arguments to [`fast-glob`](https://github.com/mrmlnc/fast-glob). This is useful for other globbing-related packages.\n\nNote that you should avoid running the same tasks multiple times as they contain a file system cache. Instead, run this method each time to ensure file system changes are taken into consideration.\n\n### globby.hasMagic(patterns, options?)\n\nReturns a `boolean` of whether there are any special glob characters in the `patterns`.\n\nNote that the options affect the results.\n\nThis function is backed by [`fast-glob`](https://github.com/mrmlnc/fast-glob#isdynamicpatternpattern-options).\n\n### globby.gitignore(options?)\n\nReturns a `Promise<(path: string) => boolean>` indicating whether a given path is ignored via a `.gitignore` file.\n\nTakes `cwd?: string` and `ignore?: string[]` as options. `.gitignore` files matched by the ignore config are not used for the resulting filter function.\n\n```js\nconst {gitignore} = require('globby');\n\n(async () => {\n\tconst isIgnored = await gitignore();\n\tconsole.log(isIgnored('some/file'));\n})();\n```\n\n### globby.gitignore.sync(options?)\n\nReturns a `(path: string) => boolean` indicating whether a given path is ignored via a `.gitignore` file.\n\nTakes the same options as `globby.gitignore`.\n\n## Globbing patterns\n\nJust a quick overview.\n\n- `*` matches any number of characters, but not `/`\n- `?` matches a single character, but not `/`\n- `**` matches any number of characters, including `/`, as long as it's the only thing in a path part\n- `{}` allows for a comma-separated list of \"or\" expressions\n- `!` at the beginning of a pattern will negate the match\n\n[Various patterns and expected matches.](https://github.com/sindresorhus/multimatch/blob/master/test/test.js)\n\n## globby for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of globby and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-globby?utm_source=npm-globby&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [multimatch](https://github.com/sindresorhus/multimatch) - Match against a list instead of the filesystem\n- [matcher](https://github.com/sindresorhus/matcher) - Simple wildcard matching\n- [del](https://github.com/sindresorhus/del) - Delete files and directories\n- [make-dir](https://github.com/sindresorhus/make-dir) - Make a directory and its parents if needed"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 4216750}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 21516972}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 91515171}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 229882241}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 449649728}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 821856478}], "dependentsCount": 2880, "starsCount": 49}, "github": {"starsCount": 1351, "forksCount": 93, "subscribersCount": 20, "issues": {"count": 142, "openCount": 14, "distribution": {"3600": 22, "10800": 10, "32400": 11, "97200": 12, "291600": 14, "874800": 13, "2624400": 17, "7873200": 11, "23619600": 15, "70858800": 15, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 74}, {"username": "UltCombo", "commitsCount": 14}, {"username": "kevva", "commitsCount": 9}, {"username": "schnittstabil", "commitsCount": 5}, {"username": "marionebl", "commitsCount": 4}, {"username": "BendingBender", "commitsCount": 2}, {"username": "jamiekyle-eb", "commitsCount": 2}, {"username": "Moeriki", "commitsCount": 1}, {"username": "alexander-alvarez", "commitsCount": 1}, {"username": "arthurvr", "commitsCount": 1}, {"username": "brandon93s", "commitsCount": 1}, {"username": "catdad", "commitsCount": 1}, {"username": "chrisblossom", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "donocode", "commitsCount": 1}, {"username": "doochik", "commitsCount": 1}, {"username": "futpib", "commitsCount": 1}, {"username": "garyking", "commitsCount": 1}, {"username": "jamestalmage", "commitsCount": 1}, {"username": "medusalix", "commitsCount": 1}, {"username": "mrmlnc", "commitsCount": 1}, {"username": "pkuczynski", "commitsCount": 1}, {"username": "pmuens", "commitsCount": 1}, {"username": "popomore", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "rwjblue", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "sinchang", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "termosa", "commitsCount": 1}, {"username": "vegetableman", "commitsCount": 1}, {"username": "wbinnssmith", "commitsCount": 1}, {"username": "yhatt", "commitsCount": 1}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 7}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 8}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 28}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5544, "testsSize": 13186}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/globby.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/globby.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/globby/master.svg", "content": "https://img.shields.io/travis/sindresorhus/globby/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1548, "downloadsCount": 76627413.66666667, "downloadsAcceleration": 261309.14433028921, "dependentsCount": 2880}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9004861026317005, "detail": {"quality": 0.9547045235275585, "popularity": 0.7546096104116731, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-22T09:47:37.657Z", "collected": {"metadata": {"name": "glob-parent", "scope": "unscoped", "version": "5.1.0", "description": "Extract the non-magic parent path from a glob string.", "keywords": ["glob", "parent", "strip", "path", "dirname", "directory", "base", "wildcard"], "date": "2019-09-21T23:17:05.017Z", "author": {"name": "Gulp Team", "email": "team@gulpjs.com", "url": "https://gulpjs.com/"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "contra", "email": "yo@contra.io"}, {"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "es128", "email": "elan.shanker+npm@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "contributors": [{"name": "Elan Shanker", "url": "https://github.com/es128"}, {"name": "Blaine Bublitz", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/gulpjs/glob-parent.git"}, "links": {"npm": "https://www.npmjs.com/package/glob-parent", "homepage": "https://github.com/gulpjs/glob-parent#readme", "repository": "https://github.com/gulpjs/glob-parent", "bugs": "https://github.com/gulpjs/glob-parent/issues"}, "license": "ISC", "dependencies": {"is-glob": "^4.0.1"}, "devDependencies": {"coveralls": "github:phated/node-coveralls#2.x", "eslint": "^2.13.1", "eslint-config-gulp": "^3.0.1", "expect": "^1.20.2", "mocha": "^6.0.2", "nyc": "^13.3.0"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <a href=\"https://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# glob-parent\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Azure Pipelines Build Status][azure-pipelines-image]][azure-pipelines-url] [![Travis Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nExtract the non-magic parent path from a glob string.\n\n## Usage\n\n```js\nvar globParent = require('glob-parent');\n\nglobParent('path/to/*.js'); // 'path/to'\nglobParent('/root/path/to/*.js'); // '/root/path/to'\nglobParent('/*.js'); // '/'\nglobParent('*.js'); // '.'\nglobParent('**/*.js'); // '.'\nglobParent('path/{to,from}'); // 'path'\nglobParent('path/!(to|from)'); // 'path'\nglobParent('path/?(to|from)'); // 'path'\nglobParent('path/+(to|from)'); // 'path'\nglobParent('path/*(to|from)'); // 'path'\nglobParent('path/@(to|from)'); // 'path'\nglobParent('path/**/*'); // 'path'\n\n// if provided a non-glob path, returns the nearest dir\nglobParent('path/foo/bar.js'); // 'path/foo'\nglobParent('path/foo/'); // 'path/foo'\nglobParent('path/foo'); // 'path' (see issue #3 for details)\n```\n\n## API\n\n### `globParent(maybeGlobString, [options])`\n\nTakes a string and returns the part of the path before the glob begins. Be aware of Escaping rules and Limitations below.\n\n#### options\n\n```js\n{\n  // Disables the automatic conversion of slashes for Windows\n  flipBackslashes: true\n}\n```\n\n## Escaping\n\nThe following characters have special significance in glob patterns and must be escaped if you want them to be treated as regular path characters:\n\n- `?` (question mark) unless used as a path segment alone\n- `*` (asterisk)\n- `|` (pipe)\n- `(` (opening parenthesis)\n- `)` (closing parenthesis)\n- `{` (opening curly brace)\n- `}` (closing curly brace)\n- `[` (opening bracket)\n- `]` (closing bracket)\n\n**Example**\n\n```js\nglobParent('foo/[bar]/') // 'foo'\nglobParent('foo/\\\\[bar]/') // 'foo/[bar]'\n```\n\n## Limitations\n\n### Braces & Brackets\nThis library attempts a quick and imperfect method of determining which path\nparts have glob magic without fully parsing/lexing the pattern. There are some\nadvanced use cases that can trip it up, such as nested braces where the outer\npair is escaped and the inner one contains a path separator. If you find\nyourself in the unlikely circumstance of being affected by this or need to\nensure higher-fidelity glob handling in your library, it is recommended that you\npre-process your input with [expand-braces] and/or [expand-brackets].\n\n### Windows\nBackslashes are not valid path separators for globs. If a path with backslashes\nis provided anyway, for simple cases, glob-parent will replace the path\nseparator for you and return the non-glob parent path (now with\nforward-slashes, which are still valid as Windows path separators).\n\nThis cannot be used in conjunction with escape characters.\n\n```js\n// BAD\nglobParent('C:\\\\Program Files \\\\(x86\\\\)\\\\*.ext') // 'C:/Program Files /(x86/)'\n\n// GOOD\nglobParent('C:/Program Files\\\\(x86\\\\)/*.ext') // 'C:/Program Files (x86)'\n```\n\nIf you are using escape characters for a pattern without path parts (i.e.\nrelative to `cwd`), prefix with `./` to avoid confusing glob-parent.\n\n```js\n// BAD\nglobParent('foo \\\\[bar]') // 'foo '\nglobParent('foo \\\\[bar]*') // 'foo '\n\n// GOOD\nglobParent('./foo \\\\[bar]') // 'foo [bar]'\nglobParent('./foo \\\\[bar]*') // '.'\n```\n\n## License\n\nISC\n\n[expand-braces]: https://github.com/jonschlinkert/expand-braces\n[expand-brackets]: https://github.com/jonschlinkert/expand-brackets\n\n[downloads-image]: https://img.shields.io/npm/dm/glob-parent.svg\n[npm-url]: https://www.npmjs.com/package/glob-parent\n[npm-image]: https://img.shields.io/npm/v/glob-parent.svg\n\n[azure-pipelines-url]: https://dev.azure.com/gulpjs/gulp/_build/latest?definitionId=2&branchName=master\n[azure-pipelines-image]: https://dev.azure.com/gulpjs/gulp/_apis/build/status/glob-parent?branchName=master\n\n[travis-url]: https://travis-ci.org/gulpjs/glob-parent\n[travis-image]: https://img.shields.io/travis/gulpjs/glob-parent.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/glob-parent\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/glob-parent.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/glob-parent\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/glob-parent/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg"}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3608046}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 21307533}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 90448344}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 230087070}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 443004417}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 765666814}], "dependentsCount": 192, "starsCount": 1}, "github": {"starsCount": 40, "forksCount": 9, "subscribersCount": 6, "issues": {"count": 25, "openCount": 1, "distribution": {"3600": 4, "10800": 0, "32400": 0, "97200": 3, "291600": 3, "874800": 5, "2624400": 6, "7873200": 0, "23619600": 1, "70858800": 3, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "es128", "commitsCount": 39}, {"username": "phated", "commitsCount": 7}, {"username": "jonschlinkert", "commitsCount": 6}, {"username": "doowb", "commitsCount": 2}, {"username": "paulmillr", "commitsCount": 2}, {"username": "mrmlnc", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "Tidelift", "state": "success"}]}, "source": {"files": {"readmeSize": 4646, "testsSize": 8010}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/glob-parent.svg", "shields": "https://img.shields.io/npm/dm/glob-parent.svg", "content": "https://img.shields.io/npm/dm/glob-parent.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/glob-parent.svg", "shields": "https://img.shields.io/npm/v/glob-parent.svg", "content": "https://img.shields.io/npm/v/glob-parent.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/gulpjs/glob-parent.svg?label=travis-ci", "service": "https://api.travis-ci.org/gulpjs/glob-parent.svg", "shields": "https://img.shields.io/travis/gulpjs/glob-parent.svg", "content": "https://img.shields.io/travis/gulpjs/glob-parent.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/gulpjs/glob-parent.svg?label=appveyor", "service": "https://ci.appveyor.com/api/projects/status/gulpjs/glob-parent", "shields": "https://img.shields.io/appveyor/ci/gulpjs/glob-parent.svg", "content": "https://img.shields.io/appveyor/ci/gulpjs/glob-parent.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/gulpjs/glob-parent/master.svg", "service": "https://coveralls.io/repos/gulpjs/glob-parent/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/gulpjs/glob-parent/master.svg", "content": "https://img.shields.io/coveralls/gulpjs/glob-parent/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://badges.gitter.im/gulpjs/gulp.svg", "service": "https://badges.gitter.im/gulpjs/gulp.svg", "shields": "https://img.shields.io/gitter/room/gulpjs/gulp.svg", "content": "https://img.shields.io/gitter/room/gulpjs/gulp.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint"], "coverage": 0.89}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9835, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 63, "downloadsCount": 76695690, "downloadsAcceleration": 320161.46318493143, "dependentsCount": 192}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8464787492201893, "detail": {"quality": 0.9872356435488636, "popularity": 0.5724190692176653, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-06T03:48:18.703Z", "collected": {"metadata": {"name": "glob-to-regexp", "scope": "unscoped", "version": "0.4.1", "description": "Convert globs to regular expressions", "keywords": ["regexp", "glob", "regexps", "regular expressions", "regular expression", "wildcard"], "date": "2019-04-01T16:19:53.460Z", "author": {"name": "Nick Fitzgerald", "email": "fitzgen@gmail.com", "username": "nickfitzgerald"}, "publisher": {"username": "nickfitzgerald", "email": "fitzgen@gmail.com"}, "maintainers": [{"username": "nickfitzgerald", "email": "fitzgen@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/fitzgen/glob-to-regexp.git"}, "links": {"npm": "https://www.npmjs.com/package/glob-to-regexp", "homepage": "https://github.com/fitzgen/glob-to-regexp#readme", "repository": "https://github.com/fitzgen/glob-to-regexp", "bugs": "https://github.com/fitzgen/glob-to-regexp/issues"}, "license": "BSD-2-Clause", "releases": [{"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 2}, {"from": "2018-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# Glob To Regular Expression\n\n[![Build Status](https://travis-ci.org/fitzgen/glob-to-regexp.png?branch=master)](https://travis-ci.org/fitzgen/glob-to-regexp)\n\nTurn a \\*-wildcard style glob (`\"*.min.js\"`) into a regular expression\n(`/^.*\\.min\\.js$/`)!\n\nTo match bash-like globs, eg. `?` for any single-character match, `[a-z]` for\ncharacter ranges, and `{*.html, *.js}` for multiple alternatives, call with\n`{ extended: true }`.\n\nTo obey [globstars `**`](https://github.com/isaacs/node-glob#glob-primer) rules set option `{globstar: true}`.\nNOTE: This changes the behavior of `*` when `globstar` is `true` as shown below:\nWhen `{globstar: true}`: `/foo/**` will match any string that starts with `/foo/`\nlike `/foo/index.htm`, `/foo/bar/baz.txt`, etc.  Also, `/foo/**/*.txt` will match\nany string that starts with `/foo/` and ends with `.txt` like `/foo/bar.txt`,\n`/foo/bar/baz.txt`, etc.\nWhereas `/foo/*` (single `*`, not a globstar) will match strings that start with\n`/foo/` like `/foo/index.htm`, `/foo/baz.txt` but will not match strings that\ncontain a `/` to the right like `/foo/bar/baz.txt`, `/foo/bar/baz/qux.dat`, etc.\n\nSet flags on the resulting `RegExp` object by adding the `flags` property to the option object, eg `{ flags: \"i\" }` for ignoring case.\n\n## Install\n\n    npm install glob-to-regexp\n\n## Usage\n```js\nvar globToRegExp = require('glob-to-regexp');\nvar re = globToRegExp(\"p*uck\");\nre.test(\"pot luck\"); // true\nre.test(\"pluck\"); // true\nre.test(\"puck\"); // true\n\nre = globToRegExp(\"*.min.js\");\nre.test(\"http://example.com/jquery.min.js\"); // true\nre.test(\"http://example.com/jquery.min.js.map\"); // false\n\nre = globToRegExp(\"*/www/*.js\");\nre.test(\"http://example.com/www/app.js\"); // true\nre.test(\"http://example.com/www/lib/factory-proxy-model-observer.js\"); // true\n\n// Extended globs\nre = globToRegExp(\"*/www/{*.js,*.html}\", { extended: true });\nre.test(\"http://example.com/www/app.js\"); // true\nre.test(\"http://example.com/www/index.html\"); // true\n```\n\n## License\n\nCopyright (c) 2013, Nick Fitzgerald\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."}, "npm": {"downloads": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 998174}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 5308188}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 22336211}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 58012042}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 113238336}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 197411486}], "dependentsCount": 125, "starsCount": 3}, "github": {"starsCount": 88, "forksCount": 20, "subscribersCount": 4, "issues": {"count": 21, "openCount": 6, "distribution": {"3600": 1, "10800": 1, "32400": 3, "97200": 2, "291600": 2, "874800": 2, "2624400": 2, "7873200": 0, "23619600": 3, "70858800": 4, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "fitzgen", "commitsCount": 16}, {"username": "LarryBattle", "commitsCount": 3}, {"username": "clintwood", "commitsCount": 3}, {"username": "roccivic", "commitsCount": 3}, {"username": "dienluong", "commitsCount": 2}, {"username": "sslmda", "commitsCount": 2}, {"username": "JamesMessinger", "commitsCount": 1}, {"username": "goloroden", "commitsCount": 1}], "commits": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 1}]}, "source": {"files": {"readmeSize": 3289, "testsSize": 10842}, "badges": [{"urls": {"original": "https://travis-ci.org/fitzgen/glob-to-regexp.png?branch=master", "service": "https://api.travis-ci.org/fitzgen/glob-to-regexp.svg?branch=master", "shields": "https://img.shields.io/travis/fitzgen/glob-to-regexp/master.svg", "content": "https://img.shields.io/travis/fitzgen/glob-to-regexp/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.355, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 123, "downloadsCount": 19337347.333333332, "downloadsAcceleration": 72983.86518264841, "dependentsCount": 125}, "maintenance": {"releasesFrequency": 0.1356164383561644, "commitsFrequency": 0.011506849315068493, "openIssues": 0.8571428571428572, "issuesDistribution": 0}}, "score": {"final": 0.5251744352986359, "detail": {"quality": 0.790454143007422, "popularity": 0.5118772436916122, "maintenance": 0.3110890202981288}}}
{"analyzedAt": "2020-02-23T10:07:04.708Z", "collected": {"metadata": {"name": "handlebars", "scope": "unscoped", "version": "4.7.3", "description": "Handlebars provides the power necessary to let you build semantic templates effectively with no frustration", "keywords": ["handlebars", "mustache", "template", "html"], "date": "2020-02-05T05:11:05.763Z", "author": {"name": "Yehuda Katz"}, "publisher": {"username": "knappi", "email": "npm@knappi.org"}, "maintainers": [{"username": "erisds", "email": "erisds@gmail.com"}, {"username": "knappi", "email": "npm@knappi.org"}, {"username": "kpdecker", "email": "kpdecker@gmail.com"}, {"username": "lawnsea", "email": "lawnsea@gmail.com"}, {"username": "wycats", "email": "wycats@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/wycats/handlebars.js.git"}, "links": {"npm": "https://www.npmjs.com/package/handlebars", "homepage": "http://www.handlebarsjs.com/", "repository": "https://github.com/wycats/handlebars.js", "bugs": "https://github.com/wycats/handlebars.js/issues"}, "license": "MIT", "dependencies": {"neo-async": "^2.6.0", "optimist": "^0.6.1", "source-map": "^0.6.1", "uglify-js": "^3.1.4"}, "devDependencies": {"@knappi/grunt-saucelabs": "^9.0.2", "aws-sdk": "^2.1.49", "babel-loader": "^5.0.0", "babel-runtime": "^5.1.10", "benchmark": "~1.0", "chai": "^4.2.0", "chai-diff": "^1.0.1", "concurrently": "^5.0.0", "dirty-chai": "^2.0.1", "dtslint": "^0.5.5", "dustjs-linkedin": "^2.0.2", "eco": "~1.1.0-rc-3", "eslint": "^6.7.2", "eslint-config-prettier": "^6.7.0", "eslint-plugin-compat": "^3.3.0", "eslint-plugin-es5": "^1.4.1", "fs-extra": "^8.1.0", "grunt": "^1.0.4", "grunt-babel": "^5.0.0", "grunt-bg-shell": "^2.3.3", "grunt-cli": "^1", "grunt-contrib-clean": "^1", "grunt-contrib-concat": "^1", "grunt-contrib-connect": "^1", "grunt-contrib-copy": "^1", "grunt-contrib-requirejs": "^1", "grunt-contrib-uglify": "^1", "grunt-contrib-watch": "^1.1.0", "grunt-webpack": "^1.0.8", "husky": "^3.1.0", "jison": "~0.3.0", "lint-staged": "^9.5.0", "mocha": "^5", "mock-stdin": "^0.3.0", "mustache": "^2.1.3", "nyc": "^14.1.1", "prettier": "^1.19.1", "semver": "^5.0.1", "sinon": "^7.5.0", "typescript": "^3.4.3", "underscore": "^1.5.1", "webpack": "^1.12.6", "webpack-dev-server": "^1.12.1"}, "optionalDependencies": {"uglify-js": "^3.1.4"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 24}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 29}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 35}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 371878}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8380313}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 35693053}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 106141557}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 218171205}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 402683517}], "dependentsCount": 6556, "starsCount": 177}, "github": {"homepage": "http://handlebarsjs.com", "starsCount": 15130, "forksCount": 1949, "subscribersCount": 459, "issues": {"count": 1654, "openCount": 116, "distribution": {"3600": 130, "10800": 67, "32400": 92, "97200": 172, "291600": 185, "874800": 201, "2624400": 226, "7873200": 212, "23619600": 173, "70858800": 136, "212576400": 60}, "isDisabled": false}, "contributors": [{"username": "kpdecker", "commitsCount": 826}, {"username": "nknapp", "commitsCount": 206}, {"username": "nalanj", "commitsCount": 111}, {"username": "wycats", "commitsCount": 111}, {"username": "wagenet", "commitsCount": 15}, {"username": "lawnsea", "commitsCount": 9}, {"username": "jasondavies", "commitsCount": 8}, {"username": "leshill", "commitsCount": 8}, {"username": "blakeembrey", "commitsCount": 6}, {"username": "mmun", "commitsCount": 6}, {"username": "blikblum", "commitsCount": 5}, {"username": "marado", "commitsCount": 5}, {"username": "rgrove", "commitsCount": 5}, {"username": "dmarcotte", "commitsCount": 4}, {"username": "ericbn", "commitsCount": 4}, {"username": "kabirbaidhya", "commitsCount": 4}, {"username": "machty", "commitsCount": 4}, {"username": "SlexAxton", "commitsCount": 3}, {"username": "blessenm", "commitsCount": 3}, {"username": "denniskuczynski", "commitsCount": 3}, {"username": "jjclark1982", "commitsCount": 3}, {"username": "jwietelmann", "commitsCount": 3}, {"username": "kiall", "commitsCount": 3}, {"username": "liqiang372", "commitsCount": 3}, {"username": "marcioj", "commitsCount": 3}, {"username": "paulfalgout", "commitsCount": 3}, {"username": "ryanmurakami", "commitsCount": 3}, {"username": "travnels", "commitsCount": 3}, {"username": "tricknotes", "commitsCount": 3}, {"username": "zaach", "commitsCount": 3}, {"username": "DevinClark", "commitsCount": 2}, {"username": "JamesMaroney", "commitsCount": 2}, {"username": "MikeMayer", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "adjohnson916", "commitsCount": 2}, {"username": "aymerick", "commitsCount": 2}, {"username": "banks", "commitsCount": 2}, {"username": "bkaull", "commitsCount": 2}, {"username": "broady", "commitsCount": 2}, {"username": "charleso", "commitsCount": 2}, {"username": "fivetanley", "commitsCount": 2}, {"username": "gennadiylitvinyuk", "commitsCount": 2}, {"username": "gleitz", "commitsCount": 2}, {"username": "jblotus", "commitsCount": 2}, {"username": "jenseng", "commitsCount": 2}, {"username": "jezell", "commitsCount": 2}, {"username": "johneke", "commitsCount": 2}, {"username": "joonas-lahtinen", "commitsCount": 2}, {"username": "jpfiset", "commitsCount": 2}, {"username": "leo", "commitsCount": 2}, {"username": "max-b", "commitsCount": 2}, {"username": "nikolas", "commitsCount": 2}, {"username": "ogennadi", "commitsCount": 2}, {"username": "ole-martin", "commitsCount": 2}, {"username": "phil-davis", "commitsCount": 2}, {"username": "roydukkey", "commitsCount": 2}, {"username": "rsim", "commitsCount": 2}, {"username": "schuyler1d", "commitsCount": 2}, {"username": "shinypb", "commitsCount": 2}, {"username": "spikebrehm", "commitsCount": 2}, {"username": "stabbylambda", "commitsCount": 2}, {"username": "timwangdev", "commitsCount": 2}, {"username": "zimmi88", "commitsCount": 2}, {"username": "0xack13", "commitsCount": 1}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "ErisDS", "commitsCount": 1}, {"username": "LukasDrgon", "commitsCount": 1}, {"username": "Maikuolan", "commitsCount": 1}, {"username": "MajorBreakfast", "commitsCount": 1}, {"username": "Mindar", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aaharu", "commitsCount": 1}, {"username": "antelle", "commitsCount": 1}, {"username": "aqnouch", "commitsCount": 1}, {"username": "atomictag", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "chancancode", "commitsCount": 1}, {"username": "diwo", "commitsCount": 1}, {"username": "grassick", "commitsCount": 1}, {"username": "hashchange", "commitsCount": 1}, {"username": "i-like-robots", "commitsCount": 1}, {"username": "jbboehr", "commitsCount": 1}, {"username": "jbmusso", "commitsCount": 1}, {"username": "kapooostin", "commitsCount": 1}, {"username": "king6cong", "commitsCount": 1}, {"username": "manishsaraan", "commitsCount": 1}, {"username": "oneeman", "commitsCount": 1}, {"username": "ouijan", "commitsCount": 1}, {"username": "papasmile", "commitsCount": 1}, {"username": "pismute", "commitsCount": 1}, {"username": "plynchnlm", "commitsCount": 1}, {"username": "radium-v", "commitsCount": 1}, {"username": "robinhouston", "commitsCount": 1}, {"username": "rwjblue", "commitsCount": 1}, {"username": "shannonmoeller", "commitsCount": 1}, {"username": "sharang-d", "commitsCount": 1}, {"username": "sohibegit", "commitsCount": 1}, {"username": "timdeschryver", "commitsCount": 1}, {"username": "tomxtobin", "commitsCount": 1}, {"username": "victorwpbastos", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 42}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 123}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 151}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 419573, "hasChangelog": true}, "linters": ["eslint", "prettier"], "outdatedDependencies": {"source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.85, "health": 0.75, "branding": 0.4}, "popularity": {"communityInterest": 17815, "downloadsCount": 35380519, "downloadsAcceleration": 48836.41466894973, "dependentsCount": 6556}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.07260854809525896}}, "score": {"final": 0.8274195065928631, "detail": {"quality": 0.9140505128987266, "popularity": 0.8419723175267612, "maintenance": 0.7386115473967965}}}
{"analyzedAt": "2020-02-23T14:32:17.453Z", "collected": {"metadata": {"name": "@hapi/address", "scope": "hapi", "version": "4.0.0", "description": "Email address and domain validation", "keywords": ["email", "domain", "address", "validation"], "date": "2020-01-04T08:47:23.244Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/address.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Faddress", "homepage": "https://github.com/hapijs/address#readme", "repository": "https://github.com/hapijs/address", "bugs": "https://github.com/hapijs/address/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/hoek": "^9.0.0"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 11}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 13}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/address\n\n#### Validate email address and domain.\n\n**address** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \ufffd they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/address/)\n- [Versions status](https://hapi.dev/resources/status/#address)\n- [Changelog](https://hapi.dev/family/address/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 152253}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3144834}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 12565654}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 32434798}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 58246435}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 72451337}], "dependentsCount": 5, "starsCount": 0}, "github": {"starsCount": 9, "forksCount": 6, "subscribersCount": 7, "issues": {"count": 25, "openCount": 1, "distribution": {"3600": 11, "10800": 2, "32400": 5, "97200": 1, "291600": 1, "874800": 2, "2624400": 1, "7873200": 1, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 39}, {"username": "nkint", "commitsCount": 3}, {"username": "kanongil", "commitsCount": 2}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 31}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 45}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 979, "testsSize": 90325}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 25, "downloadsCount": 10811599.333333334, "downloadsAcceleration": 86363.20287290716, "dependentsCount": 5}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7487523594959582, "detail": {"quality": 0.852684015517583, "popularity": 0.40843359442441424, "maintenance": 0.9999868479775382}}}
{"analyzedAt": "2020-02-23T03:22:35.503Z", "collected": {"metadata": {"name": "@hapi/boom", "scope": "hapi", "version": "9.0.0", "description": "HTTP-friendly error objects", "keywords": ["error", "http"], "date": "2020-01-04T00:06:29.645Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/boom.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fboom", "homepage": "https://github.com/hapijs/boom#readme", "repository": "https://github.com/hapijs/boom", "bugs": "https://github.com/hapijs/boom/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/hoek": "9.x.x"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 12}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 17}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 17}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/boom\n\n#### HTTP-friendly error objects.\n\n**boom** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/boom/)\n- [Version status](https://hapi.dev/resources/status/#boom) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/boom/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 31283}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 591699}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2436306}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 6108921}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 9493138}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 10551803}], "dependentsCount": 251, "starsCount": 0}, "github": {"starsCount": 2706, "forksCount": 187, "subscribersCount": 46, "issues": {"count": 265, "openCount": 1, "distribution": {"3600": 76, "10800": 22, "32400": 33, "97200": 37, "291600": 20, "874800": 27, "2624400": 21, "7873200": 16, "23619600": 12, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 129}, {"username": "arb", "commitsCount": 45}, {"username": "geek", "commitsCount": 8}, {"username": "jarrodyellets", "commitsCount": 4}, {"username": "kpdecker", "commitsCount": 4}, {"username": "manonthemat", "commitsCount": 4}, {"username": "bbrown", "commitsCount": 3}, {"username": "lloydbenson", "commitsCount": 3}, {"username": "toymachiner62", "commitsCount": 3}, {"username": "Marsup", "commitsCount": 2}, {"username": "cjihrig", "commitsCount": 2}, {"username": "jeffbski", "commitsCount": 2}, {"username": "lukasolson", "commitsCount": 2}, {"username": "mastermatt", "commitsCount": 2}, {"username": "mcandre", "commitsCount": 2}, {"username": "mtharrison", "commitsCount": 2}, {"username": "vbardales", "commitsCount": 2}, {"username": "AdriVanHoudt", "commitsCount": 1}, {"username": "DanielBarnes", "commitsCount": 1}, {"username": "Fcmam5", "commitsCount": 1}, {"username": "Nargonath", "commitsCount": 1}, {"username": "TimonVS", "commitsCount": 1}, {"username": "VirgileD", "commitsCount": 1}, {"username": "alanshaw", "commitsCount": 1}, {"username": "blackdynamo", "commitsCount": 1}, {"username": "danielmachado", "commitsCount": 1}, {"username": "dunnock", "commitsCount": 1}, {"username": "gswalden", "commitsCount": 1}, {"username": "iamplugged", "commitsCount": 1}, {"username": "joeybaker", "commitsCount": 1}, {"username": "kanongil", "commitsCount": 1}, {"username": "mymattcarroll", "commitsCount": 1}, {"username": "niftylettuce", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "pon", "commitsCount": 1}, {"username": "savardc", "commitsCount": 1}, {"username": "simon-p-r", "commitsCount": 1}, {"username": "thebergamo", "commitsCount": 1}, {"username": "thibautRe", "commitsCount": 1}, {"username": "tribou", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 6}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 37}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 51}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1012, "testsSize": 47938}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 2979, "downloadsCount": 2036307, "downloadsAcceleration": 19032.93923135464, "dependentsCount": 251}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9755342555439843}}, "score": {"final": 0.7835358631188138, "detail": {"quality": 0.852684015517583, "popularity": 0.5078156713342005, "maintenance": 0.9999862099901968}}}
{"analyzedAt": "2020-02-23T15:28:07.744Z", "collected": {"metadata": {"name": "@hapi/bossy", "scope": "hapi", "version": "5.0.0", "description": "Command line options parser", "keywords": ["cli", "command line", "options", "parser"], "date": "2020-01-04T09:20:02.491Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/bossy.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fbossy", "homepage": "https://github.com/hapijs/bossy#readme", "repository": "https://github.com/hapijs/bossy", "bugs": "https://github.com/hapijs/bossy/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/boom": "9.x.x", "@hapi/hoek": "9.x.x", "@hapi/joi": "17.x.x"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/bossy\n\n#### Command line options parser.\n\n**bossy** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/bossy/)\n- [Version status](https://hapi.dev/resources/status/#bossy) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/bossy/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1533}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 20038}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 70408}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 186340}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 313504}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 416364}], "dependentsCount": 11, "starsCount": 0}, "github": {"starsCount": 44, "forksCount": 26, "subscribersCount": 21, "issues": {"count": 70, "openCount": 0, "distribution": {"3600": 29, "10800": 5, "32400": 9, "97200": 10, "291600": 7, "874800": 5, "2624400": 1, "7873200": 2, "23619600": 0, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 34}, {"username": "geek", "commitsCount": 24}, {"username": "sericaia", "commitsCount": 15}, {"username": "arb", "commitsCount": 6}, {"username": "hofan41", "commitsCount": 4}, {"username": "danielb2", "commitsCount": 3}, {"username": "cjihrig", "commitsCount": 2}, {"username": "jarrodyellets", "commitsCount": 2}, {"username": "kanongil", "commitsCount": 2}, {"username": "nwhitmont", "commitsCount": 2}, {"username": "Nargonath", "commitsCount": 1}, {"username": "fampinheiro", "commitsCount": 1}, {"username": "jaw187", "commitsCount": 1}, {"username": "smikes", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 9}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 22}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1017, "testsSize": 18355}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 105, "downloadsCount": 62113.333333333336, "downloadsAcceleration": 451.79391171993916, "dependentsCount": 11}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.6722703796175188, "detail": {"quality": 0.852684015517583, "popularity": 0.1900108372368473, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-24T00:07:21.603Z", "collected": {"metadata": {"name": "@hapi/bounce", "scope": "hapi", "version": "2.0.0", "description": "Selective error catching and rewrite rules", "keywords": ["error", "catch"], "date": "2020-01-04T22:29:03.109Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/bounce.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fbounce", "homepage": "https://github.com/hapijs/bounce#readme", "repository": "https://github.com/hapijs/bounce", "bugs": "https://github.com/hapijs/bounce/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/boom": "9.x.x", "@hapi/hoek": "9.x.x"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 6}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/bounce\n\n#### Selective error catching and rewrite rules.\n\n**bounce** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/bounce/)\n- [Versions status](https://hapi.dev/resources/status/#bounce) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/bounce/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 235254}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 932007}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2322160}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3976838}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 4773500}], "dependentsCount": 24, "starsCount": 0}, "github": {"starsCount": 174, "forksCount": 17, "subscribersCount": 9, "issues": {"count": 23, "openCount": 0, "distribution": {"3600": 12, "10800": 2, "32400": 1, "97200": 4, "291600": 2, "874800": 1, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 37}, {"username": "jarrodyellets", "commitsCount": 3}, {"username": "BraedenNorris", "commitsCount": 2}, {"username": "Nargonath", "commitsCount": 2}, {"username": "hugomd", "commitsCount": 1}, {"username": "kanongil", "commitsCount": 1}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 4}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 10}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 19}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1038, "testsSize": 13362}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 206, "downloadsCount": 774053.3333333334, "downloadsAcceleration": 6751.0700152207, "dependentsCount": 24}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7158026929978938, "detail": {"quality": 0.852684015517583, "popularity": 0.3143396978663242, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-23T02:34:31.249Z", "collected": {"metadata": {"name": "@hapi/code", "scope": "hapi", "version": "8.0.1", "description": "assertion library", "keywords": ["test", "expect", "assertion"], "date": "2020-01-03T23:26:36.071Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/code.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fcode", "homepage": "https://github.com/hapijs/code#readme", "repository": "https://github.com/hapijs/code", "bugs": "https://github.com/hapijs/code/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/hoek": "9.x.x"}, "devDependencies": {"@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/code\n\n#### BDD assertion library.\n\n**code** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/code/)\n- [Versions status](https://hapi.dev/resources/status/#code) (builds, dependencies, node versions, licenses, eol)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1237}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 16156}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 56979}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 138800}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 224111}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 323393}], "dependentsCount": 6, "starsCount": 0}, "github": {"starsCount": 225, "forksCount": 75, "subscribersCount": 30, "issues": {"count": 156, "openCount": 0, "distribution": {"3600": 69, "10800": 15, "32400": 12, "97200": 17, "291600": 10, "874800": 17, "2624400": 9, "7873200": 6, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 56}, {"username": "cjihrig", "commitsCount": 52}, {"username": "AdrieanKhisbe", "commitsCount": 6}, {"username": "manonthemat", "commitsCount": 6}, {"username": "jarrodyellets", "commitsCount": 5}, {"username": "arb", "commitsCount": 3}, {"username": "BraedenNorris", "commitsCount": 2}, {"username": "Marsup", "commitsCount": 2}, {"username": "blacksun1", "commitsCount": 2}, {"username": "iamdoron", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 2}, {"username": "AdriVanHoudt", "commitsCount": 1}, {"username": "GaneshSPatil", "commitsCount": 1}, {"username": "Nargonath", "commitsCount": 1}, {"username": "WesTyler", "commitsCount": 1}, {"username": "ferrao", "commitsCount": 1}, {"username": "jhakonen", "commitsCount": 1}, {"username": "joaojeronimo", "commitsCount": 1}, {"username": "jseppi", "commitsCount": 1}, {"username": "krisb", "commitsCount": 1}, {"username": "nickmeessen", "commitsCount": 1}, {"username": "sans-nom", "commitsCount": 1}, {"username": "scottty881", "commitsCount": 1}, {"username": "sibartlett", "commitsCount": 1}, {"username": "zedd45", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 18}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 30}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 952, "testsSize": 78521, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 355, "downloadsCount": 46266.666666666664, "downloadsAcceleration": 343.0861681887367, "dependentsCount": 6}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6800276758528707, "detail": {"quality": 0.8632504061373163, "popularity": 0.20306845692077252, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-01-31T13:19:58.872Z", "collected": {"metadata": {"name": "@hapi/eslint-config-hapi", "scope": "hapi", "version": "13.0.2", "description": "Shareable ESLint config for the hapi ecosystem", "keywords": ["hapi", "lint", "eslint", "eslintconfig"], "date": "2020-01-05T01:10:49.118Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/eslint-config-hapi.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Feslint-config-hapi", "homepage": "https://github.com/hapijs/eslint-config-hapi#readme", "repository": "https://github.com/hapijs/eslint-config-hapi", "bugs": "https://github.com/hapijs/eslint-config-hapi/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "8.x.x", "@hapi/eslint-plugin-hapi": "4.x.x", "@hapi/lab": "22.x.x", "eslint": "6.x.x"}, "peerDependencies": {"@hapi/eslint-plugin-hapi": "4.x.x"}, "releases": [{"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 4}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 7}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 9}, {"from": "2018-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/eslint-config-hapi\n\n[![Build Status](https://travis-ci.org/hapijs/eslint-config-hapi.svg?branch=master)](https://travis-ci.org/hapijs/eslint-config-hapi)\n\nShareable ESLint config for the hapi ecosystem. To use in your project, add `@hapi/eslint-config-hapi` and [`@hapi/eslint-plugin-hapi`](https://github.com/hapijs/eslint-plugin-hapi) to your `package.json`, then in your ESLint configuration add:\n\n```\n{\n  \"extends\": \"@hapi/eslint-config-hapi\"\n}\n```\n\n**Note:** `@hapi/eslint-plugin-hapi` is a plugin containing custom hapi linting rules. It is a peer dependency because of the way ESLint handles shareable configs that include plugins and custom rules (see [eslint/eslint#3458](https://github.com/eslint/eslint/issues/3458) and [eslint/eslint#2518](https://github.com/eslint/eslint/issues/2518) for more background)."}, "npm": {"downloads": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2586}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 14596}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 64875}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 161493}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 274749}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 335704}], "dependentsCount": 2, "starsCount": 0}, "github": {"starsCount": 20, "forksCount": 18, "subscribersCount": 9, "issues": {"count": 71, "openCount": 1, "distribution": {"3600": 16, "10800": 6, "32400": 3, "97200": 18, "291600": 14, "874800": 5, "2624400": 2, "7873200": 4, "23619600": 1, "70858800": 0, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "cjihrig", "commitsCount": 59}, {"username": "hueniverse", "commitsCount": 22}, {"username": "AdriVanHoudt", "commitsCount": 1}, {"username": "DiegoRBaquero", "commitsCount": 1}, {"username": "aorinevo", "commitsCount": 1}, {"username": "devinstewart", "commitsCount": 1}, {"username": "iantocristian", "commitsCount": 1}, {"username": "kanongil", "commitsCount": 1}, {"username": "lerouxb", "commitsCount": 1}, {"username": "nlf", "commitsCount": 1}, {"username": "prashaantt", "commitsCount": 1}, {"username": "sfabriece", "commitsCount": 1}, {"username": "spruce-bruce", "commitsCount": 1}], "commits": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 14}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 22}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 27}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 976, "testsSize": 31010}, "badges": [{"urls": {"original": "https://travis-ci.org/hapijs/eslint-config-hapi.svg?branch=master", "service": "https://api.travis-ci.org/hapijs/eslint-config-hapi.svg?branch=master", "shields": "https://img.shields.io/travis/hapijs/eslint-config-hapi/master.svg", "content": "https://img.shields.io/travis/hapijs/eslint-config-hapi/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 60, "downloadsCount": 53831, "downloadsAcceleration": 462.35234018264845, "dependentsCount": 2}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.6923526782262339, "detail": {"quality": 0.9547045235275585, "popularity": 0.1598946758168174, "maintenance": 0.9999376703773724}}}
{"analyzedAt": "2020-02-24T16:52:49.706Z", "collected": {"metadata": {"name": "@hapi/eslint-plugin-hapi", "scope": "hapi", "version": "4.3.5", "description": "ESLint plugin containing hapi style guide rules", "keywords": ["lint", "eslint", "eslintplugin", "hapi"], "date": "2020-01-05T01:14:42.236Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/rule-eslint-plugin-hapi.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Feslint-plugin-hapi"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/rule-capitalize-modules": "1.x.x", "@hapi/rule-for-loop": "1.x.x", "@hapi/rule-no-arrowception": "1.x.x", "@hapi/rule-no-var": "1.x.x", "@hapi/rule-scope-start": "2.x.x"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 8}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/eslint-plugin-hapi\n\nESLint plugin containing hapi style guide rules. This plugin includes the following ESLint rules:\n\n- [`@hapi/rule-capitalize-modules`](https://www.npmjs.com/package/@hapi/rule-capitalize-modules) - Enforces capitalization of imported module variables.\n- [`@hapi/rule-for-loop`](https://www.npmjs.com/package/@hapi/rule-for-loop) - Enforces `for` loop iterator variable rules and restricts loop nesting depth.\n- [`@hapi/rule-scope-start`](https://www.npmjs.com/package/@hapi/rule-scope-start) - Enforces a new line at the beginning of function scope.\n- [`@hapi/rule-no-arrowception`](https://www.npmjs.com/package/@hapi/rule-no-arrowception) - Prevents arrow functions that implicitly create additional arrow functions.\n- [`@hapi/rule-no-var`](https://www.npmjs.com/package/@hapi/rule-no-var) - Enforces the usage of var declarations only in try-catch scope."}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 899}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 20039}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 70674}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 189314}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 308121}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 399518}], "dependentsCount": 2, "starsCount": 0}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 63104.666666666664, "downloadsAcceleration": 469.6109018264841, "dependentsCount": 2}, "maintenance": {"releasesFrequency": 0.7215753424657535, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.21481395307803733, "detail": {"quality": 0.1989586997567263, "popularity": 0.11132494609228763, "maintenance": 0.3318931771963394}}}
{"analyzedAt": "2020-02-23T14:45:12.572Z", "collected": {"metadata": {"name": "@hapi/formula", "scope": "hapi", "version": "3.0.0", "description": "Math and string formula parser.", "keywords": ["formula", "parser", "math", "string"], "date": "2020-01-04T08:53:48.700Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/formula.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fformula", "homepage": "https://github.com/hapijs/formula#readme", "repository": "https://github.com/hapijs/formula", "bugs": "https://github.com/hapijs/formula/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/formula\n\n#### Math and string formula parser.\n\n**formula** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/formula/)\n- [Version status](https://hapi.dev/resources/status/#formula) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/formula/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)\n\n## Acknowledgements\n\nInspired by [**fparse**](https://github.com/bylexus/fparse), copyright 2012-2018 Alexander Schenkel <alex@alexi.ch>"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 33959}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 717991}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2695435}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5595752}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7473837}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7476414}], "dependentsCount": 2, "starsCount": 0}, "github": {"starsCount": 2, "forksCount": 1, "subscribersCount": 7, "issues": {"count": 10, "openCount": 0, "distribution": {"3600": 4, "10800": 0, "32400": 1, "97200": 4, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 14}, {"username": "BraedenNorris", "commitsCount": 2}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 16}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1168, "testsSize": 29118}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 12, "downloadsCount": 1865250.6666666667, "downloadsAcceleration": 22600.62448630137, "dependentsCount": 2}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7082009875774085, "detail": {"quality": 0.852684015517583, "popularity": 0.29262053952208067, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-05T04:18:56.829Z", "collected": {"metadata": {"name": "@hapi/hoek", "scope": "hapi", "version": "9.0.3", "description": "General purpose node utilities", "keywords": ["utilities"], "date": "2020-02-08T06:37:39.724Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/hoek.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fhoek", "homepage": "https://github.com/hapijs/hoek#readme", "repository": "https://github.com/hapijs/hoek", "bugs": "https://github.com/hapijs/hoek/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 6}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 14}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 31}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 31}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 757019}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 4053233}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 16938302}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 40256773}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 77144881}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 104884203}], "dependentsCount": 190, "starsCount": 0}, "github": {"starsCount": 454, "forksCount": 154, "subscribersCount": 51, "issues": {"count": 354, "openCount": 1, "distribution": {"3600": 138, "10800": 34, "32400": 23, "97200": 36, "291600": 23, "874800": 20, "2624400": 27, "7873200": 26, "23619600": 21, "70858800": 5, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 224}, {"username": "nlf", "commitsCount": 57}, {"username": "thesillyhippo", "commitsCount": 38}, {"username": "kanongil", "commitsCount": 34}, {"username": "geek", "commitsCount": 28}, {"username": "arb", "commitsCount": 17}, {"username": "thegoleffect", "commitsCount": 16}, {"username": "dorktobes", "commitsCount": 11}, {"username": "danielb2", "commitsCount": 9}, {"username": "Marsup", "commitsCount": 8}, {"username": "g-k", "commitsCount": 6}, {"username": "samliebow", "commitsCount": 5}, {"username": "jory", "commitsCount": 4}, {"username": "adityabakle", "commitsCount": 3}, {"username": "cjihrig", "commitsCount": 3}, {"username": "iamdoron", "commitsCount": 3}, {"username": "lenovouser", "commitsCount": 3}, {"username": "simon-p-r", "commitsCount": 3}, {"username": "AdriVanHoudt", "commitsCount": 2}, {"username": "Nargonath", "commitsCount": 2}, {"username": "blacksun1", "commitsCount": 2}, {"username": "catalint", "commitsCount": 2}, {"username": "jarrodyellets", "commitsCount": 2}, {"username": "marcuspoehls", "commitsCount": 2}, {"username": "mcandre", "commitsCount": 2}, {"username": "nathanpower", "commitsCount": 2}, {"username": "nwhitmont", "commitsCount": 2}, {"username": "timcosta", "commitsCount": 2}, {"username": "tuckbick", "commitsCount": 2}, {"username": "DanielBarnes", "commitsCount": 1}, {"username": "Josiah", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "harriha", "commitsCount": 1}, {"username": "hugowetterberg", "commitsCount": 1}, {"username": "jaw187", "commitsCount": 1}, {"username": "kiavashp", "commitsCount": 1}, {"username": "lloydbenson", "commitsCount": 1}, {"username": "malixsys", "commitsCount": 1}, {"username": "mattc41190", "commitsCount": 1}, {"username": "paulovieira", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "poeticninja", "commitsCount": 1}, {"username": "timoweiss", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 11}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 37}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 101}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 100229}}}, "evaluation": {"quality": {"carefulness": 0.41000000000000003, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 702, "downloadsCount": 13418924.333333334, "downloadsAcceleration": 104621.1943112633, "dependentsCount": 190}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.871763698630137, "openIssues": 1, "issuesDistribution": 0.8734031236242571}}, "score": {"final": 0.7754739249501105, "detail": {"quality": 0.7658597582505458, "popularity": 0.5593217782178834, "maintenance": 0.9998667859962502}}}
{"analyzedAt": "2020-02-14T17:21:52.134Z", "collected": {"metadata": {"name": "@hapi/joi", "scope": "hapi", "version": "17.1.0", "description": "Object schema validation", "keywords": ["schema", "validation"], "date": "2020-01-20T00:02:31.834Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}, {"username": "marsup", "email": "nicolas@morel.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/joi.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fjoi", "homepage": "https://github.com/hapijs/joi#readme", "repository": "https://github.com/hapijs/joi", "bugs": "https://github.com/hapijs/joi/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/address": "^4.0.0", "@hapi/formula": "^2.0.0", "@hapi/hoek": "^9.0.0", "@hapi/pinpoint": "^2.0.0", "@hapi/topo": "^5.0.0"}, "devDependencies": {"@hapi/bourne": "2.x.x", "@hapi/code": "8.x.x", "@hapi/lab": "22.x.x", "@hapi/joi-legacy-test": "npm:@hapi/joi@15.x.x"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 6}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 16}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 30}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 30}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/joi\n\n#### The most powerful schema description language and data validator for JavaScript.\n\n**joi** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/joi/)\n- [Versions status](https://hapi.dev/resources/status/#joi)\n- [Changelog](https://hapi.dev/family/joi/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 646137}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3397156}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 13687015}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 33921814}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 60612732}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 74143507}], "dependentsCount": 751, "starsCount": 2}, "github": {"starsCount": 14193, "forksCount": 1191, "subscribersCount": 193, "issues": {"count": 2299, "openCount": 8, "distribution": {"3600": 576, "10800": 236, "32400": 247, "97200": 242, "291600": 168, "874800": 195, "2624400": 215, "7873200": 180, "23619600": 138, "70858800": 82, "212576400": 20}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 653}, {"username": "Marsup", "commitsCount": 512}, {"username": "geek", "commitsCount": 71}, {"username": "thegoleffect", "commitsCount": 42}, {"username": "WesTyler", "commitsCount": 31}, {"username": "danielb2", "commitsCount": 16}, {"username": "kanongil", "commitsCount": 14}, {"username": "BolajiOlajide", "commitsCount": 9}, {"username": "DavidTPate", "commitsCount": 9}, {"username": "fluxsauce", "commitsCount": 8}, {"username": "ArtemySinitsa", "commitsCount": 7}, {"username": "cl-joshcole", "commitsCount": 7}, {"username": "nlf", "commitsCount": 7}, {"username": "arb", "commitsCount": 6}, {"username": "danielo515", "commitsCount": 6}, {"username": "jaswilli", "commitsCount": 6}, {"username": "LudwikJaniuk", "commitsCount": 5}, {"username": "Shudrum", "commitsCount": 5}, {"username": "iamdoron", "commitsCount": 5}, {"username": "rokoroku", "commitsCount": 5}, {"username": "yjh0502", "commitsCount": 5}, {"username": "DanielBarnes", "commitsCount": 4}, {"username": "EvgenyOrekhov", "commitsCount": 4}, {"username": "briansorahan", "commitsCount": 4}, {"username": "jarrodyellets", "commitsCount": 4}, {"username": "johnbrett", "commitsCount": 4}, {"username": "paulillo", "commitsCount": 4}, {"username": "petreboy14", "commitsCount": 4}, {"username": "AdriVanHoudt", "commitsCount": 3}, {"username": "AdrieanKhisbe", "commitsCount": 3}, {"username": "chris--young", "commitsCount": 3}, {"username": "dwelle", "commitsCount": 3}, {"username": "fampinheiro", "commitsCount": 3}, {"username": "jagoda", "commitsCount": 3}, {"username": "kamronbatman", "commitsCount": 3}, {"username": "luciferankon", "commitsCount": 3}, {"username": "martinheidegger", "commitsCount": 3}, {"username": "mgartner", "commitsCount": 3}, {"username": "rgoble4", "commitsCount": 3}, {"username": "zebateira", "commitsCount": 3}, {"username": "DavidOrchard", "commitsCount": 2}, {"username": "EndangeredMassa", "commitsCount": 2}, {"username": "Josiah", "commitsCount": 2}, {"username": "KyleAMathews", "commitsCount": 2}, {"username": "MathieuLoutre", "commitsCount": 2}, {"username": "ThomasR", "commitsCount": 2}, {"username": "aymericbeaumet", "commitsCount": 2}, {"username": "dignifiedquire", "commitsCount": 2}, {"username": "dolphinlin", "commitsCount": 2}, {"username": "gaastonsr", "commitsCount": 2}, {"username": "galenandrew", "commitsCount": 2}, {"username": "gdw2", "commitsCount": 2}, {"username": "kgraves", "commitsCount": 2}, {"username": "kosmikko", "commitsCount": 2}, {"username": "leesei", "commitsCount": 2}, {"username": "legraphista", "commitsCount": 2}, {"username": "lkptrzk", "commitsCount": 2}, {"username": "lloydbenson", "commitsCount": 2}, {"username": "nlindley", "commitsCount": 2}, {"username": "noinkling", "commitsCount": 2}, {"username": "nwhitmont", "commitsCount": 2}, {"username": "phated", "commitsCount": 2}, {"username": "spiralni", "commitsCount": 2}, {"username": "strathmeyer", "commitsCount": 2}, {"username": "timcosta", "commitsCount": 2}, {"username": "tnunes", "commitsCount": 2}, {"username": "tschwecke", "commitsCount": 2}, {"username": "Bjorn248", "commitsCount": 1}, {"username": "JamesMGreene", "commitsCount": 1}, {"username": "JasonEtco", "commitsCount": 1}, {"username": "aaronjameslang", "commitsCount": 1}, {"username": "adamreisnz", "commitsCount": 1}, {"username": "codenaz", "commitsCount": 1}, {"username": "diessica", "commitsCount": 1}, {"username": "dnalborczyk", "commitsCount": 1}, {"username": "eliottvincent", "commitsCount": 1}, {"username": "erquhart", "commitsCount": 1}, {"username": "everhardt", "commitsCount": 1}, {"username": "ffflorian", "commitsCount": 1}, {"username": "heylookalive", "commitsCount": 1}, {"username": "johannesschobel", "commitsCount": 1}, {"username": "jorinvo", "commitsCount": 1}, {"username": "justsml", "commitsCount": 1}, {"username": "leonaves", "commitsCount": 1}, {"username": "lerouxb", "commitsCount": 1}, {"username": "mattboutet", "commitsCount": 1}, {"username": "moonthug", "commitsCount": 1}, {"username": "necojackarc", "commitsCount": 1}, {"username": "paulovieira", "commitsCount": 1}, {"username": "paxa1887", "commitsCount": 1}, {"username": "radicand", "commitsCount": 1}, {"username": "raghavmac", "commitsCount": 1}, {"username": "rluba", "commitsCount": 1}, {"username": "rocketspacer", "commitsCount": 1}, {"username": "rouanw", "commitsCount": 1}, {"username": "stevecaldwell77", "commitsCount": 1}, {"username": "thebinarypenguin", "commitsCount": 1}, {"username": "tjdavey", "commitsCount": 1}, {"username": "yujunlong2000", "commitsCount": 1}, {"username": "yuxizhe", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 4}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 34}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 179}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 492}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1007, "testsSize": 1294440}, "outdatedDependencies": {"@hapi/formula": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 15679, "downloadsCount": 11307271.333333334, "downloadsAcceleration": 96676.36038812785, "dependentsCount": 751}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8539658977652191, "detail": {"quality": 0.8431893048408092, "popularity": 0.7172180527800986, "maintenance": 0.9999508223998339}}}
{"analyzedAt": "2020-02-23T15:46:34.833Z", "collected": {"metadata": {"name": "@hapi/lab", "scope": "hapi", "version": "22.0.3", "description": "Test utility", "keywords": ["test", "runner"], "date": "2020-01-04T09:24:33.371Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}, {"username": "wyatt", "email": "wpreul@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/hapijs/lab.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Flab", "homepage": "https://github.com/hapijs/lab#readme", "repository": "https://github.com/hapijs/lab", "bugs": "https://github.com/hapijs/lab/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/bossy": "5.x.x", "@hapi/eslint-config-hapi": "13.x.x", "@hapi/eslint-plugin-hapi": "4.x.x", "@hapi/hoek": "9.x.x", "babel-eslint": "10.x.x", "diff": "4.x.x", "eslint": "6.x.x", "find-rc": "4.x.x", "globby": "10.x.x", "handlebars": "4.x.x", "mkdirp": "0.5.x", "seedrandom": "3.x.x", "source-map": "0.7.x", "source-map-support": "0.5.x", "supports-color": "7.x.x", "typescript": "3.6.x", "will-call": "1.x.x"}, "devDependencies": {"@hapi/lab-external-module-test": "1.x.x", "@hapi/code": "8.x.x", "cpr": "3.x.x", "lab-event-reporter": "1.x.x", "rimraf": "2.x.x", "semver": "6.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 11}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 22}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 22}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\r\n\r\n# @hapi/lab\r\n\r\n#### Node test utility.\r\n\r\n**lab** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\r\n\r\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\r\n\r\n## Useful resources\r\n\r\n- [Documentation and API](https://hapi.dev/family/lab/)\r\n- [Version status](https://hapi.dev/resources/status/#lab) (builds, dependencies, node versions, licenses, eol)\r\n- [Changelog](https://hapi.dev/family/lab/changelog/)\r\n- [Project policies](https://hapi.dev/policies/)\r\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1310}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 17480}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 63455}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 173621}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 289237}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 379739}], "dependentsCount": 6, "starsCount": 0}, "github": {"starsCount": 723, "forksCount": 173, "subscribersCount": 45, "issues": {"count": 969, "openCount": 1, "distribution": {"3600": 304, "10800": 58, "32400": 71, "97200": 122, "291600": 95, "874800": 91, "2624400": 72, "7873200": 47, "23619600": 35, "70858800": 58, "212576400": 16}, "isDisabled": false}, "contributors": [{"username": "geek", "commitsCount": 426}, {"username": "hueniverse", "commitsCount": 248}, {"username": "rluba", "commitsCount": 53}, {"username": "Marsup", "commitsCount": 44}, {"username": "cjihrig", "commitsCount": 21}, {"username": "ldesplat", "commitsCount": 16}, {"username": "arb", "commitsCount": 14}, {"username": "krisb", "commitsCount": 12}, {"username": "Invader444", "commitsCount": 11}, {"username": "feugy", "commitsCount": 10}, {"username": "AdriVanHoudt", "commitsCount": 8}, {"username": "nlf", "commitsCount": 8}, {"username": "zenlor", "commitsCount": 8}, {"username": "joshball", "commitsCount": 7}, {"username": "hofan41", "commitsCount": 6}, {"username": "thephilip", "commitsCount": 6}, {"username": "HCanber", "commitsCount": 5}, {"username": "jedireza", "commitsCount": 5}, {"username": "jtlapp", "commitsCount": 4}, {"username": "mcandre", "commitsCount": 4}, {"username": "mkantor", "commitsCount": 4}, {"username": "dominykas", "commitsCount": 3}, {"username": "dylansmith", "commitsCount": 3}, {"username": "johanneszorn", "commitsCount": 3}, {"username": "kanongil", "commitsCount": 3}, {"username": "mateuspv", "commitsCount": 3}, {"username": "mpareja", "commitsCount": 3}, {"username": "mrlannigan", "commitsCount": 3}, {"username": "nvcexploder", "commitsCount": 3}, {"username": "skeggse", "commitsCount": 3}, {"username": "AidenMontgomery", "commitsCount": 2}, {"username": "BraedenNorris", "commitsCount": 2}, {"username": "DanReyLop", "commitsCount": 2}, {"username": "adityabakle", "commitsCount": 2}, {"username": "blacksun1", "commitsCount": 2}, {"username": "corbinu", "commitsCount": 2}, {"username": "danielb2", "commitsCount": 2}, {"username": "devinivy", "commitsCount": 2}, {"username": "ggoodman", "commitsCount": 2}, {"username": "iamdoron", "commitsCount": 2}, {"username": "maxbeatty", "commitsCount": 2}, {"username": "pr-intertad", "commitsCount": 2}, {"username": "rjsamson", "commitsCount": 2}, {"username": "rmehner", "commitsCount": 2}, {"username": "smikes", "commitsCount": 2}, {"username": "swaj", "commitsCount": 2}, {"username": "wzrdtales", "commitsCount": 2}, {"username": "2color", "commitsCount": 1}, {"username": "DiegoRBaquero", "commitsCount": 1}, {"username": "FaHeymann", "commitsCount": 1}, {"username": "GamingCoder", "commitsCount": 1}, {"username": "JulianMayorga", "commitsCount": 1}, {"username": "MarkTiedemann", "commitsCount": 1}, {"username": "Nargonath", "commitsCount": 1}, {"username": "Samueljoli", "commitsCount": 1}, {"username": "TangMonk", "commitsCount": 1}, {"username": "aalimovs", "commitsCount": 1}, {"username": "albertovasquez", "commitsCount": 1}, {"username": "alobodig", "commitsCount": 1}, {"username": "apipkin", "commitsCount": 1}, {"username": "bitcloud", "commitsCount": 1}, {"username": "briandela", "commitsCount": 1}, {"username": "chmanie", "commitsCount": 1}, {"username": "dalmaer", "commitsCount": 1}, {"username": "dwmkerr", "commitsCount": 1}, {"username": "ebgranger", "commitsCount": 1}, {"username": "fhemberger", "commitsCount": 1}, {"username": "fscherwi", "commitsCount": 1}, {"username": "gyaresu", "commitsCount": 1}, {"username": "haikyuu", "commitsCount": 1}, {"username": "idanwe", "commitsCount": 1}, {"username": "jagoda", "commitsCount": 1}, {"username": "jarrodyellets", "commitsCount": 1}, {"username": "jasonpincin", "commitsCount": 1}, {"username": "jcloutz-radix", "commitsCount": 1}, {"username": "jdsingh", "commitsCount": 1}, {"username": "jmonster", "commitsCount": 1}, {"username": "johnbrett", "commitsCount": 1}, {"username": "kgraves", "commitsCount": 1}, {"username": "khaosdoctor", "commitsCount": 1}, {"username": "lloydbenson", "commitsCount": 1}, {"username": "martinheidegger", "commitsCount": 1}, {"username": "mcollina", "commitsCount": 1}, {"username": "mrtnrst", "commitsCount": 1}, {"username": "osukaa", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "pdziok", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "rankida", "commitsCount": 1}, {"username": "schmeedy", "commitsCount": 1}, {"username": "seldo", "commitsCount": 1}, {"username": "sunknudsen", "commitsCount": 1}, {"username": "tielur", "commitsCount": 1}, {"username": "tjmehta", "commitsCount": 1}, {"username": "tribou", "commitsCount": 1}, {"username": "validkeys", "commitsCount": 1}, {"username": "wasbazi", "commitsCount": 1}, {"username": "wprl", "commitsCount": 1}, {"username": "z0mt3c", "commitsCount": 1}, {"username": "zemccartney", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 20}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 42}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 83}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 997, "testsSize": 309773}, "outdatedDependencies": {"mkdirp": {"required": "0.5.x", "stable": "1.0.3", "latest": "1.0.3"}, "globby": {"required": "10.x.x", "stable": "11.0.0", "latest": "11.0.0"}, "typescript": {"required": "3.6.x", "stable": "3.8.2", "latest": "3.9.0-dev.20200222"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 0.6470588235294117, "branding": 0}, "popularity": {"communityInterest": 1041, "downloadsCount": 57873.666666666664, "downloadsAcceleration": 410.3193112633181, "dependentsCount": 6}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.6819595898239877, "detail": {"quality": 0.8259129312887601, "popularity": 0.24059293087222694, "maintenance": 0.9999376703773724}}}
{"analyzedAt": "2020-02-23T14:51:40.614Z", "collected": {"metadata": {"name": "@hapi/pinpoint", "scope": "hapi", "version": "2.0.0", "description": "Return the filename and line number of the calling function", "keywords": ["utilities"], "date": "2020-01-04T08:57:40.592Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/pinpoint.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Fpinpoint", "homepage": "https://github.com/hapijs/pinpoint#readme", "repository": "https://github.com/hapijs/pinpoint", "bugs": "https://github.com/hapijs/pinpoint/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 6}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/pinpoint\n\n#### Return the filename and line number of the calling function.\n\n**pinpoint** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/pinpoint/)\n- [Version status](https://hapi.dev/resources/status/#pinpoint) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/pinpoint/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 33958}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 717419}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2693566}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5592639}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7467754}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7467912}], "dependentsCount": 3, "starsCount": 0}, "github": {"starsCount": 2, "forksCount": 2, "subscribersCount": 6, "issues": {"count": 7, "openCount": 0, "distribution": {"3600": 5, "10800": 0, "32400": 1, "97200": 0, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 18}, {"username": "emrealparslan93", "commitsCount": 1}, {"username": "jarrodyellets", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 10}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 20}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1064, "testsSize": 1102}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 13, "downloadsCount": 1864213, "downloadsAcceleration": 22588.247450532726, "dependentsCount": 3}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7097115018687842, "detail": {"quality": 0.852684015517583, "popularity": 0.29693629464029686, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-11T21:26:32.853Z", "collected": {"metadata": {"name": "@hapi/rule-capitalize-modules", "scope": "hapi", "version": "1.2.1", "description": "ESLint rule to enforce the capitalization of imported module variables", "keywords": ["eslint", "hapi", "eslintrule", "require"], "date": "2019-08-07T20:04:10.791Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/rule-capitalize-modules.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Frule-capitalize-modules", "homepage": "https://github.com/hapijs/rule-capitalize-modules#readme", "repository": "https://github.com/hapijs/rule-capitalize-modules", "bugs": "https://github.com/hapijs/rule-capitalize-modules/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "6.x.x", "@hapi/lab": "20.x.x", "eslint": "6.x.x"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# rule-capitalize-modules\n\n[![Build Status](https://travis-ci.org/hapijs/rule-capitalize-modules.svg?branch=master)](https://travis-ci.org/hapijs/rule-capitalize-modules)\n\nESLint rule to enforce the capitalization of imported module variables.\n\n## Rule options\n\n### `global-scope-only`\n\nIf the string `'global-scope-only'` is passed as the first option to this rule,\nthen it will only be enforced on assignments in the module's top level scope."}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2829}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 15063}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 64233}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 168894}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 284187}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 360418}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 2, "forksCount": 2, "subscribersCount": 8, "issues": {"count": 9, "openCount": 0, "distribution": {"3600": 5, "10800": 0, "32400": 0, "97200": 2, "291600": 2, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "cjihrig", "commitsCount": 16}, {"username": "hueniverse", "commitsCount": 7}, {"username": "jarrodyellets", "commitsCount": 2}, {"username": "emrealparslan93", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 593, "testsSize": 3931, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/hapijs/rule-capitalize-modules.svg?branch=master", "service": "https://api.travis-ci.org/hapijs/rule-capitalize-modules.svg?branch=master", "shields": "https://img.shields.io/travis/hapijs/rule-capitalize-modules/master.svg", "content": "https://img.shields.io/travis/hapijs/rule-capitalize-modules/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 16, "downloadsCount": 56298, "downloadsAcceleration": 436.25587899543376, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6841009321314468, "detail": {"quality": 0.9547045235275585, "popularity": 0.13631708852506824, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-11T21:26:51.054Z", "collected": {"metadata": {"name": "@hapi/rule-for-loop", "scope": "hapi", "version": "1.2.1", "description": "ESLint rule to enforce for loop syntax", "keywords": ["eslint", "hapi", "eslintrule", "for"], "date": "2019-08-07T20:06:07.986Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/rule-for-loop.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Frule-for-loop", "homepage": "https://github.com/hapijs/rule-for-loop#readme", "repository": "https://github.com/hapijs/rule-for-loop", "bugs": "https://github.com/hapijs/rule-for-loop/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "6.x.x", "@hapi/lab": "20.x.x", "eslint": "6.x.x"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\r\n\r\n# rule-for-loop\r\n\r\nhapi style guide ESLint rule dealing with for loops.\r\n\r\n[![Build Status](https://travis-ci.org/hapijs/rule-for-loop.svg?branch=master)](https://travis-ci.org/hapijs/rule-for-loop)\r\n\r\n## About\r\n\r\nThis rule enforces the following:\r\n\r\n- Restrict iterator variable names. `for` loop iterator variables should be named `i`. Nested loops should use the variables `j`, `k`, and so on.\r\n- Restrict loop nesting.  You can restrict the maximum nesting of `for` loops. By default, this limit is three.\r\n- Prevent postfix increment and decrement operators. The hapi style guide does not allow postfix increment and decrement operators in `for` loop updates. The prefix version of these operators should be used instead.\r\n- Single variable declaration in initialization section. A single `var i = 0;` is allowed in the initialization section. This only applies to variable declarations, not assignments to existing variables. This means that `for (i = 0, j = 0)` is allowed if `i` and `j` are existing variables. Variable declarations involving destructuring are not allowed.\r\n\r\n## Rule options\r\n\r\nThis rule can be configured by providing a single options object. The object supports the following keys.\r\n\r\n### `maxDepth`\r\n\r\nA number representing the maximum allowed nesting of `for` loops. Defaults to three.\r\n\r\n### `startIterator`\r\n\r\nThe first variable iterator name to use. This defaults to `'i'`."}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2829}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 15051}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 64218}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 168867}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 284164}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 360418}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 1, "forksCount": 2, "subscribersCount": 8, "issues": {"count": 8, "openCount": 0, "distribution": {"3600": 3, "10800": 0, "32400": 0, "97200": 2, "291600": 3, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 8}, {"username": "cjihrig", "commitsCount": 3}, {"username": "jarrodyellets", "commitsCount": 2}, {"username": "emrealparslan93", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1530, "testsSize": 4977, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/hapijs/rule-for-loop.svg?branch=master", "service": "https://api.travis-ci.org/hapijs/rule-for-loop.svg?branch=master", "shields": "https://img.shields.io/travis/hapijs/rule-for-loop/master.svg", "content": "https://img.shields.io/travis/hapijs/rule-for-loop/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 15, "downloadsCount": 56289, "downloadsAcceleration": 436.0989345509893, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6838350222859628, "detail": {"quality": 0.9547045235275585, "popularity": 0.13555734610939982, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-10T04:03:02.141Z", "collected": {"metadata": {"name": "@hapi/rule-no-arrowception", "scope": "hapi", "version": "1.1.2", "description": "ESLint rule preventing arrow functions that implicitly create arrow functions", "keywords": ["eslint", "hapi", "arrow", "function"], "date": "2019-08-07T20:08:23.177Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/rule-no-arrowception.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Frule-no-arrowception", "homepage": "https://github.com/hapijs/rule-no-arrowception#readme", "repository": "https://github.com/hapijs/rule-no-arrowception", "bugs": "https://github.com/hapijs/rule-no-arrowception/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "6.x.x", "@hapi/lab": "20.x.x", "eslint": "6.x.x"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 5}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\r\n\r\n# rule-no-arrowception\r\n\r\n[![Build Status](https://travis-ci.org/hapijs/rule-no-arrowception.svg?branch=master)](https://travis-ci.org/hapijs/rule-no-arrowception)\r\n\r\nESLint rule preventing arrow functions that implicitly return arrow functions. Functions can still be returned by arrow functions whose bodies use curly braces and an explicit return. This rule prevents the pattern `() => () => () => ...;`. This rule does not accept any configuration options."}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1078}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 14717}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 62150}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 168051}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 283915}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 357630}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 5, "forksCount": 0, "subscribersCount": 8, "issues": {"count": 5, "openCount": 0, "distribution": {"3600": 3, "10800": 0, "32400": 1, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 9}, {"username": "cjihrig", "commitsCount": 4}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 605, "testsSize": 1284, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/hapijs/rule-no-arrowception.svg?branch=master", "service": "https://api.travis-ci.org/hapijs/rule-no-arrowception.svg?branch=master", "shields": "https://img.shields.io/travis/hapijs/rule-no-arrowception/master.svg", "content": "https://img.shields.io/travis/hapijs/rule-no-arrowception/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 15, "downloadsCount": 56017, "downloadsAcceleration": 422.3389459665145, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6836929297538108, "detail": {"quality": 0.9547045235275585, "popularity": 0.13515136744610806, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-10T04:03:15.867Z", "collected": {"metadata": {"name": "@hapi/rule-no-var", "scope": "hapi", "version": "1.1.4", "description": "ESLint rule to enforce the usage of var declarations only in try-catch scope", "keywords": ["eslint", "hapi", "eslintrule", "require"], "date": "2019-08-07T20:10:07.410Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/hapi-no-var.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Frule-no-var", "homepage": "https://github.com/hapijs/hapi-no-var#readme", "repository": "https://github.com/hapijs/hapi-no-var", "bugs": "https://github.com/hapijs/hapi-no-var/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "6.x.x", "@hapi/lab": "20.x.x", "eslint": "6.x.x"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 7}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# rule-no-var\n\nESLint rule to enforce the usage of var declarations only in try-catch scope.\n\n[![Build Status](https://travis-ci.org/hapijs/rule-no-var.svg?branch=master)](https://travis-ci.org/hapijs/rule-no-var)"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1078}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 14715}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 62153}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 168076}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 283972}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 357761}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 1, "forksCount": 2, "subscribersCount": 8, "issues": {"count": 7, "openCount": 0, "distribution": {"3600": 5, "10800": 0, "32400": 0, "97200": 1, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 19}, {"username": "Nargonath", "commitsCount": 1}, {"username": "cjihrig", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 16}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 362, "testsSize": 2012, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/hapijs/rule-no-var.svg?branch=master", "service": "https://api.travis-ci.org/hapijs/rule-no-var.svg?branch=master", "shields": "https://img.shields.io/travis/hapijs/rule-no-var/master.svg", "content": "https://img.shields.io/travis/hapijs/rule-no-var/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9639, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 14, "downloadsCount": 56025.333333333336, "downloadsAcceleration": 422.2636605783867, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6850742933895597, "detail": {"quality": 0.9602318430714453, "popularity": 0.1343604182249164, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-01T20:17:52.612Z", "collected": {"metadata": {"name": "@hapi/rule-scope-start", "scope": "hapi", "version": "2.2.0", "description": "ESLint rule to enforce new line at the beginning of function scope", "keywords": ["eslint", "hapi", "scope"], "date": "2019-04-23T06:43:16.599Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git+https://github.com/hapijs/rule-scope-start.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Frule-scope-start", "homepage": "https://github.com/hapijs/rule-scope-start#readme", "repository": "https://github.com/hapijs/rule-scope-start", "bugs": "https://github.com/hapijs/rule-scope-start/issues"}, "license": "BSD-3-Clause", "devDependencies": {"@hapi/code": "5.x.x", "@hapi/lab": "18.x.x", "eslint": "5.x.x"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "<a href=\"http://hapijs.com\"><img src=\"https://github.com/hapijs/assets/blob/master/images/family.svg\" width=\"180px\" align=\"right\" /></a>\n\n# rule-scope-start\n\nESLint rule to enforce new line at the beginning of function scope\n\n[![Build Status](https://travis-ci.org/hapijs/rule-scope-start.svg?branch=master)](https://travis-ci.org/hapijs/rule-scope-start)\n\n## Rule Options\n\n### `allow-one-liners`\n\nIf the string `'allow-one-liners'` is passed as the first option to this rule,\nthen functions whose bodies contain zero or one statements are allowed to be\nwritten on a single line. This defaults to `true` for arrow functions, and\n`false` otherwise.\n\n### `max-in-one-liner`\n\nThe second option to this rule dictates the maximum number of statements allowed\nin the bodies of one line function. This must be used in conjunction with\n`allow-one-liners`. Defaults to one."}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 985}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 17010}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 73461}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 192114}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 311917}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 408743}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 1, "forksCount": 4, "subscribersCount": 9, "issues": {"count": 13, "openCount": 0, "distribution": {"3600": 6, "10800": 0, "32400": 0, "97200": 1, "291600": 2, "874800": 1, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "cjihrig", "commitsCount": 21}, {"username": "hueniverse", "commitsCount": 7}, {"username": "jarrodyellets", "commitsCount": 2}, {"username": "emrealparslan93", "commitsCount": 1}, {"username": "nlf", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 1}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 4}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 865, "testsSize": 6074, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/hapijs/rule-scope-start.svg?branch=master", "service": "https://api.travis-ci.org/hapijs/rule-scope-start.svg?branch=master", "shields": "https://img.shields.io/travis/hapijs/rule-scope-start/master.svg", "content": "https://img.shields.io/travis/hapijs/rule-scope-start/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 19, "downloadsCount": 64038, "downloadsAcceleration": 485.47113774733634, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.6859277636107259, "detail": {"quality": 0.9547045235275585, "popularity": 0.1415857846374602, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T15:08:45.056Z", "collected": {"metadata": {"name": "@hapi/topo", "scope": "hapi", "version": "5.0.0", "description": "Topological sorting with grouping support", "keywords": ["topological", "sort", "toposort", "topsort"], "date": "2020-01-04T09:03:36.791Z", "publisher": {"username": "hueniverse", "email": "eran@hammer.io"}, "maintainers": [{"username": "hueniverse", "email": "eran@hammer.io"}], "repository": {"type": "git", "url": "git://github.com/hapijs/topo.git"}, "links": {"npm": "https://www.npmjs.com/package/%40hapi%2Ftopo", "homepage": "https://github.com/hapijs/topo#readme", "repository": "https://github.com/hapijs/topo", "bugs": "https://github.com/hapijs/topo/issues"}, "license": "BSD-3-Clause", "dependencies": {"@hapi/hoek": "^9.0.0"}, "devDependencies": {"@hapi/code": "8.x.x", "@hapi/lab": "22.x.x"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 11}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"https://hapi.dev\"><img src=\"https://raw.githubusercontent.com/hapijs/assets/master/images/family.png\" width=\"180px\" align=\"right\" /></a>\n\n# @hapi/topo\n\n#### Topological sorting with grouping support.\n\n**topo** is part of the **hapi** ecosystem and was designed to work seamlessly with the [hapi web framework](https://hapi.dev) and its other components (but works great on its own or with other frameworks). If you are using a different web framework and find this module useful, check out [hapi](https://hapi.dev) \u2013 they work even better together.\n\n### Visit the [hapi.dev](https://hapi.dev) Developer Portal for tutorials, documentation, and support\n\n## Useful resources\n\n- [Documentation and API](https://hapi.dev/family/topo/)\n- [Version status](https://hapi.dev/resources/status/#topo) (builds, dependencies, node versions, licenses, eol)\n- [Changelog](https://hapi.dev/family/topo/changelog/)\n- [Project policies](https://hapi.dev/policies/)\n- [Free and commercial support options](https://hapi.dev/support/)"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 148907}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3078548}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 12323385}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 31674441}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 57795412}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 72935926}], "dependentsCount": 11, "starsCount": 0}, "github": {"starsCount": 99, "forksCount": 22, "subscribersCount": 20, "issues": {"count": 61, "openCount": 0, "distribution": {"3600": 36, "10800": 4, "32400": 6, "97200": 2, "291600": 3, "874800": 5, "2624400": 3, "7873200": 1, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "hueniverse", "commitsCount": 46}, {"username": "devinivy", "commitsCount": 23}, {"username": "arb", "commitsCount": 5}, {"username": "jarrodyellets", "commitsCount": 4}, {"username": "Nargonath", "commitsCount": 2}, {"username": "cjihrig", "commitsCount": 2}, {"username": "christianbundy", "commitsCount": 1}, {"username": "emrealparslan93", "commitsCount": 1}, {"username": "tuckbick", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 19}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 31}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1026, "testsSize": 9644}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 150, "downloadsCount": 10558147, "downloadsAcceleration": 83054.05315829528, "dependentsCount": 11}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.76214498725351, "detail": {"quality": 0.852684015517583, "popularity": 0.4466982451602765, "maintenance": 0.9999868479775382}}}
{"analyzedAt": "2020-02-08T23:06:54.381Z", "collected": {"metadata": {"name": "has-flag", "scope": "unscoped", "version": "4.0.0", "description": "Check if argv has a specific flag", "keywords": ["has", "check", "detect", "contains", "find", "flag", "cli", "command-line", "argv", "process", "arg", "args", "argument", "arguments", "getopt", "minimist", "optimist"], "date": "2019-04-06T15:49:21.907Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/has-flag.git"}, "links": {"npm": "https://www.npmjs.com/package/has-flag", "homepage": "https://github.com/sindresorhus/has-flag#readme", "repository": "https://github.com/sindresorhus/has-flag", "bugs": "https://github.com/sindresorhus/has-flag/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 2}, {"from": "2018-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# has-flag [![Build Status](https://travis-ci.org/sindresorhus/has-flag.svg?branch=master)](https://travis-ci.org/sindresorhus/has-flag)\n\n> Check if [`argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) has a specific flag\n\nCorrectly stops looking after an `--` argument terminator.\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-has-flag?utm_source=npm-has-flag&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---\n\n\n## Install\n\n```\n$ npm install has-flag\n```\n\n\n## Usage\n\n```js\n// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('f');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n```\n\n```\n$ node foo.js -f --unicorn --foo=bar -- --rainbow\n```\n\n\n## API\n\n### hasFlag(flag, [argv])\n\nReturns a boolean for whether the flag exists.\n\n#### flag\n\nType: `string`\n\nCLI flag to look for. The `--` prefix is optional.\n\n#### argv\n\nType: `string[]`<br>\nDefault: `process.argv`\n\nCLI arguments.\n\n\n## Security\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 4064771}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 24166857}, {"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 97407706}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 249221784}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 482281755}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 935929657}], "dependentsCount": 127, "starsCount": 5}, "github": {"starsCount": 53, "forksCount": 5, "subscribersCount": 9, "issues": {"count": 11, "openCount": 0, "distribution": {"3600": 6, "10800": 1, "32400": 1, "97200": 2, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 13}, {"username": "BendingBender", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "fearphage", "commitsCount": 1}, {"username": "novemberborn", "commitsCount": 1}], "commits": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1600, "testsSize": 714}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/has-flag.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/has-flag.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/has-flag/master.svg", "content": "https://img.shields.io/travis/sindresorhus/has-flag/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 77, "downloadsCount": 83073928, "downloadsAcceleration": 199471.23361872148, "dependentsCount": 127}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.833075359718386, "detail": {"quality": 0.9547045235275585, "popularity": 0.5619583102020371, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-28T04:18:23.034Z", "collected": {"metadata": {"name": "has-value", "scope": "unscoped", "version": "2.0.2", "description": "Returns true if a value exists, false if empty. Works with deeply nested values using object paths.", "keywords": ["array", "boolean", "check", "deep", "empty", "function", "has", "hasOwn", "is-empty", "nested", "null", "number", "object", "object path", "properties", "property", "string", "type", "value"], "date": "2018-03-03T20:49:09.585Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Ryan M Harrison", "url": "https://linkedin.com/in/harrisonrm"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/has-value.git"}, "links": {"npm": "https://www.npmjs.com/package/has-value", "homepage": "https://github.com/jonschlinkert/has-value", "repository": "https://github.com/jonschlinkert/has-value", "bugs": "https://github.com/jonschlinkert/has-value/issues"}, "license": "MIT", "dependencies": {"get-value": "^3.0.0", "has-values": "^2.0.1"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# has-value [![NPM version](https://img.shields.io/npm/v/has-value.svg?style=flat)](https://www.npmjs.com/package/has-value) [![NPM monthly downloads](https://img.shields.io/npm/dm/has-value.svg?style=flat)](https://npmjs.org/package/has-value) [![NPM total downloads](https://img.shields.io/npm/dt/has-value.svg?style=flat)](https://npmjs.org/package/has-value) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/has-value.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/has-value)\n\n> Returns true if a value exists, false if empty. Works with deeply nested values using object paths.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save has-value\n```\n\n## Heads up!\n\nBreaking changes in v2.0! See the [release history](#release-history) for details.\n\n## Usage\n\n```js\nconst has = require('has-value');\n\nconsole.log(has()) //=> true\nconsole.log(has('foo')) //=> true\n```\n\n**Works for:**\n\n* booleans\n* functions\n* numbers\n* strings\n* nulls\n* object\n* arrays\n\n**isEmpty**\n\nTo do the opposite and test for empty values, do:\n\n```js\nconst isEmpty = (...args) => !has(...args);\n```\n\n## Supported types\n\n### Arrays\n\n```js\nconsole.log(has({ foo: { bar: ['a'] } }, 'foo.bar'));    //=> true\nconsole.log(has({ foo: { bar: [0] } }, 'foo.bar'));      //=> true\nconsole.log(has({ foo: { bar: [[[]]] } }, 'foo.bar'));   //=> false\nconsole.log(has({ foo: { bar: [[], []] } }, 'foo.bar')); //=> false\nconsole.log(has({ foo: { bar: [] } }, 'foo.bar'));       //=> false\n```\n\n### Booleans\n\n```js\nconsole.log(has({ foo: { bar: true } }, 'foo.bar'));  //=> true\nconsole.log(has({ foo: { bar: false } }, 'foo.bar')); //=> true\n```\n\n### Buffers\n\n```js\nconsole.log(has({ foo: { bar: new Buffer() } }, 'foo.bar'));      //=> false\nconsole.log(has({ foo: { bar: new Buffer('foo') } }, 'foo.bar')); //=> true\n```\n\n### Dates\n\nDates are always true.\n\n```js\nconsole.log(has({ foo: { bar: new Date() } }, 'foo.bar')); //=> true\n```\n\n### Errors\n\nReturns `false` if `err.message` is an empty string.\n\n```js\nconsole.log(has({ foo: { bar: new Error() } }, 'foo.bar'));      //=> false\nconsole.log(has({ foo: { bar: new Error('foo') } }, 'foo.bar')); //=> true\n```\n\n### Functions\n\nFunctions are always true.\n\n```js\nconsole.log(has({ foo: { bar: function(foo) {} } }, 'foo.bar')); //=> true\nconsole.log(has({ foo: { bar: function() {} } }, 'foo.bar'));    //=> true\n```\n\n### Maps\n\n```js\nconsole.log(has({ foo: { bar: new Map() } }, 'foo.bar'));                 //=> false\nconsole.log(has({ foo: { bar: new Map([['foo', 'bar']]) } }, 'foo.bar')); //=> true\n```\n\n### Null\n\n`null` is always true, as it's assumed that this is a user-defined value, versus `undefined` which is not.\n\n```js\nconsole.log(has({ foo: { bar: null } }, 'foo.bar')); //=> true\n```\n\n### Objects\n\n```js\nconsole.log(has({ foo: { bar: {} } }, 'foo.bar')); //=> false\nconsole.log(has({ foo: { bar: { a: 'a' }} } }, 'foo.bar'));        //=> true\nconsole.log(has({ foo: { bar: { foo: undefined } } }, 'foo.bar')); //=> false\nconsole.log(has({ foo: { bar: { foo: null } } }, 'foo.bar'));      //=> true\n```\n\n### Numbers\n\n```js\nconsole.log(has({ foo: { bar: 1 } }, 'foo.bar')); //=> true\nconsole.log(has({ foo: { bar: 0 } }, 'foo.bar')); //=> true\n```\n\n### Regular expressions\n\n```js\nconsole.log(has({ foo: { bar: new RegExp() } }, 'foo.bar'));      //=> false\nconsole.log(has({ foo: { bar: new RegExp('foo') } }, 'foo.bar')); //=> true\n```\n\n### Sets\n\n```js\nconsole.log(has({ foo: { bar: new Set() } }, 'foo.bar'));               //=> false\nconsole.log(has({ foo: { bar: new Set(['foo', 'bar']) } }, 'foo.bar')); //=> true\n```\n\n### Strings\n\n```js\nconsole.log(has({ foo: { bar: 'a' } }, 'foo.bar')); //=> true\nconsole.log(has({ foo: { bar: '' } }, 'foo.bar'));  //=> false\n```\n\n## Undefined\n\n```js\nconsole.log(has({ foo: { bar:  } }, 'foo.bar'));          //=> false\nconsole.log(has({ foo: { bar: void 0 } }, 'foo.bar'));    //=> false\nconsole.log(has({ foo: { bar: undefined } }, 'foo.bar')); //=> false\n```\n\n## Release history\n\n### v2.0.0\n\n**Breaking changes**\n\n* Now returns false if the first argument is not an object, function or array, and the second argument is not a string or array.\n\n### v1.0.0\n\n* `zero` always returns true\n* `array` now recurses, so that an array of empty arrays will return `false`\n* `null` now returns true\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [define-property](https://www.npmjs.com/package/define-property): Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty. | [homepage](https://github.com/jonschlinkert/define-property \"Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty.\")\n* [get-value](https://www.npmjs.com/package/get-value): Use property paths like 'a.b.c' to get a nested value from an object. Even works\u2026 [more](https://github.com/jonschlinkert/get-value) | [homepage](https://github.com/jonschlinkert/get-value \"Use property paths like 'a.b.c' to get a nested value from an object. Even works when keys have dots in them (no other dot-prop library can do this!).\")\n* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value \"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.\")\n* [unset-value](https://www.npmjs.com/package/unset-value): Delete nested properties from an object using dot notation. | [homepage](https://github.com/jonschlinkert/unset-value \"Delete nested properties from an object using dot notation.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 32 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [rmharrison](https://github.com/rmharrison) |\n| 1 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on March 03, 2018._"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 4101576}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 21795327}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 92670050}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 238701000}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 474909384}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 887220431}], "dependentsCount": 68, "starsCount": 5}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 20, "forksCount": 3, "subscribersCount": 3, "issues": {"count": 6, "openCount": 1, "distribution": {"3600": 2, "10800": 1, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 32}, {"username": "rmharrison", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7489, "testsSize": 3172}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/has-value.svg?style=flat", "shields": "https://img.shields.io/npm/v/has-value.svg", "content": "https://img.shields.io/npm/v/has-value.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/has-value.svg?style=flat", "shields": "https://img.shields.io/npm/dm/has-value.svg", "content": "https://img.shields.io/npm/dm/has-value.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/has-value.svg?style=flat", "shields": "https://img.shields.io/npm/dt/has-value.svg", "content": "https://img.shields.io/npm/dt/has-value.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/has-value.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/has-value.svg", "shields": "https://img.shields.io/travis/jonschlinkert/has-value.svg", "content": "https://img.shields.io/travis/jonschlinkert/has-value.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 34, "downloadsCount": 79567000, "downloadsAcceleration": 216476.32990867586, "dependentsCount": 68}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8275098827305564, "detail": {"quality": 0.9691397075145873, "popularity": 0.5337331101338081, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-12T09:58:13.025Z", "collected": {"metadata": {"name": "has-values", "scope": "unscoped", "version": "2.0.1", "description": "Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays.", "keywords": ["array", "boolean", "empty", "find", "function", "has", "hasOwn", "javascript", "js", "key", "keys", "node.js", "null", "number", "object", "properties", "property", "string", "type", "util", "utilities", "utility", "value", "values"], "date": "2018-01-31T01:03:10.470Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/has-values.git"}, "links": {"npm": "https://www.npmjs.com/package/has-values", "homepage": "https://github.com/jonschlinkert/has-values", "repository": "https://github.com/jonschlinkert/has-values", "bugs": "https://github.com/jonschlinkert/has-values/issues"}, "license": "MIT", "dependencies": {"kind-of": "^6.0.2"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# has-values [![NPM version](https://img.shields.io/npm/v/has-values.svg?style=flat)](https://www.npmjs.com/package/has-values) [![NPM monthly downloads](https://img.shields.io/npm/dm/has-values.svg?style=flat)](https://npmjs.org/package/has-values) [![NPM total downloads](https://img.shields.io/npm/dt/has-values.svg?style=flat)](https://npmjs.org/package/has-values) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/has-values.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/has-values)\n\n> Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save has-values\n```\n\n## Usage\n\n```js\nconst has = require('has-values');\n```\n\nCreate an `isEmpty` function by returning the inverse of the result from has-values:\n\n```js\nconst isEmpty = val => !has(val);\n```\n\n## Supported types\n\n### Arrays\n\n```js\nconsole.log(has(['a']));      //=> true\nconsole.log(has([0]));        //=> true\nconsole.log(has([[[]]]));     //=> false\nconsole.log(has([[], []]));   //=> false\nconsole.log(has([]));         //=> false\n```\n\n### Booleans\n\n```js\nconsole.log(has(true));  //=> true\nconsole.log(has(false)); //=> true\n```\n\n### Buffers\n\n```js\nconsole.log(has(new Buffer()));      //=> false\nconsole.log(has(new Buffer('foo'))); //=> true\n```\n\n### Dates\n\nDates are always true.\n\n```js\nconsole.log(has(new Date())); //=> true\n```\n\n### Errors\n\nReturns `false` if `err.message` is an empty string.\n\n```js\nconsole.log(has(new Error()));      //=> false\nconsole.log(has(new Error('foo'))); //=> true\n```\n\n### Functions\n\nFunctions are always true.\n\n```js\nconsole.log(has(function(foo) {})); //=> true\nconsole.log(has(function() {}));    //=> true\n```\n\n### Maps\n\n```js\nconsole.log(has(new Map()));                 //=> false\nconsole.log(has(new Map([['foo', 'bar']]))); //=> true\n```\n\n### Null\n\n`null` is always true, as it's assumed that this is a user-defined value, versus `undefined` which is not.\n\n```js\nconsole.log(has(null)); //=> true\n```\n\n### Objects\n\n```js\nconsole.log(has({})); //=> false\nconsole.log(has({ a: 'a' }}));        //=> true\nconsole.log(has({ foo: undefined })); //=> false\nconsole.log(has({ foo: null }));      //=> true\n```\n\n### Numbers\n\n```js\nconsole.log(has(1)); //=> true\nconsole.log(has(0)); //=> true\n```\n\n### Regular expressions\n\n```js\nconsole.log(has(new RegExp()));      //=> false\nconsole.log(has(new RegExp('foo'))); //=> true\n```\n\n### Sets\n\n```js\nconsole.log(has(new Set()));               //=> false\nconsole.log(has(new Set(['foo', 'bar']))); //=> true\n```\n\n### Strings\n\n```js\nconsole.log(has('a')); //=> true\nconsole.log(has(''));  //=> false\n```\n\n## Undefined\n\n```js\nconsole.log(has());          //=> false\nconsole.log(has(void 0));    //=> false\nconsole.log(has(undefined)); //=> false\n```\n\n## Release history\n\n### v2.0.0\n\n* no longer supports numbers as a string\n* optimizations\n* adds support for `regex` and `buffer`\n\n### v1.0.0\n\n* adds support for `Map` and `Set`\n* `zero` always returns true\n* `array` now recurses, so that an array of empty arrays will return `false`\n* `null` now returns true\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using\u2026 [more](https://github.com/jonschlinkert/has-value) | [homepage](https://github.com/jonschlinkert/has-value \"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.\")\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number \"Returns true if the value is a number. comprehensive tests.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on January 30, 2018._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 3946836}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 21091982}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 87901454}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 231650536}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 462782591}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 868159781}], "dependentsCount": 54, "starsCount": 2}, "github": {"starsCount": 15, "forksCount": 1, "subscribersCount": 2, "issues": {"count": 3, "openCount": 1, "distribution": {"3600": 1, "10800": 0, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 21}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 6097, "testsSize": 2275}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/has-values.svg?style=flat", "shields": "https://img.shields.io/npm/v/has-values.svg", "content": "https://img.shields.io/npm/v/has-values.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/has-values.svg?style=flat", "shields": "https://img.shields.io/npm/dm/has-values.svg", "content": "https://img.shields.io/npm/dm/has-values.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/has-values.svg?style=flat", "shields": "https://img.shields.io/npm/dt/has-values.svg", "content": "https://img.shields.io/npm/dt/has-values.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/has-values.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/has-values.svg", "shields": "https://img.shields.io/travis/jonschlinkert/has-values.svg", "content": "https://img.shields.io/travis/jonschlinkert/has-values.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 21, "downloadsCount": 77216845.33333333, "downloadsAcceleration": 186005.741305175, "dependentsCount": 54}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8119828453015436, "detail": {"quality": 0.9333911371497057, "popularity": 0.5200445179274709, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-14T09:57:08.523Z", "collected": {"metadata": {"name": "iconv-lite", "scope": "unscoped", "version": "0.5.1", "description": "Convert character encodings in pure javascript.", "keywords": ["iconv", "convert", "charset", "icu"], "date": "2020-01-18T07:51:52.746Z", "author": {"name": "Alexander Shtuchkin", "email": "ashtuchkin@gmail.com", "username": "ashtuchkin"}, "publisher": {"username": "ashtuchkin", "email": "ashtuchkin@gmail.com"}, "maintainers": [{"username": "ashtuchkin", "email": "ashtuchkin@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/ashtuchkin/iconv-lite.git"}, "links": {"npm": "https://www.npmjs.com/package/iconv-lite", "homepage": "https://github.com/ashtuchkin/iconv-lite", "repository": "https://github.com/ashtuchkin/iconv-lite", "bugs": "https://github.com/ashtuchkin/iconv-lite/issues"}, "license": "MIT", "dependencies": {"safer-buffer": ">= 2.1.2 < 3"}, "devDependencies": {"mocha": "^3.1.0", "request": "~2.87.0", "unorm": "*", "errto": "*", "async": "*", "istanbul": "*", "semver": "*", "iconv": "*"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "## Pure JS character encoding conversion\n\n * Doesn't need native code compilation. Works on Windows and in sandboxed environments like [Cloud9](http://c9.io).\n * Used in popular projects like [Express.js (body_parser)](https://github.com/expressjs/body-parser), \n   [Grunt](http://gruntjs.com/), [Nodemailer](http://www.nodemailer.com/), [Yeoman](http://yeoman.io/) and others.\n * Faster than [node-iconv](https://github.com/bnoordhuis/node-iconv) (see below for performance comparison).\n * Intuitive encode/decode API\n * Streaming support for Node v0.10+\n * [Deprecated] Can extend Node.js primitives (buffers, streams) to support all iconv-lite encodings.\n * In-browser usage via [Browserify](https://github.com/substack/node-browserify) (~180k gzip compressed with Buffer shim included).\n * Typescript [type definition file](https://github.com/ashtuchkin/iconv-lite/blob/master/lib/index.d.ts) included.\n * React Native is supported (need to explicitly `npm install` two more modules: `buffer` and `stream`).\n * License: MIT.\n\n[![NPM Stats](https://nodei.co/npm/iconv-lite.png)](https://npmjs.org/package/iconv-lite/)  \n[![Build Status](https://travis-ci.org/ashtuchkin/iconv-lite.svg?branch=master)](https://travis-ci.org/ashtuchkin/iconv-lite)\n[![npm](https://img.shields.io/npm/v/iconv-lite.svg)](https://npmjs.org/package/iconv-lite/)\n[![npm downloads](https://img.shields.io/npm/dm/iconv-lite.svg)](https://npmjs.org/package/iconv-lite/)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/iconv-lite.svg)](https://npmjs.org/package/iconv-lite/)\n\n## Usage\n### Basic API\n```javascript\nvar iconv = require('iconv-lite');\n\n// Convert from an encoded buffer to js string.\nstr = iconv.decode(Buffer.from([0x68, 0x65, 0x6c, 0x6c, 0x6f]), 'win1251');\n\n// Convert from js string to an encoded buffer.\nbuf = iconv.encode(\"Sample input string\", 'win1251');\n\n// Check if encoding is supported\niconv.encodingExists(\"us-ascii\")\n```\n\n### Streaming API (Node v0.10+)\n```javascript\n\n// Decode stream (from binary stream to js strings)\nhttp.createServer(function(req, res) {\n    var converterStream = iconv.decodeStream('win1251');\n    req.pipe(converterStream);\n\n    converterStream.on('data', function(str) {\n        console.log(str); // Do something with decoded strings, chunk-by-chunk.\n    });\n});\n\n// Convert encoding streaming example\nfs.createReadStream('file-in-win1251.txt')\n    .pipe(iconv.decodeStream('win1251'))\n    .pipe(iconv.encodeStream('ucs2'))\n    .pipe(fs.createWriteStream('file-in-ucs2.txt'));\n\n// Sugar: all encode/decode streams have .collect(cb) method to accumulate data.\nhttp.createServer(function(req, res) {\n    req.pipe(iconv.decodeStream('win1251')).collect(function(err, body) {\n        assert(typeof body == 'string');\n        console.log(body); // full request body string\n    });\n});\n```\n\n### [Deprecated] Extend Node.js own encodings\n> NOTE: This doesn't work on latest Node versions. See [details](https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility).\n\n```javascript\n// After this call all Node basic primitives will understand iconv-lite encodings.\niconv.extendNodeEncodings();\n\n// Examples:\nbuf = new Buffer(str, 'win1251');\nbuf.write(str, 'gbk');\nstr = buf.toString('latin1');\nassert(Buffer.isEncoding('iso-8859-15'));\nBuffer.byteLength(str, 'us-ascii');\n\nhttp.createServer(function(req, res) {\n    req.setEncoding('big5');\n    req.collect(function(err, body) {\n        console.log(body);\n    });\n});\n\nfs.createReadStream(\"file.txt\", \"shift_jis\");\n\n// External modules are also supported (if they use Node primitives, which they probably do).\nrequest = require('request');\nrequest({\n    url: \"http://github.com/\", \n    encoding: \"cp932\"\n});\n\n// To remove extensions\niconv.undoExtendNodeEncodings();\n```\n\n## Supported encodings\n\n *  All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex.\n *  Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap, utf32, utf32-le, and utf32-be.\n *  All widespread singlebyte encodings: Windows 125x family, ISO-8859 family, \n    IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library. \n    Aliases like 'latin1', 'us-ascii' also supported.\n *  All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP.\n\nSee [all supported encodings on wiki](https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings).\n\nMost singlebyte encodings are generated automatically from [node-iconv](https://github.com/bnoordhuis/node-iconv). Thank you Ben Noordhuis and libiconv authors!\n\nMultibyte encodings are generated from [Unicode.org mappings](http://www.unicode.org/Public/MAPPINGS/) and [WHATWG Encoding Standard mappings](http://encoding.spec.whatwg.org/). Thank you, respective authors!\n\n\n## Encoding/decoding speed\n\nComparison with node-iconv module (1000x256kb, on MacBook Pro, Core i5/2.6 GHz, Node v0.12.0). \nNote: your results may vary, so please always check on your hardware.\n\n    operation             iconv@2.1.4   iconv-lite@0.4.7\n    ----------------------------------------------------------\n    encode('win1251')     ~96 Mb/s      ~320 Mb/s\n    decode('win1251')     ~95 Mb/s      ~246 Mb/s\n\n## BOM handling\n\n * Decoding: BOM is stripped by default, unless overridden by passing `stripBOM: false` in options\n   (f.ex. `iconv.decode(buf, enc, {stripBOM: false})`).\n   A callback might also be given as a `stripBOM` parameter - it'll be called if BOM character was actually found.\n * If you want to detect UTF-8 BOM when decoding other encodings, use [node-autodetect-decoder-stream](https://github.com/danielgindi/node-autodetect-decoder-stream) module.\n * Encoding: No BOM added, unless overridden by `addBOM: true` option.\n\n## UTF-16 Encodings\n\nThis library supports UTF-16LE, UTF-16BE and UTF-16 encodings. First two are straightforward, but UTF-16 is trying to be\nsmart about endianness in the following ways:\n * Decoding: uses BOM and 'spaces heuristic' to determine input endianness. Default is UTF-16LE, but can be \n   overridden with `defaultEncoding: 'utf-16be'` option. Strips BOM unless `stripBOM: false`.\n * Encoding: uses UTF-16LE and writes BOM by default. Use `addBOM: false` to override.\n\n## UTF-32 Encodings\n\nThis library supports UTF-32LE, UTF-32BE and UTF-32 encodings. Like the UTF-16 encoding above, UTF-32 defaults to UTF-32LE, but uses BOM and 'spaces heuristics' to determine input endianness. \n * The default of UTF-32LE can be overridden with the `defaultEncoding: 'utf-32be'` option. Strips BOM unless `stripBOM: false`.\n * Encoding: uses UTF-32LE and writes BOM by default. Use `addBOM: false` to override. (`defaultEncoding: 'utf-32be'` can also be used here to change encoding.)\n\n## Other notes\n\nWhen decoding, be sure to supply a Buffer to decode() method, otherwise [bad things usually happen](https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding).  \nUntranslatable characters are set to \ufffd or ?. No transliteration is currently supported.  \nNode versions 0.10.31 and 0.11.13 are buggy, don't use them (see #65, #77).  \n\n## Testing\n\n```bash\n$ git clone git@github.com:ashtuchkin/iconv-lite.git\n$ cd iconv-lite\n$ npm install\n$ npm test\n    \n$ # To view performance:\n$ node test/performance.js\n\n$ # To view test coverage:\n$ npm run coverage\n$ open coverage/lcov-report/index.html\n```"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3653804}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 19625014}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 82143063}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 218762146}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 447323357}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 923744563}], "dependentsCount": 2092, "starsCount": 107}, "github": {"starsCount": 2270, "forksCount": 231, "subscribersCount": 62, "issues": {"count": 228, "openCount": 41, "distribution": {"3600": 19, "10800": 12, "32400": 21, "97200": 29, "291600": 24, "874800": 22, "2624400": 12, "7873200": 13, "23619600": 32, "70858800": 23, "212576400": 21}, "isDisabled": false}, "contributors": [{"username": "ashtuchkin", "commitsCount": 174}, {"username": "jenkinv", "commitsCount": 4}, {"username": "larssn", "commitsCount": 4}, {"username": "mscdex", "commitsCount": 4}, {"username": "stagas", "commitsCount": 4}, {"username": "Mithgol", "commitsCount": 3}, {"username": "ChALkeR", "commitsCount": 2}, {"username": "adamansky", "commitsCount": 2}, {"username": "david50407", "commitsCount": 2}, {"username": "dougwilson", "commitsCount": 2}, {"username": "pekim", "commitsCount": 2}, {"username": "Atinux", "commitsCount": 1}, {"username": "Cactusbone", "commitsCount": 1}, {"username": "Ivan-Kalatchev", "commitsCount": 1}, {"username": "LMLB", "commitsCount": 1}, {"username": "Niggler", "commitsCount": 1}, {"username": "avindra", "commitsCount": 1}, {"username": "dbkaplun", "commitsCount": 1}, {"username": "felixbuenemann", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "jiangzhuo", "commitsCount": 1}, {"username": "kr-deps", "commitsCount": 1}, {"username": "kshetline", "commitsCount": 1}, {"username": "lastonesky", "commitsCount": 1}, {"username": "leetreveil", "commitsCount": 1}, {"username": "nleush", "commitsCount": 1}, {"username": "oldj", "commitsCount": 1}, {"username": "rokoroku", "commitsCount": 1}, {"username": "tlhunter", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 7351, "testsSize": 101112, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/iconv-lite.png", "shields": "https://img.shields.io/npm/v/iconv-lite.svg", "content": "https://img.shields.io/npm/v/iconv-lite.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://travis-ci.org/ashtuchkin/iconv-lite.svg?branch=master", "service": "https://api.travis-ci.org/ashtuchkin/iconv-lite.svg?branch=master", "shields": "https://img.shields.io/travis/ashtuchkin/iconv-lite/master.svg", "content": "https://img.shields.io/travis/ashtuchkin/iconv-lite/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/iconv-lite.svg", "shields": "https://img.shields.io/npm/v/iconv-lite.svg", "content": "https://img.shields.io/npm/v/iconv-lite.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/iconv-lite.svg", "shields": "https://img.shields.io/npm/dm/iconv-lite.svg", "content": "https://img.shields.io/npm/dm/iconv-lite.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}]}}, "evaluation": {"quality": {"carefulness": 0.43499999999999994, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 2699, "downloadsCount": 72920715.33333333, "downloadsAcceleration": 40404.454318873584, "dependentsCount": 2092}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.4535616438356164, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7395060809577371, "detail": {"quality": 0.8395252126963926, "popularity": 0.7314246805589724, "maintenance": 0.661856797009083}}}
{"analyzedAt": "2020-02-23T06:52:15.799Z", "collected": {"metadata": {"name": "ignore", "scope": "unscoped", "version": "5.1.4", "description": "Ignore is a manager and filter for .gitignore rules, the one used by eslint, gitbook and many others.", "keywords": ["ignore", ".gitignore", "gitignore", "npmignore", "rules", "manager", "filter", "regexp", "regex", "fnmatch", "glob", "asterisks", "regular-expression"], "date": "2019-08-14T09:30:32.172Z", "author": {"name": "kael"}, "publisher": {"username": "kael", "email": "i@kael.me"}, "maintainers": [{"username": "kael", "email": "i@kael.me"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/kaelzhang/node-ignore.git"}, "links": {"npm": "https://www.npmjs.com/package/ignore", "homepage": "https://github.com/kaelzhang/node-ignore#readme", "repository": "https://github.com/kaelzhang/node-ignore", "bugs": "https://github.com/kaelzhang/node-ignore/issues"}, "license": "MIT", "devDependencies": {"@babel/cli": "^7.5.5", "@babel/core": "^7.5.5", "@babel/preset-env": "^7.5.5", "codecov": "^3.5.0", "debug": "^4.1.1", "eslint": "^6.1.0", "eslint-config-ostai": "^3.0.0", "eslint-plugin-import": "^2.18.2", "mkdirp": "^0.5.1", "pre-suf": "^1.1.1", "rimraf": "^2.7.0", "spawn-sync": "^2.0.0", "tap": "^14.6.1", "tmp": "0.1.0", "typescript": "^3.5.3"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 23}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<table><thead>\n  <tr>\n    <th>Linux</th>\n    <th>OS X</th>\n    <th>Windows</th>\n    <th>Coverage</th>\n    <th>Downloads</th>\n  </tr>\n</thead><tbody><tr>\n  <td colspan=\"2\" align=\"center\">\n    <a href=\"https://travis-ci.org/kaelzhang/node-ignore\">\n    <img\n      src=\"https://travis-ci.org/kaelzhang/node-ignore.svg?branch=master\"\n      alt=\"Build Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://ci.appveyor.com/project/kaelzhang/node-ignore\">\n    <img\n      src=\"https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore?branch=master&svg=true\"\n      alt=\"Windows Build Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://codecov.io/gh/kaelzhang/node-ignore\">\n    <img\n      src=\"https://codecov.io/gh/kaelzhang/node-ignore/branch/master/graph/badge.svg\"\n      alt=\"Coverage Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://www.npmjs.org/package/ignore\">\n    <img\n      src=\"http://img.shields.io/npm/dm/ignore.svg\"\n      alt=\"npm module downloads per month\" /></a>\n  </td>\n</tr></tbody></table>\n\n# ignore\n\n`ignore` is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore [spec](http://git-scm.com/docs/gitignore).\n\n`ignore` is used by eslint, gitbook and [many others](https://www.npmjs.com/browse/depended/ignore).\n\nPay attention that [`minimatch`](https://www.npmjs.org/package/minimatch) does not work in the gitignore way. To filter filenames according to .gitignore file, I recommend this module.\n\n### Tested on\n\n`ignore` is fully tested, and has more than **five hundreds** of unit tests.\n\n- Linux + Node: `0.8` - `7.x`\n- Windows + Node: `0.10` - `7.x`, node < `0.10` is not tested due to the lack of support of appveyor.\n\nActually, `ignore` does not rely on any versions of node specially.\n\nSince `4.0.0`, ignore will no longer support `node < 6` by default, to use in node < 6, `require('ignore/legacy')`. For details, see [CHANGELOG](https://github.com/kaelzhang/node-ignore/blob/master/CHANGELOG.md).\n\n## Table Of Main Contents\n\n- [Usage](#usage)\n- [`Pathname` Conventions](#pathname-conventions)\n- See Also:\n  - [`glob-gitignore`](https://www.npmjs.com/package/glob-gitignore) matches files using patterns and filters them according to gitignore rules.\n- [Upgrade Guide](#upgrade-guide)\n\n## Install\n\n```sh\nnpm i ignore\n```\n\n## Usage\n\n```js\nimport ignore from 'ignore'\nconst ig = ignore().add(['.abc/*', '!.abc/d/'])\n```\n\n### Filter the given paths\n\n```js\nconst paths = [\n  '.abc/a.js',    // filtered out\n  '.abc/d/e.js'   // included\n]\n\nig.filter(paths)        // ['.abc/d/e.js']\nig.ignores('.abc/a.js') // true\n```\n\n### As the filter function\n\n```js\npaths.filter(ig.createFilter()); // ['.abc/d/e.js']\n```\n\n### Win32 paths will be handled\n\n```js\nig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js'])\n// if the code above runs on windows, the result will be\n// ['.abc\\\\d\\\\e.js']\n```\n\n## Why another ignore?\n\n- `ignore` is a standalone module, and is much simpler so that it could easy work with other programs, unlike [isaacs](https://npmjs.org/~isaacs)'s [fstream-ignore](https://npmjs.org/package/fstream-ignore) which must work with the modules of the fstream family.\n\n- `ignore` only contains utility methods to filter paths according to the specified ignore rules, so\n  - `ignore` never try to find out ignore rules by traversing directories or fetching from git configurations.\n  - `ignore` don't cares about sub-modules of git projects.\n\n- Exactly according to [gitignore man page](http://git-scm.com/docs/gitignore), fixes some known matching issues of fstream-ignore, such as:\n  - '`/*.js`' should only match '`a.js`', but not '`abc/a.js`'.\n  - '`**/foo`' should match '`foo`' anywhere.\n  - Prevent re-including a file if a parent directory of that file is excluded.\n  - Handle trailing whitespaces:\n    - `'a '`(one space) should not match `'a  '`(two spaces).\n    - `'a \\ '` matches `'a  '`\n  - All test cases are verified with the result of `git check-ignore`.\n\n# Methods\n\n## .add(pattern: string | Ignore): this\n## .add(patterns: Array<string | Ignore>): this\n\n- **pattern** `String | Ignore` An ignore pattern string, or the `Ignore` instance\n- **patterns** `Array<String | Ignore>` Array of ignore patterns.\n\nAdds a rule or several rules to the current manager.\n\nReturns `this`\n\nNotice that a line starting with `'#'`(hash) is treated as a comment. Put a backslash (`'\\'`) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename.\n\n```js\nignore().add('#abc').ignores('#abc')    // false\nignore().add('\\#abc').ignores('#abc')   // true\n```\n\n`pattern` could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just `ignore().add()` the content of a ignore file:\n\n```js\nignore()\n.add(fs.readFileSync(filenameOfGitignore).toString())\n.filter(filenames)\n```\n\n`pattern` could also be an `ignore` instance, so that we could easily inherit the rules of another `Ignore` instance.\n\n## <strike>.addIgnoreFile(path)</strike>\n\nREMOVED in `3.x` for now.\n\nTo upgrade `ignore@2.x` up to `3.x`, use\n\n```js\nimport fs from 'fs'\n\nif (fs.existsSync(filename)) {\n  ignore().add(fs.readFileSync(filename).toString())\n}\n```\n\ninstead.\n\n## .filter(paths: Array&lt;Pathname&gt;): Array&lt;Pathname&gt;\n\n```ts\ntype Pathname = string\n```\n\nFilters the given array of pathnames, and returns the filtered array.\n\n- **paths** `Array.<Pathname>` The array of `pathname`s to be filtered.\n\n### `Pathname` Conventions:\n\n#### 1. `Pathname` should be a `path.relative()`d pathname\n\n`Pathname` should be a string that have been `path.join()`ed, or the return value of `path.relative()` to the current directory,\n\n```js\n// WRONG, an error will be thrown\nig.ignores('./abc')\n\n// WRONG, for it will never happen, and an error will be thrown\n// If the gitignore rule locates at the root directory,\n// `'/abc'` should be changed to `'abc'`.\n// ```\n// path.relative('/', '/abc')  -> 'abc'\n// ```\nig.ignores('/abc')\n\n// WRONG, that it is an absolute path on Windows, an error will be thrown\nig.ignores('C:\\\\abc')\n\n// Right\nig.ignores('abc')\n\n// Right\nig.ignores(path.join('./abc'))  // path.join('./abc') -> 'abc'\n```\n\nIn other words, each `Pathname` here should be a relative path to the directory of the gitignore rules.\n\nSuppose the dir structure is:\n\n```\n/path/to/your/repo\n    |-- a\n    |   |-- a.js\n    |\n    |-- .b\n    |\n    |-- .c\n         |-- .DS_store\n```\n\nThen the `paths` might be like this:\n\n```js\n[\n  'a/a.js'\n  '.b',\n  '.c/.DS_store'\n]\n```\n\n#### 2. filenames and dirnames\n\n`node-ignore` does NO `fs.stat` during path matching, so for the example below:\n\n```js\n// First, we add a ignore pattern to ignore a directory\nig.add('config/')\n\n// `ig` does NOT know if 'config', in the real world,\n//   is a normal file, directory or something.\n\nig.ignores('config')\n// `ig` treats `config` as a file, so it returns `false`\n\nig.ignores('config/')\n// returns `true`\n```\n\nSpecially for people who develop some library based on `node-ignore`, it is important to understand that.\n\nUsually, you could use [`glob`](http://npmjs.org/package/glob) with `option.mark = true` to fetch the structure of the current directory:\n\n```js\nimport glob from 'glob'\n\nglob('**', {\n  // Adds a / character to directory matches.\n  mark: true\n}, (err, files) => {\n  if (err) {\n    return console.error(err)\n  }\n\n  let filtered = ignore().add(patterns).filter(files)\n  console.log(filtered)\n})\n```\n\n## .ignores(pathname: Pathname): boolean\n\n> new in 3.2.0\n\nReturns `Boolean` whether `pathname` should be ignored.\n\n```js\nig.ignores('.abc/a.js')    // true\n```\n\n## .createFilter()\n\nCreates a filter function which could filter an array of paths with `Array.prototype.filter`.\n\nReturns `function(path)` the filter function.\n\n## .test(pathname: Pathname) since 5.0.0\n\nReturns `TestResult`\n\n```ts\ninterface TestResult {\n  ignored: boolean\n  // true if the `pathname` is finally unignored by some negative pattern\n  unignored: boolean\n}\n```\n\n- `{ignored: true, unignored: false}`: the `pathname` is ignored\n- `{ignored: false, unignored: true}`: the `pathname` is unignored\n- `{ignored: false, unignored: false}`: the `pathname` is never matched by any ignore rules.\n\n## `options.ignorecase` since 4.0.0\n\nSimilar as the `core.ignorecase` option of [git-config](https://git-scm.com/docs/git-config), `node-ignore` will be case insensitive if `options.ignorecase` is set to `true` (the default value), otherwise case sensitive.\n\n```js\nconst ig = ignore({\n  ignorecase: false\n})\n\nig.add('*.png')\n\nig.ignores('*.PNG')  // false\n```\n\n## static `ignore.isPathValid(pathname): boolean` since 5.0.0\n\nCheck whether the `pathname` is valid according to the [convention](#1-pathname-should-be-a-pathrelatived-pathname).\n\n```js\nignore.isPathValid('./foo')  // false\n```\n\n****\n\n# Upgrade Guide\n\n## Upgrade 4.x -> 5.x\n\nSince `5.0.0`, if an invalid `Pathname` passed into `ig.ignores()`, an error will be thrown, while `ignore < 5.0.0` did not make sure what the return value was, as well as\n\n```ts\n.ignores(pathname: Pathname): boolean\n\n.filter(pathnames: Array<Pathname>): Array<Pathname>\n\n.createFilter(): (pathname: Pathname) => boolean\n\n.test(pathname: Pathname): {ignored: boolean, unignored: boolean}\n```\n\nSee the convention [here](#1-pathname-should-be-a-pathrelatived-pathname) for details.\n\nIf there are invalid pathnames, the conversion and filtration should be done by users.\n\n```js\nimport {isPathValid} from 'ignore' // introduced in 5.0.0\n\nconst paths = [\n  // invalid\n  //////////////////\n  '',\n  false,\n  '../foo',\n  '.',\n  //////////////////\n\n  // valid\n  'foo'\n]\n.filter(isValidPath)\n\nig.filter(paths)\n```\n\n## Upgrade 3.x -> 4.x\n\nSince `4.0.0`, `ignore` will no longer support node < 6, to use `ignore` in node < 6:\n\n```js\nvar ignore = require('ignore/legacy')\n```\n\n## Upgrade 2.x -> 3.x\n\n- All `options` of 2.x are unnecessary and removed, so just remove them.\n- `ignore()` instance is no longer an [`EventEmitter`](nodejs.org/api/events.html), and all events are unnecessary and removed.\n- `.addIgnoreFile()` is removed, see the [.addIgnoreFile](#addignorefilepath) section for details.\n\n****\n\n# Collaborators\n\n- [@whitecolor](https://github.com/whitecolor) *Alex*\n- [@SamyPesse](https://github.com/SamyPesse) *Samy Pess\u00e9*\n- [@azproduction](https://github.com/azproduction) *Mikhail Davydov*\n- [@TrySound](https://github.com/TrySound) *Bogdan Chadkin*\n- [@JanMattner](https://github.com/JanMattner) *Jan Mattner*\n- [@ntwb](https://github.com/ntwb) *Stephen Edgar*\n- [@kasperisager](https://github.com/kasperisager) *Kasper Isager*\n- [@sandersn](https://github.com/sandersn) *Nathan Shively-Sanders*"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 826549}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 18028332}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 73104231}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 192965502}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 370056342}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 644664914}], "dependentsCount": 435, "starsCount": 14}, "github": {"starsCount": 257, "forksCount": 25, "subscribersCount": 7, "issues": {"count": 57, "openCount": 1, "distribution": {"3600": 10, "10800": 5, "32400": 4, "97200": 13, "291600": 4, "874800": 2, "2624400": 4, "7873200": 3, "23619600": 6, "70858800": 5, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "kaelzhang", "commitsCount": 90}, {"username": "whitecolor", "commitsCount": 3}, {"username": "SamyPesse", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "JanMattner", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aquibm", "commitsCount": 1}, {"username": "azproduction", "commitsCount": 1}, {"username": "kasperisager", "commitsCount": 1}, {"username": "mhemrg", "commitsCount": 1}, {"username": "sandersn", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 17}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 10681, "testsSize": 24844, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/kaelzhang/node-ignore.svg?branch=master", "service": "https://api.travis-ci.org/kaelzhang/node-ignore.svg?branch=master", "shields": "https://img.shields.io/travis/kaelzhang/node-ignore/master.svg", "content": "https://img.shields.io/travis/kaelzhang/node-ignore/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore?branch=master&svg=true", "service": "https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore", "shields": "https://img.shields.io/appveyor/ci/github/kaelzhang/node-ignore.svg", "content": "https://img.shields.io/appveyor/ci/github/kaelzhang/node-ignore.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "http://img.shields.io/npm/dm/ignore.svg", "shields": "https://img.shields.io/npm/dm/ignore.svg", "content": "https://img.shields.io/npm/dm/ignore.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 315, "downloadsCount": 64321834, "downloadsAcceleration": 240066.4447488585, "dependentsCount": 435}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8688447242393804, "detail": {"quality": 0.9983555125830477, "popularity": 0.626790538671768, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T03:41:39.312Z", "collected": {"metadata": {"name": "import-fresh", "scope": "unscoped", "version": "3.2.1", "description": "Import a module while bypassing the cache", "keywords": ["require", "cache", "uncache", "uncached", "module", "fresh", "bypass"], "date": "2019-11-13T17:09:02.349Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/import-fresh.git"}, "links": {"npm": "https://www.npmjs.com/package/import-fresh", "homepage": "https://github.com/sindresorhus/import-fresh#readme", "repository": "https://github.com/sindresorhus/import-fresh", "bugs": "https://github.com/sindresorhus/import-fresh/issues"}, "license": "MIT", "dependencies": {"parent-module": "^1.0.0", "resolve-from": "^4.0.0"}, "devDependencies": {"ava": "^1.0.1", "heapdump": "^0.3.12", "tsd": "^0.7.3", "xo": "^0.23.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# import-fresh [![Build Status](https://travis-ci.org/sindresorhus/import-fresh.svg?branch=master)](https://travis-ci.org/sindresorhus/import-fresh)\n\n> Import a module while bypassing the [cache](https://nodejs.org/api/modules.html#modules_caching)\n\nUseful for testing purposes when you need to freshly import a module.\n\n\n## Install\n\n```\n$ npm install import-fresh\n```\n\n\n## Usage\n\n```js\n// foo.js\nlet i = 0;\nmodule.exports = () => ++i;\n```\n\n```js\nconst importFresh = require('import-fresh');\n\nrequire('./foo')();\n//=> 1\n\nrequire('./foo')();\n//=> 2\n\nimportFresh('./foo')();\n//=> 1\n\nimportFresh('./foo')();\n//=> 1\n```\n\n\n## import-fresh for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of import-fresh and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-import-fresh?utm_source=npm-import-fresh&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\n## Related\n\n- [clear-module](https://github.com/sindresorhus/clear-module) - Clear a module from the import cache\n- [import-from](https://github.com/sindresorhus/import-from) - Import a module from a given path\n- [import-cwd](https://github.com/sindresorhus/import-cwd) - Import a module from the current working directory\n- [import-lazy](https://github.com/sindresorhus/import-lazy) - Import modules lazily"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 653505}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 14309332}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 58839750}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 153063910}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 280952797}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 446581736}], "dependentsCount": 108, "starsCount": 0}, "github": {"starsCount": 192, "forksCount": 18, "subscribersCount": 9, "issues": {"count": 16, "openCount": 1, "distribution": {"3600": 3, "10800": 0, "32400": 3, "97200": 1, "291600": 0, "874800": 1, "2624400": 0, "7873200": 3, "23619600": 2, "70858800": 2, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 21}, {"username": "stroncium", "commitsCount": 2}, {"username": "adammockor", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "ronami", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 6}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 12}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1583, "testsSize": 895}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/import-fresh.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/import-fresh.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/import-fresh/master.svg", "content": "https://img.shields.io/travis/sindresorhus/import-fresh/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"resolve-from": {"required": "^4.0.0", "stable": "5.0.0", "latest": "5.0.0"}, "parent-module": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 224, "downloadsCount": 51021303.333333336, "downloadsAcceleration": 268787.6653158295, "dependentsCount": 108}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8181907898430595, "detail": {"quality": 0.8931686009980785, "popularity": 0.5722252217551103, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-29T01:46:43.741Z", "collected": {"metadata": {"name": "imurmurhash", "scope": "unscoped", "version": "0.1.4", "description": "An incremental implementation of MurmurHash3", "keywords": ["murmur", "murmurhash", "murmurhash3", "hash", "incremental"], "date": "2013-08-24T20:45:23.169Z", "author": {"name": "Jens Taylor", "email": "jensyt@gmail.com", "url": "https://github.com/homebrewing", "username": "jensyt"}, "publisher": {"username": "jensyt", "email": "jensyt@gmail.com"}, "maintainers": [{"username": "jensyt", "email": "jensyt@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jensyt/imurmurhash-js.git"}, "links": {"npm": "https://www.npmjs.com/package/imurmurhash", "homepage": "https://github.com/jensyt/imurmurhash-js", "repository": "https://github.com/jensyt/imurmurhash-js", "bugs": "https://github.com/jensyt/imurmurhash-js/issues"}, "license": "MIT", "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}], "hasSelectiveFiles": true, "readme": "iMurmurHash.JS\n==============\n\nAn incremental implementation of the MurmurHash3 (32-bit) hashing algorithm for JavaScript based on [Gary Court's implementation](https://github.com/garycourt/murmurhash-js).\n\nInstallation\n------------\n\nTo use iMurmurHash in the browser, [download the latest version](https://raw.github.com/jensyt/imurmurhash-js/master/imurmurhash.min.js) and include it as a script on your site.\n\n```html\n<script type=\"text/javascript\" src=\"/scripts/imurmurhash.min.js\"></script>\n<script>\n// Your code here, access iMurmurHash using the global object MurmurHash3\n</script>\n```\n\n---\n\nTo use iMurmurHash in Node.js, install the module using NPM:\n\n```bash\nnpm install imurmurhash\n```\n\nThen simply include it in your scripts:\n\n```javascript\nMurmurHash3 = require('imurmurhash');\n```\n\nQuick Example\n-------------\n\n```javascript\n// Create the initial hash\nvar hashState = MurmurHash3('string');\n\n// Incrementally add text\nhashState.hash('more strings');\nhashState.hash('even more strings');\n\n// All calls can be chained if desired\nhashState.hash('and').hash('some').hash('more');\n\n// Get a result\nhashState.result();\n// returns 0x29d3f1e3\n```\n\nFunctions\n---------\n\n### MurmurHash3 ([string], [seed])\nGet a hash state object, optionally initialized with the given _string_ and _seed_. _Seed_ must be a positive integer if provided. Calling this function without the `new` keyword will return a cached state object that has been reset. This is safe to use as long as the object is only used from a single thread and no other hashes are created while operating on this one. If this constraint cannot be met, you can use `new` to create a new state object. For example:\n\n```javascript\n// Use the cached object, calling the function again will return the same\n// object (but reset, so the current state would be lost)\nhashState = MurmurHash3();\n...\n\n// Create a new object that can be safely used however you wish. Calling the\n// function again will simply return a new state object, and no state loss\n// will occur, at the cost of creating more objects.\nhashState = new MurmurHash3();\n```\n\nBoth methods can be mixed however you like if you have different use cases.\n\n---\n\n### MurmurHash3.prototype.hash (string)\nIncrementally add a _string_ to the hash. This can be called as many times as you want for the hash state object, including after a calls to `result()`. Returns `this` so calls can be chained.\n\n---\n\n### MurmurHash3.prototype.result ()\nGet the result of the hash as a 32-bit positive integer. This performs the tail and finalizer portions of the algorithm, but does not store the result in the state object. This means that it is perfectly safe to get results and then continue adding strings via `hash`.\n\n```javascript\n// Do the whole string at once\nMurmurHash3('this is a test string').result();\n// 0x70529328\n\n// Do part of the string, get a result, then the other part\nvar m = MurmurHash3('this is a');\nm.result();\n// 0xbfc4f834\nm.hash(' test string').result();\n// 0x70529328 (same as above)\n```\n\n---\n\n### MurmurHash3.prototype.reset (seed)\nReset the state object for reuse, optionally using the given _seed_ (defaults to 0 like constructor). Returns `this` so calls can be chained.\n\n---\n\nLicense (MIT)\n-------------\nCopyright (c) 2013 Gary Court, Jens Taylor\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 1997741}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 11832661}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 49258347}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 127043055}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 246296845}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 452240207}], "dependentsCount": 132, "starsCount": 2}, "github": {"starsCount": 51, "forksCount": 4, "subscribersCount": 4, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jensyt", "commitsCount": 11}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.20500000000000002, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 62, "downloadsCount": 42347685, "downloadsAcceleration": 133058.0435121765, "dependentsCount": 132}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.7, "issuesDistribution": 0.7}}, "score": {"final": 0.4607354794924118, "detail": {"quality": 0.3282689928102674, "popularity": 0.5382893421485535, "maintenance": 0.49672431970667963}}}
{"analyzedAt": "2020-02-21T17:58:04.092Z", "collected": {"metadata": {"name": "inflight", "scope": "unscoped", "version": "1.0.6", "description": "Add callbacks to requests in flight to avoid async duplication", "date": "2016-10-13T03:53:29.524Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "ruyadorno", "email": "ruyadorno@hotmail.com"}, {"username": "mikemimik", "email": "mike@mikecorp.ca"}, {"username": "claudiahdz", "email": "cghr1990@gmail.com"}, {"username": "darcyclarke", "email": "darcy@darcyclarke.me"}, {"username": "adam_baldwin", "email": "evilpacket@gmail.com"}, {"username": "ahmadnassri", "email": "ahmad@ahmadnassri.com"}, {"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git+https://github.com/npm/inflight.git"}, "links": {"npm": "https://www.npmjs.com/package/inflight", "homepage": "https://github.com/isaacs/inflight", "repository": "https://github.com/npm/inflight", "bugs": "https://github.com/isaacs/inflight/issues"}, "license": "ISC", "dependencies": {"once": "^1.3.0", "wrappy": "1"}, "devDependencies": {"tap": "^7.1.2"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# inflight\n\nAdd callbacks to requests in flight to avoid async duplication\n\n## USAGE\n\n```javascript\nvar inflight = require('inflight')\n\n// some request that does some stuff\nfunction req(key, callback) {\n  // key is any random string.  like a url or filename or whatever.\n  //\n  // will return either a falsey value, indicating that the\n  // request for this key is already in flight, or a new callback\n  // which when called will call all callbacks passed to inflightk\n  // with the same key\n  callback = inflight(key, callback)\n\n  // If we got a falsey value back, then there's already a req going\n  if (!callback) return\n\n  // this is where you'd fetch the url or whatever\n  // callback is also once()-ified, so it can safely be assigned\n  // to multiple events etc.  First call wins.\n  setTimeout(function() {\n    callback(null, key)\n  }, 100)\n}\n\n// only assigns a single setTimeout\n// when it dings, all cbs get called\nreq('foo', cb1)\nreq('foo', cb2)\nreq('foo', cb3)\nreq('foo', cb4)\n```"}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2498545}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 13181431}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 56830260}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 148304634}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 295946703}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 545077804}], "dependentsCount": 146, "starsCount": 4}, "github": {"starsCount": 57, "forksCount": 11, "subscribersCount": 35, "issues": {"count": 6, "openCount": 2, "distribution": {"3600": 0, "10800": 0, "32400": 1, "97200": 0, "291600": 1, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 3, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 16}, {"username": "othiym23", "commitsCount": 3}, {"username": "phated", "commitsCount": 3}, {"username": "iarna", "commitsCount": 1}, {"username": "jamestalmage", "commitsCount": 1}, {"username": "zkat", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 991, "testsSize": 4161}, "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 1, "health": 1, "branding": 0}, "popularity": {"communityInterest": 113, "downloadsCount": 49434878, "downloadsAcceleration": 137940.66421232885, "dependentsCount": 146}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8067815990332892, "detail": {"quality": 0.8730079228250944, "popularity": 0.5569408551535533, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-10T10:48:53.954Z", "collected": {"metadata": {"name": "inherits", "scope": "unscoped", "version": "2.0.4", "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()", "keywords": ["inheritance", "class", "klass", "oop", "object-oriented", "inherits", "browser", "browserify"], "date": "2019-06-19T20:18:52.465Z", "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/inherits.git"}, "links": {"npm": "https://www.npmjs.com/package/inherits", "homepage": "https://github.com/isaacs/inherits#readme", "repository": "https://github.com/isaacs/inherits", "bugs": "https://github.com/isaacs/inherits/issues"}, "license": "ISC", "devDependencies": {"tap": "^14.2.4"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1739767}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 32118867}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 127444413}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 356119706}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 699824382}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1206806583}], "dependentsCount": 2087, "starsCount": 46}, "github": {"starsCount": 312, "forksCount": 72, "subscribersCount": 21, "issues": {"count": 33, "openCount": 8, "distribution": {"3600": 0, "10800": 0, "32400": 5, "97200": 3, "291600": 1, "874800": 0, "2624400": 3, "7873200": 3, "23619600": 7, "70858800": 4, "212576400": 7}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 22}, {"username": "dimsmol", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 1625, "testsSize": 1576}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 453, "downloadsCount": 118706568.66666667, "downloadsAcceleration": 380855.3805936072, "dependentsCount": 2087}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9292929292929293, "issuesDistribution": 0.9}}, "score": {"final": 0.8433713000744947, "detail": {"quality": 0.8169354451527011, "popularity": 0.7095232190261501, "maintenance": 0.9998786853415194}}}
{"analyzedAt": "2020-03-04T13:22:04.189Z", "collected": {"metadata": {"name": "inquirer", "scope": "unscoped", "version": "7.0.6", "description": "A collection of common interactive command line user interfaces.", "keywords": ["command", "prompt", "stdin", "cli", "tty", "menu"], "date": "2020-03-04T13:19:47.099Z", "author": {"name": "Simon Boudrias", "email": "admin@simonboudrias.com", "username": "sboudrias"}, "publisher": {"username": "sboudrias", "email": "admin@simonboudrias.com"}, "maintainers": [{"username": "danielchatfield", "email": "chatfielddaniel@gmail.com"}, {"username": "mischah", "email": "mail@michael-kuehnel.de"}, {"username": "sboudrias", "email": "admin@simonboudrias.com"}], "repository": {"type": "git", "url": "git+https://github.com/SBoudrias/Inquirer.js.git"}, "links": {"npm": "https://www.npmjs.com/package/inquirer", "homepage": "https://github.com/SBoudrias/Inquirer.js#readme", "repository": "https://github.com/SBoudrias/Inquirer.js", "bugs": "https://github.com/SBoudrias/Inquirer.js/issues"}, "license": "MIT", "dependencies": {"ansi-escapes": "^4.2.1", "chalk": "^3.0.0", "cli-cursor": "^3.1.0", "cli-width": "^2.0.0", "external-editor": "^3.0.3", "figures": "^3.0.0", "lodash": "^4.17.15", "mute-stream": "0.0.8", "run-async": "^2.4.0", "rxjs": "^6.5.3", "string-width": "^4.1.0", "strip-ansi": "^6.0.0", "through": "^2.3.6"}, "devDependencies": {"chai": "^4.2.0", "chalk-pipe": "^3.0.0", "cmdify": "^0.0.4", "mocha": "^7.1.0", "mockery": "^2.1.0", "nyc": "^15.0.0", "sinon": "^9.0.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 5}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 5}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 12}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 18}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<img width=\"75px\" height=\"75px\" align=\"right\" alt=\"Inquirer Logo\" src=\"https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/assets/inquirer_readme.svg?sanitize=true\" title=\"Inquirer.js\"/>\n\n# Inquirer.js\n\n[![npm](https://badge.fury.io/js/inquirer.svg)](http://badge.fury.io/js/inquirer)\n[![tests](https://travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master)](http://travis-ci.org/SBoudrias/Inquirer.js)\n[![Coverage Status](https://codecov.io/gh/SBoudrias/Inquirer.js/branch/master/graph/badge.svg)](https://codecov.io/gh/SBoudrias/Inquirer.js)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js?ref=badge_shield)\n\nA collection of common interactive command line user interfaces.\n\n## Table of Contents\n\n1.  [Documentation](#documentation)\n    1.  [Installation](#installation)\n    2.  [Examples](#examples)\n    3.  [Methods](#methods)\n    4.  [Objects](#objects)\n    5.  [Questions](#questions)\n    6.  [Answers](#answers)\n    7.  [Separator](#separator)\n    8.  [Prompt Types](#prompt)\n2.  [User Interfaces and Layouts](#layouts)\n    1.  [Reactive Interface](#reactive)\n3.  [Support](#support)\n4.  [News](#news)\n5.  [Contributing](#contributing)\n6.  [License](#license)\n7.  [Plugins](#plugins)\n\n## Goal and Philosophy\n\n**`Inquirer.js`** strives to be an easily embeddable and beautiful command line interface for [Node.js](https://nodejs.org/) (and perhaps the \"CLI [Xanadu](https://en.wikipedia.org/wiki/Citizen_Kane)\").\n\n**`Inquirer.js`** should ease the process of\n\n- providing _error feedback_\n- _asking questions_\n- _parsing_ input\n- _validating_ answers\n- managing _hierarchical prompts_\n\n> **Note:** **`Inquirer.js`** provides the user interface and the inquiry session flow. If you're searching for a full blown command line program utility, then check out [commander](https://github.com/visionmedia/commander.js), [vorpal](https://github.com/dthree/vorpal) or [args](https://github.com/leo/args).\n\n## [Documentation](#documentation)\n\n<a name=\"documentation\"></a>\n\n### Installation\n\n<a name=\"installation\"></a>\n\n```shell\nnpm install inquirer\n```\n\n```javascript\nvar inquirer = require('inquirer');\ninquirer\n  .prompt([\n    /* Pass your questions in here */\n  ])\n  .then(answers => {\n    // Use user feedback for... whatever!!\n  })\n  .catch(error => {\n    if(error.isTtyError) {\n      // Prompt couldn't be rendered in the current environment\n    } else {\n      // Something else when wrong\n    }\n  });\n```\n\n<a name=\"examples\"></a>\n\n### Examples (Run it and see it)\n\nCheck out the [`packages/inquirer/examples/`](https://github.com/SBoudrias/Inquirer.js/tree/master/packages/inquirer/examples) folder for code and interface examples.\n\n```shell\nnode packages/inquirer/examples/pizza.js\nnode packages/inquirer/examples/checkbox.js\n# etc...\n```\n\n### Methods\n\n<a name=\"methods\"></a>\n\n#### `inquirer.prompt(questions) -> promise`\n\nLaunch the prompt interface (inquiry session)\n\n- **questions** (Array) containing [Question Object](#question) (using the [reactive interface](#reactive-interface), you can also pass a `Rx.Observable` instance)\n- returns a **Promise**\n\n#### `inquirer.registerPrompt(name, prompt)`\n\nRegister prompt plugins under `name`.\n\n- **name** (string) name of the this new prompt. (used for question `type`)\n- **prompt** (object) the prompt object itself (the plugin)\n\n#### `inquirer.createPromptModule() -> prompt function`\n\nCreate a self contained inquirer module. If you don't want to affect other libraries that also rely on inquirer when you overwrite or add new prompt types.\n\n```js\nvar prompt = inquirer.createPromptModule();\n\nprompt(questions).then(/* ... */);\n```\n\n### Objects\n\n<a name=\"objects\"></a>\n\n#### Question\n\n<a name=\"questions\"></a>\nA question object is a `hash` containing question related values:\n\n- **type**: (String) Type of the prompt. Defaults: `input` - Possible values: `input`, `number`, `confirm`,\n  `list`, `rawlist`, `expand`, `checkbox`, `password`, `editor`\n- **name**: (String) The name to use when storing the answer in the answers hash. If the name contains periods, it will define a path in the answers hash.\n- **message**: (String|Function) The question to print. If defined as a function, the first parameter will be the current inquirer session answers. Defaults to the value of `name` (followed by a colon).\n- **default**: (String|Number|Boolean|Array|Function) Default value(s) to use if nothing is entered, or a function that returns the default value(s). If defined as a function, the first parameter will be the current inquirer session answers.\n- **choices**: (Array|Function) Choices array or a function returning a choices array. If defined as a function, the first parameter will be the current inquirer session answers.\n  Array values can be simple `numbers`, `strings`, or `objects` containing a `name` (to display in list), a `value` (to save in the answers hash) and a `short` (to display after selection) properties. The choices array can also contain [a `Separator`](#separator).\n- **validate**: (Function) Receive the user input and answers hash. Should return `true` if the value is valid, and an error message (`String`) otherwise. If `false` is returned, a default error message is provided.\n- **filter**: (Function) Receive the user input and return the filtered value to be used inside the program. The value returned will be added to the _Answers_ hash.\n- **transformer**: (Function) Receive the user input, answers hash and option flags, and return a transformed value to display to the user. The transformation only impacts what is shown while editing. It does not modify the answers hash.\n- **when**: (Function, Boolean) Receive the current user answers hash and should return `true` or `false` depending on whether or not this question should be asked. The value can also be a simple boolean.\n- **pageSize**: (Number) Change the number of lines that will be rendered when using `list`, `rawList`, `expand` or `checkbox`.\n- **prefix**: (String) Change the default _prefix_ message.\n- **suffix**: (String) Change the default _suffix_ message.\n\n`default`, `choices`(if defined as functions), `validate`, `filter` and `when` functions can be called asynchronously. Either return a promise or use `this.async()` to get a callback you'll call with the final value.\n\n```javascript\n{\n  /* Preferred way: with promise */\n  filter() {\n    return new Promise(/* etc... */);\n  },\n\n  /* Legacy way: with this.async */\n  validate: function (input) {\n    // Declare function as asynchronous, and save the done callback\n    var done = this.async();\n\n    // Do async stuff\n    setTimeout(function() {\n      if (typeof input !== 'number') {\n        // Pass the return value in the done callback\n        done('You need to provide a number');\n        return;\n      }\n      // Pass the return value in the done callback\n      done(null, true);\n    }, 3000);\n  }\n}\n```\n\n### Answers\n\n<a name=\"answers\"></a>\nA key/value hash containing the client answers in each prompt.\n\n- **Key** The `name` property of the _question_ object\n- **Value** (Depends on the prompt)\n  - `confirm`: (Boolean)\n  - `input` : User input (filtered if `filter` is defined) (String)\n  - `number`: User input (filtered if `filter` is defined) (Number)\n  - `rawlist`, `list` : Selected choice value (or name if no value specified) (String)\n\n### Separator\n\n<a name=\"separator\"></a>\nA separator can be added to any `choices` array:\n\n```\n// In the question object\nchoices: [ \"Choice A\", new inquirer.Separator(), \"choice B\" ]\n\n// Which'll be displayed this way\n[?] What do you want to do?\n > Order a pizza\n   Make a reservation\n   --------\n   Ask opening hours\n   Talk to the receptionist\n```\n\nThe constructor takes a facultative `String` value that'll be use as the separator. If omitted, the separator will be `--------`.\n\nSeparator instances have a property `type` equal to `separator`. This should allow tools fa\u00e7ading Inquirer interface from detecting separator types in lists.\n\n<a name=\"prompt\"></a>\n\n### Prompt types\n\n---\n\n> **Note:**: _allowed options written inside square brackets (`[]`) are optional. Others are required._\n\n#### List - `{type: 'list'}`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array or a choice `value`)\n\n![List prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg)\n\n---\n\n#### Raw List - `{type: 'rawlist'}`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array)\n\n![Raw list prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/rawlist.svg)\n\n---\n\n#### Expand - `{type: 'expand'}`\n\nTake `type`, `name`, `message`, `choices`[, `default`] properties. (Note that\ndefault must be the choice `index` in the array. If `default` key not provided, then `help` will be used as default choice)\n\nNote that the `choices` object will take an extra parameter called `key` for the `expand` prompt. This parameter must be a single (lowercased) character. The `h` option is added by the prompt and shouldn't be defined by the user.\n\nSee `examples/expand.js` for a running example.\n\n![Expand prompt closed](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-y.svg)\n![Expand prompt expanded](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-d.svg)\n\n---\n\n#### Checkbox - `{type: 'checkbox'}`\n\nTake `type`, `name`, `message`, `choices`[, `filter`, `validate`, `default`] properties. `default` is expected to be an Array of the checked choices value.\n\nChoices marked as `{checked: true}` will be checked by default.\n\nChoices whose property `disabled` is truthy will be unselectable. If `disabled` is a string, then the string will be outputted next to the disabled choice, otherwise it'll default to `\"Disabled\"`. The `disabled` property can also be a synchronous function receiving the current answers as argument and returning a boolean or a string.\n\n![Checkbox prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/checkbox.svg)\n\n---\n\n#### Confirm - `{type: 'confirm'}`\n\nTake `type`, `name`, `message`, [`default`] properties. `default` is expected to be a boolean if used.\n\n![Confirm prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/confirm.svg)\n\n---\n\n#### Input - `{type: 'input'}`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`, `transformer`] properties.\n\n![Input prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/input.svg)\n\n---\n\n#### Input - `{type: 'number'}`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`, `transformer`] properties.\n\n---\n\n#### Password - `{type: 'password'}`\n\nTake `type`, `name`, `message`, `mask`,[, `default`, `filter`, `validate`] properties.\n\n![Password prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/password.svg)\n\n---\n\nNote that `mask` is required to hide the actual user input.\n\n#### Editor - `{type: 'editor'}`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`] properties\n\nLaunches an instance of the users preferred editor on a temporary file. Once the user exits their editor, the contents of the temporary file are read in as the result. The editor to use is determined by reading the $VISUAL or $EDITOR environment variables. If neither of those are present, notepad (on Windows) or vim (Linux or Mac) is used.\n\n<a name=\"layouts\"></a>\n\n### Use in Non-Interactive Environments\n`prompt()` requires that it is run in an interactive environment. (I.e. [One where `process.stdin.isTTY` is `true`](https://nodejs.org/docs/latest-v12.x/api/process.html#process_a_note_on_process_i_o)). If `prompt()` is invoked outside of such an environment, then `prompt()` will return a rejected promise with an error. For convenience, the error will have a `isTtyError` property to programmatically indicate the cause.\n\n\n## User Interfaces and layouts\n\nAlong with the prompts, Inquirer offers some basic text UI.\n\n#### Bottom Bar - `inquirer.ui.BottomBar`\n\nThis UI present a fixed text at the bottom of a free text zone. This is useful to keep a message to the bottom of the screen while outputting command outputs on the higher section.\n\n```javascript\nvar ui = new inquirer.ui.BottomBar();\n\n// pipe a Stream to the log zone\noutputStream.pipe(ui.log);\n\n// Or simply write output\nui.log.write('something just happened.');\nui.log.write('Almost over, standby!');\n\n// During processing, update the bottom bar content to display a loader\n// or output a progress bar, etc\nui.updateBottomBar('new bottom bar content');\n```\n\n<a name=\"reactive\"></a>\n\n## Reactive interface\n\nInternally, Inquirer uses the [JS reactive extension](https://github.com/ReactiveX/rxjs) to handle events and async flows.\n\nThis mean you can take advantage of this feature to provide more advanced flows. For example, you can dynamically add questions to be asked:\n\n```js\nvar prompts = new Rx.Subject();\ninquirer.prompt(prompts);\n\n// At some point in the future, push new questions\nprompts.next({\n  /* question... */\n});\nprompts.next({\n  /* question... */\n});\n\n// When you're done\nprompts.complete();\n```\n\nAnd using the return value `process` property, you can access more fine grained callbacks:\n\n```js\ninquirer.prompt(prompts).ui.process.subscribe(onEachAnswer, onError, onComplete);\n```\n\n## Support (OS Terminals)\n\n<a name=\"support\"></a>\n\nYou should expect mostly good support for the CLI below. This does not mean we won't\nlook at issues found on other command line - feel free to report any!\n\n- **Mac OS**:\n  - Terminal.app\n  - iTerm\n- **Windows**:\n  - [ConEmu](https://conemu.github.io/)\n  - cmd.exe\n  - Powershell\n  - Cygwin\n- **Linux (Ubuntu, openSUSE, Arch Linux, etc)**:\n  - gnome-terminal (Terminal GNOME)\n  - konsole\n\n## News on the march (Release notes)\n\n<a name=\"news\"></a>\n\nPlease refer to the [GitHub releases section for the changelog](https://github.com/SBoudrias/Inquirer.js/releases)\n\n## Contributing\n\n<a name=\"contributing\"></a>\n\n**Unit test**\nUnit test are written in [Mocha](https://mochajs.org/). Please add a unit test for every new feature or bug fix. `npm test` to run the test suite.\n\n**Documentation**\nAdd documentation for every API change. Feel free to send typo fixes and better docs!\n\nWe're looking to offer good support for multiple prompts and environments. If you want to\nhelp, we'd like to keep a list of testers for each terminal/OS so we can contact you and\nget feedback before release. Let us know if you want to be added to the list (just tweet\nto [@vaxilart](https://twitter.com/Vaxilart)) or just add your name to [the wiki](https://github.com/SBoudrias/Inquirer.js/wiki/Testers)\n\n## License\n\n<a name=\"license\"></a>\n\nCopyright (c) 2016 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))\nLicensed under the MIT license.\n\n## Plugins\n\n<a name=\"plugins\"></a>\n\n### Prompts\n\n[**autocomplete**](https://github.com/mokkabonna/inquirer-autocomplete-prompt)<br>\nPresents a list of options as the user types, compatible with other packages such as fuzzy (for search)<br>\n<br>\n![autocomplete prompt](https://github.com/mokkabonna/inquirer-autocomplete-prompt/raw/master/inquirer.gif)\n\n[**checkbox-plus**](https://github.com/faressoft/inquirer-checkbox-plus-prompt)<br>\nCheckbox list with autocomplete and other additions<br>\n<br>\n![checkbox-plus](https://github.com/faressoft/inquirer-checkbox-plus-prompt/raw/master/demo.gif)\n\n[**datetime**](https://github.com/DerekTBrown/inquirer-datepicker-prompt)<br>\nCustomizable date/time selector using both number pad and arrow keys<br>\n<br>\n![Datetime Prompt](https://github.com/DerekTBrown/inquirer-datepicker-prompt/raw/master/example/datetime-prompt.png)\n\n[**inquirer-select-line**](https://github.com/adam-golab/inquirer-select-line)<br>\nPrompt for selecting index in array where add new element<br>\n<br>\n![inquirer-select-line gif](https://media.giphy.com/media/xUA7b1MxpngddUvdHW/giphy.gif)\n\n[**command**](https://github.com/sullof/inquirer-command-prompt)<br>\n<br>\nSimple prompt with command history and dynamic autocomplete\n\n[**inquirer-fuzzy-path**](https://github.com/adelsz/inquirer-fuzzy-path)<br>\nPrompt for fuzzy file/directory selection.<br>\n<br>\n![inquirer-fuzzy-path](https://raw.githubusercontent.com/adelsz/inquirer-fuzzy-path/master/recording.gif)\n\n[**inquirer-emoji**](https://github.com/tannerntannern/inquirer-emoji)<br>\nPrompt for inputting emojis.<br>\n<br>\n![inquirer-emoji](https://github.com/tannerntannern/inquirer-emoji/raw/master/demo.gif)\n\n[**inquirer-chalk-pipe**](https://github.com/LitoMore/inquirer-chalk-pipe)<br>\nPrompt for input chalk-pipe style strings<br>\n<br>\n![inquirer-chalk-pipe](https://github.com/LitoMore/inquirer-chalk-pipe/raw/master/screenshot.gif)\n\n[**inquirer-search-checkbox**](https://github.com/clinyong/inquirer-search-checkbox)<br>\nSearchable Inquirer checkbox<br>\n\n[**inquirer-prompt-suggest**](https://github.com/olistic/inquirer-prompt-suggest)<br>\nInquirer prompt for your less creative users.\n\n![inquirer-prompt-suggest](https://user-images.githubusercontent.com/5600126/40391192-d4f3d6d0-5ded-11e8-932f-4b75b642c09e.gif)\n\n[**inquirer-s3**](https://github.com/HQarroum/inquirer-s3)<br>\nAn S3 object selector for Inquirer.\n\n![inquirer-s3](https://github.com/HQarroum/inquirer-s3/raw/master/docs/inquirer-screenshot.png)\n\n[**inquirer-autosubmit-prompt**](https://github.com/yaodingyd/inquirer-autosubmit-prompt)<br>\nAuto submit based on your current input, saving one extra enter\n\n[**inquirer-file-tree-selection-prompt**](https://github.com/anc95/inquirer-file-tree-selection)<br>\nInquirer prompt for to select a file or directory in file tree\n\n![inquirer-file-tree-selection-prompt](https://github.com/anc95/inquirer-file-tree-selection/blob/master/example/screenshot.gif)\n\n[**inquirer-table-prompt**](https://github.com/eduardoboucas/inquirer-table-prompt)<br>\nA table-like prompt for Inquirer.\n\n![inquirer-table-prompt](https://raw.githubusercontent.com/eduardoboucas/inquirer-table-prompt/master/screen-capture.gif)"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 3896102}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 20450209}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 84455867}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 211577383}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 408921974}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 735729753}], "dependentsCount": 15887, "starsCount": 439}, "github": {"starsCount": 12010, "forksCount": 761, "subscribersCount": 147, "issues": {"count": 896, "openCount": 147, "distribution": {"3600": 130, "10800": 60, "32400": 92, "97200": 89, "291600": 65, "874800": 81, "2624400": 88, "7873200": 62, "23619600": 73, "70858800": 79, "212576400": 77}, "isDisabled": false}, "contributors": [{"username": "SBoudrias", "commitsCount": 500}, {"username": "greenkeeper[bot]", "commitsCount": 28}, {"username": "LitoMore", "commitsCount": 10}, {"username": "sindresorhus", "commitsCount": 8}, {"username": "akwangho", "commitsCount": 6}, {"username": "danielchatfield", "commitsCount": 5}, {"username": "mokkabonna", "commitsCount": 5}, {"username": "mrkmg", "commitsCount": 4}, {"username": "jcready", "commitsCount": 3}, {"username": "mshima", "commitsCount": 3}, {"username": "vweevers", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "Froren", "commitsCount": 2}, {"username": "adamreisnz", "commitsCount": 2}, {"username": "jhorbulyk", "commitsCount": 2}, {"username": "ruyadorno", "commitsCount": 2}, {"username": "sarthology", "commitsCount": 2}, {"username": "tklun", "commitsCount": 2}, {"username": "user3587412", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "Abazhenov", "commitsCount": 1}, {"username": "CaAlden", "commitsCount": 1}, {"username": "DerekTBrown", "commitsCount": 1}, {"username": "Equim-chan", "commitsCount": 1}, {"username": "GabrielTK", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "HQarroum", "commitsCount": 1}, {"username": "PatOnTheBack", "commitsCount": 1}, {"username": "Rawnly", "commitsCount": 1}, {"username": "RichardHJensen", "commitsCount": 1}, {"username": "TheSavior", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "Turbo87", "commitsCount": 1}, {"username": "ZYSzys", "commitsCount": 1}, {"username": "acburdine", "commitsCount": 1}, {"username": "adam-golab", "commitsCount": 1}, {"username": "adelsz", "commitsCount": 1}, {"username": "aliaksandr-yermalayeu", "commitsCount": 1}, {"username": "anc95", "commitsCount": 1}, {"username": "anicke", "commitsCount": 1}, {"username": "backspace", "commitsCount": 1}, {"username": "biancapower", "commitsCount": 1}, {"username": "bibli-alex", "commitsCount": 1}, {"username": "blewisio", "commitsCount": 1}, {"username": "bokub", "commitsCount": 1}, {"username": "casz", "commitsCount": 1}, {"username": "chrisdothtml", "commitsCount": 1}, {"username": "clinyong", "commitsCount": 1}, {"username": "danmactough", "commitsCount": 1}, {"username": "dawidpawlowski", "commitsCount": 1}, {"username": "dkirchhof", "commitsCount": 1}, {"username": "dougluce", "commitsCount": 1}, {"username": "dwieeb", "commitsCount": 1}, {"username": "eduardoboucas", "commitsCount": 1}, {"username": "eush77", "commitsCount": 1}, {"username": "evenstensberg", "commitsCount": 1}, {"username": "faressoft", "commitsCount": 1}, {"username": "ihorskyi", "commitsCount": 1}, {"username": "ilabacheuski", "commitsCount": 1}, {"username": "imyelo", "commitsCount": 1}, {"username": "jakepruitt", "commitsCount": 1}, {"username": "janriemer", "commitsCount": 1}, {"username": "jared-hexagon", "commitsCount": 1}, {"username": "jedmao", "commitsCount": 1}, {"username": "jmeis", "commitsCount": 1}, {"username": "joeyZhouYicheng", "commitsCount": 1}, {"username": "joshkel", "commitsCount": 1}, {"username": "jtillmann", "commitsCount": 1}, {"username": "kaustavha", "commitsCount": 1}, {"username": "larkinscott", "commitsCount": 1}, {"username": "leak4mk0", "commitsCount": 1}, {"username": "leo", "commitsCount": 1}, {"username": "loicbourgois", "commitsCount": 1}, {"username": "mathiasbynens", "commitsCount": 1}, {"username": "moqmar", "commitsCount": 1}, {"username": "notnarb", "commitsCount": 1}, {"username": "ntwcklng", "commitsCount": 1}, {"username": "ohicham", "commitsCount": 1}, {"username": "olistic", "commitsCount": 1}, {"username": "orgads", "commitsCount": 1}, {"username": "pgherveou", "commitsCount": 1}, {"username": "phantom0424", "commitsCount": 1}, {"username": "pldg", "commitsCount": 1}, {"username": "raingerber", "commitsCount": 1}, {"username": "ransombriggs", "commitsCount": 1}, {"username": "rhyek", "commitsCount": 1}, {"username": "ryankeener", "commitsCount": 1}, {"username": "sathomps", "commitsCount": 1}, {"username": "sdgluck", "commitsCount": 1}, {"username": "sirreal", "commitsCount": 1}, {"username": "stuartpb", "commitsCount": 1}, {"username": "sullof", "commitsCount": 1}, {"username": "tannerntannern", "commitsCount": 1}, {"username": "travi", "commitsCount": 1}, {"username": "walfly", "commitsCount": 1}, {"username": "xiaoxielnino", "commitsCount": 1}, {"username": "yaodingyd", "commitsCount": 1}, {"username": "yujunlong2000", "commitsCount": 1}, {"username": "zaide-chris", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 5}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 18}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 21}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 58}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 67352}, "badges": [{"urls": {"original": "https://travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master", "service": "https://api.travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master", "shields": "https://img.shields.io/travis/SBoudrias/Inquirer.js/master.svg", "content": "https://img.shields.io/travis/SBoudrias/Inquirer.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.741, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 13456, "downloadsCount": 70525794.33333333, "downloadsAcceleration": 263897.10106544907, "dependentsCount": 15887}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8639212328767123, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8137833156068751, "detail": {"quality": 0.878455167701592, "popularity": 0.9055017805400611, "maintenance": 0.6666318345925031}}}
{"analyzedAt": "2020-02-27T10:38:40.318Z", "collected": {"metadata": {"name": "is-accessor-descriptor", "scope": "unscoped", "version": "3.0.1", "description": "Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.", "keywords": ["accessor", "check", "data", "descriptor", "get", "getter", "is", "keys", "object", "properties", "property", "set", "setter", "type", "valid", "value"], "date": "2018-12-14T02:06:32.161Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Rouven We\u00dfling", "url": "www.rouvenwessling.de"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-accessor-descriptor.git"}, "links": {"npm": "https://www.npmjs.com/package/is-accessor-descriptor", "homepage": "https://github.com/jonschlinkert/is-accessor-descriptor", "repository": "https://github.com/jonschlinkert/is-accessor-descriptor", "bugs": "https://github.com/jonschlinkert/is-accessor-descriptor/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-accessor-descriptor [![NPM version](https://img.shields.io/npm/v/is-accessor-descriptor.svg?style=flat)](https://www.npmjs.com/package/is-accessor-descriptor) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-accessor-descriptor.svg?style=flat)](https://npmjs.org/package/is-accessor-descriptor) [![NPM total downloads](https://img.shields.io/npm/dt/is-accessor-descriptor.svg?style=flat)](https://npmjs.org/package/is-accessor-descriptor) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-accessor-descriptor.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-accessor-descriptor)\n\n> Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-accessor-descriptor\n```\n\n## Usage\n\n```js\nconst isAccessor = require('is-accessor-descriptor');\nconst obj = {\n  get foo() {},\n  bar: {get: function() {}}\n};\n\nisAccessor(obj, 'foo'); //=> true\nisAccessor(obj, 'bar'); //=> false\n\n// or, if you already have the descriptor you can pass it directly\nconst foo = Object.getOwnPropertyDescriptor(obj, 'foo');\nisAccessor(foo); //=> true\n\nconst bar = Object.getOwnPropertyDescriptor(obj, 'bar');\nisAccessor(bar); //=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-accessor-descriptor](https://www.npmjs.com/package/is-accessor-descriptor): Returns true if a value has the characteristics of a valid JavaScript accessor descriptor. | [homepage](https://github.com/jonschlinkert/is-accessor-descriptor \"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.\")\n* [is-data-descriptor](https://www.npmjs.com/package/is-data-descriptor): Returns true if a value has the characteristics of a valid JavaScript data descriptor. | [homepage](https://github.com/jonschlinkert/is-data-descriptor \"Returns true if a value has the characteristics of a valid JavaScript data descriptor.\")\n* [is-descriptor](https://www.npmjs.com/package/is-descriptor): Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for\u2026 [more](https://github.com/jonschlinkert/is-descriptor) | [homepage](https://github.com/jonschlinkert/is-descriptor \"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 29 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 2  | [realityking](https://github.com/realityking) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on December 13, 2018._"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 4262732}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 22065461}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 94917813}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 243823313}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 485924320}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 912543199}], "dependentsCount": 47, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 1, "subscribersCount": 3, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 1, "10800": 2, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 32}, {"username": "realityking", "commitsCount": 2}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4659, "testsSize": 2673}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-accessor-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-accessor-descriptor.svg", "content": "https://img.shields.io/npm/v/is-accessor-descriptor.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-accessor-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-accessor-descriptor.svg", "content": "https://img.shields.io/npm/dm/is-accessor-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-accessor-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-accessor-descriptor.svg", "content": "https://img.shields.io/npm/dt/is-accessor-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-accessor-descriptor.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-accessor-descriptor.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-accessor-descriptor.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-accessor-descriptor.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 17, "downloadsCount": 81274437.66666667, "downloadsAcceleration": 215817.4871765601, "dependentsCount": 47}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8216933680130694, "detail": {"quality": 0.9691397075145873, "popularity": 0.517065319055108, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-09T01:41:04.088Z", "collected": {"metadata": {"name": "isarray", "scope": "unscoped", "version": "2.0.5", "description": "Array#isArray for older browsers", "keywords": ["browser", "isarray", "array"], "date": "2019-07-08T13:21:22.377Z", "author": {"name": "Julian Gruber", "email": "mail@juliangruber.com", "url": "http://juliangruber.com"}, "publisher": {"username": "juliangruber", "email": "julian@juliangruber.com"}, "maintainers": [{"username": "juliangruber", "email": "julian@juliangruber.com"}], "repository": {"type": "git", "url": "git://github.com/juliangruber/isarray.git"}, "links": {"npm": "https://www.npmjs.com/package/isarray", "homepage": "https://github.com/juliangruber/isarray", "repository": "https://github.com/juliangruber/isarray", "bugs": "https://github.com/juliangruber/isarray/issues"}, "license": "MIT", "devDependencies": {"tape": "~2.13.4"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# isarray\n\n`Array#isArray` for older browsers and deprecated Node.js versions.\n\n[![build status](https://secure.travis-ci.org/juliangruber/isarray.svg)](http://travis-ci.org/juliangruber/isarray)\n[![downloads](https://img.shields.io/npm/dm/isarray.svg)](https://www.npmjs.org/package/isarray)\n\n[![browser support](https://ci.testling.com/juliangruber/isarray.png)\n](https://ci.testling.com/juliangruber/isarray)\n\n__Just use Array.isArray directly__, unless you need to support those older versions.\n\n## Usage\n\n```js\nvar isArray = require('isarray');\n\nconsole.log(isArray([])); // => true\nconsole.log(isArray({})); // => false\n```\n\n## Installation\n\nWith [npm](https://npmjs.org) do\n\n```bash\n$ npm install isarray\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/node-browserify).\n\n## Sponsors\n\nThis module is proudly supported by my [Sponsors](https://github.com/juliangruber/sponsors)!\n\nDo you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my [Patreon](https://www.patreon.com/juliangruber). Not sure how much of my modules you're using? Try [feross/thanks](https://github.com/feross/thanks)!"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1581901}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 28511281}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 116233006}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 319071784}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 625335473}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1175577488}], "dependentsCount": 329, "starsCount": 8}, "github": {"starsCount": 94, "forksCount": 31, "subscribersCount": 9, "issues": {"count": 28, "openCount": 6, "distribution": {"3600": 6, "10800": 1, "32400": 2, "97200": 3, "291600": 4, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 6, "70858800": 1, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "juliangruber", "commitsCount": 24}, {"username": "Haroenv", "commitsCount": 1}, {"username": "LeSuisse", "commitsCount": 1}, {"username": "bnb", "commitsCount": 1}, {"username": "hsingh23", "commitsCount": 1}, {"username": "jamestalmage", "commitsCount": 1}, {"username": "kopylovvlad", "commitsCount": 1}, {"username": "mcollina", "commitsCount": 1}, {"username": "omerson", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1211, "testsSize": 1139}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/juliangruber/isarray.svg", "service": "https://api.travis-ci.org/juliangruber/isarray.svg", "shields": "https://img.shields.io/travis/juliangruber/isarray.svg", "content": "https://img.shields.io/travis/juliangruber/isarray.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/dm/isarray.svg", "shields": "https://img.shields.io/npm/dm/isarray.svg", "content": "https://img.shields.io/npm/dm/isarray.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 151, "downloadsCount": 106357261.33333333, "downloadsAcceleration": 226749.75306316593, "dependentsCount": 329}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9761904761904763, "issuesDistribution": 0.9}}, "score": {"final": 0.8470421618958648, "detail": {"quality": 0.9478474904816662, "popularity": 0.6077904802317636, "maintenance": 0.9998892762007074}}}
{"analyzedAt": "2020-02-28T01:46:21.380Z", "collected": {"metadata": {"name": "is-buffer", "scope": "unscoped", "version": "2.0.4", "description": "Determine if an object is a Buffer", "keywords": ["arraybuffer", "browser", "browser buffer", "browserify", "buffer", "buffers", "core buffer", "dataview", "float32array", "float64array", "int16array", "int32array", "type", "typed array", "uint32array"], "date": "2019-10-01T04:48:50.958Z", "author": {"name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "https://feross.org", "username": "feross"}, "publisher": {"username": "feross", "email": "feross@feross.org"}, "maintainers": [{"username": "feross", "email": "feross@feross.org"}], "repository": {"type": "git", "url": "git://github.com/feross/is-buffer.git"}, "links": {"npm": "https://www.npmjs.com/package/is-buffer", "homepage": "https://github.com/feross/is-buffer#readme", "repository": "https://github.com/feross/is-buffer", "bugs": "https://github.com/feross/is-buffer/issues"}, "license": "MIT", "devDependencies": {"airtap": "^2.0.3", "standard": "*", "tape": "^4.11.0"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# is-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/is-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/is-buffer\n[npm-image]: https://img.shields.io/npm/v/is-buffer.svg\n[npm-url]: https://npmjs.org/package/is-buffer\n[downloads-image]: https://img.shields.io/npm/dm/is-buffer.svg\n[downloads-url]: https://npmjs.org/package/is-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Determine if an object is a [`Buffer`](http://nodejs.org/api/buffer.html) (including the [browserify Buffer](https://github.com/feross/buffer))\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[saucelabs-image]: https://saucelabs.com/browser-matrix/is-buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/is-buffer\n\n## Why not use `Buffer.isBuffer`?\n\nThis module lets you check if an object is a `Buffer` without using `Buffer.isBuffer` (which includes the whole [buffer](https://github.com/feross/buffer) module in [browserify](http://browserify.org/)).\n\nIt's future-proof and works in node too!\n\n## install\n\n```bash\nnpm install is-buffer\n```\n\n[Get supported is-buffer with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-is-buffer?utm_source=npm-is-buffer&utm_medium=referral&utm_campaign=readme)\n\n## usage\n\n```js\nvar isBuffer = require('is-buffer')\n\nisBuffer(new Buffer(4)) // true\nisBuffer(Buffer.alloc(4)) //true\n\nisBuffer(undefined) // false\nisBuffer(null) // false\nisBuffer('') // false\nisBuffer(true) // false\nisBuffer(false) // false\nisBuffer(0) // false\nisBuffer(1) // false\nisBuffer(1.0) // false\nisBuffer('string') // false\nisBuffer({}) // false\nisBuffer(function foo () {}) // false\n```\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)."}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 3555444}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 18654724}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 79620332}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 207762342}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 412029092}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 727511179}], "dependentsCount": 299, "starsCount": 4}, "github": {"starsCount": 72, "forksCount": 18, "subscribersCount": 3, "issues": {"count": 38, "openCount": 1, "distribution": {"3600": 9, "10800": 4, "32400": 3, "97200": 5, "291600": 3, "874800": 6, "2624400": 3, "7873200": 1, "23619600": 4, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 63}, {"username": "greenkeeper[bot]", "commitsCount": 4}, {"username": "LinusU", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "iAmShakil", "commitsCount": 1}, {"username": "paladox", "commitsCount": 1}, {"username": "smondalwsgc", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 5}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "Tidelift", "state": "success"}]}, "source": {"files": {"readmeSize": 1953, "testsSize": 1035, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/feross/is-buffer/master.svg", "service": "https://api.travis-ci.org/feross/is-buffer.svg?branch=master", "shields": "https://img.shields.io/travis/feross/is-buffer/master.svg", "content": "https://img.shields.io/travis/feross/is-buffer/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/is-buffer.svg", "shields": "https://img.shields.io/npm/v/is-buffer.svg", "content": "https://img.shields.io/npm/v/is-buffer.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-buffer.svg", "shields": "https://img.shields.io/npm/dm/is-buffer.svg", "content": "https://img.shields.io/npm/dm/is-buffer.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 104, "downloadsCount": 69254114, "downloadsAcceleration": 239174.73828006093, "dependentsCount": 299}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9277822966507177}}, "score": {"final": 0.847195388479332, "detail": {"quality": 0.9679780173703354, "popularity": 0.5909416638033476, "maintenance": 0.9999211455344565}}}
{"analyzedAt": "2020-01-31T13:30:15.675Z", "collected": {"metadata": {"name": "is-data-descriptor", "scope": "unscoped", "version": "2.0.0", "description": "Returns true if a value has the characteristics of a valid JavaScript data descriptor.", "keywords": ["accessor", "check", "data", "descriptor", "get", "getter", "is", "keys", "object", "properties", "property", "set", "setter", "type", "valid", "value"], "date": "2018-12-14T01:29:26.701Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Rouven We\u00dfling", "url": "www.rouvenwessling.de"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-data-descriptor.git"}, "links": {"npm": "https://www.npmjs.com/package/is-data-descriptor", "homepage": "https://github.com/jonschlinkert/is-data-descriptor", "repository": "https://github.com/jonschlinkert/is-data-descriptor", "bugs": "https://github.com/jonschlinkert/is-data-descriptor/issues"}, "license": "MIT", "dependencies": {"kind-of": "^6.0.0"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2018-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-data-descriptor [![NPM version](https://img.shields.io/npm/v/is-data-descriptor.svg?style=flat)](https://www.npmjs.com/package/is-data-descriptor) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-data-descriptor.svg?style=flat)](https://npmjs.org/package/is-data-descriptor) [![NPM total downloads](https://img.shields.io/npm/dt/is-data-descriptor.svg?style=flat)](https://npmjs.org/package/is-data-descriptor) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-data-descriptor.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-data-descriptor)\n\n> Returns true if a value has the characteristics of a valid JavaScript data descriptor.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-data-descriptor\n```\n\n## Usage\n\n```js\nvar isDataDesc = require('is-data-descriptor');\n```\n\n## Examples\n\n`true` when the descriptor has valid properties with valid values.\n\n```js\n// `value` can be anything\nisDataDesc({value: 'foo'})\nisDataDesc({value: function() {}})\nisDataDesc({value: true})\n//=> true\n```\n\n`false` when not an object\n\n```js\nisDataDesc('a')\n//=> false\nisDataDesc(null)\n//=> false\nisDataDesc([])\n//=> false\n```\n\n`false` when the object has invalid properties\n\n```js\nisDataDesc({value: 'foo', bar: 'baz'})\n//=> false\nisDataDesc({value: 'foo', bar: 'baz'})\n//=> false\nisDataDesc({value: 'foo', get: function(){}})\n//=> false\nisDataDesc({get: function(){}, value: 'foo'})\n//=> false\n```\n\n`false` when a value is not the correct type\n\n```js\nisDataDesc({value: 'foo', enumerable: 'foo'})\n//=> false\nisDataDesc({value: 'foo', configurable: 'foo'})\n//=> false\nisDataDesc({value: 'foo', writable: 'foo'})\n//=> false\n```\n\n## Valid properties\n\nThe only valid data descriptor properties are the following:\n\n* `configurable` (required)\n* `enumerable` (required)\n* `value` (optional)\n* `writable` (optional)\n\nTo be a valid data descriptor, either `value` or `writable` must be defined.\n\n**Invalid properties**\n\nA descriptor may have additional _invalid_ properties (an error will **not** be thrown).\n\n```js\nvar foo = {};\n\nObject.defineProperty(foo, 'bar', {\n  enumerable: true,\n  whatever: 'blah', // invalid, but doesn't cause an error\n  get: function() {\n    return 'baz';\n  }\n});\n\nconsole.log(foo.bar);\n//=> 'baz'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-accessor-descriptor](https://www.npmjs.com/package/is-accessor-descriptor): Returns true if a value has the characteristics of a valid JavaScript accessor descriptor. | [homepage](https://github.com/jonschlinkert/is-accessor-descriptor \"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.\")\n* [is-data-descriptor](https://www.npmjs.com/package/is-data-descriptor): Returns true if a value has the characteristics of a valid JavaScript data descriptor. | [homepage](https://github.com/jonschlinkert/is-data-descriptor \"Returns true if a value has the characteristics of a valid JavaScript data descriptor.\")\n* [is-descriptor](https://www.npmjs.com/package/is-descriptor): Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for\u2026 [more](https://github.com/jonschlinkert/is-descriptor) | [homepage](https://github.com/jonschlinkert/is-descriptor \"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 21 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [realityking](https://github.com/realityking) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on November 01, 2017._"}, "npm": {"downloads": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 3937600}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 20552930}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 82717503}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 236532155}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 472532307}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 881485023}], "dependentsCount": 40, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 1, "subscribersCount": 3, "issues": {"count": 2, "openCount": 0, "distribution": {"3600": 0, "10800": 2, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 25}, {"username": "realityking", "commitsCount": 2}], "commits": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 5351, "testsSize": 2534}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-data-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-data-descriptor.svg", "content": "https://img.shields.io/npm/v/is-data-descriptor.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-data-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-data-descriptor.svg", "content": "https://img.shields.io/npm/dm/is-data-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-data-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-data-descriptor.svg", "content": "https://img.shields.io/npm/dt/is-data-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-data-descriptor.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-data-descriptor.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-data-descriptor.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-data-descriptor.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 17, "downloadsCount": 78844051.66666667, "downloadsAcceleration": 138093.66569634702, "dependentsCount": 40}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8077415480014327, "detail": {"quality": 0.9333911371497057, "popularity": 0.5078446079060448, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-04T16:31:52.722Z", "collected": {"metadata": {"name": "is-descriptor", "scope": "unscoped", "version": "3.0.0", "description": "Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.", "keywords": ["accessor", "check", "data", "descriptor", "get", "getter", "is", "keys", "object", "properties", "property", "set", "setter", "type", "valid", "value"], "date": "2018-12-14T04:09:12.183Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"url": "https://github.com/wtgtybhertgeghgtwtg"}, {"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-descriptor.git"}, "links": {"npm": "https://www.npmjs.com/package/is-descriptor", "homepage": "https://github.com/jonschlinkert/is-descriptor", "repository": "https://github.com/jonschlinkert/is-descriptor", "bugs": "https://github.com/jonschlinkert/is-descriptor/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^2.0.0", "mocha": "^5.2.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-descriptor [![NPM version](https://img.shields.io/npm/v/is-descriptor.svg?style=flat)](https://www.npmjs.com/package/is-descriptor) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-descriptor.svg?style=flat)](https://npmjs.org/package/is-descriptor) [![NPM total downloads](https://img.shields.io/npm/dt/is-descriptor.svg?style=flat)](https://npmjs.org/package/is-descriptor) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-descriptor.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-descriptor)\n\n> Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-descriptor\n```\n\n## Usage\n\n```js\nconst isDescriptor = require('is-descriptor');\n\nisDescriptor({ value: 'foo' })\n//=> true\nisDescriptor({ get: function() {}, set: function() {} })\n//=> true\nisDescriptor({ get: 'foo', set: function() {} })\n//=> false\n```\n\nYou may also check for a descriptor by passing an object as the first argument and property name (`string`) as the second argument.\n\n```js\nconst obj = {};\nobj.foo = null;\n\nObject.defineProperty(obj, 'bar', { value: 'xyz' });\nReflect.defineProperty(obj, 'baz', { value: 'xyz' });\n\nisDescriptor(obj, 'foo'); //=> true\nisDescriptor(obj, 'bar'); //=> true\nisDescriptor(obj, 'baz'); //=> true\n```\n\n## Examples\n\n### value type\n\nReturns `false` when not an object\n\n```js\nisDescriptor('a'); //=> false\nisDescriptor(null); //=> false\nisDescriptor([]); //=> false\n```\n\n### data descriptor\n\nReturns `true` when the object has valid properties with valid values.\n\n```js\nisDescriptor({ value: 'foo' }); //=> true\nisDescriptor({ value: function() {} }); //=> true\n```\n\nReturns `false` when the object has invalid properties\n\n```js\nisDescriptor({ value: 'foo', bar: 'baz' }); //=> false\nisDescriptor({ value: 'foo', bar: 'baz' }); //=> false\nisDescriptor({ value: 'foo', get: function() {} }); //=> false\nisDescriptor({ get: function() {}, value: function() {} }); //=> false\n```\n\n`false` when a value is not the correct type\n\n```js\nisDescriptor({ value: 'foo', enumerable: 'foo' }); //=> false\nisDescriptor({ value: 'foo', configurable: 'foo' }); //=> false\nisDescriptor({ value: 'foo', writable: 'foo' }); //=> false\n```\n\n### accessor descriptor\n\n`true` when the object has valid properties with valid values.\n\n```js\nisDescriptor({ get: function() {}, set: function() {} }); //=> true\nisDescriptor({ get: function() {} }); //=> true\nisDescriptor({ set: function() {} }); //=> true\n```\n\n`false` when the object has invalid properties\n\n```js\nisDescriptor({ get: function() {}, set: function() {}, bar: 'baz' }); //=> false\nisDescriptor({ get: function() {}, writable: true }); //=> false\nisDescriptor({ get: function() {}, value: true }); //=> false\n```\n\nReturns `false` when an accessor is not a function\n\n```js\nisDescriptor({ get: function() {}, set: 'baz' }); //=> false\nisDescriptor({ get: 'foo', set: function() {} }); //=> false\nisDescriptor({ get: 'foo', bar: 'baz' }); //=> false\nisDescriptor({ get: 'foo', set: 'baz' }); //=> false\n```\n\nReturns `false` when a value is not the correct type\n\n```js\nisDescriptor({ get: function() {}, set: function() {}, enumerable: 'foo' }); //=> false\nisDescriptor({ set: function() {}, configurable: 'foo' }); //=> false\nisDescriptor({ get: function() {}, configurable: 'foo' }); //=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-accessor-descriptor](https://www.npmjs.com/package/is-accessor-descriptor): Returns true if a value has the characteristics of a valid JavaScript accessor descriptor. | [homepage](https://github.com/jonschlinkert/is-accessor-descriptor \"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.\")\n* [is-data-descriptor](https://www.npmjs.com/package/is-data-descriptor): Returns true if a value has the characteristics of a valid JavaScript data descriptor. | [homepage](https://github.com/jonschlinkert/is-data-descriptor \"Returns true if a value has the characteristics of a valid JavaScript data descriptor.\")\n* [is-descriptor](https://www.npmjs.com/package/is-descriptor): Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for\u2026 [more](https://github.com/jonschlinkert/is-descriptor) | [homepage](https://github.com/jonschlinkert/is-descriptor \"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 33 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 1  | [doowb](https://github.com/doowb) |  \n| 1  | [realityking](https://github.com/realityking) |  \n| 1  | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on December 13, 2018._"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 4291669}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 22765905}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 96161217}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 246942940}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 490182301}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 923400306}], "dependentsCount": 46, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 2, "subscribersCount": 3, "issues": {"count": 9, "openCount": 3, "distribution": {"3600": 0, "10800": 2, "32400": 0, "97200": 0, "291600": 1, "874800": 1, "2624400": 1, "7873200": 2, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 32}, {"username": "doowb", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 6681, "testsSize": 3354}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-descriptor.svg", "content": "https://img.shields.io/npm/v/is-descriptor.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-descriptor.svg", "content": "https://img.shields.io/npm/dm/is-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-descriptor.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-descriptor.svg", "content": "https://img.shields.io/npm/dt/is-descriptor.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-descriptor.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-descriptor.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-descriptor.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-descriptor.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 20, "downloadsCount": 82314313.33333333, "downloadsAcceleration": 217220.30036149174, "dependentsCount": 46}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8115795746411536, "detail": {"quality": 0.9333911371497057, "popularity": 0.5188923160406422, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-28T20:40:06.639Z", "collected": {"metadata": {"name": "isexe", "scope": "unscoped", "version": "2.0.0", "description": "Minimal module to check if a file is executable.", "date": "2017-03-23T00:53:16.356Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git+https://github.com/isaacs/isexe.git"}, "links": {"npm": "https://www.npmjs.com/package/isexe", "homepage": "https://github.com/isaacs/isexe#readme", "repository": "https://github.com/isaacs/isexe", "bugs": "https://github.com/isaacs/isexe/issues"}, "license": "ISC", "devDependencies": {"mkdirp": "^0.5.1", "rimraf": "^2.5.0", "tap": "^10.3.0"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "# isexe\n\nMinimal module to check if a file is executable, and a normal file.\n\nUses `fs.stat` and tests against the `PATHEXT` environment variable on\nWindows.\n\n## USAGE\n\n```javascript\nvar isexe = require('isexe')\nisexe('some-file-name', function (err, isExe) {\n  if (err) {\n    console.error('probably file does not exist or something', err)\n  } else if (isExe) {\n    console.error('this thing can be run')\n  } else {\n    console.error('cannot be run')\n  }\n})\n\n// same thing but synchronous, throws errors\nvar isExe = isexe.sync('some-file-name')\n\n// treat errors as just \"not executable\"\nisexe('maybe-missing-file', { ignoreErrors: true }, callback)\nvar isExe = isexe.sync('maybe-missing-file', { ignoreErrors: true })\n```\n\n## API\n\n### `isexe(path, [options], [callback])`\n\nCheck if the path is executable.  If no callback provided, and a\nglobal `Promise` object is available, then a Promise will be returned.\n\nWill raise whatever errors may be raised by `fs.stat`, unless\n`options.ignoreErrors` is set to true.\n\n### `isexe.sync(path, [options])`\n\nSame as `isexe` but returns the value and throws any errors raised.\n\n### Options\n\n* `ignoreErrors` Treat all errors as \"no, this is not executable\", but\n  don't raise them.\n* `uid` Number to use as the user id\n* `gid` Number to use as the group id\n* `pathExt` List of path extensions to use instead of `PATHEXT`\n  environment variable on Windows."}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2372049}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 12447975}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 52723922}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 135301521}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 264982195}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 497656220}], "dependentsCount": 93, "starsCount": 0}, "github": {"starsCount": 34, "forksCount": 10, "subscribersCount": 1, "issues": {"count": 24, "openCount": 11, "distribution": {"3600": 2, "10800": 0, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 9, "70858800": 9, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 17}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 1395, "testsSize": 4996}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 46, "downloadsCount": 45100507, "downloadsAcceleration": 125675.99374048709, "dependentsCount": 93}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7755114049937295, "detail": {"quality": 0.8054309185439028, "popularity": 0.5255205901386902, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-10T07:22:32.116Z", "collected": {"metadata": {"name": "is-extendable", "scope": "unscoped", "version": "1.0.1", "description": "Returns true if a value is a plain object, array or function.", "keywords": ["array", "assign", "check", "date", "extend", "extendable", "extensible", "function", "is", "object", "regex", "test"], "date": "2017-09-11T20:38:26.333Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-extendable.git"}, "links": {"npm": "https://www.npmjs.com/package/is-extendable", "homepage": "https://github.com/jonschlinkert/is-extendable", "repository": "https://github.com/jonschlinkert/is-extendable", "bugs": "https://github.com/jonschlinkert/is-extendable/issues"}, "license": "MIT", "dependencies": {"is-plain-object": "^2.0.4"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.4.2"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-extendable [![NPM version](https://img.shields.io/npm/v/is-extendable.svg?style=flat)](https://www.npmjs.com/package/is-extendable) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-extendable.svg?style=flat)](https://npmjs.org/package/is-extendable) [![NPM total downloads](https://img.shields.io/npm/dt/is-extendable.svg?style=flat)](https://npmjs.org/package/is-extendable) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-extendable.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-extendable)\n\n> Returns true if a value is a plain object, array or function.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-extendable\n```\n\n## Usage\n\n```js\nvar isExtendable = require('is-extendable');\n```\n\nReturns true if the value is any of the following:\n\n* array\n* plain object\n* function\n\n## Notes\n\nAll objects in JavaScript can have keys, but it's a pain to check for this, since we ether need to verify that the value is not `null` or `undefined` and:\n\n* the value is not a primitive, or\n* that the object is a plain object, function or array\n\nAlso note that an `extendable` object is not the same as an [extensible object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible), which is one that (in es6) is not sealed, frozen, or marked as non-extensible using `preventExtensions`.\n\n## Release history\n\n### v1.0.0 - 2017/07/20\n\n**Breaking changes**\n\n* No longer considers date, regex or error objects to be extendable\n\n## About\n\n### Related projects\n\n* [assign-deep](https://www.npmjs.com/package/assign-deep): Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target\u2026 [more](https://github.com/jonschlinkert/assign-deep) | [homepage](https://github.com/jonschlinkert/assign-deep \"Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target (first) object.\")\n* [is-equal-shallow](https://www.npmjs.com/package/is-equal-shallow): Does a shallow comparison of two objects, returning false if the keys or values differ. | [homepage](https://github.com/jonschlinkert/is-equal-shallow \"Does a shallow comparison of two objects, returning false if the keys or values differ.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on July 20, 2017._"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 983999}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 20611138}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 81356370}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 228082320}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 455072526}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 859635476}], "dependentsCount": 94, "starsCount": 0}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 18, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 2, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 9}, {"username": "onokumus", "commitsCount": 3}, {"username": "doowb", "commitsCount": 1}, {"username": "tibbon", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4123, "testsSize": 940}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-extendable.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-extendable.svg", "content": "https://img.shields.io/npm/v/is-extendable.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-extendable.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-extendable.svg", "content": "https://img.shields.io/npm/dm/is-extendable.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-extendable.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-extendable.svg", "content": "https://img.shields.io/npm/dt/is-extendable.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-extendable.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-extendable.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-extendable.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-extendable.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"is-plain-object": {"required": "^2.0.4", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 26, "downloadsCount": 76027440, "downloadsAcceleration": 132432.08116438356, "dependentsCount": 94}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.823592548398218, "detail": {"quality": 0.9596449968378136, "popularity": 0.530629872164196, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-13T12:32:46.264Z", "collected": {"metadata": {"name": "is-extglob", "scope": "unscoped", "version": "2.1.1", "description": "Returns true if a string has an extglob.", "keywords": ["bash", "braces", "check", "exec", "expression", "extglob", "glob", "globbing", "globstar", "is", "match", "matches", "pattern", "regex", "regular", "string", "test"], "date": "2016-12-11T04:04:24.390Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-extglob.git"}, "links": {"npm": "https://www.npmjs.com/package/is-extglob", "homepage": "https://github.com/jonschlinkert/is-extglob", "repository": "https://github.com/jonschlinkert/is-extglob", "bugs": "https://github.com/jonschlinkert/is-extglob/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^0.1.10", "mocha": "^3.0.2"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-extglob [![NPM version](https://img.shields.io/npm/v/is-extglob.svg?style=flat)](https://www.npmjs.com/package/is-extglob) [![NPM downloads](https://img.shields.io/npm/dm/is-extglob.svg?style=flat)](https://npmjs.org/package/is-extglob) [![Build Status](https://img.shields.io/travis/jonschlinkert/is-extglob.svg?style=flat)](https://travis-ci.org/jonschlinkert/is-extglob)\n\n> Returns true if a string has an extglob.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-extglob\n```\n\n## Usage\n\n```js\nvar isExtglob = require('is-extglob');\n```\n\n**True**\n\n```js\nisExtglob('?(abc)');\nisExtglob('@(abc)');\nisExtglob('!(abc)');\nisExtglob('*(abc)');\nisExtglob('+(abc)');\n```\n\n**False**\n\nEscaped extglobs:\n\n```js\nisExtglob('\\\\?(abc)');\nisExtglob('\\\\@(abc)');\nisExtglob('\\\\!(abc)');\nisExtglob('\\\\*(abc)');\nisExtglob('\\\\+(abc)');\n```\n\nEverything else...\n\n```js\nisExtglob('foo.js');\nisExtglob('!foo.js');\nisExtglob('*.js');\nisExtglob('**/abc.js');\nisExtglob('abc/*.js');\nisExtglob('abc/(aaa|bbb).js');\nisExtglob('abc/[a-z].js');\nisExtglob('abc/{a,b}.js');\nisExtglob('abc/?.js');\nisExtglob('abc.js');\nisExtglob('abc/def/ghi.js');\n```\n\n## History\n\n**v2.0**\n\nAdds support for escaping. Escaped exglobs no longer return true.\n\n## About\n\n### Related projects\n\n* [has-glob](https://www.npmjs.com/package/has-glob): Returns `true` if an array has a glob pattern. | [homepage](https://github.com/jonschlinkert/has-glob \"Returns `true` if an array has a glob pattern.\")\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern\u2026 [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/jonschlinkert/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/is-extglob/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.31, on October 12, 2016._"}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2896573}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 15060845}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 62845065}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 162965645}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 328403938}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 648961532}], "dependentsCount": 73, "starsCount": 1}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 18, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 2, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 16}, {"username": "paulmillr", "commitsCount": 3}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 4}]}, "source": {"files": {"readmeSize": 3469, "testsSize": 4417}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-extglob.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-extglob.svg", "content": "https://img.shields.io/npm/v/is-extglob.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-extglob.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-extglob.svg", "content": "https://img.shields.io/npm/dm/is-extglob.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-extglob.svg?style=flat", "service": "https://api.travis-ci.org/jonschlinkert/is-extglob.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-extglob.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-extglob.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 25, "downloadsCount": 54321881.666666664, "downloadsAcceleration": 90837.0555555555, "dependentsCount": 73}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8083925848704869, "detail": {"quality": 0.9322294470054537, "popularity": 0.5107004476555583, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-24T02:24:43.212Z", "collected": {"metadata": {"name": "is-fullwidth-code-point", "scope": "unscoped", "version": "3.0.0", "description": "Check if the character represented by a given Unicode code point is fullwidth", "keywords": ["fullwidth", "full-width", "full", "width", "unicode", "character", "string", "codepoint", "code", "point", "is", "detect", "check"], "date": "2019-03-18T08:09:05.035Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/is-fullwidth-code-point.git"}, "links": {"npm": "https://www.npmjs.com/package/is-fullwidth-code-point", "homepage": "https://github.com/sindresorhus/is-fullwidth-code-point#readme", "repository": "https://github.com/sindresorhus/is-fullwidth-code-point", "bugs": "https://github.com/sindresorhus/is-fullwidth-code-point/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.3.1", "tsd-check": "^0.5.0", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-fullwidth-code-point [![Build Status](https://travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master)](https://travis-ci.org/sindresorhus/is-fullwidth-code-point)\n\n> Check if the character represented by a given [Unicode code point](https://en.wikipedia.org/wiki/Code_point) is [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms)\n\n\n## Install\n\n```\n$ npm install is-fullwidth-code-point\n```\n\n\n## Usage\n\n```js\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nisFullwidthCodePoint('\u8c22'.codePointAt(0));\n//=> true\n\nisFullwidthCodePoint('a'.codePointAt(0));\n//=> false\n```\n\n\n## API\n\n### isFullwidthCodePoint(codePoint)\n\n#### codePoint\n\nType: `number`\n\nThe [code point](https://en.wikipedia.org/wiki/Code_point) of a character.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 1467394}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 30012718}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 121061535}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 324932651}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 618511169}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 1094274573}], "dependentsCount": 103, "starsCount": 0}, "github": {"starsCount": 31, "forksCount": 9, "subscribersCount": 8, "issues": {"count": 10, "openCount": 0, "distribution": {"3600": 5, "10800": 2, "32400": 1, "97200": 1, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 10}, {"username": "forresst", "commitsCount": 2}, {"username": "BendingBender", "commitsCount": 1}, {"username": "Offirmo", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "xiaoyuhen", "commitsCount": 1}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 2}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 843, "testsSize": 375}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/is-fullwidth-code-point/master.svg", "content": "https://img.shields.io/travis/sindresorhus/is-fullwidth-code-point/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.8125, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 54, "downloadsCount": 108310883.66666667, "downloadsAcceleration": 368883.15089421615, "dependentsCount": 103}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.830380839113128, "detail": {"quality": 0.9495660140374024, "popularity": 0.5586641166071483, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-29T09:48:47.739Z", "collected": {"metadata": {"name": "is-glob", "scope": "unscoped", "version": "4.0.1", "description": "Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet", "keywords": ["bash", "braces", "check", "exec", "expression", "extglob", "glob", "globbing", "globstar", "is", "match", "matches", "pattern", "regex", "regular", "string", "test"], "date": "2019-03-27T22:26:35.952Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Daniel Perez", "url": "https://tuvistavie.com"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/is-glob.git"}, "links": {"npm": "https://www.npmjs.com/package/is-glob", "homepage": "https://github.com/micromatch/is-glob", "repository": "https://github.com/micromatch/is-glob", "bugs": "https://github.com/micromatch/is-glob/issues"}, "license": "MIT", "dependencies": {"is-extglob": "^2.1.1"}, "devDependencies": {"gulp-format-md": "^0.1.10", "mocha": "^3.0.2"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-glob [![NPM version](https://img.shields.io/npm/v/is-glob.svg?style=flat)](https://www.npmjs.com/package/is-glob) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-glob.svg?style=flat)](https://npmjs.org/package/is-glob) [![NPM total downloads](https://img.shields.io/npm/dt/is-glob.svg?style=flat)](https://npmjs.org/package/is-glob) [![Linux Build Status](https://img.shields.io/travis/micromatch/is-glob.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/is-glob) [![Windows Build Status](https://img.shields.io/appveyor/ci/micromatch/is-glob.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/micromatch/is-glob)\n\n> Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-glob\n```\n\nYou might also be interested in [is-valid-glob](https://github.com/jonschlinkert/is-valid-glob) and [has-glob](https://github.com/jonschlinkert/has-glob).\n\n## Usage\n\n```js\nvar isGlob = require('is-glob');\n```\n\n### Default behavior\n\n**True**\n\nPatterns that have glob characters or regex patterns will return `true`:\n\n```js\nisGlob('!foo.js');\nisGlob('*.js');\nisGlob('**/abc.js');\nisGlob('abc/*.js');\nisGlob('abc/(aaa|bbb).js');\nisGlob('abc/[a-z].js');\nisGlob('abc/{a,b}.js');\n//=> true\n```\n\nExtglobs\n\n```js\nisGlob('abc/@(a).js');\nisGlob('abc/!(a).js');\nisGlob('abc/+(a).js');\nisGlob('abc/*(a).js');\nisGlob('abc/?(a).js');\n//=> true\n```\n\n**False**\n\nEscaped globs or extglobs return `false`:\n\n```js\nisGlob('abc/\\\\@(a).js');\nisGlob('abc/\\\\!(a).js');\nisGlob('abc/\\\\+(a).js');\nisGlob('abc/\\\\*(a).js');\nisGlob('abc/\\\\?(a).js');\nisGlob('\\\\!foo.js');\nisGlob('\\\\*.js');\nisGlob('\\\\*\\\\*/abc.js');\nisGlob('abc/\\\\*.js');\nisGlob('abc/\\\\(aaa|bbb).js');\nisGlob('abc/\\\\[a-z].js');\nisGlob('abc/\\\\{a,b}.js');\n//=> false\n```\n\nPatterns that do not have glob patterns return `false`:\n\n```js\nisGlob('abc.js');\nisGlob('abc/def/ghi.js');\nisGlob('foo.js');\nisGlob('abc/@.js');\nisGlob('abc/+.js');\nisGlob('abc/?.js');\nisGlob();\nisGlob(null);\n//=> false\n```\n\nArrays are also `false` (If you want to check if an array has a glob pattern, use [has-glob](https://github.com/jonschlinkert/has-glob)):\n\n```js\nisGlob(['**/*.js']);\nisGlob(['foo.js']);\n//=> false\n```\n\n### Option strict\n\nWhen `options.strict === false` the behavior is less strict in determining if a pattern is a glob. Meaning that\nsome patterns that would return `false` may return `true`. This is done so that matching libraries like [micromatch](https://github.com/micromatch/micromatch) have a chance at determining if the pattern is a glob or not.\n\n**True**\n\nPatterns that have glob characters or regex patterns will return `true`:\n\n```js\nisGlob('!foo.js', {strict: false});\nisGlob('*.js', {strict: false});\nisGlob('**/abc.js', {strict: false});\nisGlob('abc/*.js', {strict: false});\nisGlob('abc/(aaa|bbb).js', {strict: false});\nisGlob('abc/[a-z].js', {strict: false});\nisGlob('abc/{a,b}.js', {strict: false});\n//=> true\n```\n\nExtglobs\n\n```js\nisGlob('abc/@(a).js', {strict: false});\nisGlob('abc/!(a).js', {strict: false});\nisGlob('abc/+(a).js', {strict: false});\nisGlob('abc/*(a).js', {strict: false});\nisGlob('abc/?(a).js', {strict: false});\n//=> true\n```\n\n**False**\n\nEscaped globs or extglobs return `false`:\n\n```js\nisGlob('\\\\!foo.js', {strict: false});\nisGlob('\\\\*.js', {strict: false});\nisGlob('\\\\*\\\\*/abc.js', {strict: false});\nisGlob('abc/\\\\*.js', {strict: false});\nisGlob('abc/\\\\(aaa|bbb).js', {strict: false});\nisGlob('abc/\\\\[a-z].js', {strict: false});\nisGlob('abc/\\\\{a,b}.js', {strict: false});\n//=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [assemble](https://www.npmjs.com/package/assemble): Get the rocks out of your socks! Assemble makes you fast at creating web projects\u2026 [more](https://github.com/assemble/assemble) | [homepage](https://github.com/assemble/assemble \"Get the rocks out of your socks! Assemble makes you fast at creating web projects. Assemble is used by thousands of projects for rapid prototyping, creating themes, scaffolds, boilerplates, e-books, UI components, API documentation, blogs, building websit\")\n* [base](https://www.npmjs.com/package/base): Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | [homepage](https://github.com/node-base/base \"Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks\")\n* [update](https://www.npmjs.com/package/update): Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 [more](https://github.com/update/update) | [homepage](https://github.com/update/update \"Be scalable! Update is a new, open source developer framework and CLI for automating updates of any kind in code projects.\")\n* [verb](https://www.npmjs.com/package/verb): Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used\u2026 [more](https://github.com/verbose/verb) | [homepage](https://github.com/verbose/verb \"Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used on hundreds of projects of all sizes to generate everything from API docs to readmes.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 47 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 5  | [doowb](https://github.com/doowb) |  \n| 1  | [phated](https://github.com/phated) |  \n| 1  | [danhper](https://github.com/danhper) |  \n| 1  | [paulmillr](https://github.com/paulmillr) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on March 27, 2019._"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 4508827}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 26380930}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 112868043}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 293080577}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 584188407}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 1110684260}], "dependentsCount": 327, "starsCount": 5}, "github": {"starsCount": 55, "forksCount": 4, "subscribersCount": 5, "issues": {"count": 11, "openCount": 0, "distribution": {"3600": 1, "10800": 3, "32400": 1, "97200": 4, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 46}, {"username": "doowb", "commitsCount": 4}, {"username": "phated", "commitsCount": 3}, {"username": "danhper", "commitsCount": 1}, {"username": "paulmillr", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7317, "testsSize": 11433}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-glob.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-glob.svg", "content": "https://img.shields.io/npm/v/is-glob.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-glob.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-glob.svg", "content": "https://img.shields.io/npm/dm/is-glob.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-glob.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-glob.svg", "content": "https://img.shields.io/npm/dt/is-glob.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/is-glob.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/is-glob.svg", "shields": "https://img.shields.io/travis/micromatch/is-glob.svg", "content": "https://img.shields.io/travis/micromatch/is-glob.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/micromatch/is-glob.svg?label=AppVeyor", "service": "https://ci.appveyor.com/api/projects/status/micromatch/is-glob", "shields": "https://img.shields.io/appveyor/ci/micromatch/is-glob.svg", "content": "https://img.shields.io/appveyor/ci/micromatch/is-glob.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 74, "downloadsCount": 97693525.66666667, "downloadsAcceleration": 230454.52482876717, "dependentsCount": 327}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9377276785714286}}, "score": {"final": 0.8481998029981471, "detail": {"quality": 0.9691397075145873, "popularity": 0.5928091548195589, "maintenance": 0.9999276758769295}}}
{"analyzedAt": "2020-02-09T08:27:44.650Z", "collected": {"metadata": {"name": "is-number", "scope": "unscoped", "version": "7.0.0", "description": "Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc.", "keywords": ["cast", "check", "coerce", "coercion", "finite", "integer", "is", "isnan", "is-nan", "is-num", "is-number", "isnumber", "isfinite", "istype", "kind", "math", "nan", "num", "number", "numeric", "parseFloat", "parseInt", "test", "type", "typeof", "value"], "date": "2018-07-04T15:08:58.238Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "realityking", "email": "me@rouvenwessling.de"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Olsten Larck", "url": "https://i.am.charlike.online"}, {"name": "Rouven We\u00dfling", "url": "www.rouvenwessling.de"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-number.git"}, "links": {"npm": "https://www.npmjs.com/package/is-number", "homepage": "https://github.com/jonschlinkert/is-number", "repository": "https://github.com/jonschlinkert/is-number", "bugs": "https://github.com/jonschlinkert/is-number/issues"}, "license": "MIT", "devDependencies": {"ansi": "^0.3.1", "benchmark": "^2.1.4", "gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-number [![NPM version](https://img.shields.io/npm/v/is-number.svg?style=flat)](https://www.npmjs.com/package/is-number) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-number.svg?style=flat)](https://npmjs.org/package/is-number) [![NPM total downloads](https://img.shields.io/npm/dt/is-number.svg?style=flat)](https://npmjs.org/package/is-number) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-number.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-number)\n\n> Returns true if the value is a finite number.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-number\n```\n\n## Why is this needed?\n\nIn JavaScript, it's not always as straightforward as it should be to reliably check if a value is a number. It's common for devs to use `+`, `-`, or `Number()` to cast a string value to a number (for example, when values are returned from user input, regex matches, parsers, etc). But there are many non-intuitive edge cases that yield unexpected results:\n\n```js\nconsole.log(+[]); //=> 0\nconsole.log(+''); //=> 0\nconsole.log(+'   '); //=> 0\nconsole.log(typeof NaN); //=> 'number'\n```\n\nThis library offers a performant way to smooth out edge cases like these.\n\n## Usage\n\n```js\nconst isNumber = require('is-number');\n```\n\nSee the [tests](./test.js) for more examples.\n\n### true\n\n```js\nisNumber(5e3);               // true\nisNumber(0xff);              // true\nisNumber(-1.1);              // true\nisNumber(0);                 // true\nisNumber(1);                 // true\nisNumber(1.1);               // true\nisNumber(10);                // true\nisNumber(10.10);             // true\nisNumber(100);               // true\nisNumber('-1.1');            // true\nisNumber('0');               // true\nisNumber('012');             // true\nisNumber('0xff');            // true\nisNumber('1');               // true\nisNumber('1.1');             // true\nisNumber('10');              // true\nisNumber('10.10');           // true\nisNumber('100');             // true\nisNumber('5e3');             // true\nisNumber(parseInt('012'));   // true\nisNumber(parseFloat('012')); // true\n```\n\n### False\n\nEverything else is false, as you would expect:\n\n```js\nisNumber(Infinity);          // false\nisNumber(NaN);               // false\nisNumber(null);              // false\nisNumber(undefined);         // false\nisNumber('');                // false\nisNumber('   ');             // false\nisNumber('foo');             // false\nisNumber([1]);               // false\nisNumber([]);                // false\nisNumber(function () {});    // false\nisNumber({});                // false\n```\n\n## Release history\n\n### 7.0.0\n\n* Refactor. Now uses `.isFinite` if it exists.\n* Performance is about the same as v6.0 when the value is a string or number. But it's now 3x-4x faster when the value is not a string or number.\n\n### 6.0.0\n\n* Optimizations, thanks to @benaadams.\n\n### 5.0.0\n\n**Breaking changes**\n\n* removed support for `instanceof Number` and `instanceof String`\n\n## Benchmarks\n\nAs with all benchmarks, take these with a grain of salt. See the [benchmarks](./benchmark/index.js) for more detail.\n\n```\n# all\nv7.0 x 413,222 ops/sec \u00b12.02% (86 runs sampled)\nv6.0 x 111,061 ops/sec \u00b11.29% (85 runs sampled)\nparseFloat x 317,596 ops/sec \u00b11.36% (86 runs sampled)\nfastest is 'v7.0'\n\n# string\nv7.0 x 3,054,496 ops/sec \u00b11.05% (89 runs sampled)\nv6.0 x 2,957,781 ops/sec \u00b10.98% (88 runs sampled)\nparseFloat x 3,071,060 ops/sec \u00b11.13% (88 runs sampled)\nfastest is 'parseFloat,v7.0'\n\n# number\nv7.0 x 3,146,895 ops/sec \u00b10.89% (89 runs sampled)\nv6.0 x 3,214,038 ops/sec \u00b11.07% (89 runs sampled)\nparseFloat x 3,077,588 ops/sec \u00b11.07% (87 runs sampled)\nfastest is 'v6.0'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive.  | [homepage](https://github.com/jonschlinkert/is-primitive \"Returns `true` if the value is a primitive. \")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 49 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 5 | [charlike-old](https://github.com/charlike-old) |\n| 1 | [benaadams](https://github.com/benaadams) |\n| 1 | [realityking](https://github.com/realityking) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on June 15, 2018._"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1134956}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 24913315}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 99828326}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 271528009}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 536067350}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1033481270}], "dependentsCount": 226, "starsCount": 13}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 150, "forksCount": 27, "subscribersCount": 7, "issues": {"count": 24, "openCount": 3, "distribution": {"3600": 2, "10800": 1, "32400": 7, "97200": 1, "291600": 0, "874800": 1, "2624400": 1, "7873200": 3, "23619600": 3, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 51}, {"username": "tunnckoCore", "commitsCount": 5}, {"username": "benaadams", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6514, "testsSize": 2355}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-number.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-number.svg", "content": "https://img.shields.io/npm/v/is-number.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-number.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-number.svg", "content": "https://img.shields.io/npm/dm/is-number.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-number.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-number.svg", "content": "https://img.shields.io/npm/dt/is-number.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-number.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-number.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-number.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-number.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 201, "downloadsCount": 90509336.33333333, "downloadsAcceleration": 160712.93565449002, "dependentsCount": 226}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8494744382516621, "detail": {"quality": 0.9691397075145873, "popularity": 0.5964889830512532, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-02T05:47:46.976Z", "collected": {"metadata": {"name": "isobject", "scope": "unscoped", "version": "4.0.0", "description": "Returns true if the value is an object and not an array or null.", "keywords": ["check", "is", "is-object", "isobject", "kind", "kind-of", "kindof", "native", "object", "type", "typeof", "value"], "date": "2019-04-28T10:09:13.577Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "trysound", "email": "trysound@yandex.ru"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}], "contributors": [{"url": "https://github.com/LeSuisse"}, {"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Magn\u00fas D\u00e6hlen", "url": "https://github.com/magnudae"}, {"name": "Tom MacWright", "url": "https://macwright.org"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/isobject.git"}, "links": {"npm": "https://www.npmjs.com/package/isobject", "homepage": "https://github.com/jonschlinkert/isobject", "repository": "https://github.com/jonschlinkert/isobject", "bugs": "https://github.com/jonschlinkert/isobject/issues"}, "license": "MIT", "devDependencies": {"esm": "^3.2.22", "gulp-format-md": "^0.1.9", "mocha": "^2.4.5", "rollup": "^1.10.1"}, "releases": [{"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 2}, {"from": "2018-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# isobject [![NPM version](https://img.shields.io/npm/v/isobject.svg?style=flat)](https://www.npmjs.com/package/isobject) [![NPM monthly downloads](https://img.shields.io/npm/dm/isobject.svg?style=flat)](https://npmjs.org/package/isobject) [![NPM total downloads](https://img.shields.io/npm/dt/isobject.svg?style=flat)](https://npmjs.org/package/isobject) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/isobject.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/isobject)\n\n> Returns true if the value is an object and not an array or null.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save isobject\n```\n\nUse [is-plain-object](https://github.com/jonschlinkert/is-plain-object) if you want only objects that are created by the `Object` constructor.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install isobject\n```\n\n## Usage\n\n```js\nimport isObject from 'isobject';\n```\n\n**True**\n\nAll of the following return `true`:\n\n```js\nisObject({});\nisObject(Object.create({}));\nisObject(Object.create(Object.prototype));\nisObject(Object.create(null));\nisObject({});\nisObject(new Foo);\nisObject(/foo/);\n```\n\n**False**\n\nAll of the following return `false`:\n\n```js\nisObject();\nisObject(function () {});\nisObject(1);\nisObject([]);\nisObject(undefined);\nisObject(null);\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [extend-shallow](https://www.npmjs.com/package/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util. | [homepage](https://github.com/jonschlinkert/extend-shallow \"Extend an object with the properties of additional objects. node.js/javascript util.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n* [merge-deep](https://www.npmjs.com/package/merge-deep): Recursively merge values in a javascript object. | [homepage](https://github.com/jonschlinkert/merge-deep \"Recursively merge values in a javascript object.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 30 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 8  | [doowb](https://github.com/doowb) |  \n| 7  | [TrySound](https://github.com/TrySound) |  \n| 3  | [onokumus](https://github.com/onokumus) |  \n| 1  | [LeSuisse](https://github.com/LeSuisse) |  \n| 1  | [tmcw](https://github.com/tmcw) |  \n| 1  | [ZhouHansen](https://github.com/ZhouHansen) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 28, 2019._"}, "npm": {"downloads": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 1525783}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 25795990}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 104749277}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 300020182}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 589776900}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 1065675704}], "dependentsCount": 392, "starsCount": 3}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 68, "forksCount": 8, "subscribersCount": 3, "issues": {"count": 21, "openCount": 0, "distribution": {"3600": 4, "10800": 0, "32400": 2, "97200": 1, "291600": 1, "874800": 2, "2624400": 3, "7873200": 6, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 29}, {"username": "TrySound", "commitsCount": 7}, {"username": "doowb", "commitsCount": 6}, {"username": "onokumus", "commitsCount": 3}, {"username": "LeSuisse", "commitsCount": 1}, {"username": "ZhouHansen", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}], "commits": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4344, "testsSize": 707}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/isobject.svg?style=flat", "shields": "https://img.shields.io/npm/v/isobject.svg", "content": "https://img.shields.io/npm/v/isobject.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/isobject.svg?style=flat", "shields": "https://img.shields.io/npm/dm/isobject.svg", "content": "https://img.shields.io/npm/dm/isobject.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/isobject.svg?style=flat", "shields": "https://img.shields.io/npm/dt/isobject.svg", "content": "https://img.shields.io/npm/dt/isobject.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/isobject.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/isobject.svg", "shields": "https://img.shields.io/travis/jonschlinkert/isobject.svg", "content": "https://img.shields.io/travis/jonschlinkert/isobject.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 89, "downloadsCount": 100006727.33333333, "downloadsAcceleration": 232215.4934931507, "dependentsCount": 392}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8515887529172397, "detail": {"quality": 0.9691397075145873, "popularity": 0.6025298820957604, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-28T20:23:18.382Z", "collected": {"metadata": {"name": "is-plain-object", "scope": "unscoped", "version": "3.0.0", "description": "Returns true if an object was created by the `Object` constructor.", "keywords": ["check", "is", "is-object", "isobject", "javascript", "kind", "kind-of", "object", "plain", "type", "typeof", "value"], "date": "2019-04-30T20:53:56.159Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "trysound", "email": "trysound@yandex.ru"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "stevenvachon", "email": "contact@svachon.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Osman Nuri Okumu\u015f", "url": "http://onokumus.com"}, {"name": "Steven Vachon", "url": "https://svachon.com"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-plain-object.git"}, "links": {"npm": "https://www.npmjs.com/package/is-plain-object", "homepage": "https://github.com/jonschlinkert/is-plain-object", "repository": "https://github.com/jonschlinkert/is-plain-object", "bugs": "https://github.com/jonschlinkert/is-plain-object/issues"}, "license": "MIT", "dependencies": {"isobject": "^4.0.0"}, "devDependencies": {"chai": "^4.2.0", "esm": "^3.2.22", "gulp-format-md": "^1.0.0", "mocha": "^6.1.4", "mocha-headless-chrome": "^2.0.2", "rollup": "^1.10.1", "rollup-plugin-node-resolve": "^4.2.3"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-plain-object [![NPM version](https://img.shields.io/npm/v/is-plain-object.svg?style=flat)](https://www.npmjs.com/package/is-plain-object) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-plain-object.svg?style=flat)](https://npmjs.org/package/is-plain-object) [![NPM total downloads](https://img.shields.io/npm/dt/is-plain-object.svg?style=flat)](https://npmjs.org/package/is-plain-object) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-plain-object.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-plain-object)\n\n> Returns true if an object was created by the `Object` constructor.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-plain-object\n```\n\nUse [isobject](https://github.com/jonschlinkert/isobject) if you only want to check if the value is an object and not an array or null.\n\n## Usage\n\n```js\nimport isPlainObject from 'is-plain-object';\n```\n\n**true** when created by the `Object` constructor.\n\n```js\nisPlainObject(Object.create({}));\n//=> true\nisPlainObject(Object.create(Object.prototype));\n//=> true\nisPlainObject({foo: 'bar'});\n//=> true\nisPlainObject({});\n//=> true\n```\n\n**false** when not created by the `Object` constructor.\n\n```js\nisPlainObject(1);\n//=> false\nisPlainObject(['foo', 'bar']);\n//=> false\nisPlainObject([]);\n//=> false\nisPlainObject(new Foo);\n//=> false\nisPlainObject(null);\n//=> false\nisPlainObject(Object.create(null));\n//=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if a number or string value is a finite number. Useful for regex\u2026 [more](https://github.com/jonschlinkert/is-number) | [homepage](https://github.com/jonschlinkert/is-number \"Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 19 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 6  | [TrySound](https://github.com/TrySound) |  \n| 6  | [stevenvachon](https://github.com/stevenvachon) |  \n| 3  | [onokumus](https://github.com/onokumus) |  \n| 1  | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 28, 2019._"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2665744}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 14228270}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 61380397}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 159516740}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 315026823}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 560754924}], "dependentsCount": 637, "starsCount": 5}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 91, "forksCount": 14, "subscribersCount": 7, "issues": {"count": 21, "openCount": 3, "distribution": {"3600": 4, "10800": 3, "32400": 0, "97200": 2, "291600": 0, "874800": 2, "2624400": 1, "7873200": 5, "23619600": 2, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 17}, {"username": "TrySound", "commitsCount": 7}, {"username": "stevenvachon", "commitsCount": 5}, {"username": "onokumus", "commitsCount": 3}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4216, "testsSize": 3100}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-plain-object.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-plain-object.svg", "content": "https://img.shields.io/npm/v/is-plain-object.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-plain-object.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-plain-object.svg", "content": "https://img.shields.io/npm/dm/is-plain-object.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-plain-object.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-plain-object.svg", "content": "https://img.shields.io/npm/dt/is-plain-object.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-plain-object.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-plain-object.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-plain-object.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-plain-object.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 122, "downloadsCount": 53172246.666666664, "downloadsAcceleration": 180883.1323630137, "dependentsCount": 637}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.854599281089751, "detail": {"quality": 0.9691397075145873, "popularity": 0.6111313911600786, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-28T07:26:35.330Z", "collected": {"metadata": {"name": "is-promise", "scope": "unscoped", "version": "2.1.0", "description": "Test whether an object looks like a promises-a+ promise", "date": "2015-09-06T18:06:36.412Z", "author": {"name": "ForbesLindesay"}, "publisher": {"username": "forbeslindesay", "email": "forbes@lindesay.co.uk"}, "maintainers": [{"username": "forbeslindesay", "email": "forbes@lindesay.co.uk"}, {"username": "nathan7", "email": "nathan@nathan7.eu"}], "repository": {"type": "git", "url": "git+https://github.com/then/is-promise.git"}, "links": {"npm": "https://www.npmjs.com/package/is-promise", "homepage": "https://github.com/then/is-promise", "repository": "https://github.com/then/is-promise", "bugs": "https://github.com/then/is-promise/issues"}, "license": "MIT", "devDependencies": {"better-assert": "~0.1.0", "mocha": "~1.7.4"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "<a href=\"http://promises-aplus.github.com/promises-spec\"><img src=\"http://promises-aplus.github.com/promises-spec/assets/logo-small.png\" align=\"right\" /></a>\n# is-promise\n\n  Test whether an object looks like a promises-a+ promise\n\n [![Build Status](https://img.shields.io/travis/then/is-promise/master.svg)](https://travis-ci.org/then/is-promise)\n [![Dependency Status](https://img.shields.io/gemnasium/then/is-promise.svg)](https://gemnasium.com/then/is-promise)\n [![NPM version](https://img.shields.io/npm/v/is-promise.svg)](https://www.npmjs.org/package/is-promise)\n\n## Installation\n\n    $ npm install is-promise\n\nYou can also use it client side via npm.\n\n## API\n\n```javascript\nvar isPromise = require('is-promise');\n\nisPromise({then:function () {...}});//=>true\nisPromise(null);//=>false\nisPromise({});//=>false\nisPromise({then: true})//=>false\n```\n\n## License\n\n  MIT"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1946352}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 10239801}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 43340580}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 110945857}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 216477797}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 395609548}], "dependentsCount": 452, "starsCount": 6}, "github": {"starsCount": 90, "forksCount": 12, "subscribersCount": 3, "issues": {"count": 11, "openCount": 1, "distribution": {"3600": 3, "10800": 1, "32400": 0, "97200": 0, "291600": 1, "874800": 4, "2624400": 1, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "ForbesLindesay", "commitsCount": 6}, {"username": "chocolateboy", "commitsCount": 1}, {"username": "edef1c", "commitsCount": 1}, {"username": "floatdrop", "commitsCount": 1}, {"username": "knewzen", "commitsCount": 1}, {"username": "nhunzaker", "commitsCount": 1}, {"username": "nikksan", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 3}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 872, "testsSize": 1483, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/then/is-promise/master.svg", "service": "https://api.travis-ci.org/then/is-promise.svg?branch=master", "shields": "https://img.shields.io/travis/then/is-promise/master.svg", "content": "https://img.shields.io/travis/then/is-promise/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/is-promise.svg", "shields": "https://img.shields.io/npm/v/is-promise.svg", "content": "https://img.shields.io/npm/v/is-promise.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 118, "downloadsCount": 36981952.333333336, "downloadsAcceleration": 119904.21927321155, "dependentsCount": 452}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9465439418536009}}, "score": {"final": 0.8380433958058564, "detail": {"quality": 0.9478474904816662, "popularity": 0.5820371194411729, "maintenance": 0.9999318767341314}}}
{"analyzedAt": "2020-02-12T18:30:32.717Z", "collected": {"metadata": {"name": "is-windows", "scope": "unscoped", "version": "1.0.2", "description": "Returns true if the platform is windows. UMD module, works with node.js, commonjs, browser, AMD, electron, etc.", "keywords": ["check", "cywin", "is", "is-windows", "nix", "operating system", "os", "platform", "process", "unix", "win", "win32", "windows"], "date": "2018-02-14T07:36:43.207Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Simen Bekkhus", "url": "https://github.com/SimenB"}, {"name": "\u5218\u797a", "url": "gucong.co.cc"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/is-windows.git"}, "links": {"npm": "https://www.npmjs.com/package/is-windows", "homepage": "https://github.com/jonschlinkert/is-windows", "repository": "https://github.com/jonschlinkert/is-windows", "bugs": "https://github.com/jonschlinkert/is-windows/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# is-windows [![NPM version](https://img.shields.io/npm/v/is-windows.svg?style=flat)](https://www.npmjs.com/package/is-windows) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-windows.svg?style=flat)](https://npmjs.org/package/is-windows) [![NPM total downloads](https://img.shields.io/npm/dt/is-windows.svg?style=flat)](https://npmjs.org/package/is-windows) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-windows.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-windows)\n\n> Returns true if the platform is windows. UMD module, works with node.js, commonjs, browser, AMD, electron, etc.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-windows\n```\n\n## Heads up!\n\nAs of `v0.2.0` this module always returns a function.\n\n## Node.js usage\n\n```js\nvar isWindows = require('is-windows');\n\nconsole.log(isWindows());\n//=> returns true if the platform is windows\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-absolute](https://www.npmjs.com/package/is-absolute): Returns true if a file path is absolute. Does not rely on the path module\u2026 [more](https://github.com/jonschlinkert/is-absolute) | [homepage](https://github.com/jonschlinkert/is-absolute \"Returns true if a file path is absolute. Does not rely on the path module and can be used as a polyfill for node.js native `path.isAbolute`.\")\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern\u2026 [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [is-relative](https://www.npmjs.com/package/is-relative): Returns `true` if the path appears to be relative. | [homepage](https://github.com/jonschlinkert/is-relative \"Returns `true` if the path appears to be relative.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [window-size](https://www.npmjs.com/package/window-size): Reliable way to get the height and width of terminal/console, since it's not calculated or\u2026 [more](https://github.com/jonschlinkert/window-size) | [homepage](https://github.com/jonschlinkert/window-size \"Reliable way to get the height and width of terminal/console, since it's not calculated or updated the same way on all platforms, environments and node.js versions.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 11 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 4 | [doowb](https://github.com/doowb) |\n| 1 | [SimenB](https://github.com/SimenB) |\n| 1 | [gucong3000](https://github.com/gucong3000) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on February 14, 2018._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2103937}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 11113371}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 46328568}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 121446353}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 243765123}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 465582285}], "dependentsCount": 170, "starsCount": 3}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 36, "forksCount": 12, "subscribersCount": 4, "issues": {"count": 7, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 4, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 2, "70858800": 0, "212576400": 0}, "isDisabled": true}, "contributors": [{"username": "jonschlinkert", "commitsCount": 13}, {"username": "doowb", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 1}, {"username": "dvorakjan", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4639, "testsSize": 406}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/is-windows.svg?style=flat", "shields": "https://img.shields.io/npm/v/is-windows.svg", "content": "https://img.shields.io/npm/v/is-windows.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/is-windows.svg?style=flat", "shields": "https://img.shields.io/npm/dm/is-windows.svg", "content": "https://img.shields.io/npm/dm/is-windows.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/is-windows.svg?style=flat", "shields": "https://img.shields.io/npm/dt/is-windows.svg", "content": "https://img.shields.io/npm/dt/is-windows.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/is-windows.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/is-windows.svg", "shields": "https://img.shields.io/travis/jonschlinkert/is-windows.svg", "content": "https://img.shields.io/travis/jonschlinkert/is-windows.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 60, "downloadsCount": 40482117.666666664, "downloadsAcceleration": 86850.11877853883, "dependentsCount": 170}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8283974645109439, "detail": {"quality": 0.9691397075145873, "popularity": 0.5363017982130016, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-13T02:23:07.884Z", "collected": {"metadata": {"name": "jsesc", "scope": "unscoped", "version": "2.5.2", "description": "Given some data, jsesc returns the shortest possible stringified & ASCII-safe representation of that data.", "keywords": ["buffer", "escape", "javascript", "json", "map", "set", "string", "stringify", "tool"], "date": "2018-11-08T21:50:41.326Z", "author": {"name": "Mathias Bynens", "url": "https://mathiasbynens.be/"}, "publisher": {"username": "mathias", "email": "mathias@qiwi.be"}, "maintainers": [{"username": "mathias", "email": "mathias@qiwi.be"}], "repository": {"type": "git", "url": "git+https://github.com/mathiasbynens/jsesc.git"}, "links": {"npm": "https://www.npmjs.com/package/jsesc", "homepage": "https://mths.be/jsesc", "repository": "https://github.com/mathiasbynens/jsesc", "bugs": "https://github.com/mathiasbynens/jsesc/issues"}, "license": "MIT", "devDependencies": {"coveralls": "^2.11.6", "grunt": "^0.4.5", "grunt-template": "^0.2.3", "istanbul": "^0.4.2", "mocha": "*", "regenerate": "^1.3.0", "requirejs": "^2.1.22"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 1}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# jsesc [![Build status](https://travis-ci.org/mathiasbynens/jsesc.svg?branch=master)](https://travis-ci.org/mathiasbynens/jsesc) [![Code coverage status](https://coveralls.io/repos/mathiasbynens/jsesc/badge.svg)](https://coveralls.io/r/mathiasbynens/jsesc) [![Dependency status](https://gemnasium.com/mathiasbynens/jsesc.svg)](https://gemnasium.com/mathiasbynens/jsesc)\n\nGiven some data, _jsesc_ returns a stringified representation of that data. jsesc is similar to `JSON.stringify()` except:\n\n1. it outputs JavaScript instead of JSON [by default](#json), enabling support for data structures like ES6 maps and sets;\n2. it offers [many options](#api) to customize the output;\n3. its output is ASCII-safe [by default](#minimal), thanks to its use of [escape sequences](https://mathiasbynens.be/notes/javascript-escapes) where needed.\n\nFor any input, jsesc generates the shortest possible valid printable-ASCII-only output. [Here\u2019s an online demo.](https://mothereff.in/js-escapes)\n\njsesc\u2019s output can be used instead of `JSON.stringify`\u2019s to avoid [mojibake](https://en.wikipedia.org/wiki/Mojibake) and other encoding issues, or even to [avoid errors](https://twitter.com/annevk/status/380000829643571200) when passing JSON-formatted data (which may contain U+2028 LINE SEPARATOR, U+2029 PARAGRAPH SEPARATOR, or [lone surrogates](https://esdiscuss.org/topic/code-points-vs-unicode-scalar-values#content-14)) to a JavaScript parser or an UTF-8 encoder.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install jsesc\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst jsesc = require('jsesc');\n```\n\n## API\n\n### `jsesc(value, options)`\n\nThis function takes a value and returns an escaped version of the value where any characters that are not printable ASCII symbols are escaped using the shortest possible (but valid) [escape sequences for use in JavaScript strings](https://mathiasbynens.be/notes/javascript-escapes). The first supported value type is strings:\n\n```js\njsesc('Ich \u2665 B\u00fccher');\n// \u2192 'Ich \\\\u2665 B\\\\xFCcher'\n\njsesc('foo \ud834\udf06 bar');\n// \u2192 'foo \\\\uD834\\\\uDF06 bar'\n```\n\nInstead of a string, the `value` can also be an array, an object, a map, a set, or a buffer. In such cases, `jsesc` returns a stringified version of the value where any characters that are not printable ASCII symbols are escaped in the same way.\n\n```js\n// Escaping an array\njsesc([\n  'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar'\n]);\n// \u2192 '[\\'Ich \\\\u2665 B\\\\xFCcher\\',\\'foo \\\\uD834\\\\uDF06 bar\\']'\n\n// Escaping an object\njsesc({\n  'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar'\n});\n// \u2192 '{\\'Ich \\\\u2665 B\\\\xFCcher\\':\\'foo \\\\uD834\\\\uDF06 bar\\'}'\n```\n\nThe optional `options` argument accepts an object with the following options:\n\n#### `quotes`\n\nThe default value for the `quotes` option is `'single'`. This means that any occurrences of `'` in the input string are escaped as `\\'`, so that the output can be used in a string literal wrapped in single quotes.\n\n```js\njsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.');\n// \u2192 'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.'\n\njsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'single'\n});\n// \u2192 '`Lorem` ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.'\n// \u2192 \"`Lorem` ipsum \\\"dolor\\\" sit \\\\'amet\\\\' etc.\"\n```\n\nIf you want to use the output as part of a string literal wrapped in double quotes, set the `quotes` option to `'double'`.\n\n```js\njsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'double'\n});\n// \u2192 '`Lorem` ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.'\n// \u2192 \"`Lorem` ipsum \\\\\\\"dolor\\\\\\\" sit 'amet' etc.\"\n```\n\nIf you want to use the output as part of a template literal (i.e. wrapped in backticks), set the `quotes` option to `'backtick'`.\n\n```js\njsesc('`Lorem` ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'backtick'\n});\n// \u2192 '\\\\`Lorem\\\\` ipsum \"dolor\" sit \\'amet\\' etc.'\n// \u2192 \"\\\\`Lorem\\\\` ipsum \\\"dolor\\\" sit 'amet' etc.\"\n// \u2192 `\\\\\\`Lorem\\\\\\` ipsum \"dolor\" sit 'amet' etc.`\n```\n\nThis setting also affects the output for arrays and objects:\n\n```js\njsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, {\n  'quotes': 'double'\n});\n// \u2192 '{\"Ich \\\\u2665 B\\\\xFCcher\":\"foo \\\\uD834\\\\uDF06 bar\"}'\n\njsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], {\n  'quotes': 'double'\n});\n// \u2192 '[\"Ich \\\\u2665 B\\\\xFCcher\",\"foo \\\\uD834\\\\uDF06 bar\"]'\n```\n\n#### `numbers`\n\nThe default value for the `numbers` option is `'decimal'`. This means that any numeric values are represented using decimal integer literals. Other valid options are `binary`, `octal`, and `hexadecimal`, which result in binary integer literals, octal integer literals, and hexadecimal integer literals, respectively.\n\n```js\njsesc(42, {\n  'numbers': 'binary'\n});\n// \u2192 '0b101010'\n\njsesc(42, {\n  'numbers': 'octal'\n});\n// \u2192 '0o52'\n\njsesc(42, {\n  'numbers': 'decimal'\n});\n// \u2192 '42'\n\njsesc(42, {\n  'numbers': 'hexadecimal'\n});\n// \u2192 '0x2A'\n```\n\n#### `wrap`\n\nThe `wrap` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, the output is a valid JavaScript string literal wrapped in quotes. The type of quotes can be specified through the `quotes` setting.\n\n```js\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'single',\n  'wrap': true\n});\n// \u2192 '\\'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.\\''\n// \u2192 \"\\'Lorem ipsum \\\"dolor\\\" sit \\\\\\'amet\\\\\\' etc.\\'\"\n\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'double',\n  'wrap': true\n});\n// \u2192 '\"Lorem ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.\"'\n// \u2192 \"\\\"Lorem ipsum \\\\\\\"dolor\\\\\\\" sit \\'amet\\' etc.\\\"\"\n```\n\n#### `es6`\n\nThe `es6` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, any astral Unicode symbols in the input are escaped using [ECMAScript 6 Unicode code point escape sequences](https://mathiasbynens.be/notes/javascript-escapes#unicode-code-point) instead of using separate escape sequences for each surrogate half. If backwards compatibility with ES5 environments is a concern, don\u2019t enable this setting. If the `json` setting is enabled, the value for the `es6` setting is ignored (as if it was `false`).\n\n```js\n// By default, the `es6` option is disabled:\njsesc('foo \ud834\udf06 bar \ud83d\udca9 baz');\n// \u2192 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz'\n\n// To explicitly disable it:\njsesc('foo \ud834\udf06 bar \ud83d\udca9 baz', {\n  'es6': false\n});\n// \u2192 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz'\n\n// To enable it:\njsesc('foo \ud834\udf06 bar \ud83d\udca9 baz', {\n  'es6': true\n});\n// \u2192 'foo \\\\u{1D306} bar \\\\u{1F4A9} baz'\n```\n\n#### `escapeEverything`\n\nThe `escapeEverything` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, all the symbols in the output are escaped \u2014 even printable ASCII symbols.\n\n```js\njsesc('lolwat\"foo\\'bar', {\n  'escapeEverything': true\n});\n// \u2192 '\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\\\'\\\\x62\\\\x61\\\\x72'\n// \u2192 \"\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\'\\\\x62\\\\x61\\\\x72\"\n```\n\nThis setting also affects the output for string literals within arrays and objects.\n\n#### `minimal`\n\nThe `minimal` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, only a limited set of symbols in the output are escaped:\n\n* U+0000 `\\0`\n* U+0008 `\\b`\n* U+0009 `\\t`\n* U+000A `\\n`\n* U+000C `\\f`\n* U+000D `\\r`\n* U+005C `\\\\`\n* U+2028 `\\u2028`\n* U+2029 `\\u2029`\n* whatever symbol is being used for wrapping string literals (based on [the `quotes` option](#quotes))\n\nNote: with this option enabled, jsesc output is no longer guaranteed to be ASCII-safe.\n\n```js\njsesc('foo\\u2029bar\\nbaz\u00a9qux\ud834\udf06flops', {\n  'minimal': false\n});\n// \u2192 'foo\\\\u2029bar\\\\nbaz\u00a9qux\ud834\udf06flops'\n```\n\n#### `isScriptContext`\n\nThe `isScriptContext` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, occurrences of [`</script` and `</style`](https://mathiasbynens.be/notes/etago) in the output are escaped as `<\\/script` and `<\\/style`, and [`<!--`](https://mathiasbynens.be/notes/etago#comment-8) is escaped as `\\x3C!--` (or `\\u003C!--` when the `json` option is enabled). This setting is useful when jsesc\u2019s output ends up as part of a `<script>` or `<style>` element in an HTML document.\n\n```js\njsesc('foo</script>bar', {\n  'isScriptContext': true\n});\n// \u2192 'foo<\\\\/script>bar'\n```\n\n#### `compact`\n\nThe `compact` option takes a boolean value (`true` or `false`), and defaults to `true` (enabled). When enabled, the output for arrays and objects is as compact as possible; it\u2019s not formatted nicely.\n\n```js\njsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, {\n  'compact': true // this is the default\n});\n// \u2192 '{\\'Ich \\u2665 B\\xFCcher\\':\\'foo \\uD834\\uDF06 bar\\'}'\n\njsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, {\n  'compact': false\n});\n// \u2192 '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}'\n\njsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], {\n  'compact': false\n});\n// \u2192 '[\\n\\t\\'Ich \\u2665 B\\xFCcher\\',\\n\\t\\'foo \\uD834\\uDF06 bar\\'\\n]'\n```\n\nThis setting has no effect on the output for strings.\n\n#### `indent`\n\nThe `indent` option takes a string value, and defaults to `'\\t'`. When the `compact` setting is enabled (`true`), the value of the `indent` option is used to format the output for arrays and objects.\n\n```js\njsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, {\n  'compact': false,\n  'indent': '\\t' // this is the default\n});\n// \u2192 '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}'\n\njsesc({ 'Ich \u2665 B\u00fccher': 'foo \ud834\udf06 bar' }, {\n  'compact': false,\n  'indent': '  '\n});\n// \u2192 '{\\n  \\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}'\n\njsesc([ 'Ich \u2665 B\u00fccher', 'foo \ud834\udf06 bar' ], {\n  'compact': false,\n  'indent': '  '\n});\n// \u2192 '[\\n  \\'Ich \\u2665 B\\xFCcher\\',\\n\\  t\\'foo \\uD834\\uDF06 bar\\'\\n]'\n```\n\nThis setting has no effect on the output for strings.\n\n#### `indentLevel`\n\nThe `indentLevel` option takes a numeric value, and defaults to `0`. It represents the current indentation level, i.e. the number of times the value of [the `indent` option](#indent) is repeated.\n\n```js\njsesc(['a', 'b', 'c'], {\n  'compact': false,\n  'indentLevel': 1\n});\n// \u2192 '[\\n\\t\\t\\'a\\',\\n\\t\\t\\'b\\',\\n\\t\\t\\'c\\'\\n\\t]'\n\njsesc(['a', 'b', 'c'], {\n  'compact': false,\n  'indentLevel': 2\n});\n// \u2192 '[\\n\\t\\t\\t\\'a\\',\\n\\t\\t\\t\\'b\\',\\n\\t\\t\\t\\'c\\'\\n\\t\\t]'\n```\n\n#### `json`\n\nThe `json` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, the output is valid JSON. [Hexadecimal character escape sequences](https://mathiasbynens.be/notes/javascript-escapes#hexadecimal) and [the `\\v` or `\\0` escape sequences](https://mathiasbynens.be/notes/javascript-escapes#single) are not used. Setting `json: true` implies `quotes: 'double', wrap: true, es6: false`, although these values can still be overridden if needed \u2014 but in such cases, the output won\u2019t be valid JSON anymore.\n\n```js\njsesc('foo\\x00bar\\xFF\\uFFFDbaz', {\n  'json': true\n});\n// \u2192 '\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"'\n\njsesc({ 'foo\\x00bar\\xFF\\uFFFDbaz': 'foo\\x00bar\\xFF\\uFFFDbaz' }, {\n  'json': true\n});\n// \u2192 '{\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\":\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"}'\n\njsesc([ 'foo\\x00bar\\xFF\\uFFFDbaz', 'foo\\x00bar\\xFF\\uFFFDbaz' ], {\n  'json': true\n});\n// \u2192 '[\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\",\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"]'\n\n// Values that are acceptable in JSON but aren\u2019t strings, arrays, or object\n// literals can\u2019t be escaped, so they\u2019ll just be preserved:\njsesc([ 'foo\\x00bar', [1, '\u00a9', { 'foo': true, 'qux': null }], 42 ], {\n  'json': true\n});\n// \u2192 '[\"foo\\\\u0000bar\",[1,\"\\\\u00A9\",{\"foo\":true,\"qux\":null}],42]'\n// Values that aren\u2019t allowed in JSON are run through `JSON.stringify()`:\njsesc([ undefined, -Infinity ], {\n  'json': true\n});\n// \u2192 '[null,null]'\n```\n\n**Note:** Using this option on objects or arrays that contain non-string values relies on `JSON.stringify()`. For legacy environments like IE \u2264 7, use [a `JSON` polyfill](http://bestiejs.github.io/json3/).\n\n#### `lowercaseHex`\n\nThe `lowercaseHex` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, any alphabetical hexadecimal digits in escape sequences as well as any hexadecimal integer literals (see [the `numbers` option](#numbers)) in the output are in lowercase.\n\n```js\njsesc('Ich \u2665 B\u00fccher', {\n  'lowercaseHex': true\n});\n// \u2192 'Ich \\\\u2665 B\\\\xfccher'\n//                    ^^\n\njsesc(42, {\n  'numbers': 'hexadecimal',\n  'lowercaseHex': true\n});\n// \u2192 '0x2a'\n//      ^^\n```\n\n### `jsesc.version`\n\nA string representing the semantic version number.\n\n### Using the `jsesc` binary\n\nTo use the `jsesc` binary in your shell, simply install jsesc globally using npm:\n\n```bash\nnpm install -g jsesc\n```\n\nAfter that you\u2019re able to escape strings from the command line:\n\n```bash\n$ jsesc 'f\u00f6o \u2665 b\u00e5r \ud834\udf06 baz'\nf\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\n```\n\nTo escape arrays or objects containing string values, use the `-o`/`--object` option:\n\n```bash\n$ jsesc --object '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }'\n{'f\\xF6o':'\\u2665','b\\xE5r':'\\uD834\\uDF06 baz'}\n```\n\nTo prettify the output in such cases, use the `-p`/`--pretty` option:\n\n```bash\n$ jsesc --pretty '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }'\n{\n  'f\\xF6o': '\\u2665',\n  'b\\xE5r': '\\uD834\\uDF06 baz'\n}\n```\n\nFor valid JSON output, use the `-j`/`--json` option:\n\n```bash\n$ jsesc --json --pretty '{ \"f\u00f6o\": \"\u2665\", \"b\u00e5r\": \"\ud834\udf06 baz\" }'\n{\n  \"f\\u00F6o\": \"\\u2665\",\n  \"b\\u00E5r\": \"\\uD834\\uDF06 baz\"\n}\n```\n\nRead a local JSON file, escape any non-ASCII symbols, and save the result to a new file:\n\n```bash\n$ jsesc --json --object < data-raw.json > data-escaped.json\n```\n\nOr do the same with an online JSON file:\n\n```bash\n$ curl -sL \"http://git.io/aorKgQ\" | jsesc --json --object > data-escaped.json\n```\n\nSee `jsesc --help` for the full list of options.\n\n## Support\n\nAs of v2.0.0, jsesc supports Node.js v4+ only.\n\nOlder versions (up to jsesc v1.3.0) support Chrome 27, Firefox 3, Safari 4, Opera 10, IE 6, Node.js v6.0.0, Narwhal 0.3.2, RingoJS 0.8-0.11, PhantomJS 1.9.0, and Rhino 1.7RC4. **Note:** Using the `json` option on objects or arrays that contain non-string values relies on `JSON.parse()`. For legacy environments like IE \u2264 7, use [a `JSON` polyfill](https://bestiejs.github.io/json3/).\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\nThis library is available under the [MIT](https://mths.be/mit) license."}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 4081357}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 21403815}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 89692177}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 234294694}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 470610705}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 906592984}], "dependentsCount": 229, "starsCount": 15}, "github": {"homepage": "https://mths.be/jsesc", "starsCount": 502, "forksCount": 37, "subscribersCount": 11, "issues": {"count": 53, "openCount": 14, "distribution": {"3600": 12, "10800": 7, "32400": 3, "97200": 3, "291600": 6, "874800": 2, "2624400": 4, "7873200": 2, "23619600": 2, "70858800": 4, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "mathiasbynens", "commitsCount": 109}, {"username": "Boldewyn", "commitsCount": 1}, {"username": "almet", "commitsCount": 1}, {"username": "evan-dickinson", "commitsCount": 1}, {"username": "jhubble", "commitsCount": 1}, {"username": "sonneveld", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 14479, "testsSize": 17195}, "badges": [{"urls": {"original": "https://travis-ci.org/mathiasbynens/jsesc.svg?branch=master", "service": "https://api.travis-ci.org/mathiasbynens/jsesc.svg?branch=master", "shields": "https://img.shields.io/travis/mathiasbynens/jsesc/master.svg", "content": "https://img.shields.io/travis/mathiasbynens/jsesc/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/mathiasbynens/jsesc/badge.svg", "service": "https://coveralls.io/repos/mathiasbynens/jsesc/badge.svg", "shields": "https://img.shields.io/coveralls/mathiasbynens/jsesc.svg", "content": "https://img.shields.io/coveralls/mathiasbynens/jsesc.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.997, "health": 1, "branding": 0.7}, "popularity": {"communityInterest": 571, "downloadsCount": 78098231.33333333, "downloadsAcceleration": 159152.5902397259, "dependentsCount": 229}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8643980273334733, "detail": {"quality": 0.9893662511352591, "popularity": 0.621823511745367, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-13T11:06:54.374Z", "collected": {"metadata": {"name": "jsonify", "scope": "unscoped", "version": "0.0.0", "description": "JSON without touching any globals", "keywords": ["json", "browser"], "date": "2011-08-21T12:22:24.348Z", "author": {"name": "Douglas Crockford", "url": "http://crockford.com/"}, "publisher": {"username": "substack", "email": "mail@substack.net"}, "maintainers": [{"username": "substack", "email": "mail@substack.net"}], "repository": {"type": "git", "url": "git://github.com/substack/jsonify.git"}, "links": {"npm": "https://www.npmjs.com/package/jsonify", "homepage": "https://github.com/substack/jsonify#readme", "repository": "https://github.com/substack/jsonify", "bugs": "https://github.com/substack/jsonify/issues"}, "devDependencies": {"tap": "0.0.x", "garbage": "0.0.x"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 994162}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 5197123}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 21948733}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 58411456}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 122423336}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 252876968}], "dependentsCount": 81, "starsCount": 1}, "github": {"homepage": "http://www.JSON.org/", "forkOf": "douglascrockford/JSON-js", "starsCount": 40, "forksCount": 14, "subscribersCount": 5, "issues": {"count": 8, "openCount": 2, "distribution": {"3600": 0, "10800": 0, "32400": 1, "97200": 2, "291600": 1, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 0, "212576400": 2}, "isDisabled": true}, "contributors": [{"username": "substack", "commitsCount": 12}, {"username": "douglascrockford", "commitsCount": 5}, {"username": "ljharb", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "statuses": [{"context": "default", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 639}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 63, "downloadsCount": 19470485.333333332, "downloadsAcceleration": 6531.713964992377, "dependentsCount": 81}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.7, "issuesDistribution": 0.7}}, "score": {"final": 0.4866801808958924, "detail": {"quality": 0.5296760926924884, "popularity": 0.43978240340230856, "maintenance": 0.49672431970667963}}}
{"analyzedAt": "2020-02-29T19:44:04.177Z", "collected": {"metadata": {"name": "json-schema-traverse", "scope": "unscoped", "version": "0.4.1", "description": "Traverse JSON Schema passing each schema object to callback", "keywords": ["JSON-Schema", "traverse", "iterate"], "date": "2018-06-10T08:42:05.056Z", "author": {"name": "Evgeny Poberezkin"}, "publisher": {"username": "esp", "email": "e.poberezkin@me.com"}, "maintainers": [{"username": "esp", "email": "e.poberezkin@me.com"}], "repository": {"type": "git", "url": "git+https://github.com/epoberezkin/json-schema-traverse.git"}, "links": {"npm": "https://www.npmjs.com/package/json-schema-traverse", "homepage": "https://github.com/epoberezkin/json-schema-traverse#readme", "repository": "https://github.com/epoberezkin/json-schema-traverse", "bugs": "https://github.com/epoberezkin/json-schema-traverse/issues"}, "license": "MIT", "devDependencies": {"coveralls": "^2.13.1", "eslint": "^3.19.0", "mocha": "^3.4.2", "nyc": "^11.0.2", "pre-commit": "^1.2.2"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# json-schema-traverse\nTraverse JSON Schema passing each schema object to callback\n\n[![Build Status](https://travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master)](https://travis-ci.org/epoberezkin/json-schema-traverse)\n[![npm version](https://badge.fury.io/js/json-schema-traverse.svg)](https://www.npmjs.com/package/json-schema-traverse)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/json-schema-traverse?branch=master)\n\n\n## Install\n\n```\nnpm install json-schema-traverse\n```\n\n\n## Usage\n\n```javascript\nconst traverse = require('json-schema-traverse');\nconst schema = {\n  properties: {\n    foo: {type: 'string'},\n    bar: {type: 'integer'}\n  }\n};\n\ntraverse(schema, {cb});\n// cb is called 3 times with:\n// 1. root schema\n// 2. {type: 'string'}\n// 3. {type: 'integer'}\n\n// Or:\n\ntraverse(schema, {cb: {pre, post}});\n// pre is called 3 times with:\n// 1. root schema\n// 2. {type: 'string'}\n// 3. {type: 'integer'}\n//\n// post is called 3 times with:\n// 1. {type: 'string'}\n// 2. {type: 'integer'}\n// 3. root schema\n\n```\n\nCallback function `cb` is called for each schema object (not including draft-06 boolean schemas), including the root schema, in pre-order traversal. Schema references ($ref) are not resolved, they are passed as is.  Alternatively, you can pass a `{pre, post}` object as `cb`, and then `pre` will be called before traversing child elements, and `post` will be called after all child elements have been traversed.\n\nCallback is passed these parameters:\n\n- _schema_: the current schema object\n- _JSON pointer_: from the root schema to the current schema object\n- _root schema_: the schema passed to `traverse` object\n- _parent JSON pointer_: from the root schema to the parent schema object (see below)\n- _parent keyword_: the keyword inside which this schema appears (e.g. `properties`, `anyOf`, etc.)\n- _parent schema_: not necessarily parent object/array; in the example above the parent schema for `{type: 'string'}` is the root schema\n- _index/property_: index or property name in the array/object containing multiple schemas; in the example above for `{type: 'string'}` the property name is `'foo'`\n\n\n## Traverse objects in all unknown keywords\n\n```javascript\nconst traverse = require('json-schema-traverse');\nconst schema = {\n  mySchema: {\n    minimum: 1,\n    maximum: 2\n  }\n};\n\ntraverse(schema, {allKeys: true, cb});\n// cb is called 2 times with:\n// 1. root schema\n// 2. mySchema\n```\n\nWithout option `allKeys: true` callback will be called only with root schema.\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/json-schema-traverse/blob/master/LICENSE)"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 3054956}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 18340868}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 77563147}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 207795367}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 413333347}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 780562168}], "dependentsCount": 73, "starsCount": 0}, "github": {"starsCount": 50, "forksCount": 10, "subscribersCount": 3, "issues": {"count": 12, "openCount": 5, "distribution": {"3600": 2, "10800": 0, "32400": 1, "97200": 1, "291600": 1, "874800": 0, "2624400": 3, "7873200": 0, "23619600": 2, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "epoberezkin", "commitsCount": 22}, {"username": "jwalton", "commitsCount": 4}, {"username": "blackdynamo", "commitsCount": 1}, {"username": "fogine", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 1}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 4}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 4}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2694, "testsSize": 11586}, "badges": [{"urls": {"original": "https://travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master", "service": "https://api.travis-ci.org/epoberezkin/json-schema-traverse.svg?branch=master", "shields": "https://img.shields.io/travis/epoberezkin/json-schema-traverse/master.svg", "content": "https://img.shields.io/travis/epoberezkin/json-schema-traverse/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/epoberezkin/json-schema-traverse/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/epoberezkin/json-schema-traverse/master.svg", "content": "https://img.shields.io/coveralls/epoberezkin/json-schema-traverse/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.42, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 67, "downloadsCount": 69265122.33333333, "downloadsAcceleration": 151170.40755327255, "dependentsCount": 73}, "maintenance": {"releasesFrequency": 0.03698630136986302, "commitsFrequency": 0.25602739726027396, "openIssues": 0.6388888888888888, "issuesDistribution": 0.1275722557607324}}, "score": {"final": 0.6189283074051029, "detail": {"quality": 0.8854093597006257, "popularity": 0.5392094370454578, "maintenance": 0.4702348472257286}}}
{"analyzedAt": "2020-02-28T04:58:21.111Z", "collected": {"metadata": {"name": "json-stable-stringify", "scope": "unscoped", "version": "1.0.1", "description": "deterministic JSON.stringify() with custom sorting to get deterministic hashes from stringified results", "keywords": ["json", "stringify", "deterministic", "hash", "sort", "stable"], "date": "2016-02-02T18:05:58.629Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net", "username": "substack"}, "publisher": {"username": "substack", "email": "substack@gmail.com"}, "maintainers": [{"username": "substack", "email": "mail@substack.net"}], "repository": {"type": "git", "url": "git://github.com/substack/json-stable-stringify.git"}, "links": {"npm": "https://www.npmjs.com/package/json-stable-stringify", "homepage": "https://github.com/substack/json-stable-stringify", "repository": "https://github.com/substack/json-stable-stringify", "bugs": "https://github.com/substack/json-stable-stringify/issues"}, "license": "MIT", "dependencies": {"jsonify": "~0.0.0"}, "devDependencies": {"tape": "~1.0.4"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# json-stable-stringify\n\ndeterministic version of `JSON.stringify()` so you can get a consistent hash\nfrom stringified results\n\nYou can also pass in a custom comparison function.\n\n[![browser support](https://ci.testling.com/substack/json-stable-stringify.png)](https://ci.testling.com/substack/json-stable-stringify)\n\n[![build status](https://secure.travis-ci.org/substack/json-stable-stringify.png)](http://travis-ci.org/substack/json-stable-stringify)\n\n# example\n\n``` js\nvar stringify = require('json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n# methods\n\n``` js\nvar stringify = require('json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### space\n\nIf you specify `opts.space`, it will indent the output for pretty-printing.\nValid values are strings (e.g. `{space: \\t}`) or a number of spaces\n(`{space: 3}`).\n\nFor example:\n\n```js\nvar obj = { b: 1, a: { foo: 'bar', and: [1, 2, 3] } };\nvar s = stringify(obj, { space: '  ' });\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\n  \"a\": {\n    \"and\": [\n      1,\n      2,\n      3\n    ],\n    \"foo\": \"bar\"\n  },\n  \"b\": 1\n}\n```\n\n### replacer\n\nThe replacer parameter is a function `opts.replacer(key, value)` that behaves\nthe same as the replacer\n[from the core JSON object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_native_JSON#The_replacer_parameter).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install json-stable-stringify\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 888765}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 4633958}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 19874835}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 51808439}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 106423632}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 222620342}], "dependentsCount": 835, "starsCount": 20}, "github": {"starsCount": 516, "forksCount": 82, "subscribersCount": 13, "issues": {"count": 37, "openCount": 18, "distribution": {"3600": 4, "10800": 1, "32400": 0, "97200": 1, "291600": 1, "874800": 0, "2624400": 1, "7873200": 2, "23619600": 4, "70858800": 12, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 22}, {"username": "kapetan", "commitsCount": 2}, {"username": "RickEyre", "commitsCount": 1}, {"username": "mvayngrib", "commitsCount": 1}, {"username": "rprieto", "commitsCount": 1}, {"username": "thomsbg", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2633, "testsSize": 5776}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/json-stable-stringify.png", "service": "https://api.travis-ci.org/substack/json-stable-stringify.svg", "shields": "https://img.shields.io/travis/substack/json-stable-stringify.svg", "content": "https://img.shields.io/travis/substack/json-stable-stringify.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 637, "downloadsCount": 17269479.666666668, "downloadsAcceleration": 8474.852397260285, "dependentsCount": 835}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 0.5225225225225225, "issuesDistribution": 0}}, "score": {"final": 0.5356766037233137, "detail": {"quality": 0.9262615076490556, "popularity": 0.5660348372858509, "maintenance": 0.17053130965299806}}}
{"analyzedAt": "2020-03-03T11:28:55.101Z", "collected": {"metadata": {"name": "json-stable-stringify-without-jsonify", "scope": "unscoped", "version": "1.0.1", "description": "deterministic JSON.stringify() with custom sorting to get deterministic hashes from stringified results, with no public domain dependencies", "keywords": ["json", "stringify", "deterministic", "hash", "sort", "stable"], "date": "2016-12-15T22:00:35.805Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "samn", "email": "samneubardt@gmail.com"}, "maintainers": [{"username": "samn", "email": "samneubardt@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/samn/json-stable-stringify.git"}, "links": {"npm": "https://www.npmjs.com/package/json-stable-stringify-without-jsonify", "homepage": "https://github.com/samn/json-stable-stringify", "repository": "https://github.com/samn/json-stable-stringify", "bugs": "https://github.com/samn/json-stable-stringify/issues"}, "license": "MIT", "devDependencies": {"tape": "~1.0.4"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "# json-stable-stringify\n\nThis is the same as https://github.com/substack/json-stable-stringify but it doesn't depend on libraries without licenses (jsonify).\n\ndeterministic version of `JSON.stringify()` so you can get a consistent hash\nfrom stringified results\n\nYou can also pass in a custom comparison function.\n\n[![browser support](https://ci.testling.com/substack/json-stable-stringify.png)](https://ci.testling.com/substack/json-stable-stringify)\n\n[![build status](https://secure.travis-ci.org/substack/json-stable-stringify.png)](http://travis-ci.org/substack/json-stable-stringify)\n\n# example\n\n``` js\nvar stringify = require('json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n# methods\n\n``` js\nvar stringify = require('json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### space\n\nIf you specify `opts.space`, it will indent the output for pretty-printing.\nValid values are strings (e.g. `{space: \\t}`) or a number of spaces\n(`{space: 3}`).\n\nFor example:\n\n```js\nvar obj = { b: 1, a: { foo: 'bar', and: [1, 2, 3] } };\nvar s = stringify(obj, { space: '  ' });\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\n  \"a\": {\n    \"and\": [\n      1,\n      2,\n      3\n    ],\n    \"foo\": \"bar\"\n  },\n  \"b\": 1\n}\n```\n\n### replacer\n\nThe replacer parameter is a function `opts.replacer(key, value)` that behaves\nthe same as the replacer\n[from the core JSON object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_native_JSON#The_replacer_parameter).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install json-stable-stringify\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1420163}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 7947362}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 31601789}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 80986582}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 155899447}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 281088195}], "dependentsCount": 35, "starsCount": 0}, "github": {"forkOf": "substack/json-stable-stringify", "starsCount": 6, "forksCount": 2, "subscribersCount": 1, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": true}, "contributors": [{"username": "substack", "commitsCount": 22}, {"username": "kapetan", "commitsCount": 2}, {"username": "samn", "commitsCount": 2}, {"username": "RickEyre", "commitsCount": 1}, {"username": "mvayngrib", "commitsCount": 1}, {"username": "rprieto", "commitsCount": 1}, {"username": "thomsbg", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 2767, "testsSize": 5969}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/json-stable-stringify.png", "service": "https://api.travis-ci.org/substack/json-stable-stringify.svg", "shields": "https://img.shields.io/travis/substack/json-stable-stringify.svg", "content": "https://img.shields.io/travis/substack/json-stable-stringify.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 16, "downloadsCount": 26995527.333333332, "downloadsAcceleration": 94822.92947108066, "dependentsCount": 35}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7812046018687318, "detail": {"quality": 0.8905129372841737, "popularity": 0.4688594222898928, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-28T08:27:44.032Z", "collected": {"metadata": {"name": "json-stringify-safe", "scope": "unscoped", "version": "5.0.1", "description": "Like JSON.stringify, but doesn't blow up on circular refs.", "keywords": ["json", "stringify", "circular", "safe"], "date": "2015-05-19T01:42:09.719Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "isaacs@npmjs.com"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}, {"username": "moll", "email": "andri@dot.ee"}], "contributors": [{"name": "Andri M\u00f6ll", "email": "andri@dot.ee", "url": "http://themoll.com"}], "repository": {"type": "git", "url": "git://github.com/isaacs/json-stringify-safe.git"}, "links": {"npm": "https://www.npmjs.com/package/json-stringify-safe", "homepage": "https://github.com/isaacs/json-stringify-safe", "repository": "https://github.com/isaacs/json-stringify-safe", "bugs": "https://github.com/isaacs/json-stringify-safe/issues"}, "license": "ISC", "devDependencies": {"mocha": ">= 2.1.0 < 3", "must": ">= 0.12 < 0.13", "sinon": ">= 1.12.2 < 2"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# json-stringify-safe\n\nLike JSON.stringify, but doesn't throw on circular references.\n\n## Usage\n\nTakes the same arguments as `JSON.stringify`.\n\n```javascript\nvar stringify = require('json-stringify-safe');\nvar circularObj = {};\ncircularObj.circularRef = circularObj;\ncircularObj.list = [ circularObj, circularObj ];\nconsole.log(stringify(circularObj, null, 2));\n```\n\nOutput:\n\n```json\n{\n  \"circularRef\": \"[Circular]\",\n  \"list\": [\n    \"[Circular]\",\n    \"[Circular]\"\n  ]\n}\n```\n\n## Details\n\n```\nstringify(obj, serializer, indent, decycler)\n```\n\nThe first three arguments are the same as to JSON.stringify.  The last\nis an argument that's only used when the object has been seen already.\n\nThe default `decycler` function returns the string `'[Circular]'`.\nIf, for example, you pass in `function(k,v){}` (return nothing) then it\nwill prune cycles.  If you pass in `function(k,v){ return {foo: 'bar'}}`,\nthen cyclical objects will always be represented as `{\"foo\":\"bar\"}` in\nthe result.\n\n```\nstringify.getSerialize(serializer, decycler)\n```\n\nReturns a serializer that can be used elsewhere.  This is the actual\nfunction that's passed to JSON.stringify.\n\n**Note** that the function returned from `getSerialize` is stateful for now, so\ndo **not** use it more than once."}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2566393}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 13971725}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 58752260}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 154557159}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 304790382}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 565000053}], "dependentsCount": 867, "starsCount": 35}, "github": {"starsCount": 412, "forksCount": 41, "subscribersCount": 19, "issues": {"count": 32, "openCount": 6, "distribution": {"3600": 8, "10800": 1, "32400": 1, "97200": 1, "291600": 1, "874800": 2, "2624400": 2, "7873200": 4, "23619600": 3, "70858800": 5, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "moll", "commitsCount": 15}, {"username": "isaacs", "commitsCount": 14}, {"username": "mikeal", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 1261, "testsSize": 7577, "hasNpmIgnore": true, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 510, "downloadsCount": 51519053, "downloadsAcceleration": 138949.4663242009, "dependentsCount": 867}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8268954333798024, "detail": {"quality": 0.8275018357724344, "popularity": 0.6533814306249278, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-28T19:23:49.079Z", "collected": {"metadata": {"name": "js-tokens", "scope": "unscoped", "version": "5.0.0", "description": "A regex that tokenizes JavaScript.", "keywords": ["JavaScript", "js", "token", "tokenize", "regex"], "date": "2019-06-15T14:54:25.462Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/lydell/js-tokens.git"}, "links": {"npm": "https://www.npmjs.com/package/js-tokens", "homepage": "https://github.com/lydell/js-tokens#readme", "repository": "https://github.com/lydell/js-tokens", "bugs": "https://github.com/lydell/js-tokens/issues"}, "license": "MIT", "devDependencies": {"coffeescript": "2.4.1", "esprima": "4.0.1", "everything.js": "1.0.3", "mocha": "6.1.4"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Overview [![Build Status](https://travis-ci.org/lydell/js-tokens.svg?branch=master)](https://travis-ci.org/lydell/js-tokens)\n========\n\nA regex that tokenizes JavaScript.\n\n```js\nvar jsTokens = require(\"js-tokens\").default\n\nvar jsString = \"var foo=opts.foo;\\n...\"\n\njsString.match(jsTokens)\n// [\"var\", \" \", \"foo\", \"=\", \"opts\", \".\", \"foo\", \";\", \"\\n\", ...]\n```\n\n\nInstallation\n============\n\n`npm install js-tokens`\n\n```js\nimport jsTokens from \"js-tokens\"\n// or:\nvar jsTokens = require(\"js-tokens\").default\n```\n\n\nUsage\n=====\n\n### `jsTokens` ###\n\nA regex with the `g` flag that matches JavaScript tokens.\n\nThe regex _always_ matches, even invalid JavaScript and the empty string.\n\nThe next match is always directly after the previous.\n\n### `var token = matchToToken(match)` ###\n\n```js\nimport {matchToToken} from \"js-tokens\"\n// or:\nvar matchToToken = require(\"js-tokens\").matchToToken\n```\n\nTakes a `match` returned by `jsTokens.exec(string)`, and returns a `{type:\nString, value: String}` object. The following types are available:\n\n- string\n- comment\n- regex\n- number\n- name\n- punctuator\n- whitespace\n- invalid\n\nMulti-line comments and strings also have a `closed` property indicating if the\ntoken was closed or not (see below).\n\nComments and strings both come in several flavors. To distinguish them, check if\nthe token starts with `//`, `/*`, `'`, `\"` or `` ` ``.\n\nNames are ECMAScript IdentifierNames, that is, including both identifiers and\nkeywords. You may use [is-keyword-js] to tell them apart.\n\nWhitespace includes both line terminators and other whitespace.\n\n[is-keyword-js]: https://github.com/crissdev/is-keyword-js\n\n\nECMAScript support\n==================\n\nThe intention is to always support the latest ECMAScript version whose feature\nset has been finalized.\n\nIf adding support for a newer version requires changes, a new version with a\nmajor verion bump will be released.\n\nCurrently, ECMAScript 2019 is supported.\n\n\nInvalid code handling\n=====================\n\nUnterminated strings are still matched as strings. JavaScript strings cannot\ncontain (unescaped) newlines, so unterminated strings simply end at the end of\nthe line. Unterminated template strings can contain unescaped newlines, though,\nso they go on to the end of input.\n\nUnterminated multi-line comments are also still matched as comments. They\nsimply go on to the end of the input.\n\nUnterminated regex literals are likely matched as division and whatever is\ninside the regex.\n\nInvalid ASCII characters have their own capturing group.\n\nInvalid non-ASCII characters are treated as names, to simplify the matching of\nnames (except unicode spaces which are treated as whitespace). Note: See also\nthe [ES2018](#es2018) section.\n\nRegex literals may contain invalid regex syntax. They are still matched as\nregex literals. They may also contain repeated regex flags, to keep the regex\nsimple.\n\nStrings may contain invalid escape sequences.\n\n\nLimitations\n===========\n\nTokenizing JavaScript using regexes\u2014in fact, _one single regex_\u2014won\u2019t be\nperfect. But that\u2019s not the point either.\n\nYou may compare jsTokens with [esprima] by using `esprima-compare.js`.\nSee `npm run esprima-compare`!\n\n[esprima]: http://esprima.org/\n\n### Template string interpolation ###\n\nTemplate strings are matched as single tokens, from the starting `` ` `` to the\nending `` ` ``, including interpolations (whose tokens are not matched\nindividually).\n\nMatching template string interpolations requires recursive balancing of `{` and\n`}`\u2014something that JavaScript regexes cannot do. Only one level of nesting is\nsupported.\n\n### Division and regex literals collision ###\n\nConsider this example:\n\n```js\nvar g = 9.82\nvar number = bar / 2/g\n\nvar regex = / 2/g\n```\n\nA human can easily understand that in the `number` line we\u2019re dealing with\ndivision, and in the `regex` line we\u2019re dealing with a regex literal. How come?\nBecause humans can look at the whole code to put the `/` characters in context.\nA JavaScript regex cannot. It only sees forwards. (Well, ES2018 regexes can also\nlook backwards. See the [ES2018](#es2018) section).\n\nWhen the `jsTokens` regex scans throught the above, it will see the following\nat the end of both the `number` and `regex` rows:\n\n```js\n/ 2/g\n```\n\nIt is then impossible to know if that is a regex literal, or part of an\nexpression dealing with division.\n\nHere is a similar case:\n\n```js\nfoo /= 2/g\nfoo(/= 2/g)\n```\n\nThe first line divides the `foo` variable with `2/g`. The second line calls the\n`foo` function with the regex literal `/= 2/g`. Again, since `jsTokens` only\nsees forwards, it cannot tell the two cases apart.\n\nThere are some cases where we _can_ tell division and regex literals apart,\nthough.\n\nFirst off, we have the simple cases where there\u2019s only one slash in the line:\n\n```js\nvar foo = 2/g\nfoo /= 2\n```\n\nRegex literals cannot contain newlines, so the above cases are correctly\nidentified as division. Things are only problematic when there are more than\none non-comment slash in a single line.\n\nSecondly, not every character is a valid regex flag.\n\n```js\nvar number = bar / 2/e\n```\n\nThe above example is also correctly identified as division, because `e` is not a\nvalid regex flag. I initially wanted to future-proof by allowing `[a-zA-Z]*`\n(any letter) as flags, but it is not worth it since it increases the amount of\nambigous cases. So only the standard `g`, `m`, `i`, `y` and `u` flags are\nallowed. This means that the above example will be identified as division as\nlong as you don\u2019t rename the `e` variable to some permutation of `gmiyus` 1 to 6\ncharacters long.\n\nLastly, we can look _forward_ for information.\n\n- If the token following what looks like a regex literal is not valid after a\n  regex literal, but is valid in a division expression, then the regex literal\n  is treated as division instead. For example, a flagless regex cannot be\n  followed by a string, number or name, but all of those three can be the\n  denominator of a division.\n- Generally, if what looks like a regex literal is followed by an operator, the\n  regex literal is treated as division instead. This is because regexes are\n  seldomly used with operators (such as `+`, `*`, `&&` and `==`), but division\n  could likely be part of such an expression.\n\nPlease consult the regex source and the test cases for precise information on\nwhen regex or division is matched (should you need to know). In short, you\ncould sum it up as:\n\nIf the end of a statement looks like a regex literal (even if it isn\u2019t), it\nwill be treated as one. Otherwise it should work as expected (if you write sane\ncode).\n\n### ES2018 ###\n\nES2018 added some nice regex improvements to the language.\n\n- [Unicode property escapes] should allow telling names and invalid non-ASCII\n  characters apart without blowing up the regex size.\n- [Lookbehind assertions] should allow matching telling division and regex\n  literals apart in more cases.\n- [Named capture groups] might simplify some things.\n\nThese things would be nice to do, but are not critical. They probably have to\nwait until the oldest maintained Node.js LTS release supports those features.\n\n[Unicode property escapes]: http://2ality.com/2017/07/regexp-unicode-property-escapes.html\n[Lookbehind assertions]: http://2ality.com/2017/05/regexp-lookbehind-assertions.html\n[Named capture groups]: http://2ality.com/2017/05/regexp-named-capture-groups.html\n\n\nLicense\n=======\n\n[MIT](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 3610205}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 18911768}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 82066269}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 211128124}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 419926114}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 783176895}], "dependentsCount": 107, "starsCount": 5}, "github": {"starsCount": 126, "forksCount": 11, "subscribersCount": 5, "issues": {"count": 12, "openCount": 1, "distribution": {"3600": 5, "10800": 0, "32400": 1, "97200": 1, "291600": 1, "874800": 0, "2624400": 0, "7873200": 2, "23619600": 2, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 85}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7388, "testsSize": 31428, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/lydell/js-tokens.svg?branch=master", "service": "https://api.travis-ci.org/lydell/js-tokens.svg?branch=master", "shields": "https://img.shields.io/travis/lydell/js-tokens/master.svg", "content": "https://img.shields.io/travis/lydell/js-tokens/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 149, "downloadsCount": 70376041.33333333, "downloadsAcceleration": 194271.22724505328, "dependentsCount": 107}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8329871186134372, "detail": {"quality": 0.9483324248775872, "popularity": 0.567217169202325, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-22T00:18:21.273Z", "collected": {"metadata": {"name": "js-yaml", "scope": "unscoped", "version": "3.13.1", "description": "YAML 1.2 parser and serializer", "keywords": ["yaml", "parser", "serializer", "pyyaml"], "date": "2019-04-05T16:15:22.531Z", "author": {"name": "Vladimir Zapparov", "email": "dervus.grim@gmail.com"}, "publisher": {"username": "vitaly", "email": "vitaly@rcdesign.ru"}, "maintainers": [{"username": "vitaly", "email": "vitaly@rcdesign.ru"}], "contributors": [{"name": "Aleksey V Zapparov", "email": "ixti@member.fsf.org", "url": "http://www.ixti.net/"}, {"name": "Vitaly Puzrin", "email": "vitaly@rcdesign.ru", "url": "https://github.com/puzrin"}, {"name": "Martin Grenfell", "email": "martin.grenfell@gmail.com", "url": "http://got-ravings.blogspot.com"}], "repository": {"type": "git", "url": "git+https://github.com/nodeca/js-yaml.git"}, "links": {"npm": "https://www.npmjs.com/package/js-yaml", "homepage": "https://github.com/nodeca/js-yaml", "repository": "https://github.com/nodeca/js-yaml", "bugs": "https://github.com/nodeca/js-yaml/issues"}, "license": "MIT", "dependencies": {"argparse": "^1.0.7", "esprima": "^4.0.0"}, "devDependencies": {"ansi": "^0.3.1", "benchmark": "^2.1.4", "browserify": "^16.2.2", "codemirror": "^5.13.4", "eslint": "^4.1.1", "fast-check": "1.1.3", "istanbul": "^0.4.5", "mocha": "^5.2.0", "uglify-js": "^3.0.1"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "JS-YAML - YAML 1.2 parser / writer for JavaScript\n=================================================\n\n[![Build Status](https://travis-ci.org/nodeca/js-yaml.svg?branch=master)](https://travis-ci.org/nodeca/js-yaml)\n[![NPM version](https://img.shields.io/npm/v/js-yaml.svg)](https://www.npmjs.org/package/js-yaml)\n\n__[Online Demo](http://nodeca.github.com/js-yaml/)__\n\n\nThis is an implementation of [YAML](http://yaml.org/), a human-friendly data\nserialization language. Started as [PyYAML](http://pyyaml.org/) port, it was\ncompletely rewritten from scratch. Now it's very fast, and supports 1.2 spec.\n\n\nInstallation\n------------\n\n### YAML module for node.js\n\n```\nnpm install js-yaml\n```\n\n\n### CLI executable\n\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\n\n```\nnpm install -g js-yaml\n```\n\n#### Usage\n\n```\nusage: js-yaml [-h] [-v] [-c] [-t] file\n\nPositional arguments:\n  file           File with YAML document(s)\n\nOptional arguments:\n  -h, --help     Show this help message and exit.\n  -v, --version  Show program's version number and exit.\n  -c, --compact  Display errors in compact mode\n  -t, --trace    Show stack trace on error\n```\n\n\n### Bundled YAML library for browsers\n\n``` html\n<!-- esprima required only for !!js/function -->\n<script src=\"esprima.js\"></script>\n<script src=\"js-yaml.min.js\"></script>\n<script type=\"text/javascript\">\nvar doc = jsyaml.load('greeting: hello\\nname: world');\n</script>\n```\n\nBrowser support was done mostly for the online demo. If you find any errors - feel\nfree to send pull requests with fixes. Also note, that IE and other old browsers\nneeds [es5-shims](https://github.com/kriskowal/es5-shim) to operate.\n\nNotes:\n\n1. We have no resources to support browserified version. Don't expect it to be\n   well tested. Don't expect fast fixes if something goes wrong there.\n2. `!!js/function` in browser bundle will not work by default. If you really need\n   it - load `esprima` parser first (via amd or directly).\n3. `!!bin` in browser will return `Array`, because browsers do not support\n   node.js `Buffer` and adding Buffer shims is completely useless on practice.\n\n\nAPI\n---\n\nHere we cover the most 'useful' methods. If you need advanced details (creating\nyour own tags), see [wiki](https://github.com/nodeca/js-yaml/wiki) and\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) for more\ninfo.\n\n``` javascript\nyaml = require('js-yaml');\nfs   = require('fs');\n\n// Get document, or throw exception on error\ntry {\n  var doc = yaml.safeLoad(fs.readFileSync('/home/ixti/example.yml', 'utf8'));\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n\n### safeLoad (string [ , options ])\n\n**Recommended loading way.** Parses `string` as single YAML document. Returns a JavaScript\nobject or throws `YAMLException` on error. By default, does not support regexps,\nfunctions and undefined. This method is safe for untrusted data.\n\noptions:\n\n- `filename` _(default: null)_ - string to be used as a file path in\n  error/warning messages.\n- `onWarning` _(default: null)_ - function to call on warning messages.\n  Loader will call this function with an instance of `YAMLException` for each warning.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ - specifies a schema to use.\n  - `FAILSAFE_SCHEMA` - only strings, arrays and plain objects:\n    http://www.yaml.org/spec/1.2/spec.html#id2802346\n  - `JSON_SCHEMA` - all JSON-supported types:\n    http://www.yaml.org/spec/1.2/spec.html#id2803231\n  - `CORE_SCHEMA` - same as `JSON_SCHEMA`:\n    http://www.yaml.org/spec/1.2/spec.html#id2804923\n  - `DEFAULT_SAFE_SCHEMA` - all supported YAML types, without unsafe ones\n    (`!!js/undefined`, `!!js/regexp` and `!!js/function`):\n    http://yaml.org/type/\n  - `DEFAULT_FULL_SCHEMA` - all supported YAML types.\n- `json` _(default: false)_ - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error.\n\nNOTE: This function **does not** understand multi-document sources, it throws\nexception on those.\n\nNOTE: JS-YAML **does not** support schema-specific tag resolution restrictions.\nSo, the JSON schema is not as strictly defined in the YAML specification.\nIt allows numbers in any notation, use `Null` and `NULL` as `null`, etc.\nThe core schema also has no such restrictions. It allows binary notation for integers.\n\n\n### load (string [ , options ])\n\n**Use with care with untrusted sources**. The same as `safeLoad()` but uses\n`DEFAULT_FULL_SCHEMA` by default - adds some JavaScript-specific types:\n`!!js/function`, `!!js/regexp` and `!!js/undefined`. For untrusted sources, you\nmust additionally validate object structure to avoid injections:\n\n``` javascript\nvar untrusted_code = '\"toString\": !<tag:yaml.org,2002:js/function> \"function (){very_evil_thing();}\"';\n\n// I'm just converting that string, what could possibly go wrong?\nrequire('js-yaml').load(untrusted_code) + ''\n```\n\n\n### safeLoadAll (string [, iterator] [, options ])\n\nSame as `safeLoad()`, but understands multi-document sources. Applies\n`iterator` to each document if specified, or returns array of documents.\n\n``` javascript\nvar yaml = require('js-yaml');\n\nyaml.safeLoadAll(data, function (doc) {\n  console.log(doc);\n});\n```\n\n\n### loadAll (string [, iterator] [ , options ])\n\nSame as `safeLoadAll()` but uses `DEFAULT_FULL_SCHEMA` by default.\n\n\n### safeDump (object [ , options ])\n\nSerializes `object` as a YAML document. Uses `DEFAULT_SAFE_SCHEMA`, so it will\nthrow an exception if you try to dump regexps or functions. However, you can\ndisable exceptions by setting the `skipInvalid` option to `true`.\n\noptions:\n\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\n- `noArrayIndent` _(default: false)_ - when true, will not add an indentation level to array elements\n- `skipInvalid` _(default: false)_ - do not throw on invalid types (like function\n  in the safe schema) and skip pairs and single values with such types.\n- `flowLevel` (default: -1) - specifies level of nesting, when to switch from\n  block to flow style for collections. -1 means block style everwhere\n- `styles` - \"tag\" => \"style\" map. Each tag may have own set of styles.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ specifies a schema to use.\n- `sortKeys` _(default: `false`)_ - if `true`, sort keys when dumping YAML. If a\n  function, use the function to sort the keys.\n- `lineWidth` _(default: `80`)_ - set max line width.\n- `noRefs` _(default: `false`)_ - if `true`, don't convert duplicate objects into references\n- `noCompatMode` _(default: `false`)_ - if `true` don't try to be compatible with older\n  yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1\n- `condenseFlow` _(default: `false`)_ - if `true` flow sequences will be condensed, omitting the space between `a, b`. Eg. `'[a,b]'`, and omitting the space between `key: value` and quoting the key. Eg. `'{\"a\":b}'` Can be useful when using yaml for pretty URL query params as spaces are %-encoded.\n\nThe following table show availlable styles (e.g. \"canonical\",\n\"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml\noutput is shown on the right side after `=>` (default setting) or `->`:\n\n``` none\n!!null\n  \"canonical\"   -> \"~\"\n  \"lowercase\"   => \"null\"\n  \"uppercase\"   -> \"NULL\"\n  \"camelcase\"   -> \"Null\"\n\n!!int\n  \"binary\"      -> \"0b1\", \"0b101010\", \"0b1110001111010\"\n  \"octal\"       -> \"01\", \"052\", \"016172\"\n  \"decimal\"     => \"1\", \"42\", \"7290\"\n  \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\"\n\n!!bool\n  \"lowercase\"   => \"true\", \"false\"\n  \"uppercase\"   -> \"TRUE\", \"FALSE\"\n  \"camelcase\"   -> \"True\", \"False\"\n\n!!float\n  \"lowercase\"   => \".nan\", '.inf'\n  \"uppercase\"   -> \".NAN\", '.INF'\n  \"camelcase\"   -> \".NaN\", '.Inf'\n```\n\nExample:\n\n``` javascript\nsafeDump (object, {\n  'styles': {\n    '!!null': 'canonical' // dump null as ~\n  },\n  'sortKeys': true        // sort object keys\n});\n```\n\n### dump (object [ , options ])\n\nSame as `safeDump()` but without limits (uses `DEFAULT_FULL_SCHEMA` by default).\n\n\nSupported YAML types\n--------------------\n\nThe list of standard YAML tags and corresponding JavaScipt types. See also\n[YAML tag discussion](http://pyyaml.org/wiki/YAMLTagDiscussion) and\n[YAML types repository](http://yaml.org/type/).\n\n```\n!!null ''                   # null\n!!bool 'yes'                # bool\n!!int '3...'                # number\n!!float '3.14...'           # number\n!!binary '...base64...'     # buffer\n!!timestamp 'YYYY-...'      # date\n!!omap [ ... ]              # array of key-value pairs\n!!pairs [ ... ]             # array or array pairs\n!!set { ... }               # array of objects with given keys and null values\n!!str '...'                 # string\n!!seq [ ... ]               # array\n!!map { ... }               # object\n```\n\n**JavaScript-specific tags**\n\n```\n!!js/regexp /pattern/gim            # RegExp\n!!js/undefined ''                   # Undefined\n!!js/function 'function () {...}'   # Function\n```\n\nCaveats\n-------\n\nNote, that you use arrays or objects as key in JS-YAML. JS does not allow objects\nor arrays as keys, and stringifies (by calling `toString()` method) them at the\nmoment of adding them.\n\n``` yaml\n---\n? [ foo, bar ]\n: - baz\n? { foo: bar }\n: - baz\n  - baz\n```\n\n``` javascript\n{ \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] }\n```\n\nAlso, reading of properties on implicit block mapping keys is not supported yet.\nSo, the following YAML document cannot be loaded.\n\n``` yaml\n&anchor foo:\n  foo: bar\n  *anchor: duplicate key\n  baz: bat\n  *anchor: duplicate key\n```\n\n\nBreaking changes in 2.x.x -> 3.x.x\n----------------------------------\n\nIf you have not used __custom__ tags or loader classes and not loaded yaml\nfiles via `require()`, no changes are needed. Just upgrade the library.\n\nOtherwise, you should:\n\n1. Replace all occurrences of `require('xxxx.yml')` by `fs.readFileSync()` +\n  `yaml.safeLoad()`.\n2. rewrite your custom tags constructors and custom loader\n  classes, to conform the new API. See\n  [examples](https://github.com/nodeca/js-yaml/tree/master/examples) and\n  [wiki](https://github.com/nodeca/js-yaml/wiki) for details.\n\n\nLicense\n-------\n\nView the [LICENSE](https://github.com/nodeca/js-yaml/blob/master/LICENSE) file\n(MIT)."}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 12664965}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 62727388}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 170066571}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 352418822}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 722637133}], "dependentsCount": 7847, "starsCount": 121}, "github": {"homepage": "http://nodeca.github.com/js-yaml/", "starsCount": 4328, "forksCount": 573, "subscribersCount": 78, "issues": {"count": 532, "openCount": 66, "distribution": {"3600": 144, "10800": 60, "32400": 49, "97200": 46, "291600": 25, "874800": 48, "2624400": 36, "7873200": 30, "23619600": 25, "70858800": 37, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "ixti", "commitsCount": 404}, {"username": "dervus", "commitsCount": 390}, {"username": "puzrin", "commitsCount": 265}, {"username": "aepsilon", "commitsCount": 5}, {"username": "rlidwka", "commitsCount": 5}, {"username": "dplepage", "commitsCount": 3}, {"username": "isaacs", "commitsCount": 3}, {"username": "kcivey", "commitsCount": 3}, {"username": "Kirill89", "commitsCount": 2}, {"username": "a-rodin", "commitsCount": 2}, {"username": "caolan", "commitsCount": 2}, {"username": "djchie", "commitsCount": 2}, {"username": "dod38fr", "commitsCount": 2}, {"username": "eseliger", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "tcr", "commitsCount": 2}, {"username": "ArtskydJ", "commitsCount": 1}, {"username": "ELLIOTTCABLE", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "GabrieleC", "commitsCount": 1}, {"username": "Hypercubed", "commitsCount": 1}, {"username": "IvanGoncharov", "commitsCount": 1}, {"username": "MartijnCuppens", "commitsCount": 1}, {"username": "MikeRalphson", "commitsCount": 1}, {"username": "aengl", "commitsCount": 1}, {"username": "ahgittin", "commitsCount": 1}, {"username": "airportyh", "commitsCount": 1}, {"username": "ajafff", "commitsCount": 1}, {"username": "bachwehbi", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "diberry", "commitsCount": 1}, {"username": "doowb", "commitsCount": 1}, {"username": "dubzzz", "commitsCount": 1}, {"username": "dustyrockpyle", "commitsCount": 1}, {"username": "fabiospampinato", "commitsCount": 1}, {"username": "fayimora", "commitsCount": 1}, {"username": "fevisera", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "jacob-hd", "commitsCount": 1}, {"username": "jeromew", "commitsCount": 1}, {"username": "k7sleeper", "commitsCount": 1}, {"username": "kahwee", "commitsCount": 1}, {"username": "kivlor", "commitsCount": 1}, {"username": "lintaba", "commitsCount": 1}, {"username": "loamhoof", "commitsCount": 1}, {"username": "lwassermann", "commitsCount": 1}, {"username": "mojodna", "commitsCount": 1}, {"username": "monken", "commitsCount": 1}, {"username": "murtazajafferji", "commitsCount": 1}, {"username": "mxl", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "onebytegone", "commitsCount": 1}, {"username": "paolochiodi", "commitsCount": 1}, {"username": "raiden-dev", "commitsCount": 1}, {"username": "rjmunro", "commitsCount": 1}, {"username": "rockitbaby", "commitsCount": 1}, {"username": "roryokane", "commitsCount": 1}, {"username": "scrooloose", "commitsCount": 1}, {"username": "shaunc", "commitsCount": 1}, {"username": "shockey", "commitsCount": 1}, {"username": "tech4him1", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "trevorr", "commitsCount": 1}, {"username": "vcache", "commitsCount": 1}, {"username": "vogelsgesang", "commitsCount": 1}, {"username": "zentner-kyle", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 8}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 23}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 10181, "testsSize": 226944, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/nodeca/js-yaml.svg?branch=master", "service": "https://api.travis-ci.org/nodeca/js-yaml.svg?branch=master", "shields": "https://img.shields.io/travis/nodeca/js-yaml/master.svg", "content": "https://img.shields.io/travis/nodeca/js-yaml/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/js-yaml.svg", "shields": "https://img.shields.io/npm/v/js-yaml.svg", "content": "https://img.shields.io/npm/v/js-yaml.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 5166, "downloadsCount": 56688857, "downloadsAcceleration": 22284.93862252665, "dependentsCount": 7847}, "maintenance": {"releasesFrequency": 0.28356164383561644, "commitsFrequency": 0.6846575342465753, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7748839235799334, "detail": {"quality": 0.9748395676565716, "popularity": 0.7943155329710285, "maintenance": 0.5840617621231481}}}
{"analyzedAt": "2020-02-12T06:03:55.943Z", "collected": {"metadata": {"name": "kind-of", "scope": "unscoped", "version": "6.0.3", "description": "Get the native type of a value.", "keywords": ["arguments", "array", "boolean", "check", "date", "function", "is", "is-type", "is-type-of", "kind", "kind-of", "number", "object", "of", "regexp", "string", "test", "type", "type-of", "typeof", "types"], "date": "2020-01-16T16:59:19.808Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "David Fox-Powell", "url": "https://dtothefp.github.io/me"}, {"name": "James", "url": "https://twitter.com/aretecode"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Ken Sheedlo", "url": "kensheedlo.com"}, {"name": "laggingreflex", "url": "https://github.com/laggingreflex"}, {"name": "Miguel Mota", "url": "https://miguelmota.com"}, {"name": "Peter deHaan", "url": "http://about.me/peterdehaan"}, {"name": "tunnckoCore", "url": "https://i.am.charlike.online"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/kind-of.git"}, "links": {"npm": "https://www.npmjs.com/package/kind-of", "homepage": "https://github.com/jonschlinkert/kind-of", "repository": "https://github.com/jonschlinkert/kind-of", "bugs": "https://github.com/jonschlinkert/kind-of/issues"}, "license": "MIT", "devDependencies": {"benchmarked": "^2.0.0", "browserify": "^14.4.0", "gulp-format-md": "^1.0.0", "mocha": "^4.0.1", "write": "^1.0.3"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# kind-of [![NPM version](https://img.shields.io/npm/v/kind-of.svg?style=flat)](https://www.npmjs.com/package/kind-of) [![NPM monthly downloads](https://img.shields.io/npm/dm/kind-of.svg?style=flat)](https://npmjs.org/package/kind-of) [![NPM total downloads](https://img.shields.io/npm/dt/kind-of.svg?style=flat)](https://npmjs.org/package/kind-of) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/kind-of.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/kind-of)\n\n> Get the native type of a value.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save kind-of\n```\n\nInstall with [bower](https://bower.io/)\n\n```sh\n$ bower install kind-of --save\n```\n\n## Why use this?\n\n1. [it's fast](#benchmarks) | [optimizations](#optimizations)\n2. [better type checking](#better-type-checking)\n\n## Usage\n\n> es5, es6, and browser ready\n\n```js\nvar kindOf = require('kind-of');\n\nkindOf(undefined);\n//=> 'undefined'\n\nkindOf(null);\n//=> 'null'\n\nkindOf(true);\n//=> 'boolean'\n\nkindOf(false);\n//=> 'boolean'\n\nkindOf(new Buffer(''));\n//=> 'buffer'\n\nkindOf(42);\n//=> 'number'\n\nkindOf('str');\n//=> 'string'\n\nkindOf(arguments);\n//=> 'arguments'\n\nkindOf({});\n//=> 'object'\n\nkindOf(Object.create(null));\n//=> 'object'\n\nkindOf(new Test());\n//=> 'object'\n\nkindOf(new Date());\n//=> 'date'\n\nkindOf([1, 2, 3]);\n//=> 'array'\n\nkindOf(/foo/);\n//=> 'regexp'\n\nkindOf(new RegExp('foo'));\n//=> 'regexp'\n\nkindOf(new Error('error'));\n//=> 'error'\n\nkindOf(function () {});\n//=> 'function'\n\nkindOf(function * () {});\n//=> 'generatorfunction'\n\nkindOf(Symbol('str'));\n//=> 'symbol'\n\nkindOf(new Map());\n//=> 'map'\n\nkindOf(new WeakMap());\n//=> 'weakmap'\n\nkindOf(new Set());\n//=> 'set'\n\nkindOf(new WeakSet());\n//=> 'weakset'\n\nkindOf(new Int8Array());\n//=> 'int8array'\n\nkindOf(new Uint8Array());\n//=> 'uint8array'\n\nkindOf(new Uint8ClampedArray());\n//=> 'uint8clampedarray'\n\nkindOf(new Int16Array());\n//=> 'int16array'\n\nkindOf(new Uint16Array());\n//=> 'uint16array'\n\nkindOf(new Int32Array());\n//=> 'int32array'\n\nkindOf(new Uint32Array());\n//=> 'uint32array'\n\nkindOf(new Float32Array());\n//=> 'float32array'\n\nkindOf(new Float64Array());\n//=> 'float64array'\n```\n\n## Benchmarks\n\nBenchmarked against [typeof](http://github.com/CodingFu/typeof) and [type-of](https://github.com/ForbesLindesay/type-of).\n\n```bash\n# arguments (32 bytes)\n  kind-of x 17,024,098 ops/sec \u00b11.90% (86 runs sampled)\n  lib-type-of x 11,926,235 ops/sec \u00b11.34% (83 runs sampled)\n  lib-typeof x 9,245,257 ops/sec \u00b11.22% (87 runs sampled)\n\n  fastest is kind-of (by 161% avg)\n\n# array (22 bytes)\n  kind-of x 17,196,492 ops/sec \u00b11.07% (88 runs sampled)\n  lib-type-of x 8,838,283 ops/sec \u00b11.02% (87 runs sampled)\n  lib-typeof x 8,677,848 ops/sec \u00b10.87% (87 runs sampled)\n\n  fastest is kind-of (by 196% avg)\n\n# boolean (24 bytes)\n  kind-of x 16,841,600 ops/sec \u00b11.10% (86 runs sampled)\n  lib-type-of x 8,096,787 ops/sec \u00b10.95% (87 runs sampled)\n  lib-typeof x 8,423,345 ops/sec \u00b11.15% (86 runs sampled)\n\n  fastest is kind-of (by 204% avg)\n\n# buffer (38 bytes)\n  kind-of x 14,848,060 ops/sec \u00b11.05% (86 runs sampled)\n  lib-type-of x 3,671,577 ops/sec \u00b11.49% (87 runs sampled)\n  lib-typeof x 8,360,236 ops/sec \u00b11.24% (86 runs sampled)\n\n  fastest is kind-of (by 247% avg)\n\n# date (30 bytes)\n  kind-of x 16,067,761 ops/sec \u00b11.58% (86 runs sampled)\n  lib-type-of x 8,954,436 ops/sec \u00b11.40% (87 runs sampled)\n  lib-typeof x 8,488,307 ops/sec \u00b11.51% (84 runs sampled)\n\n  fastest is kind-of (by 184% avg)\n\n# error (36 bytes)\n  kind-of x 9,634,090 ops/sec \u00b11.12% (89 runs sampled)\n  lib-type-of x 7,735,624 ops/sec \u00b11.32% (86 runs sampled)\n  lib-typeof x 7,442,160 ops/sec \u00b11.11% (90 runs sampled)\n\n  fastest is kind-of (by 127% avg)\n\n# function (34 bytes)\n  kind-of x 10,031,494 ops/sec \u00b11.27% (86 runs sampled)\n  lib-type-of x 9,502,757 ops/sec \u00b11.17% (89 runs sampled)\n  lib-typeof x 8,278,985 ops/sec \u00b11.08% (88 runs sampled)\n\n  fastest is kind-of (by 113% avg)\n\n# null (24 bytes)\n  kind-of x 18,159,808 ops/sec \u00b11.92% (86 runs sampled)\n  lib-type-of x 12,927,635 ops/sec \u00b11.01% (88 runs sampled)\n  lib-typeof x 7,958,234 ops/sec \u00b11.21% (89 runs sampled)\n\n  fastest is kind-of (by 174% avg)\n\n# number (22 bytes)\n  kind-of x 17,846,779 ops/sec \u00b10.91% (85 runs sampled)\n  lib-type-of x 3,316,636 ops/sec \u00b11.19% (86 runs sampled)\n  lib-typeof x 2,329,477 ops/sec \u00b12.21% (85 runs sampled)\n\n  fastest is kind-of (by 632% avg)\n\n# object-plain (47 bytes)\n  kind-of x 7,085,155 ops/sec \u00b11.05% (88 runs sampled)\n  lib-type-of x 8,870,930 ops/sec \u00b11.06% (83 runs sampled)\n  lib-typeof x 8,716,024 ops/sec \u00b11.05% (87 runs sampled)\n\n  fastest is lib-type-of (by 112% avg)\n\n# regex (25 bytes)\n  kind-of x 14,196,052 ops/sec \u00b11.65% (84 runs sampled)\n  lib-type-of x 9,554,164 ops/sec \u00b11.25% (88 runs sampled)\n  lib-typeof x 8,359,691 ops/sec \u00b11.07% (87 runs sampled)\n\n  fastest is kind-of (by 158% avg)\n\n# string (33 bytes)\n  kind-of x 16,131,428 ops/sec \u00b11.41% (85 runs sampled)\n  lib-type-of x 7,273,172 ops/sec \u00b11.05% (87 runs sampled)\n  lib-typeof x 7,382,635 ops/sec \u00b11.17% (85 runs sampled)\n\n  fastest is kind-of (by 220% avg)\n\n# symbol (34 bytes)\n  kind-of x 17,011,537 ops/sec \u00b11.24% (86 runs sampled)\n  lib-type-of x 3,492,454 ops/sec \u00b11.23% (89 runs sampled)\n  lib-typeof x 7,471,235 ops/sec \u00b12.48% (87 runs sampled)\n\n  fastest is kind-of (by 310% avg)\n\n# template-strings (36 bytes)\n  kind-of x 15,434,250 ops/sec \u00b11.46% (83 runs sampled)\n  lib-type-of x 7,157,907 ops/sec \u00b10.97% (87 runs sampled)\n  lib-typeof x 7,517,986 ops/sec \u00b10.92% (86 runs sampled)\n\n  fastest is kind-of (by 210% avg)\n\n# undefined (29 bytes)\n  kind-of x 19,167,115 ops/sec \u00b11.71% (87 runs sampled)\n  lib-type-of x 15,477,740 ops/sec \u00b11.63% (85 runs sampled)\n  lib-typeof x 19,075,495 ops/sec \u00b11.17% (83 runs sampled)\n\n  fastest is lib-typeof,kind-of\n\n```\n\n## Optimizations\n\nIn 7 out of 8 cases, this library is 2x-10x faster than other top libraries included in the benchmarks. There are a few things that lead to this performance advantage, none of them hard and fast rules, but all of them simple and repeatable in almost any code library:\n\n1. Optimize around the fastest and most common use cases first. Of course, this will change from project-to-project, but I took some time to understand how and why `typeof` checks were being used in my own libraries and other libraries I use a lot.\n2. Optimize around bottlenecks - In other words, the order in which conditionals are implemented is significant, because each check is only as fast as the failing checks that came before it. Here, the biggest bottleneck by far is checking for plain objects (an object that was created by the `Object` constructor). I opted to make this check happen by process of elimination rather than brute force up front (e.g. by using something like `val.constructor.name`), so that every other type check would not be penalized it.\n3. Don't do uneccessary processing - why do `.slice(8, -1).toLowerCase();` just to get the word `regex`? It's much faster to do `if (type === '[object RegExp]') return 'regex'`\n4. There is no reason to make the code in a microlib as terse as possible, just to win points for making it shorter. It's always better to favor performant code over terse code. You will always only be using a single `require()` statement to use the library anyway, regardless of how the code is written.\n\n## Better type checking\n\nkind-of seems to be more consistently \"correct\" than other type checking libs I've looked at. For example, here are some differing results from other popular libs:\n\n### [typeof](https://github.com/CodingFu/typeof) lib\n\nIncorrectly identifies instances of custom constructors (pretty common):\n\n```js\nvar typeOf = require('typeof');\nfunction Test() {}\nconsole.log(typeOf(new Test()));\n//=> 'test'\n```\n\nReturns `object` instead of `arguments`:\n\n```js\nfunction foo() {\n  console.log(typeOf(arguments)) //=> 'object'\n}\nfoo();\n```\n\n### [type-of](https://github.com/ForbesLindesay/type-of) lib\n\nIncorrectly returns `object` for generator functions, buffers, `Map`, `Set`, `WeakMap` and `WeakSet`:\n\n```js\nfunction * foo() {}\nconsole.log(typeOf(foo));\n//=> 'object'\nconsole.log(typeOf(new Buffer('')));\n//=> 'object'\nconsole.log(typeOf(new Map()));\n//=> 'object'\nconsole.log(typeOf(new Set()));\n//=> 'object'\nconsole.log(typeOf(new WeakMap()));\n//=> 'object'\nconsole.log(typeOf(new WeakSet()));\n//=> 'object'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern\u2026 [more](https://github.com/micromatch/is-glob) | [homepage](https://github.com/micromatch/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if a number or string value is a finite number. Useful for regex\u2026 [more](https://github.com/jonschlinkert/is-number) | [homepage](https://github.com/jonschlinkert/is-number \"Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc.\")\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive.  | [homepage](https://github.com/jonschlinkert/is-primitive \"Returns `true` if the value is a primitive. \")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 102 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 3   | [aretecode](https://github.com/aretecode) |  \n| 2   | [miguelmota](https://github.com/miguelmota) |  \n| 1   | [doowb](https://github.com/doowb) |  \n| 1   | [dtothefp](https://github.com/dtothefp) |  \n| 1   | [ianstormtaylor](https://github.com/ianstormtaylor) |  \n| 1   | [ksheedlo](https://github.com/ksheedlo) |  \n| 1   | [pdehaan](https://github.com/pdehaan) |  \n| 1   | [laggingreflex](https://github.com/laggingreflex) |  \n| 1   | [tunnckoCore](https://github.com/tunnckoCore) |  \n| 1   | [xiaofen9](https://github.com/xiaofen9) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2020, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on January 16, 2020._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 9488270}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 50157920}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 209756274}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 540470388}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1071806378}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2016920014}], "dependentsCount": 285, "starsCount": 26}, "github": {"homepage": "https://github.com/jonschlnkert", "starsCount": 234, "forksCount": 29, "subscribersCount": 10, "issues": {"count": 34, "openCount": 5, "distribution": {"3600": 4, "10800": 2, "32400": 3, "97200": 4, "291600": 1, "874800": 1, "2624400": 6, "7873200": 4, "23619600": 2, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 89}, {"username": "aretecode", "commitsCount": 3}, {"username": "doowb", "commitsCount": 3}, {"username": "miguelmota", "commitsCount": 2}, {"username": "dtothefp", "commitsCount": 1}, {"username": "ianstormtaylor", "commitsCount": 1}, {"username": "ksheedlo", "commitsCount": 1}, {"username": "laggingreflex", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "tunnckoCore", "commitsCount": 1}, {"username": "xiaofen9", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 4}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 4}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 11769, "testsSize": 7200, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/kind-of.svg?style=flat", "shields": "https://img.shields.io/npm/v/kind-of.svg", "content": "https://img.shields.io/npm/v/kind-of.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/kind-of.svg?style=flat", "shields": "https://img.shields.io/npm/dm/kind-of.svg", "content": "https://img.shields.io/npm/dm/kind-of.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/kind-of.svg?style=flat", "shields": "https://img.shields.io/npm/dt/kind-of.svg", "content": "https://img.shields.io/npm/dt/kind-of.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/kind-of.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/kind-of.svg", "shields": "https://img.shields.io/travis/jonschlinkert/kind-of.svg", "content": "https://img.shields.io/travis/jonschlinkert/kind-of.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 310, "downloadsCount": 180156796, "downloadsAcceleration": 473684.7906773209, "dependentsCount": 285}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8632086092617602, "detail": {"quality": 0.9791932954197882, "popularity": 0.6270641028678388, "maintenance": 0.9999376703773724}}}
{"analyzedAt": "2020-03-01T12:02:32.635Z", "collected": {"metadata": {"name": "levn", "scope": "unscoped", "version": "0.3.0", "description": "Light ECMAScript (JavaScript) Value Notation - human written, concise, typed, flexible", "keywords": ["levn", "light", "ecmascript", "value", "notation", "json", "typed", "human", "concise", "typed", "flexible"], "date": "2015-12-29T05:57:03.996Z", "author": {"name": "George Zahariev", "email": "z@georgezahariev.com", "username": "gkz"}, "publisher": {"username": "gkz", "email": "z@georgezahariev.com"}, "maintainers": [{"username": "gkz", "email": "z@georgezahariev.com"}], "repository": {"type": "git", "url": "git://github.com/gkz/levn.git"}, "links": {"npm": "https://www.npmjs.com/package/levn", "homepage": "https://github.com/gkz/levn", "repository": "https://github.com/gkz/levn", "bugs": "https://github.com/gkz/levn/issues"}, "license": "MIT", "dependencies": {"prelude-ls": "~1.1.2", "type-check": "~0.3.2"}, "devDependencies": {"livescript": "~1.4.0", "mocha": "~2.3.4", "istanbul": "~0.4.1"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# levn [![Build Status](https://travis-ci.org/gkz/levn.png)](https://travis-ci.org/gkz/levn) <a name=\"levn\" />\n__Light ECMAScript (JavaScript) Value Notation__\nLevn is a library which allows you to parse a string into a JavaScript value based on an expected type. It is meant for short amounts of human entered data (eg. config files, command line arguments).\n\nLevn aims to concisely describe JavaScript values in text, and allow for the extraction and validation of those values. Levn uses [type-check](https://github.com/gkz/type-check) for its type format, and to validate the results. MIT license. Version 0.3.0.\n\n__How is this different than JSON?__ levn is meant to be written by humans only, is (due to the previous point) much more concise, can be validated against supplied types, has regex and date literals, and can easily be extended with custom types. On the other hand, it is probably slower and thus less efficient at transporting large amounts of data, which is fine since this is not its purpose.\n\n    npm install levn\n\nFor updates on levn, [follow me on twitter](https://twitter.com/gkzahariev).\n\n\n## Quick Examples\n\n```js\nvar parse = require('levn').parse;\nparse('Number', '2');      // 2\nparse('String', '2');      // '2'\nparse('String', 'levn');   // 'levn'\nparse('String', 'a b');    // 'a b'\nparse('Boolean', 'true');  // true\n\nparse('Date', '#2011-11-11#'); // (Date object)\nparse('Date', '2011-11-11');   // (Date object)\nparse('RegExp', '/[a-z]/gi');  // /[a-z]/gi\nparse('RegExp', 're');         // /re/\nparse('Int', '2');             // 2\n\nparse('Number | String', 'str'); // 'str'\nparse('Number | String', '2');   // 2\n\nparse('[Number]', '[1,2,3]');                      // [1,2,3]\nparse('(String, Boolean)', '(hi, false)');         // ['hi', false]\nparse('{a: String, b: Number}', '{a: str, b: 2}'); // {a: 'str', b: 2}\n\n// at the top level, you can ommit surrounding delimiters\nparse('[Number]', '1,2,3');                      // [1,2,3]\nparse('(String, Boolean)', 'hi, false');         // ['hi', false]\nparse('{a: String, b: Number}', 'a: str, b: 2'); // {a: 'str', b: 2}\n\n// wildcard - auto choose type\nparse('*', '[hi,(null,[42]),{k: true}]'); // ['hi', [null, [42]], {k: true}]\n```\n## Usage\n\n`require('levn');` returns an object that exposes three properties. `VERSION` is the current version of the library as a string. `parse` and `parsedTypeParse` are functions.\n\n```js\n// parse(type, input, options);\nparse('[Number]', '1,2,3'); // [1, 2, 3]\n\n// parsedTypeParse(parsedType, input, options);\nvar parsedType = require('type-check').parseType('[Number]');\nparsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]\n```\n\n### parse(type, input, options)\n\n`parse` casts the string `input` into a JavaScript value according to the specified `type` in the [type format](https://github.com/gkz/type-check#type-format) (and taking account the optional `options`) and returns the resulting JavaScript value.\n\n##### arguments\n* type - `String` - the type written in the [type format](https://github.com/gkz/type-check#type-format) which to check against\n* input - `String` - the value written in the [levn format](#levn-format)\n* options - `Maybe Object` - an optional parameter specifying additional [options](#options)\n\n##### returns\n`*` - the resulting JavaScript value\n\n##### example\n```js\nparse('[Number]', '1,2,3'); // [1, 2, 3]\n```\n\n### parsedTypeParse(parsedType, input, options)\n\n`parsedTypeParse` casts the string `input` into a JavaScript value according to the specified `type` which has already been parsed (and taking account the optional `options`) and returns the resulting JavaScript value. You can parse a type using the [type-check](https://github.com/gkz/type-check) library's `parseType` function.\n\n##### arguments\n* type - `Object` - the type in the parsed type format which to check against\n* input - `String` - the value written in the [levn format](#levn-format)\n* options - `Maybe Object` - an optional parameter specifying additional [options](#options)\n\n##### returns\n`*` - the resulting JavaScript value\n\n##### example\n```js\nvar parsedType = require('type-check').parseType('[Number]');\nparsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]\n```\n\n## Levn Format\n\nLevn can use the type information you provide to choose the appropriate value to produce from the input. For the same input, it will choose a different output value depending on the type provided. For example, `parse('Number', '2')` will produce the number `2`, but `parse('String', '2')` will produce the string `\"2\"`.\n\nIf you do not provide type information, and simply use `*`, levn will parse the input according the unambiguous \"explicit\" mode, which we will now detail - you can also set the `explicit` option to true manually in the [options](#options).\n\n* `\"string\"`, `'string'` are parsed as a String, eg. `\"a msg\"` is `\"a msg\"`\n* `#date#` is parsed as a Date, eg. `#2011-11-11#` is `new Date('2011-11-11')`\n* `/regexp/flags` is parsed as a RegExp, eg. `/re/gi` is `/re/gi`\n* `undefined`, `null`, `NaN`, `true`, and `false` are all their JavaScript equivalents\n* `[element1, element2, etc]` is an Array, and the casting procedure is recursively applied to each element. Eg. `[1,2,3]` is `[1,2,3]`.\n* `(element1, element2, etc)` is an tuple, and the casting procedure is recursively applied to each element. Eg. `(1, a)` is `(1, a)` (is `[1, 'a']`).\n* `{key1: val1, key2: val2, ...}` is an Object, and the casting procedure is recursively applied to each property. Eg. `{a: 1, b: 2}` is `{a: 1, b: 2}`.\n* Any test which does not fall under the above, and which does not contain special characters (`[``]``(``)``{``}``:``,`) is a string, eg. `$12- blah` is `\"$12- blah\"`.\n\nIf you do provide type information, you can make your input more concise as the program already has some information about what it expects. Please see the [type format](https://github.com/gkz/type-check#type-format) section of [type-check](https://github.com/gkz/type-check) for more information about how to specify types. There are some rules about what levn can do with the information:\n\n* If a String is expected, and only a String, all characters of the input (including any special ones) will become part of the output. Eg. `[({})]` is `\"[({})]\"`, and `\"hi\"` is `'\"hi\"'`.\n* If a Date is expected, the surrounding `#` can be omitted from date literals. Eg. `2011-11-11` is `new Date('2011-11-11')`.\n* If a RegExp is expected, no flags need to be specified, and the regex is not using any of the special characters,the opening and closing `/` can be omitted - this will have the affect of setting the source of the regex to the input. Eg. `regex` is `/regex/`.\n* If an Array is expected, and it is the root node (at the top level), the opening `[` and closing `]` can be omitted. Eg. `1,2,3` is `[1,2,3]`.\n* If a tuple is expected, and it is the root node (at the top level), the opening `(` and closing `)` can be omitted. Eg. `1, a` is `(1, a)` (is `[1, 'a']`).\n* If an Object is expected, and it is the root node (at the top level), the opening `{` and closing `}` can be omitted. Eg `a: 1, b: 2` is `{a: 1, b: 2}`.\n\nIf you list multiple types (eg. `Number | String`), it will first attempt to cast to the first type and then validate - if the validation fails it will move on to the next type and so forth, left to right. You must be careful as some types will succeed with any input, such as String. Thus put String at the end of your list. In non-explicit mode, Date and RegExp will succeed with a large variety of input - also be careful with these and list them near the end if not last in your list.\n\nWhitespace between special characters and elements is inconsequential.\n\n## Options\n\nOptions is an object. It is an optional parameter to the `parse` and `parsedTypeParse` functions.\n\n### Explicit\n\nA `Boolean`. By default it is `false`.\n\n__Example:__\n\n```js\nparse('RegExp', 're', {explicit: false});          // /re/\nparse('RegExp', 're', {explicit: true});           // Error: ... does not type check...\nparse('RegExp | String', 're', {explicit: true});  // 're'\n```\n\n`explicit` sets whether to be in explicit mode or not. Using `*` automatically activates explicit mode. For more information, read the [levn format](#levn-format) section.\n\n### customTypes\n\nAn `Object`. Empty `{}` by default.\n\n__Example:__\n\n```js\nvar options = {\n  customTypes: {\n    Even: {\n      typeOf: 'Number',\n      validate: function (x) {\n        return x % 2 === 0;\n      },\n      cast: function (x) {\n        return {type: 'Just', value: parseInt(x)};\n      }\n    }\n  }\n}\nparse('Even', '2', options); // 2\nparse('Even', '3', options); // Error: Value: \"3\" does not type check...\n```\n\n__Another Example:__\n```js\nfunction Person(name, age){\n  this.name = name;\n  this.age = age;\n}\nvar options = {\n  customTypes: {\n    Person: {\n      typeOf: 'Object',\n      validate: function (x) {\n        x instanceof Person;\n      },\n      cast: function (value, options, typesCast) {\n        var name, age;\n        if ({}.toString.call(value).slice(8, -1) !== 'Object') {\n          return {type: 'Nothing'};\n        }\n        name = typesCast(value.name, [{type: 'String'}], options);\n        age = typesCast(value.age, [{type: 'Numger'}], options);\n        return {type: 'Just', value: new Person(name, age)};\n    }\n  }\n}\nparse('Person', '{name: Laura, age: 25}', options); // Person {name: 'Laura', age: 25}\n```\n\n`customTypes` is an object whose keys are the name of the types, and whose values are an object with three properties, `typeOf`, `validate`, and `cast`. For more information about `typeOf` and `validate`, please see the [custom types](https://github.com/gkz/type-check#custom-types) section of type-check.\n\n`cast` is a function which receives three arguments, the value under question, options, and the typesCast function. In `cast`, attempt to cast the value into the specified type. If you are successful, return an object in the format `{type: 'Just', value: CAST-VALUE}`, if you know it won't work, return `{type: 'Nothing'}`.  You can use the `typesCast` function to cast any child values. Remember to pass `options` to it. In your function you can also check for `options.explicit` and act accordingly.\n\n## Technical About\n\n`levn` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It uses [type-check](https://github.com/gkz/type-check) to both parse types and validate values. It also uses the [prelude.ls](http://preludels.com/) library."}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 503715}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 10021321}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 40816115}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 108449784}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 211660319}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 391728179}], "dependentsCount": 60, "starsCount": 2}, "github": {"starsCount": 58, "forksCount": 4, "subscribersCount": 2, "issues": {"count": 2, "openCount": 1, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "gkz", "commitsCount": 30}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 10468, "testsSize": 12914}, "badges": [{"urls": {"original": "https://travis-ci.org/gkz/levn.png", "service": "https://api.travis-ci.org/gkz/levn.svg", "shields": "https://img.shields.io/travis/gkz/levn.svg", "content": "https://img.shields.io/travis/gkz/levn.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 67, "downloadsCount": 36149928, "downloadsAcceleration": 97493.01310882799, "dependentsCount": 60}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.5, "issuesDistribution": 0}}, "score": {"final": 0.476073536355258, "detail": {"quality": 0.8088428503261701, "popularity": 0.51077700787393, "maintenance": 0.15613922429009008}}}
{"analyzedAt": "2020-03-02T17:00:30.460Z", "collected": {"metadata": {"name": "lodash", "scope": "unscoped", "version": "4.17.15", "description": "Lodash modular utilities.", "keywords": ["modules", "stdlib", "util"], "date": "2019-07-19T02:28:46.584Z", "author": {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com", "username": "jdalton"}, "publisher": {"username": "jdalton", "email": "john.david.dalton@gmail.com"}, "maintainers": [{"username": "jdalton", "email": "john.david.dalton@gmail.com"}, {"username": "mathias", "email": "mathias@qiwi.be"}], "contributors": [{"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Mathias Bynens", "email": "mathias@qiwi.be"}], "repository": {"type": "git", "url": "git+https://github.com/lodash/lodash.git"}, "links": {"npm": "https://www.npmjs.com/package/lodash", "homepage": "https://lodash.com/", "repository": "https://github.com/lodash/lodash", "bugs": "https://github.com/lodash/lodash/issues"}, "license": "MIT", "devDependencies": {"async": "^2.1.4", "benchmark": "^2.1.3", "chalk": "^1.1.3", "cheerio": "^0.22.0", "codecov.io": "~0.1.6", "coveralls": "^2.11.15", "curl-amd": "~0.8.12", "docdown": "~0.7.2", "dojo": "^1.12.1", "ecstatic": "^2.2.2", "eslint": "^6.2.0", "eslint-plugin-import": "^2.18.2", "esm": "^3.1.3", "fs-extra": "~1.0.0", "glob": "^7.1.1", "istanbul": "0.4.5", "jquery": "^3.4.1", "lodash": "4.17.11", "lodash-doc-globals": "^0.1.1", "markdown-doctest": "^0.9.1", "mocha": "^5.2.0", "optional-dev-dependency": "^2.0.0", "platform": "^1.3.3", "qunit-extras": "^3.0.0", "qunitjs": "^2.1.0", "request": "^2.79.0", "requirejs": "^2.3.2", "sauce-tunnel": "^2.5.0", "uglify-js": "2.7.5", "webpack": "^1.14.0"}, "releases": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 4}, {"from": "2018-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "# lodash v4.17.15\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.15-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available."}, "npm": {"downloads": [{"from": "2020-03-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 1521527}, {"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 27395253}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 110956000}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 312827224}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 638323215}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 1223543595}], "dependentsCount": 77113, "starsCount": 1494}, "github": {"homepage": "https://lodash.com/", "starsCount": 43692, "forksCount": 4723, "subscribersCount": 869, "issues": {"count": 4673, "openCount": 66, "distribution": {"3600": 2138, "10800": 846, "32400": 942, "97200": 304, "291600": 191, "874800": 115, "2624400": 62, "7873200": 48, "23619600": 22, "70858800": 4, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jdalton", "commitsCount": 6643}, {"username": "jashkenas", "commitsCount": 314}, {"username": "falsyvalues", "commitsCount": 77}, {"username": "greenkeeperio-bot", "commitsCount": 46}, {"username": "bnjmnt4n", "commitsCount": 39}, {"username": "blikblum", "commitsCount": 38}, {"username": "ratbeard", "commitsCount": 22}, {"username": "ryantenney", "commitsCount": 22}, {"username": "braddunbar", "commitsCount": 21}, {"username": "megawac", "commitsCount": 19}, {"username": "jfmengels", "commitsCount": 18}, {"username": "mathiasbynens", "commitsCount": 10}, {"username": "octatone", "commitsCount": 9}, {"username": "phated", "commitsCount": 8}, {"username": "iamnoah", "commitsCount": 7}, {"username": "jridgewell", "commitsCount": 7}, {"username": "michaelficarra", "commitsCount": 7}, {"username": "samuelclay", "commitsCount": 7}, {"username": "rheh", "commitsCount": 6}, {"username": "AdamCraven", "commitsCount": 5}, {"username": "FilipZawada", "commitsCount": 5}, {"username": "danallison", "commitsCount": 5}, {"username": "danheberden", "commitsCount": 5}, {"username": "octref", "commitsCount": 5}, {"username": "pimterry", "commitsCount": 5}, {"username": "billyjanitsch", "commitsCount": 4}, {"username": "dr-skot", "commitsCount": 4}, {"username": "jasondavies", "commitsCount": 4}, {"username": "shinuza", "commitsCount": 4}, {"username": "tomByrer", "commitsCount": 4}, {"username": "younesfkihi", "commitsCount": 4}, {"username": "102", "commitsCount": 3}, {"username": "aretecode", "commitsCount": 3}, {"username": "captbaritone", "commitsCount": 3}, {"username": "craigmichaelmartin", "commitsCount": 3}, {"username": "danjm", "commitsCount": 3}, {"username": "jamiebuilds", "commitsCount": 3}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "kishanov", "commitsCount": 3}, {"username": "lifesinger", "commitsCount": 3}, {"username": "moonformeli", "commitsCount": 3}, {"username": "rfletcher", "commitsCount": 3}, {"username": "Delapouite", "commitsCount": 2}, {"username": "DmitryBaranovskiy", "commitsCount": 2}, {"username": "JeffAMcGee", "commitsCount": 2}, {"username": "Stuk", "commitsCount": 2}, {"username": "alanhogan", "commitsCount": 2}, {"username": "alireza-mh", "commitsCount": 2}, {"username": "aseemk", "commitsCount": 2}, {"username": "beaugunderson", "commitsCount": 2}, {"username": "bjh", "commitsCount": 2}, {"username": "brianhaveri", "commitsCount": 2}, {"username": "chaoflow", "commitsCount": 2}, {"username": "esamattis", "commitsCount": 2}, {"username": "greenkeeper[bot]", "commitsCount": 2}, {"username": "gu-xionghong", "commitsCount": 2}, {"username": "h7lin", "commitsCount": 2}, {"username": "islemaster", "commitsCount": 2}, {"username": "jayphelps", "commitsCount": 2}, {"username": "jpiccari", "commitsCount": 2}, {"username": "jrburke", "commitsCount": 2}, {"username": "kevinji", "commitsCount": 2}, {"username": "kriskowal", "commitsCount": 2}, {"username": "malclocke", "commitsCount": 2}, {"username": "mark-rushakoff", "commitsCount": 2}, {"username": "maw", "commitsCount": 2}, {"username": "mcmire", "commitsCount": 2}, {"username": "saravyas", "commitsCount": 2}, {"username": "steelsojka", "commitsCount": 2}, {"username": "terinjokes", "commitsCount": 2}, {"username": "think2011", "commitsCount": 2}, {"username": "timmywil", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "yuchi", "commitsCount": 2}, {"username": "yuxino", "commitsCount": 2}, {"username": "43081j", "commitsCount": 1}, {"username": "Jack-Works", "commitsCount": 1}, {"username": "Mohit21GoJs", "commitsCount": 1}, {"username": "RajuPedda", "commitsCount": 1}, {"username": "abdullahtariq1171", "commitsCount": 1}, {"username": "anatoliy8493", "commitsCount": 1}, {"username": "asilinwei", "commitsCount": 1}, {"username": "camjc", "commitsCount": 1}, {"username": "carbureted", "commitsCount": 1}, {"username": "cooperka", "commitsCount": 1}, {"username": "doug-a-brunner", "commitsCount": 1}, {"username": "dracos", "commitsCount": 1}, {"username": "dwelle", "commitsCount": 1}, {"username": "futurist", "commitsCount": 1}, {"username": "gwwar", "commitsCount": 1}, {"username": "jacob87o2", "commitsCount": 1}, {"username": "lirantal", "commitsCount": 1}, {"username": "lvzhenbang", "commitsCount": 1}, {"username": "niexias", "commitsCount": 1}, {"username": "phapdinh", "commitsCount": 1}, {"username": "prog1dev", "commitsCount": 1}, {"username": "renjithspace", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tkrugg", "commitsCount": 1}, {"username": "ycmjason", "commitsCount": 1}], "commits": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 1}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 3}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 10}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 46}]}, "source": {"files": {"readmeSize": 3206, "testsSize": 701226, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 0.33}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6495, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 50878, "downloadsCount": 104275741.33333333, "downloadsAcceleration": 135106.23772831052, "dependentsCount": 77113}, "maintenance": {"releasesFrequency": 0.28356164383561644, "commitsFrequency": 0.7428082191780822, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.9425092044056167, "detail": {"quality": 0.9389882297156333, "popularity": 0.9703504234650773, "maintenance": 0.9176859636518564}}}
{"analyzedAt": "2020-02-25T08:36:46.232Z", "collected": {"metadata": {"name": "map-cache", "scope": "unscoped", "version": "0.2.2", "description": "Basic cache object for storing key-value pairs.", "keywords": ["cache", "get", "has", "object", "set", "storage", "store"], "date": "2016-05-10T10:51:16.518Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/map-cache.git"}, "links": {"npm": "https://www.npmjs.com/package/map-cache", "homepage": "https://github.com/jonschlinkert/map-cache", "repository": "https://github.com/jonschlinkert/map-cache", "bugs": "https://github.com/jonschlinkert/map-cache/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^0.1.9", "should": "^8.3.1"}, "releases": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2018-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# map-cache [![NPM version](https://img.shields.io/npm/v/map-cache.svg?style=flat)](https://www.npmjs.com/package/map-cache) [![NPM downloads](https://img.shields.io/npm/dm/map-cache.svg?style=flat)](https://npmjs.org/package/map-cache) [![Build Status](https://img.shields.io/travis/jonschlinkert/map-cache.svg?style=flat)](https://travis-ci.org/jonschlinkert/map-cache)\n\nBasic cache object for storing key-value pairs.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install map-cache --save\n```\n\nBased on MapCache in Lo-dash v3.0. [MIT License](https://github.com/lodash/lodash/blob/master/LICENSE.txt)\n\n## Usage\n\n```js\nvar MapCache = require('map-cache');\nvar mapCache = new MapCache();\n```\n\n## API\n\n### [MapCache](index.js#L28)\n\nCreates a cache object to store key/value pairs.\n\n**Example**\n\n```js\nvar cache = new MapCache();\n```\n\n### [.set](index.js#L45)\n\nAdds `value` to `key` on the cache.\n\n**Params**\n\n* `key` **{String}**: The key of the value to cache.\n* `value` **{any}**: The value to cache.\n* `returns` **{Object}**: Returns the `Cache` object for chaining.\n\n**Example**\n\n```js\ncache.set('foo', 'bar');\n```\n\n### [.get](index.js#L65)\n\nGets the cached value for `key`.\n\n**Params**\n\n* `key` **{String}**: The key of the value to get.\n* `returns` **{any}**: Returns the cached value.\n\n**Example**\n\n```js\ncache.get('foo');\n//=> 'bar'\n```\n\n### [.has](index.js#L82)\n\nChecks if a cached value for `key` exists.\n\n**Params**\n\n* `key` **{String}**: The key of the entry to check.\n* `returns` **{Boolean}**: Returns `true` if an entry for `key` exists, else `false`.\n\n**Example**\n\n```js\ncache.has('foo');\n//=> true\n```\n\n### [.del](index.js#L98)\n\nRemoves `key` and its value from the cache.\n\n**Params**\n\n* `key` **{String}**: The key of the value to remove.\n* `returns` **{Boolean}**: Returns `true` if the entry was removed successfully, else `false`.\n\n**Example**\n\n```js\ncache.del('foo');\n```\n\n## Related projects\n\nYou might also be interested in these projects:\n\n* [cache-base](https://www.npmjs.com/package/cache-base): Basic object cache with `get`, `set`, `del`, and `has` methods for node.js/javascript projects. | [homepage](https://github.com/jonschlinkert/cache-base)\n* [config-cache](https://www.npmjs.com/package/config-cache): General purpose JavaScript object storage methods. | [homepage](https://github.com/jonschlinkert/config-cache)\n* [option-cache](https://www.npmjs.com/package/option-cache): Simple API for managing options in JavaScript applications. | [homepage](https://github.com/jonschlinkert/option-cache)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/map-cache/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/map-cache/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on May 10, 2016._"}, "npm": {"downloads": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1762673}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 10374972}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 42977381}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 114078201}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 228118987}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 429677735}], "dependentsCount": 70, "starsCount": 1}, "github": {"starsCount": 18, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 2, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 10}, {"username": "tunnckoCore", "commitsCount": 1}], "commits": [{"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 3486, "testsSize": 1011}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/map-cache.svg?style=flat", "shields": "https://img.shields.io/npm/v/map-cache.svg", "content": "https://img.shields.io/npm/v/map-cache.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/map-cache.svg?style=flat", "shields": "https://img.shields.io/npm/dm/map-cache.svg", "content": "https://img.shields.io/npm/dm/map-cache.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/map-cache.svg?style=flat", "service": "https://api.travis-ci.org/jonschlinkert/map-cache.svg", "shields": "https://img.shields.io/travis/jonschlinkert/map-cache.svg", "content": "https://img.shields.io/travis/jonschlinkert/map-cache.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.6, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 25, "downloadsCount": 38026067, "downloadsAcceleration": 86377.13106925419, "dependentsCount": 70}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6081284202651323, "detail": {"quality": 0.8474032145230641, "popularity": 0.49870735041859504, "maintenance": 0.5124568093191566}}}
{"analyzedAt": "2020-03-04T14:15:05.168Z", "collected": {"metadata": {"name": "map-visit", "scope": "unscoped", "version": "1.0.0", "description": "Map `visit` over an array of objects.", "keywords": ["array", "arrays", "function", "helper", "invoke", "key", "map", "method", "object", "objects", "value", "visit", "visitor"], "date": "2017-04-09T21:43:35.689Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "email": "brian.woodward@gmail.com", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/map-visit.git"}, "links": {"npm": "https://www.npmjs.com/package/map-visit", "homepage": "https://github.com/jonschlinkert/map-visit", "repository": "https://github.com/jonschlinkert/map-visit", "bugs": "https://github.com/jonschlinkert/map-visit/issues"}, "license": "MIT", "dependencies": {"object-visit": "^1.0.0"}, "devDependencies": {"clone-deep": "^0.2.4", "extend-shallow": "^2.0.1", "gulp-format-md": "^0.1.12", "lodash": "^4.17.4", "mocha": "^3.2.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# map-visit [![NPM version](https://img.shields.io/npm/v/map-visit.svg?style=flat)](https://www.npmjs.com/package/map-visit) [![NPM monthly downloads](https://img.shields.io/npm/dm/map-visit.svg?style=flat)](https://npmjs.org/package/map-visit)  [![NPM total downloads](https://img.shields.io/npm/dt/map-visit.svg?style=flat)](https://npmjs.org/package/map-visit) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/map-visit.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/map-visit)\n\n> Map `visit` over an array of objects.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save map-visit\n```\n\n## Usage\n\n```js\nvar mapVisit = require('map-visit');\n```\n\n## What does this do?\n\n**Assign/Merge/Extend vs. Visit**\n\nLet's say you want to add a `set` method to your application that will:\n\n* set key-value pairs on a `data` object\n* extend objects onto the `data` object\n* extend arrays of objects onto the data object\n\n**Example using `extend`**\n\nHere is one way to accomplish this using Lo-Dash's `extend` (comparable to `Object.assign`):\n\n```js\nvar _ = require('lodash');\n\nvar obj = {\n  data: {},\n  set: function (key, value) {\n    if (Array.isArray(key)) {\n      _.extend.apply(_, [obj.data].concat(key));\n    } else if (typeof key === 'object') {\n      _.extend(obj.data, key);\n    } else {\n      obj.data[key] = value;\n    }\n  }\n};\n\nobj.set('a', 'a');\nobj.set([{b: 'b'}, {c: 'c'}]);\nobj.set({d: {e: 'f'}});\n\nconsole.log(obj.data);\n//=> {a: 'a', b: 'b', c: 'c', d: { e: 'f' }}\n```\n\nThe above approach works fine for most use cases. However, **if you also want to emit an event** each time a property is added to the `data` object, or you want more control over what happens as the object is extended, a better approach would be to use `visit`.\n\n**Example using `visit`**\n\nIn this approach:\n\n* when an array is passed to `set`, the `mapVisit` library calls the `set` method on each object in the array.\n* when an object is passed, `visit` calls `set` on each property in the object.\n\nAs a result, the `data` event will be emitted every time a property is added to `data` (events are just an example, you can use this approach to perform any necessary logic every time the method is called).\n\n```js\nvar mapVisit = require('map-visit');\nvar visit = require('object-visit');\n\nvar obj = {\n  data: {},\n  set: function (key, value) {\n    if (Array.isArray(key)) {\n      mapVisit(obj, 'set', key);\n    } else if (typeof key === 'object') {\n      visit(obj, 'set', key);\n    } else {\n      // simulate an event-emitter\n      console.log('emit', key, value);\n      obj.data[key] = value;\n    }\n  }\n};\n\nobj.set('a', 'a');\nobj.set([{b: 'b'}, {c: 'c'}]);\nobj.set({d: {e: 'f'}});\nobj.set({g: 'h', i: 'j', k: 'l'});\n\nconsole.log(obj.data);\n//=> {a: 'a', b: 'b', c: 'c', d: { e: 'f' }, g: 'h', i: 'j', k: 'l'}\n\n// events would look something like:\n// emit a a\n// emit b b\n// emit c c\n// emit d { e: 'f' }\n// emit g h\n// emit i j\n// emit k l\n```\n\n## About\n\n### Related projects\n\n* [collection-visit](https://www.npmjs.com/package/collection-visit): Visit a method over the items in an object, or map visit over the objects\u2026 [more](https://github.com/jonschlinkert/collection-visit) | [homepage](https://github.com/jonschlinkert/collection-visit \"Visit a method over the items in an object, or map visit over the objects in an array.\")\n* [object-visit](https://www.npmjs.com/package/object-visit): Call a specified method on each value in the given object. | [homepage](https://github.com/jonschlinkert/object-visit \"Call a specified method on each value in the given object.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 15 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 7 | [doowb](https://github.com/doowb) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.5.0, on April 09, 2017._"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2023898}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 10729501}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 44812977}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 113904328}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 224972251}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 421713926}], "dependentsCount": 48, "starsCount": 0}, "github": {"starsCount": 13, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 15}, {"username": "doowb", "commitsCount": 6}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4942, "testsSize": 1759}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/map-visit.svg?style=flat", "shields": "https://img.shields.io/npm/v/map-visit.svg", "content": "https://img.shields.io/npm/v/map-visit.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/map-visit.svg?style=flat", "shields": "https://img.shields.io/npm/dm/map-visit.svg", "content": "https://img.shields.io/npm/dm/map-visit.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/map-visit.svg?style=flat", "shields": "https://img.shields.io/npm/dt/map-visit.svg", "content": "https://img.shields.io/npm/dt/map-visit.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/map-visit.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/map-visit.svg", "shields": "https://img.shields.io/travis/jonschlinkert/map-visit.svg", "content": "https://img.shields.io/travis/jonschlinkert/map-visit.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 17, "downloadsCount": 37968109.333333336, "downloadsAcceleration": 108212.62513318117, "dependentsCount": 48}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8120653572214038, "detail": {"quality": 0.9691397075145873, "popularity": 0.48955671679320667, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-23T12:08:58.090Z", "collected": {"metadata": {"name": "merge2", "scope": "unscoped", "version": "1.3.0", "description": "Merge multiple streams into one stream in sequence or parallel.", "keywords": ["merge2", "multiple", "sequence", "parallel", "merge", "stream", "merge stream", "sync"], "date": "2019-09-13T13:34:34.277Z", "publisher": {"username": "zensh", "email": "admin@zensh.com"}, "maintainers": [{"username": "zensh", "email": "admin@zensh.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/teambition/merge2.git"}, "links": {"npm": "https://www.npmjs.com/package/merge2", "homepage": "https://github.com/teambition/merge2", "repository": "https://github.com/teambition/merge2", "bugs": "https://github.com/teambition/merge2/issues"}, "license": "MIT", "devDependencies": {"standard": "^14.2.0", "through2": "^3.0.1", "thunks": "^4.9.5", "tman": "^1.9.0", "to-through": "^2.0.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# merge2\n\nMerge multiple streams into one stream in sequence or parallel.\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Downloads][downloads-image]][downloads-url]\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/merge2)\n\n```sh\nnpm install merge2\n```\n\n## Usage\n\n```js\nconst gulp = require('gulp')\nconst merge2 = require('merge2')\nconst concat = require('gulp-concat')\nconst minifyHtml = require('gulp-minify-html')\nconst ngtemplate = require('gulp-ngtemplate')\n\ngulp.task('app-js', function () {\n  return merge2(\n      gulp.src('static/src/tpl/*.html')\n        .pipe(minifyHtml({empty: true}))\n        .pipe(ngtemplate({\n          module: 'genTemplates',\n          standalone: true\n        })\n      ), gulp.src([\n        'static/src/js/app.js',\n        'static/src/js/locale_zh-cn.js',\n        'static/src/js/router.js',\n        'static/src/js/tools.js',\n        'static/src/js/services.js',\n        'static/src/js/filters.js',\n        'static/src/js/directives.js',\n        'static/src/js/controllers.js'\n      ])\n    )\n    .pipe(concat('app.js'))\n    .pipe(gulp.dest('static/dist/js/'))\n})\n```\n\n```js\nconst stream = merge2([stream1, stream2], stream3, {end: false})\n//...\nstream.add(stream4, stream5)\n//..\nstream.end()\n```\n\n```js\n// equal to merge2([stream1, stream2], stream3)\nconst stream = merge2()\nstream.add([stream1, stream2])\nstream.add(stream3)\n```\n\n```js\n// merge order:\n//   1. merge `stream1`;\n//   2. merge `stream2` and `stream3` in parallel after `stream1` merged;\n//   3. merge 'stream4' after `stream2` and `stream3` merged;\nconst stream = merge2(stream1, [stream2, stream3], stream4)\n\n// merge order:\n//   1. merge `stream5` and `stream6` in parallel after `stream4` merged;\n//   2. merge 'stream7' after `stream5` and `stream6` merged;\nstream.add([stream5, stream6], stream7)\n```\n\n```js\n// nest merge\n// equal to merge2(stream1, stream2, stream6, stream3, [stream4, stream5]);\nconst streamA = merge2(stream1, stream2)\nconst streamB = merge2(stream3, [stream4, stream5])\nconst stream = merge2(streamA, streamB)\nstreamA.add(stream6)\n```\n\n## API\n\n```js\nconst merge2 = require('merge2')\n```\n\n### merge2()\n\n### merge2(options)\n\n### merge2(stream1, stream2, ..., streamN)\n\n### merge2(stream1, stream2, ..., streamN, options)\n\n### merge2(stream1, [stream2, stream3, ...], streamN, options)\n\nreturn a duplex stream (mergedStream). streams in array will be merged in parallel.\n\n### mergedStream.add(stream)\n\n### mergedStream.add(stream1, [stream2, stream3, ...], ...)\n\nreturn the mergedStream.\n\n### mergedStream.on('queueDrain', function() {})\n\nIt will emit 'queueDrain' when all streams merged. If you set `end === false` in options, this event give you a notice that should add more streams to merge or end the mergedStream.\n\n#### stream\n\n*option*\nType: `Readable` or `Duplex` or `Transform` stream.\n\n#### options\n\n*option*\nType: `Object`.\n\n* **end** - `Boolean` - if `end === false` then mergedStream will not be auto ended, you should end by yourself. **Default:** `undefined`\n\n* **objectMode** - `Boolean` . **Default:** `true`\n\n`objectMode` and other options(`highWaterMark`, `defaultEncoding` ...) is same as Node.js `Stream`.\n\n## License\n\nMIT \u00a9 [Teambition](https://www.teambition.com)\n\n[npm-url]: https://npmjs.org/package/merge2\n[npm-image]: http://img.shields.io/npm/v/merge2.svg\n\n[travis-url]: https://travis-ci.org/teambition/merge2\n[travis-image]: http://img.shields.io/travis/teambition/merge2.svg\n\n[downloads-url]: https://npmjs.org/package/merge2\n[downloads-image]: http://img.shields.io/npm/dm/merge2.svg?style=flat-square"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 277860}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 6114668}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 25068573}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 66562021}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 127936049}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 210435609}], "dependentsCount": 280, "starsCount": 10}, "github": {"starsCount": 141, "forksCount": 11, "subscribersCount": 20, "issues": {"count": 27, "openCount": 2, "distribution": {"3600": 3, "10800": 1, "32400": 4, "97200": 7, "291600": 2, "874800": 2, "2624400": 0, "7873200": 2, "23619600": 2, "70858800": 4, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "zensh", "commitsCount": 26}, {"username": "LinusU", "commitsCount": 1}, {"username": "krmax44", "commitsCount": 1}, {"username": "rkhmelichek", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3601, "testsSize": 8423}, "badges": [{"urls": {"original": "http://img.shields.io/npm/v/merge2.svg", "shields": "https://img.shields.io/npm/v/merge2.svg", "content": "https://img.shields.io/npm/v/merge2.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/teambition/merge2.svg", "service": "https://api.travis-ci.org/teambition/merge2.svg", "shields": "https://img.shields.io/travis/teambition/merge2.svg", "content": "https://img.shields.io/travis/teambition/merge2.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "http://img.shields.io/npm/dm/merge2.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/merge2.svg", "content": "https://img.shields.io/npm/dm/merge2.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 186, "downloadsCount": 22187340.333333332, "downloadsAcceleration": 98325.77441019789, "dependentsCount": 280}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8344820230867995, "detail": {"quality": 0.9679780173703354, "popularity": 0.5546492455610045, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-21T23:59:04.111Z", "collected": {"metadata": {"name": "micromatch", "scope": "unscoped", "version": "4.0.2", "description": "Glob matching for javascript/node.js. A replacement and faster alternative to minimatch and multimatch.", "keywords": ["bash", "bracket", "character-class", "expand", "expansion", "expression", "extglob", "extglobs", "file", "files", "filter", "find", "glob", "globbing", "globs", "globstar", "lookahead", "lookaround", "lookbehind", "match", "matcher", "matches", "matching", "micromatch", "minimatch", "multimatch", "negate", "negation", "path", "pattern", "patterns", "posix", "regex", "regexp", "regular", "shell", "star", "wildcard"], "date": "2019-04-20T15:44:17.473Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "es128", "email": "elan.shanker+npm@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"url": "https://github.com/DianeLooney"}, {"name": "Amila Welihinda", "url": "amilajack.com"}, {"name": "Bogdan Chadkin", "url": "https://github.com/TrySound"}, {"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Devon Govett", "url": "http://badassjs.com"}, {"name": "Elan Shanker", "url": "https://github.com/es128"}, {"name": "Fabr\u00edcio Matt\u00e9", "url": "https://ultcombo.js.org"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Martin Kol\u00e1rik", "url": "https://kolarik.sk"}, {"name": "Olsten Larck", "url": "https://i.am.charlike.online"}, {"name": "Paul Miller", "url": "paulmillr.com"}, {"name": "Tom Byrer", "url": "https://github.com/tomByrer"}, {"name": "Tyler Akins", "url": "http://rumkin.com"}, {"name": "Peter Bright", "email": "drpizza@quiscalusmexicanus.org", "url": "https://github.com/drpizza"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/micromatch.git"}, "links": {"npm": "https://www.npmjs.com/package/micromatch", "homepage": "https://github.com/micromatch/micromatch", "repository": "https://github.com/micromatch/micromatch", "bugs": "https://github.com/micromatch/micromatch/issues"}, "license": "MIT", "dependencies": {"braces": "^3.0.1", "picomatch": "^2.0.5"}, "devDependencies": {"fill-range": "^7.0.1", "gulp-format-md": "^2.0.0", "minimatch": "^3.0.4", "mocha": "^5.2.0", "time-require": "github:jonschlinkert/time-require"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 4}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# micromatch [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/micromatch.svg?style=flat)](https://www.npmjs.com/package/micromatch) [![NPM monthly downloads](https://img.shields.io/npm/dm/micromatch.svg?style=flat)](https://npmjs.org/package/micromatch) [![NPM total downloads](https://img.shields.io/npm/dt/micromatch.svg?style=flat)](https://npmjs.org/package/micromatch) [![Linux Build Status](https://img.shields.io/travis/micromatch/micromatch.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/micromatch)\n\n> Glob matching for javascript/node.js. A replacement and faster alternative to minimatch and multimatch.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [Quickstart](#quickstart)\n- [Why use micromatch?](#why-use-micromatch)\n  * [Matching features](#matching-features)\n- [Switching to micromatch](#switching-to-micromatch)\n  * [From minimatch](#from-minimatch)\n  * [From multimatch](#from-multimatch)\n- [API](#api)\n- [Options](#options)\n- [Options Examples](#options-examples)\n  * [options.basename](#optionsbasename)\n  * [options.bash](#optionsbash)\n  * [options.expandRange](#optionsexpandrange)\n  * [options.format](#optionsformat)\n  * [options.ignore](#optionsignore)\n  * [options.matchBase](#optionsmatchbase)\n  * [options.noextglob](#optionsnoextglob)\n  * [options.nonegate](#optionsnonegate)\n  * [options.noglobstar](#optionsnoglobstar)\n  * [options.nonull](#optionsnonull)\n  * [options.nullglob](#optionsnullglob)\n  * [options.onIgnore](#optionsonignore)\n  * [options.onMatch](#optionsonmatch)\n  * [options.onResult](#optionsonresult)\n  * [options.posixSlashes](#optionsposixslashes)\n  * [options.unescape](#optionsunescape)\n- [Extended globbing](#extended-globbing)\n  * [Extglobs](#extglobs)\n  * [Braces](#braces)\n  * [Regex character classes](#regex-character-classes)\n  * [Regex groups](#regex-groups)\n  * [POSIX bracket expressions](#posix-bracket-expressions)\n- [Notes](#notes)\n  * [Bash 4.3 parity](#bash-43-parity)\n  * [Backslashes](#backslashes)\n- [Benchmarks](#benchmarks)\n  * [Running benchmarks](#running-benchmarks)\n  * [Latest results](#latest-results)\n- [Contributing](#contributing)\n- [About](#about)\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save micromatch\n```\n\n## Quickstart\n\n```js\nconst micromatch = require('micromatch');\n// micromatch(list, patterns[, options]);\n```\n\nThe [main export](#micromatch) takes a list of strings and one or more glob patterns:\n\n```js\nconsole.log(micromatch(['foo', 'bar', 'baz', 'qux'], ['f*', 'b*'])) //=> ['foo', 'bar', 'baz']\nconsole.log(micromatch(['foo', 'bar', 'baz', 'qux'], ['*', '!b*'])) //=> ['foo', 'qux']\n```\n\nUse [.isMatch()](#ismatch) to for boolean matching:\n\n```js\nconsole.log(micromatch.isMatch('foo', 'f*')) //=> true\nconsole.log(micromatch.isMatch('foo', ['b*', 'f*'])) //=> true\n```\n\n[Switching](#switching-to-micromatch) from minimatch and multimatch is easy!\n\n<br>\n\n## Why use micromatch?\n\n> micromatch is a [replacement](#switching-to-micromatch) for minimatch and multimatch\n\n* Supports all of the same matching features as [minimatch](https://github.com/isaacs/minimatch) and [multimatch](https://github.com/sindresorhus/multimatch)\n* More complete support for the Bash 4.3 specification than minimatch and multimatch. Micromatch passes _all of the spec tests_ from bash, including some that bash still fails.\n* **Fast & Performant** - Loads in about 5ms and performs [fast matches](#benchmarks).\n* **Glob matching** - Using wildcards (`*` and `?`), globstars (`**`) for nested directories\n* **[Advanced globbing](#advanced-globbing)** - Supports [extglobs](#extglobs), [braces](#braces), and [POSIX brackets](#posix-bracket-expressions), and support for escaping special characters with `\\` or quotes.\n* **Accurate** - Covers more scenarios [than minimatch](https://github.com/yarnpkg/yarn/pull/3339)\n* **Well tested** - More than 5,000 [test assertions](./test)\n* **Windows support** - More reliable windows support than minimatch and multimatch.\n* **[Safe](https://github.com/micromatch/braces#braces-is-safe)** - Micromatch is not subject to DoS with brace patterns like minimatch and multimatch.\n\n### Matching features\n\n* Support for multiple glob patterns (no need for wrappers like multimatch)\n* Wildcards (`**`, `*.js`)\n* Negation (`'!a/*.js'`, `'*!(b).js']`)\n* [extglobs](#extglobs) (`+(x|y)`, `!(a|b)`)\n* [POSIX character classes](#posix-bracket-expressions) (`[[:alpha:][:digit:]]`)\n* [brace expansion](https://github.com/micromatch/braces) (`foo/{1..5}.md`, `bar/{a,b,c}.js`)\n* regex character classes (`foo-[1-5].js`)\n* regex logical \"or\" (`foo/(abc|xyz).js`)\n\nYou can mix and match these features to create whatever patterns you need!\n\n## Switching to micromatch\n\n_(There is one notable difference between micromatch and minimatch in regards to how backslashes are handled. See [the notes about backslashes](#backslashes) for more information.)_\n\n### From minimatch\n\nUse [micromatch.isMatch()](#ismatch) instead of `minimatch()`:\n\n```js\nconsole.log(micromatch.isMatch('foo', 'b*')); //=> false\n```\n\nUse [micromatch.match()](#match) instead of `minimatch.match()`:\n\n```js\nconsole.log(micromatch.match(['foo', 'bar'], 'b*')); //=> 'bar'\n```\n\n### From multimatch\n\nSame signature:\n\n```js\nconsole.log(micromatch(['foo', 'bar', 'baz'], ['f*', '*z'])); //=> ['foo', 'baz']\n```\n\n## API\n\n**Params**\n\n* **{String|Array<string>}**: list List of strings to match.\n* **{String|Array<string>}**: patterns One or more glob patterns to use for matching.\n* **{Object}**: options See available [options](#options)\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm(list, patterns[, options]);\n\nconsole.log(mm(['a.js', 'a.txt'], ['*.js']));\n//=> [ 'a.js' ]\n```\n\n### [.matcher](index.js#L98)\n\nReturns a matcher function from the given glob `pattern` and `options`. The returned function takes a string to match as its only argument and returns true if the string is a match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern\n* `options` **{Object}**\n* `returns` **{Function}**: Returns a matcher function.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.matcher(pattern[, options]);\n\nconst isMatch = mm.matcher('*.!(*a)');\nconsole.log(isMatch('a.a')); //=> false\nconsole.log(isMatch('a.b')); //=> true\n```\n\n### [.isMatch](index.js#L117)\n\nReturns true if **any** of the given glob `patterns` match the specified `string`.\n\n**Params**\n\n* **{String}**: str The string to test.\n* **{String|Array}**: patterns One or more glob patterns to use for matching.\n* **{Object}**: See available [options](#options).\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.isMatch(string, patterns[, options]);\n\nconsole.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\nconsole.log(mm.isMatch('a.a', 'b.*')); //=> false\n```\n\n### [.not](index.js#L136)\n\nReturns a list of strings that _**do not match any**_ of the given `patterns`.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match.\n* `patterns` **{String|Array}**: One or more glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of strings that **do not match** the given patterns.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.not(list, patterns[, options]);\n\nconsole.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n//=> ['b.b', 'c.c']\n```\n\n### [.contains](index.js#L176)\n\nReturns true if the given `string` contains the given pattern. Similar to [.isMatch](#isMatch) but the pattern can match any part of the string.\n\n**Params**\n\n* `str` **{String}**: The string to match.\n* `patterns` **{String|Array}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if the patter matches any part of `str`.\n\n**Example**\n\n```js\nvar mm = require('micromatch');\n// mm.contains(string, pattern[, options]);\n\nconsole.log(mm.contains('aa/bb/cc', '*b'));\n//=> true\nconsole.log(mm.contains('aa/bb/cc', '*d'));\n//=> false\n```\n\n### [.matchKeys](index.js#L218)\n\nFilter the keys of the given object with the given `glob` pattern and `options`. Does not attempt to match nested keys. If you need this feature, use [glob-object](https://github.com/jonschlinkert/glob-object) instead.\n\n**Params**\n\n* `object` **{Object}**: The object with keys to filter.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Object}**: Returns an object with only keys that match the given patterns.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.matchKeys(object, patterns[, options]);\n\nconst obj = { aa: 'a', ab: 'b', ac: 'c' };\nconsole.log(mm.matchKeys(obj, '*b'));\n//=> { ab: 'b' }\n```\n\n### [.some](index.js#L247)\n\nReturns true if some of the strings in the given `list` match any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test. Returns as soon as the first match is found.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.some(list, patterns[, options]);\n\nconsole.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// true\nconsole.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.every](index.js#L283)\n\nReturns true if every string in the given `list` matches any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.every(list, patterns[, options]);\n\nconsole.log(mm.every('foo.js', ['foo.js']));\n// true\nconsole.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n// true\nconsole.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// false\nconsole.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.all](index.js#L322)\n\nReturns true if **all** of the given `patterns` match the specified string.\n\n**Params**\n\n* `str` **{String|Array}**: The string to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.all(string, patterns[, options]);\n\nconsole.log(mm.all('foo.js', ['foo.js']));\n// true\n\nconsole.log(mm.all('foo.js', ['*.js', '!foo.js']));\n// false\n\nconsole.log(mm.all('foo.js', ['*.js', 'foo.js']));\n// true\n\nconsole.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n// true\n```\n\n### [.capture](index.js#L349)\n\nReturns an array of matches captured by `pattern` in `string, or`null` if the pattern did not match.\n\n**Params**\n\n* `glob` **{String}**: Glob pattern to use for matching.\n* `input` **{String}**: String to match\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.capture(pattern, string[, options]);\n\nconsole.log(mm.capture('test/*.js', 'test/foo.js'));\n//=> ['foo']\nconsole.log(mm.capture('test/*.js', 'foo/bar.css'));\n//=> null\n```\n\n### [.makeRe](index.js#L375)\n\nCreate a regular expression from the given glob `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: A glob pattern to convert to regex.\n* `options` **{Object}**\n* `returns` **{RegExp}**: Returns a regex created from the given pattern.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\n// mm.makeRe(pattern[, options]);\n\nconsole.log(mm.makeRe('*.js'));\n//=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n```\n\n### [.scan](index.js#L391)\n\nScan a glob pattern to separate the pattern into segments. Used by the [split](#split) method.\n\n**Params**\n\n* `pattern` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with\n\n**Example**\n\n```js\nconst mm = require('micromatch');\nconst state = mm.scan(pattern[, options]);\n```\n\n### [.parse](index.js#L407)\n\nParse a glob pattern to create the source string for a regular expression.\n\n**Params**\n\n* `glob` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with useful properties and output to be used as regex source string.\n\n**Example**\n\n```js\nconst mm = require('micromatch');\nconst state = mm(pattern[, options]);\n```\n\n### [.braces](index.js#L434)\n\nProcess the given brace `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: String with brace pattern to process.\n* `options` **{Object}**: Any [options](#options) to change how expansion is performed. See the [braces](https://github.com/micromatch/braces) library for all available options.\n* `returns` **{Array}**\n\n**Example**\n\n```js\nconst { braces } = require('micromatch');\nconsole.log(braces('foo/{a,b,c}/bar'));\n//=> [ 'foo/(a|b|c)/bar' ]\n\nconsole.log(braces('foo/{a,b,c}/bar', { expand: true }));\n//=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n```\n\n## Options\n\n| **Option** | **Type** | **Default value** | **Description** |\n| --- | --- | --- | --- |\n| `basename`            | `boolean`      | `false`     | If set, then patterns without slashes will be matched against the basename of the path if it contains slashes.  For example, `a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`. |\n| `bash`                | `boolean`      | `false`     | Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars (`**`). |\n| `capture`             | `boolean`      | `undefined` | Return regex matches in supporting methods. |\n| `contains`            | `boolean`      | `undefined` | Allows glob to match any part of the given string(s). |\n| `cwd`                 | `string`       | `process.cwd()` | Current working directory. Used by `picomatch.split()` |\n| `debug`               | `boolean`      | `undefined` | Debug regular expressions when an error is thrown. |\n| `dot`                 | `boolean`      | `false`     | Match dotfiles. Otherwise dotfiles are ignored unless a `.` is explicitly defined in the pattern. |\n| `expandRange`         | `function`     | `undefined` | Custom function for expanding ranges in brace patterns, such as `{a..z}`. The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. This option is overridden by the `expandBrace` option. |\n| `failglob`            | `boolean`      | `false`     | Similar to the `failglob` behavior in Bash, throws an error when no matches are found. Based on the bash option of the same name. |\n| `fastpaths`           | `boolean`      | `true`      | To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to `false`. |\n| `flags`               | `boolean`      | `undefined` | Regex flags to use in the generated regex. If defined, the `nocase` option will be overridden. |\n| [format](#optionsformat) | `function` | `undefined` | Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. |\n| `ignore`              | `array\\|string` | `undefined` | One or more glob patterns for excluding strings that should not be matched from the result. |\n| `keepQuotes`          | `boolean`      | `false`     | Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes.  |\n| `literalBrackets`     | `boolean`      | `undefined` | When `true`, brackets in the glob pattern will be escaped so that only literal brackets will be matched. |\n| `lookbehinds`         | `boolean`      | `true`      | Support regex positive and negative lookbehinds. Note that you must be using Node 8.1.10 or higher to enable regex lookbehinds. |\n| `matchBase`           | `boolean`      | `false`     | Alias for `basename` |\n| `maxLength`           | `boolean`      | `65536`     | Limit the max length of the input string. An error is thrown if the input string is longer than this value. |\n| `nobrace`             | `boolean`      | `false`     | Disable brace matching, so that `{a,b}` and `{1..3}` would be treated as literal characters. |\n| `nobracket`           | `boolean`      | `undefined` | Disable matching with regex brackets. |\n| `nocase`              | `boolean`      | `false`     | Perform case-insensitive matching. Equivalent to the regex `i` flag. Note that this option is ignored when the `flags` option is defined. |\n| `nodupes`             | `boolean`      | `true`      | Deprecated, use `nounique` instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. |\n| `noext`               | `boolean`      | `false`     | Alias for `noextglob` |\n| `noextglob`           | `boolean`      | `false`     | Disable support for matching with [extglobs](#extglobs) (like `+(a\\|b)`) |\n| `noglobstar`          | `boolean`      | `false`     | Disable support for matching nested directories with globstars (`**`) |\n| `nonegate`            | `boolean`      | `false`     | Disable support for negating with leading `!` |\n| `noquantifiers`       | `boolean`      | `false`     | Disable support for regex quantifiers (like `a{1,2}`) and treat them as brace patterns to be expanded. |\n| [onIgnore](#optionsonIgnore) | `function` | `undefined` | Function to be called on ignored items. |\n| [onMatch](#optionsonMatch) | `function` | `undefined` | Function to be called on matched items. |\n| [onResult](#optionsonResult) | `function` | `undefined` | Function to be called on all items, regardless of whether or not they are matched or ignored. |\n| `posix`               | `boolean`      | `false`     | Support [POSIX character classes](#posix-bracket-expressions) (\"posix brackets\"). |\n| `posixSlashes`        | `boolean`      | `undefined` | Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself |\n| `prepend`             | `boolean`      | `undefined` | String to prepend to the generated regex used for matching. |\n| `regex`               | `boolean`      | `false`     | Use regular expression rules for `+` (instead of matching literal `+`), and for stars that follow closing parentheses or brackets (as in `)*` and `]*`). |\n| `strictBrackets`      | `boolean`      | `undefined` | Throw an error if brackets, braces, or parens are imbalanced. |\n| `strictSlashes`       | `boolean`      | `undefined` | When true, picomatch won't match trailing slashes with single stars. |\n| `unescape`            | `boolean`      | `undefined` | Remove preceding backslashes from escaped glob characters before creating the regular expression to perform matches. |\n| `unixify`             | `boolean`      | `undefined` | Alias for `posixSlashes`, for backwards compatitibility. |\n\n## Options Examples\n\n### options.basename\n\nAllow glob patterns without slashes to match a file path based on its basename. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `matchBase`.\n\n**Type**: `Boolean`\n\n**Default**: `false`\n\n**Example**\n\n```js\nmicromatch(['a/b.js', 'a/c.md'], '*.js');\n//=> []\n\nmicromatch(['a/b.js', 'a/c.md'], '*.js', { basename: true });\n//=> ['a/b.js']\n```\n\n### options.bash\n\nEnabled by default, this option enforces bash-like behavior with stars immediately following a bracket expression. Bash bracket expressions are similar to regex character classes, but unlike regex, a star following a bracket expression **does not repeat the bracketed characters**. Instead, the star is treated the same as any other star.\n\n**Type**: `Boolean`\n\n**Default**: `true`\n\n**Example**\n\n```js\nconst files = ['abc', 'ajz'];\nconsole.log(micromatch(files, '[a-c]*'));\n//=> ['abc', 'ajz']\n\nconsole.log(micromatch(files, '[a-c]*', { bash: false }));\n```\n\n### options.expandRange\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for expanding ranges in brace patterns. The [fill-range](https://github.com/jonschlinkert/fill-range) library is ideal for this purpose, or you can use custom code to do whatever you need.\n\n**Example**\n\nThe following example shows how to create a glob that matches a numeric folder name between `01` and `25`, with leading zeros.\n\n```js\nconst fill = require('fill-range');\nconst regex = micromatch.makeRe('foo/{01..25}/bar', {\n  expandRange(a, b) {\n    return `(${fill(a, b, { toRegex: true })})`;\n  }\n});\n\nconsole.log(regex)\n//=> /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/\n\nconsole.log(regex.test('foo/00/bar')) // false\nconsole.log(regex.test('foo/01/bar')) // true\nconsole.log(regex.test('foo/10/bar')) // true\nconsole.log(regex.test('foo/22/bar')) // true\nconsole.log(regex.test('foo/25/bar')) // true\nconsole.log(regex.test('foo/26/bar')) // false\n```\n\n### options.format\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for formatting strings before they're matched.\n\n**Example**\n\n```js\n// strip leading './' from strings\nconst format = str => str.replace(/^\\.\\//, '');\nconst isMatch = picomatch('foo/*.js', { format });\nconsole.log(isMatch('./foo/bar.js')) //=> true\n```\n\n### options.ignore\n\nString or array of glob patterns to match files to ignore.\n\n**Type**: `String|Array`\n\n**Default**: `undefined`\n\n```js\nconst isMatch = micromatch.matcher('*', { ignore: 'f*' });\nconsole.log(isMatch('foo')) //=> false\nconsole.log(isMatch('bar')) //=> true\nconsole.log(isMatch('baz')) //=> true\n```\n\n### options.matchBase\n\nAlias for [options.basename](#options-basename).\n\n### options.noextglob\n\nDisable extglob support, so that [extglobs](#extglobs) are regarded as literal characters.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Examples**\n\n```js\nconsole.log(micromatch(['a/z', 'a/b', 'a/!(z)'], 'a/!(z)'));\n//=> ['a/b', 'a/!(z)']\n\nconsole.log(micromatch(['a/z', 'a/b', 'a/!(z)'], 'a/!(z)', { noextglob: true }));\n//=> ['a/!(z)'] (matches only as literal characters)\n```\n\n### options.nonegate\n\nDisallow negation (`!`) patterns, and treat leading `!` as a literal character to match.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.noglobstar\n\nDisable matching with globstars (`**`).\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n```js\nmicromatch(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**');\n//=> ['a/b', 'a/b/c', 'a/b/c/d']\n\nmicromatch(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**', {noglobstar: true});\n//=> ['a/b']\n```\n\n### options.nonull\n\nAlias for [options.nullglob](#options-nullglob).\n\n### options.nullglob\n\nIf `true`, when no matches are found the actual (arrayified) glob pattern is returned instead of an empty array. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `nonull`.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n### options.onIgnore\n\n```js\nconst onIgnore = ({ glob, regex, input, output }) => {\n  console.log({ glob, regex, input, output });\n  // { glob: '*', regex: /^(?:(?!\\.)(?=.)[^\\/]*?\\/?)$/, input: 'foo', output: 'foo' }\n};\n\nconst isMatch = micromatch.matcher('*', { onIgnore, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n### options.onMatch\n\n```js\nconst onMatch = ({ glob, regex, input, output }) => {\n  console.log({ input, output });\n  // { input: 'some\\\\path', output: 'some/path' }\n  // { input: 'some\\\\path', output: 'some/path' }\n  // { input: 'some\\\\path', output: 'some/path' }\n};\n\nconst isMatch = micromatch.matcher('**', { onMatch, posixSlashes: true });\nisMatch('some\\\\path');\nisMatch('some\\\\path');\nisMatch('some\\\\path');\n```\n\n### options.onResult\n\n```js\nconst onResult = ({ glob, regex, input, output }) => {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = micromatch('*', { onResult, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n### options.posixSlashes\n\nConvert path separators on returned files to posix/unix-style forward slashes. Aliased as `unixify` for backwards compatibility.\n\n**Type**: `Boolean`\n\n**Default**: `true` on windows, `false` everywhere else.\n\n**Example**\n\n```js\nconsole.log(micromatch.match(['a\\\\b\\\\c'], 'a/**'));\n//=> ['a/b/c']\n\nconsole.log(micromatch.match(['a\\\\b\\\\c'], { posixSlashes: false }));\n//=> ['a\\\\b\\\\c']\n```\n\n### options.unescape\n\nRemove backslashes from escaped glob characters before creating the regular expression to perform matches.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Example**\n\nIn this example we want to match a literal `*`:\n\n```js\nconsole.log(micromatch.match(['abc', 'a\\\\*c'], 'a\\\\*c'));\n//=> ['a\\\\*c']\n\nconsole.log(micromatch.match(['abc', 'a\\\\*c'], 'a\\\\*c', { unescape: true }));\n//=> ['a*c']\n```\n\n<br>\n<br>\n\n## Extended globbing\n\nMicromatch supports the following extended globbing features.\n\n### Extglobs\n\nExtended globbing, as described by the bash man page:\n\n| **pattern** | **regex equivalent** | **description** |\n| --- | --- | --- |\n| `?(pattern)` | `(pattern)?` | Matches zero or one occurrence of the given patterns |\n| `*(pattern)` | `(pattern)*` | Matches zero or more occurrences of the given patterns |\n| `+(pattern)` | `(pattern)+` | Matches one or more occurrences of the given patterns |\n| `@(pattern)` | `(pattern)` <sup>*</sup> | Matches one of the given patterns |\n| `!(pattern)` | N/A (equivalent regex is much more complicated) | Matches anything except one of the given patterns |\n\n<sup><strong>*</strong></sup> Note that `@` isn't a regex character.\n\n### Braces\n\nBrace patterns can be used to match specific ranges or sets of characters.\n\n**Example**\n\nThe pattern `{f,b}*/{1..3}/{b,q}*` would match any of following strings:\n\n```\nfoo/1/bar\nfoo/2/bar\nfoo/3/bar\nbaz/1/qux\nbaz/2/qux\nbaz/3/qux\n```\n\nVisit [braces](https://github.com/micromatch/braces) to see the full range of features and options related to brace expansion, or to create brace matching or expansion related issues.\n\n### Regex character classes\n\nGiven the list: `['a.js', 'b.js', 'c.js', 'd.js', 'E.js']`:\n\n* `[ac].js`: matches both `a` and `c`, returning `['a.js', 'c.js']`\n* `[b-d].js`: matches from `b` to `d`, returning `['b.js', 'c.js', 'd.js']`\n* `[b-d].js`: matches from `b` to `d`, returning `['b.js', 'c.js', 'd.js']`\n* `a/[A-Z].js`: matches and uppercase letter, returning `['a/E.md']`\n\nLearn about [regex character classes](http://www.regular-expressions.info/charclass.html).\n\n### Regex groups\n\nGiven `['a.js', 'b.js', 'c.js', 'd.js', 'E.js']`:\n\n* `(a|c).js`: would match either `a` or `c`, returning `['a.js', 'c.js']`\n* `(b|d).js`: would match either `b` or `d`, returning `['b.js', 'd.js']`\n* `(b|[A-Z]).js`: would match either `b` or an uppercase letter, returning `['b.js', 'E.js']`\n\nAs with regex, parens can be nested, so patterns like `((a|b)|c)/b` will work. Although brace expansion might be friendlier to use, depending on preference.\n\n### POSIX bracket expressions\n\nPOSIX brackets are intended to be more user-friendly than regex character classes. This of course is in the eye of the beholder.\n\n**Example**\n\n```js\nconsole.log(micromatch.isMatch('a1', '[[:alpha:][:digit:]]')) //=> true\nconsole.log(micromatch.isMatch('a1', '[[:alpha:][:alpha:]]')) //=> false\n```\n\n***\n\n## Notes\n\n### Bash 4.3 parity\n\nWhenever possible matching behavior is based on behavior Bash 4.3, which is mostly consistent with minimatch.\n\nHowever, it's suprising how many edge cases and rabbit holes there are with glob matching, and since there is no real glob specification, and micromatch is more accurate than both Bash and minimatch, there are cases where best-guesses were made for behavior. In a few cases where Bash had no answers, we used wildmatch (used by git) as a fallback.\n\n### Backslashes\n\nThere is an important, notable difference between minimatch and micromatch _in regards to how backslashes are handled_ in glob patterns.\n\n* Micromatch exclusively and explicitly reserves backslashes for escaping characters in a glob pattern, even on windows, which is consistent with bash behavior. _More importantly, unescaping globs can result in unsafe regular expressions_.\n* Minimatch converts all backslashes to forward slashes, which means you can't use backslashes to escape any characters in your glob patterns.\n\nWe made this decision for micromatch for a couple of reasons:\n\n* Consistency with bash conventions.\n* Glob patterns are not filepaths. They are a type of [regular language](https://en.wikipedia.org/wiki/Regular_language) that is converted to a JavaScript regular expression. Thus, when forward slashes are defined in a glob pattern, the resulting regular expression will match windows or POSIX path separators just fine.\n\n**A note about joining paths to globs**\n\nNote that when you pass something like `path.join('foo', '*')` to micromatch, you are creating a filepath and expecting it to still work as a glob pattern. This causes problems on windows, since the `path.sep` is `\\\\`.\n\nIn other words, since `\\\\` is reserved as an escape character in globs, on windows `path.join('foo', '*')` would result in `foo\\\\*`, which tells micromatch to match `*` as a literal character. This is the same behavior as bash.\n\nTo solve this, you might be inspired to do something like `'foo\\\\*'.replace(/\\\\/g, '/')`, but this causes another, potentially much more serious, problem.\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dependencies for running benchmarks:\n\n```sh\n$ cd bench && npm install \n```\n\nRun the benchmarks:\n\n```sh\n$ npm run bench\n```\n\n### Latest results\n\nAs of April 10, 2019 (longer bars are better):\n\n```sh\n# .makeRe star\n  micromatch x 1,724,735 ops/sec \u00b11.69% (87 runs sampled))\n  minimatch x 649,565 ops/sec \u00b11.93% (91 runs sampled)\n\n# .makeRe star; dot=true\n  micromatch x 1,302,127 ops/sec \u00b11.43% (92 runs sampled)\n  minimatch x 556,242 ops/sec \u00b10.71% (86 runs sampled)\n\n# .makeRe globstar\n  micromatch x 1,393,992 ops/sec \u00b10.71% (89 runs sampled)\n  minimatch x 1,112,801 ops/sec \u00b12.02% (91 runs sampled)\n\n# .makeRe globstars\n  micromatch x 1,419,097 ops/sec \u00b10.34% (94 runs sampled)\n  minimatch x 541,207 ops/sec \u00b11.66% (93 runs sampled)\n\n# .makeRe with leading star\n  micromatch x 1,247,825 ops/sec \u00b10.97% (94 runs sampled)\n  minimatch x 489,660 ops/sec \u00b10.63% (94 runs sampled)\n\n# .makeRe - braces\n  micromatch x 206,301 ops/sec \u00b11.62% (81 runs sampled))\n  minimatch x 115,986 ops/sec \u00b10.59% (94 runs sampled)\n\n# .makeRe braces - range (expanded)\n  micromatch x 27,782 ops/sec \u00b10.79% (88 runs sampled)\n  minimatch x 4,683 ops/sec \u00b11.20% (92 runs sampled)\n\n# .makeRe braces - range (compiled)\n  micromatch x 134,056 ops/sec \u00b12.73% (77 runs sampled))\n  minimatch x 977 ops/sec \u00b10.85% (91 runs sampled)d)\n\n# .makeRe braces - nested ranges (expanded)\n  micromatch x 18,353 ops/sec \u00b10.95% (91 runs sampled)\n  minimatch x 4,514 ops/sec \u00b11.04% (93 runs sampled)\n\n# .makeRe braces - nested ranges (compiled)\n  micromatch x 38,916 ops/sec \u00b11.85% (82 runs sampled)\n  minimatch x 980 ops/sec \u00b10.54% (93 runs sampled)d)\n\n# .makeRe braces - set (compiled)\n  micromatch x 141,088 ops/sec \u00b11.70% (70 runs sampled))\n  minimatch x 43,385 ops/sec \u00b10.87% (93 runs sampled)\n\n# .makeRe braces - nested sets (compiled)\n  micromatch x 87,272 ops/sec \u00b12.85% (71 runs sampled))\n  minimatch x 25,327 ops/sec \u00b11.59% (86 runs sampled)\n```\n\n## Contributing\n\nAll contributions are welcome! Please read [the contributing guide](.github/contributing.md) to get started.\n\n**Bug reports**\n\nPlease create an issue if you encounter a bug or matching behavior that doesn't seem correct. If you find a matching-related issue, please:\n\n* [research existing issues first](../../issues) (open and closed)\n* visit the [GNU Bash documentation](https://www.gnu.org/software/bash/manual/) to see how Bash deals with the pattern\n* visit the [minimatch](https://github.com/isaacs/minimatch) documentation to cross-check expected behavior in node.js\n* if all else fails, since there is no real specification for globs we will probably need to discuss expected behavior and decide how to resolve it. which means any detail you can provide to help with this discussion would be greatly appreciated.\n\n**Platform issues**\n\nIt's important to us that micromatch work consistently on all platforms. If you encounter any platform-specific matching or path related issues, please let us know (pull requests are also greatly appreciated).\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support\u2026 [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [expand-brackets](https://www.npmjs.com/package/expand-brackets): Expand POSIX bracket expressions (character classes) in glob patterns. | [homepage](https://github.com/micromatch/expand-brackets \"Expand POSIX bracket expressions (character classes) in glob patterns.\")\n* [extglob](https://www.npmjs.com/package/extglob): Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob\u2026 [more](https://github.com/micromatch/extglob) | [homepage](https://github.com/micromatch/extglob \"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\")\n* [fill-range](https://www.npmjs.com/package/fill-range): Fill in a range of numbers or letters, optionally passing an increment or `step` to\u2026 [more](https://github.com/jonschlinkert/fill-range) | [homepage](https://github.com/jonschlinkert/fill-range \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\")\n* [nanomatch](https://www.npmjs.com/package/nanomatch): Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash\u2026 [more](https://github.com/micromatch/nanomatch) | [homepage](https://github.com/micromatch/nanomatch \"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 475 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 12  | [es128](https://github.com/es128) |  \n| 8   | [doowb](https://github.com/doowb) |  \n| 3   | [paulmillr](https://github.com/paulmillr) |  \n| 2   | [TrySound](https://github.com/TrySound) |  \n| 2   | [MartinKolarik](https://github.com/MartinKolarik) |  \n| 2   | [Tvrqvoise](https://github.com/Tvrqvoise) |  \n| 2   | [tunnckoCore](https://github.com/tunnckoCore) |  \n| 1   | [amilajack](https://github.com/amilajack) |  \n| 1   | [mrmlnc](https://github.com/mrmlnc) |  \n| 1   | [devongovett](https://github.com/devongovett) |  \n| 1   | [DianeLooney](https://github.com/DianeLooney) |  \n| 1   | [UltCombo](https://github.com/UltCombo) |  \n| 1   | [tomByrer](https://github.com/tomByrer) |  \n| 1   | [fidian](https://github.com/fidian) |  \n| 1   | [simlu](https://github.com/simlu) |  \n| 1   | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 10, 2019._"}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 3822297}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 19651625}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 83019991}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 208712256}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 415386642}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 780729244}], "dependentsCount": 841, "starsCount": 26}, "github": {"homepage": "https://github.com/micromatch", "starsCount": 1294, "forksCount": 98, "subscribersCount": 20, "issues": {"count": 197, "openCount": 22, "distribution": {"3600": 31, "10800": 13, "32400": 18, "97200": 20, "291600": 13, "874800": 17, "2624400": 21, "7873200": 16, "23619600": 36, "70858800": 12, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 470}, {"username": "es128", "commitsCount": 7}, {"username": "doowb", "commitsCount": 6}, {"username": "paulmillr", "commitsCount": 6}, {"username": "mrmlnc", "commitsCount": 4}, {"username": "DrPizza", "commitsCount": 3}, {"username": "Glazy", "commitsCount": 2}, {"username": "MartinKolarik", "commitsCount": 2}, {"username": "TrySound", "commitsCount": 2}, {"username": "Tvrqvoise", "commitsCount": 2}, {"username": "mceIdo", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 2}, {"username": "Cslove", "commitsCount": 1}, {"username": "DianeLooney", "commitsCount": 1}, {"username": "UltCombo", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "fidian", "commitsCount": 1}, {"username": "frangio", "commitsCount": 1}, {"username": "sebdeckers", "commitsCount": 1}, {"username": "simlu", "commitsCount": 1}, {"username": "tomByrer", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "yvele", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 4}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 36}]}, "source": {"files": {"readmeSize": 37930, "testsSize": 469058, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/micromatch.svg?style=flat", "shields": "https://img.shields.io/npm/v/micromatch.svg", "content": "https://img.shields.io/npm/v/micromatch.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/micromatch.svg?style=flat", "shields": "https://img.shields.io/npm/dm/micromatch.svg", "content": "https://img.shields.io/npm/dm/micromatch.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/micromatch.svg?style=flat", "shields": "https://img.shields.io/npm/dt/micromatch.svg", "content": "https://img.shields.io/npm/dt/micromatch.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/micromatch.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/micromatch.svg", "shields": "https://img.shields.io/travis/micromatch/micromatch.svg", "content": "https://img.shields.io/travis/micromatch/micromatch.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 1462, "downloadsCount": 69570752, "downloadsAcceleration": 199267.03493150685, "dependentsCount": 841}, "maintenance": {"releasesFrequency": 0.2712328767123288, "commitsFrequency": 0.6242465753424657, "openIssues": 1, "issuesDistribution": 0.5594300626426062}}, "score": {"final": 0.8425578654285198, "detail": {"quality": 0.9434447250549063, "popularity": 0.6977860895309488, "maintenance": 0.9008551902177597}}}
{"analyzedAt": "2020-02-29T12:42:50.419Z", "collected": {"metadata": {"name": "mimic-fn", "scope": "unscoped", "version": "3.0.0", "description": "Make a function mimic another one", "keywords": ["function", "mimic", "imitate", "rename", "copy", "inherit", "properties", "name", "func", "fn", "set", "infer", "change"], "date": "2019-06-13T16:07:20.324Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "ehmicky", "email": "ehmicky@gmail.com"}, "maintainers": [{"username": "ehmicky", "email": "ehmicky@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/mimic-fn.git"}, "links": {"npm": "https://www.npmjs.com/package/mimic-fn", "homepage": "https://github.com/sindresorhus/mimic-fn#readme", "repository": "https://github.com/sindresorhus/mimic-fn", "bugs": "https://github.com/sindresorhus/mimic-fn/issues"}, "license": "MIT", "devDependencies": {"ava": "^2.1.0", "tsd": "^0.7.1", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 4}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<img src=\"media/logo.svg\" alt=\"mimic-fn\" width=\"400\">\n<br>\n\n[![Build Status](https://travis-ci.org/sindresorhus/mimic-fn.svg?branch=master)](https://travis-ci.org/sindresorhus/mimic-fn)\n\n> Make a function mimic another one\n\nUseful when you wrap a function in another function and like to preserve the original name and other properties.\n\n\n## Install\n\n```\n$ npm install mimic-fn\n```\n\n\n## Usage\n\n```js\nconst mimicFn = require('mimic-fn');\n\nfunction foo() {}\nfoo.unicorn = '\ud83e\udd84';\n\nfunction wrapper() {\n\treturn foo();\n}\n\nconsole.log(wrapper.name);\n//=> 'wrapper'\n\nmimicFn(wrapper, foo);\n\nconsole.log(wrapper.name);\n//=> 'foo'\n\nconsole.log(wrapper.unicorn);\n//=> '\ud83e\udd84'\n\nconsole.log(String(wrapper));\n//=> '/* Wrapped with wrapper() */\\nfunction foo() {}'\n```\n\n\n## API\n\n### mimicFn(to, from, options?)\n\nModifies the `to` function to mimic the `from` function. Returns the `to` function.\n\n`name`, `displayName`, and any other properties of `from` are copied. The `length` property is not copied. Prototype, class, and inherited properties are copied.\n\n`to.toString()` will return the same as `from.toString()` but prepended with a `Wrapped with to()` comment.\n\n#### to\n\nType: `Function`\n\nMimicking function.\n\n#### from\n\nType: `Function`\n\nFunction to mimic.\n\n#### options\n\nType: `object`\n\n##### ignoreNonConfigurable\n\nType: `boolean`<br>\nDefault: `false`\n\nSkip modifying [non-configurable properties](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description) instead of throwing an error.\n\n## Related\n\n- [rename-fn](https://github.com/sindresorhus/rename-fn) - Rename a function\n- [keep-func-props](https://github.com/ehmicky/keep-func-props) - Wrap a function without changing its name and other properties\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-mimic-fn?utm_source=npm-mimic-fn&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 3183763}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 18580108}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 78703198}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 203436997}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 396319656}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 694121452}], "dependentsCount": 83, "starsCount": 0}, "github": {"starsCount": 51, "forksCount": 8, "subscribersCount": 9, "issues": {"count": 40, "openCount": 0, "distribution": {"3600": 14, "10800": 8, "32400": 4, "97200": 2, "291600": 2, "874800": 0, "2624400": 1, "7873200": 5, "23619600": 2, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "ehmicky", "commitsCount": 18}, {"username": "sindresorhus", "commitsCount": 12}, {"username": "jdalton", "commitsCount": 2}, {"username": "BendingBender", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "elvinn", "commitsCount": 1}, {"username": "lamansky", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 26}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2205, "testsSize": 6465}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/mimic-fn.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/mimic-fn.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/mimic-fn/master.svg", "content": "https://img.shields.io/travis/sindresorhus/mimic-fn/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 75, "downloadsCount": 67812332.33333333, "downloadsAcceleration": 255452.64589041087, "dependentsCount": 83}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8286996968079577, "detail": {"quality": 0.9547045235275585, "popularity": 0.5495055937724082, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-09T10:36:56.451Z", "collected": {"metadata": {"name": "minimatch", "scope": "unscoped", "version": "3.0.4", "description": "a glob matcher in javascript", "date": "2017-05-07T18:11:10.900Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/minimatch.git"}, "links": {"npm": "https://www.npmjs.com/package/minimatch", "homepage": "https://github.com/isaacs/minimatch#readme", "repository": "https://github.com/isaacs/minimatch", "bugs": "https://github.com/isaacs/minimatch/issues"}, "license": "ISC", "dependencies": {"brace-expansion": "^1.1.7"}, "devDependencies": {"tap": "^10.3.2"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# minimatch\n\nA minimal matching utility.\n\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.svg)](http://travis-ci.org/isaacs/minimatch)\n\n\nThis is the matching library used internally by npm.\n\nIt works by converting glob expressions into JavaScript `RegExp`\nobjects.\n\n## Usage\n\n```javascript\nvar minimatch = require(\"minimatch\")\n\nminimatch(\"bar.foo\", \"*.foo\") // true!\nminimatch(\"bar.foo\", \"*.bar\") // false!\nminimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy!\n```\n\n## Features\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* \"Globstar\" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n\n## Minimatch Class\n\nCreate a minimatch object by instantiating the `minimatch.Minimatch` class.\n\n```javascript\nvar Minimatch = require(\"minimatch\").Minimatch\nvar mm = new Minimatch(pattern, options)\n```\n\n### Properties\n\n* `pattern` The original pattern the minimatch object represents.\n* `options` The options supplied to the constructor.\n* `set` A 2-dimensional array of regexp or string expressions.\n  Each row in the\n  array corresponds to a brace-expanded pattern.  Each item in the row\n  corresponds to a single path-part.  For example, the pattern\n  `{a,b/c}/d` would expand to a set of patterns like:\n\n        [ [ a, d ]\n        , [ b, c, d ] ]\n\n    If a portion of the pattern doesn't have any \"magic\" in it\n    (that is, it's something like `\"foo\"` rather than `fo*o?`), then it\n    will be left as a string rather than converted to a regular\n    expression.\n\n* `regexp` Created by the `makeRe` method.  A single regular expression\n  expressing the entire pattern.  This is useful in cases where you wish\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\n* `negate` True if the pattern is negated.\n* `comment` True if the pattern is a comment.\n* `empty` True if the pattern is `\"\"`.\n\n### Methods\n\n* `makeRe` Generate the `regexp` member if necessary, and return it.\n  Will return `false` if the pattern is invalid.\n* `match(fname)` Return true if the filename matches the pattern, or\n  false otherwise.\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n  filename, and match it against a single row in the `regExpSet`.  This\n  method is mainly for internal use, but is exposed so that it can be\n  used by a glob-walker that needs to avoid excessive filesystem calls.\n\nAll other methods are internal, and will be called as necessary.\n\n### minimatch(path, pattern, options)\n\nMain export.  Tests a path against the pattern using the options.\n\n```javascript\nvar isJS = minimatch(file, \"*.js\", { matchBase: true })\n```\n\n### minimatch.filter(pattern, options)\n\nReturns a function that tests its\nsupplied argument, suitable for use with `Array.filter`.  Example:\n\n```javascript\nvar javascripts = fileList.filter(minimatch.filter(\"*.js\", {matchBase: true}))\n```\n\n### minimatch.match(list, pattern, options)\n\nMatch against the list of\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.\n\n```javascript\nvar javascripts = minimatch.match(fileList, \"*.js\", {matchBase: true}))\n```\n\n### minimatch.makeRe(pattern, options)\n\nMake a regular expression object from the pattern.\n\n## Options\n\nAll options are `false` by default.\n\n### debug\n\nDump a ton of stuff to stderr.\n\n### nobrace\n\nDo not expand `{a,b}` and `{1..3}` brace sets.\n\n### noglobstar\n\nDisable `**` matching against multiple folder names.\n\n### dot\n\nAllow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.\n\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\nis set.\n\n### noext\n\nDisable \"extglob\" style patterns like `+(a|b)`.\n\n### nocase\n\nPerform a case-insensitive match.\n\n### nonull\n\nWhen a match is not found by `minimatch.match`, return a list containing\nthe pattern itself if this option is set.  When not set, an empty list\nis returned if there are no matches.\n\n### matchBase\n\nIf set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes.  For example,\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n### nocomment\n\nSuppress the behavior of treating `#` at the start of a pattern as a\ncomment.\n\n### nonegate\n\nSuppress the behavior of treating a leading `!` character as negation.\n\n### flipNegate\n\nReturns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)\n\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between minimatch and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen minimatch.match returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`minimatch.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 881078}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 17322108}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 70465794}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 196700381}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 393992738}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 777286604}], "dependentsCount": 3511, "starsCount": 99}, "github": {"starsCount": 2113, "forksCount": 159, "subscribersCount": 46, "issues": {"count": 123, "openCount": 37, "distribution": {"3600": 13, "10800": 5, "32400": 9, "97200": 2, "291600": 5, "874800": 5, "2624400": 5, "7873200": 11, "23619600": 26, "70858800": 10, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 154}, {"username": "kevinsawicki", "commitsCount": 3}, {"username": "MiguelCastillo", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "djchie", "commitsCount": 1}, {"username": "forivall", "commitsCount": 1}, {"username": "gjtorikian", "commitsCount": 1}, {"username": "jgillich", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "litmit", "commitsCount": 1}, {"username": "maxg", "commitsCount": 1}, {"username": "mcandre", "commitsCount": 1}, {"username": "nitoyon", "commitsCount": 1}, {"username": "stefanpenner", "commitsCount": 1}, {"username": "wdavidw", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6336, "testsSize": 21349, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/isaacs/minimatch.svg", "service": "https://api.travis-ci.org/isaacs/minimatch.svg", "shields": "https://img.shields.io/travis/isaacs/minimatch.svg", "content": "https://img.shields.io/travis/isaacs/minimatch.json"}, "info": {"service": "travis", "type": "build"}}], "coverage": 0.94}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.991, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 2432, "downloadsCount": 65566793.666666664, "downloadsAcceleration": 69650.91624809732, "dependentsCount": 3511}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 0.06400684931506849, "openIssues": 0.8319783197831978, "issuesDistribution": 0}}, "score": {"final": 0.6516591171785233, "detail": {"quality": 0.956874714402484, "popularity": 0.7579924316670088, "maintenance": 0.2837124336409288}}}
{"analyzedAt": "2020-02-09T19:27:18.251Z", "collected": {"metadata": {"name": "minimist", "scope": "unscoped", "version": "1.2.0", "description": "parse argument options", "keywords": ["argv", "getopt", "parser", "optimist"], "date": "2015-08-24T13:56:27.640Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "substack", "email": "substack@gmail.com"}, "maintainers": [{"username": "substack", "email": "substack@gmail.com"}, {"username": "emilbayes", "email": "github@tixz.dk"}], "repository": {"type": "git", "url": "git://github.com/substack/minimist.git"}, "links": {"npm": "https://www.npmjs.com/package/minimist", "homepage": "https://github.com/substack/minimist", "repository": "https://github.com/substack/minimist", "bugs": "https://github.com/substack/minimist/issues"}, "license": "MIT", "devDependencies": {"covert": "^1.0.0", "tap": "~0.4.0", "tape": "^3.5.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# minimist\n\nparse argument options\n\nThis module is the guts of optimist's argument parser without all the\nfanciful decoration.\n\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\n\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\n\n# example\n\n``` js\nvar argv = require('minimist')(process.argv.slice(2));\nconsole.dir(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ 'foo', 'bar', 'baz' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: 'boop' }\n```\n\n# methods\n\n``` js\nvar parseArgs = require('minimist')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn't have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a boolean, string or array of strings to always treat as\nbooleans. if `true` will treat all double hyphenated arguments without equal signs\nas boolean (e.g. affects `--foo`, not `-f` or `--foo=bar`)\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n* `opts.stopEarly` - when true, populate `argv._` with everything after the\nfirst non-option\n* `opts['--']` - when true, populate `argv._` with everything before the `--`\nand `argv['--']` with everything after the `--`. Here's an example:\n* `opts.unknown` - a function which is invoked with a command line parameter not\ndefined in the `opts` configuration object. If the function returns `false`, the\nunknown option is not added to `argv`.\n\n```\n> require('./')('one two three -- four five --six'.split(' '), { '--': true })\n{ _: [ 'one', 'two', 'three' ],\n  '--': [ 'four', 'five', '--six' ] }\n```\n\nNote that with `opts['--']` set, parsing for arguments still stops after the\n`--`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1776171}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 35401603}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 145573740}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 405642055}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 799549943}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1494582344}], "dependentsCount": 12007, "starsCount": 432}, "github": {"starsCount": 3975, "forksCount": 208, "subscribersCount": 52, "issues": {"count": 142, "openCount": 68, "distribution": {"3600": 14, "10800": 7, "32400": 5, "97200": 6, "291600": 11, "874800": 1, "2624400": 6, "7873200": 16, "23619600": 6, "70858800": 16, "212576400": 54}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 49}, {"username": "dominictarr", "commitsCount": 3}, {"username": "ELLIOTTCABLE", "commitsCount": 2}, {"username": "jeffbski", "commitsCount": 2}, {"username": "caitp", "commitsCount": 1}, {"username": "coleste", "commitsCount": 1}, {"username": "jdiamond", "commitsCount": 1}, {"username": "lydell", "commitsCount": 1}, {"username": "m1kc", "commitsCount": 1}, {"username": "maxogden", "commitsCount": 1}, {"username": "okdistribute", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2463, "testsSize": 18606}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/minimist.png", "service": "https://api.travis-ci.org/substack/minimist.svg", "shields": "https://img.shields.io/travis/substack/minimist.svg", "content": "https://img.shields.io/travis/substack/minimist.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 4678, "downloadsCount": 135214018.33333334, "downloadsAcceleration": 276227.45797184156, "dependentsCount": 12007}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 0, "openIssues": 0.5352112676056339, "issuesDistribution": 0}}, "score": {"final": 0.6566419253203204, "detail": {"quality": 0.9262615076490556, "popularity": 0.8610660516796955, "maintenance": 0.2211152998220296}}}
{"analyzedAt": "2020-02-13T01:32:27.815Z", "collected": {"metadata": {"name": "mixin-deep", "scope": "unscoped", "version": "2.0.1", "description": "Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. No dependencies.", "keywords": ["assign", "deep", "extend", "key", "keys", "merge", "mixin", "object", "prop", "properties", "util", "values"], "date": "2019-06-19T17:47:14.541Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/mixin-deep.git"}, "links": {"npm": "https://www.npmjs.com/package/mixin-deep", "homepage": "https://github.com/jonschlinkert/mixin-deep", "repository": "https://github.com/jonschlinkert/mixin-deep", "bugs": "https://github.com/jonschlinkert/mixin-deep/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^2.0.0", "mocha": "^6.1.4"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 3}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2121563}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 11019575}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 45853491}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 119821039}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 242556913}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 446497201}], "dependentsCount": 195, "starsCount": 1}, "github": {"starsCount": 59, "forksCount": 9, "subscribersCount": 2, "issues": {"count": 8, "openCount": 3, "distribution": {"3600": 0, "10800": 0, "32400": 1, "97200": 1, "291600": 0, "874800": 0, "2624400": 3, "7873200": 0, "23619600": 2, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 30}, {"username": "doowb", "commitsCount": 2}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2}]}, "source": {"files": {"readmeSize": 0, "testsSize": 4086}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 73, "downloadsCount": 39940346.333333336, "downloadsAcceleration": 107357.02501902584, "dependentsCount": 195}, "maintenance": {"releasesFrequency": 0.19726027397260276, "commitsFrequency": 0.023013698630136987, "openIssues": 0.7083333333333333, "issuesDistribution": 0.21047138869160337}}, "score": {"final": 0.6237882108454604, "detail": {"quality": 0.7727023909591635, "popularity": 0.5468337351440491, "maintenance": 0.5731019607351262}}}
{"analyzedAt": "2020-02-18T21:04:19.921Z", "collected": {"metadata": {"name": "mkdirp", "scope": "unscoped", "version": "1.0.3", "description": "Recursively mkdir, like `mkdir -p`", "keywords": ["mkdir", "directory", "make dir", "make", "dir", "recursive", "native"], "date": "2020-01-24T21:00:54.556Z", "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}, {"username": "substack", "email": "substack@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/isaacs/node-mkdirp.git"}, "links": {"npm": "https://www.npmjs.com/package/mkdirp", "homepage": "https://github.com/isaacs/node-mkdirp#readme", "repository": "https://github.com/isaacs/node-mkdirp", "bugs": "https://github.com/isaacs/node-mkdirp/issues"}, "license": "MIT", "devDependencies": {"require-inject": "^1.4.4", "tap": "^14.10.6"}, "releases": [{"from": "2020-01-19T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 5}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 5}, {"from": "2019-08-22T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 5}, {"from": "2019-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 5}, {"from": "2018-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# mkdirp\n\nLike `mkdir -p`, but in Node.js!\n\nNow with a modern API and no\\* bugs!\n\n<small>\\* may contain some bugs</small>\n\n# example\n\n## pow.js\n\n```js\nconst mkdirp = require('mkdirp')\n\n// return value is a Promise resolving to the first directory created\nmkdirp('/tmp/foo/bar/baz').then(made =>\n  console.log(`made directories, starting with ${made}`))\n```\n\nOutput (where `/tmp/foo` already exists)\n\n```\nmade directories, starting with /tmp/foo/bar\n```\n\nOr, if you don't have time to wait around for promises:\n\n```js\nconst mkdirp = require('mkdirp')\n\n// return value is the first directory created\nconst made = mkdirp.sync('/tmp/foo/bar/baz')\nconsole.log(`made directories, starting with ${made}`)\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nconst mkdirp = require('mkdirp')\n```\n\n## mkdirp(dir, [opts]) -> Promise<String | undefined>\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `opts.mode`. If `opts` is a string or number, it will be\ntreated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0o777 &\n(~process.umask())`.\n\nPromise resolves to first directory `made` that had to be created, or\n`undefined` if everything already exists.  Promise rejects if any errors\nare encountered.  Note that, in the case of promise rejection, some\ndirectories _may_ have been created, as recursive directory creation is not\nan atomic operation.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdir(path, opts, cb)`\nand `opts.fs.stat(path, cb)`.\n\nYou can also override just one or the other of `mkdir` and `stat` by\npassing in `opts.stat` or `opts.mkdir`, or providing an `fs` option that\nonly overrides one of these.\n\n## mkdirp.sync(dir, opts) -> String|null\n\nSynchronously create a new directory and any necessary subdirectories at\n`dir` with octal permission string `opts.mode`. If `opts` is a string or\nnumber, it will be treated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0o777 &\n(~process.umask())`.\n\nReturns the first directory that had to be created, or undefined if\neverything already exists.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdirSync(path, mode)`\nand `opts.fs.statSync(path)`.\n\nYou can also override just one or the other of `mkdirSync` and `statSync`\nby passing in `opts.statSync` or `opts.mkdirSync`, or providing an `fs`\noption that only overrides one of these.\n\n## mkdirp.manual, mkdirp.manualSync\n\nUse the manual implementation (not the native one).  This is the default\nwhen the native implementation is not available or the stat/mkdir\nimplementation is overridden.\n\n## mkdirp.native, mkdirp.nativeSync\n\nUse the native implementation (not the manual one).  This is the default\nwhen the native implementation is available and stat/mkdir are not\noverridden.\n\n# implementation\n\nOn Node.js v10.12.0 and above, use the native `fs.mkdir(p,\n{recursive:true})` option, unless `fs.mkdir`/`fs.mkdirSync` has been\noverridden by an option.\n\n## native implementation\n\n- If the path is a root directory, then pass it to the underlying\n  implementation and return the result/error.  (In this case, it'll either\n  succeed or fail, but we aren't actually creating any dirs.)\n- Walk up the path statting each directory, to find the first path that\n  will be created, `made`.\n- Call `fs.mkdir(path, { recursive: true })` (or `fs.mkdirSync`)\n- If error, raise it to the caller.\n- Return `made`.\n\n## manual implementation\n\n- Call underlying `fs.mkdir` implementation, with `recursive: false`\n- If error:\n  - If path is a root directory, raise to the caller and do not handle it\n  - If ENOENT, mkdirp parent dir, store result as `made`\n  - stat(path)\n    - If error, raise original `mkdir` error\n    - If directory, return `made`\n    - Else, raise original `mkdir` error\n- else\n  - return `undefined` if a root dir, or `made` if set, or `path`\n\n## windows vs unix caveat\n\nOn Windows file systems, attempts to create a root directory (ie, a drive\nletter or root UNC path) will fail.  If the root directory exists, then it\nwill fail with `EPERM`.  If the root directory does not exist, then it will\nfail with `ENOENT`.\n\nOn posix file systems, attempts to create a root directory (in recursive\nmode) will succeed silently, as it is treated like just another directory\nthat already exists.  (In non-recursive mode, of course, it fails with\n`EEXIST`.)\n\nIn order to preserve this system-specific behavior (and because it's not as\nif we can create the parent of a root directory anyway), attempts to create\na root directory are passed directly to the `fs` implementation, and any\nerrors encountered are not handled.\n\n## native error caveat\n\nThe native implementation (as of at least Node.js v13.4.0) does not provide\nappropriate errors in some cases (see\n[nodejs/node#31481](https://github.com/nodejs/node/issues/31481) and\n[nodejs/node#28015](https://github.com/nodejs/node/issues/28015)).\n\nIn order to work around this issue, the native implementation will fall\nback to the manual implementation if an `ENOENT` error is encountered.\n\n# choosing a recursive mkdir implementation\n\nThere are a few to choose from!  Use the one that suits your needs best :D\n\n## use `fs.mkdir(path, {recursive: true}, cb)` if:\n\n- You wish to optimize performance even at the expense of other factors.\n- You don't need to know the first dir created.\n- You are ok with getting `ENOENT` as the error when some other problem is\n  the actual cause.\n- You can limit your platforms to Node.js v10.12 and above.\n- You're ok with using callbacks instead of promises.\n- You don't need/want a CLI.\n- You don't need to override the `fs` methods in use.\n\n## use this module (mkdirp 1.x) if:\n\n- You need to know the first directory that was created.\n- You wish to use the native implementation if available, but fall back\n  when it's not.\n- You prefer promise-returning APIs to callback-taking APIs.\n- You want more useful error messages than the native recursive mkdir\n  provides (at least as of Node.js v13.4), and are ok with re-trying on\n  `ENOENT` to achieve this.\n- You need (or at least, are ok with) a CLI.\n- You need to override the `fs` methods in use.\n\n## use [`make-dir`](http://npm.im/make-dir) if:\n\n- You do not need to know the first dir created (and wish to save a few\n  `stat` calls when using the native implementation for this reason).\n- You wish to use the native implementation if available, but fall back\n  when it's not.\n- You prefer promise-returning APIs to callback-taking APIs.\n- You are ok with occasionally getting `ENOENT` errors for failures that\n  are actually related to something other than a missing file system entry.\n- You don't need/want a CLI.\n- You need to override the `fs` methods in use.\n\n## use mkdirp 0.x if:\n\n- You need to know the first directory that was created.\n- You need (or at least, are ok with) a CLI.\n- You need to override the `fs` methods in use.\n- You're ok with using callbacks instead of promises.\n- You are not running on Windows, where the root-level ENOENT errors can\n  lead to infinite regress.\n- You think vinyl just sounds warmer and richer for some weird reason.\n- You are supporting truly ancient Node.js versions, before even the advent\n  of a `Promise` language primitive.  (Please don't.  You deserve better.)\n\n# cli\n\nThis package also ships with a `mkdirp` command.\n\n```\n$ mkdirp -h\n\nusage: mkdirp [DIR1,DIR2..] {OPTIONS}\n\n  Create each supplied directory including any necessary parent directories\n  that don't yet exist.\n\n  If the directory already exists, do nothing.\n\nOPTIONS are:\n\n  -m<mode>       If a directory needs to be created, set the mode as an octal\n  --mode=<mode>  permission string.\n\n  -v --version   Print the mkdirp version number\n\n  -h --help      Print this helpful banner\n\n  -p --print     Print the first directories created for each path provided\n\n  --manual       Use manual implementation, even if native is available\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\nto get the library locally, or\n\n```\nnpm install -g mkdirp\n```\n\nto get the command everywhere, or\n\n```\nnpx mkdirp ...\n```\n\nto run the command without installing it globally.\n\n# platform support\n\nThis module works on node v8, but only v10 and above are officially\nsupported, as Node v8 reached its LTS end of life 2020-01-01, which is in\nthe past, as of this writing.\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 2398389}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 15526645}, {"from": "2020-01-19T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 63286588}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 170040873}, {"from": "2019-08-22T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 338188547}, {"from": "2019-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 655705196}], "dependentsCount": 15758, "starsCount": 345}, "github": {"forkOf": "substack/node-mkdirp", "starsCount": 12, "forksCount": 1, "subscribersCount": 2, "issues": {"count": 5, "openCount": 0, "distribution": {"3600": 0, "10800": 1, "32400": 1, "97200": 1, "291600": 2, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 61}, {"username": "isaacs", "commitsCount": 30}, {"username": "MylesBorins", "commitsCount": 2}, {"username": "calvinmetcalf", "commitsCount": 2}, {"username": "dominictarr", "commitsCount": 1}, {"username": "doublerebel", "commitsCount": 1}, {"username": "smurthas", "commitsCount": 1}, {"username": "sqs", "commitsCount": 1}, {"username": "ulikoehler", "commitsCount": 1}], "commits": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 0}, {"from": "2020-01-19T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 18}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 18}, {"from": "2019-08-22T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 18}, {"from": "2019-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 18}]}, "source": {"files": {"readmeSize": 8507, "testsSize": 18802, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 369, "downloadsCount": 56680291, "downloadsAcceleration": 98868.25272070005, "dependentsCount": 15758}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.958917808219178, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8625391040163105, "detail": {"quality": 0.8275018357724344, "popularity": 0.755110996101275, "maintenance": 0.9999991561403829}}}
{"analyzedAt": "2020-02-10T13:59:06.500Z", "collected": {"metadata": {"name": "@mrmlnc/readdir-enhanced", "scope": "mrmlnc", "version": "2.2.1", "description": "fs.readdir with sync, async, and streaming APIs + filtering, recursion, absolute paths, etc.", "keywords": ["fs", "readdir", "stream", "event", "recursive", "deep", "filter", "absolute"], "date": "2018-02-13T17:22:19.584Z", "author": {"name": "James Messinger", "url": "http://bigstickcarpet.com"}, "publisher": {"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}, "maintainers": [{"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}], "repository": {"type": "git", "url": "git+https://github.com/bigstickcarpet/readdir-enhanced.git"}, "links": {"npm": "https://www.npmjs.com/package/%40mrmlnc%2Freaddir-enhanced", "homepage": "https://github.com/bigstickcarpet/readdir-enhanced", "repository": "https://github.com/bigstickcarpet/readdir-enhanced", "bugs": "https://github.com/bigstickcarpet/readdir-enhanced/issues"}, "license": "MIT", "dependencies": {"call-me-maybe": "^1.0.1", "glob-to-regexp": "^0.3.0"}, "devDependencies": {"chai": "^4.1.2", "codacy-coverage": "^2.0.3", "coveralls": "^3.0.0", "del": "^3.0.0", "eslint": "^4.15.0", "eslint-config-modular": "^4.1.1", "istanbul": "^0.4.5", "mkdirp": "^0.5.1", "mocha": "^4.1.0", "npm-check": "^5.5.2", "through2": "^2.0.3", "version-bump-prompt": "^4.0.0"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Enhanced `fs.readdir()`\n=======================\n\n> :warning: This is \u00abfork\u00bb for original `readdir-enhanced` package but with some monkey fixes.\n\n[![Build Status](https://api.travis-ci.org/BigstickCarpet/readdir-enhanced.svg?branch=master)](https://travis-ci.org/BigstickCarpet/readdir-enhanced)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/bigstickcarpet/readdir-enhanced?svg=true&branch=master&failingText=Windows%20build%20failing&passingText=Windows%20build%20passing)](https://ci.appveyor.com/project/BigstickCarpet/readdir-enhanced/branch/master)\n\n[![Coverage Status](https://coveralls.io/repos/github/BigstickCarpet/readdir-enhanced/badge.svg?branch=master)](https://coveralls.io/github/BigstickCarpet/readdir-enhanced?branch=master)\n[![Codacy Score](https://api.codacy.com/project/badge/Grade/178a817b6c864de7813fef457c0ed5ae)](https://www.codacy.com/public/jamesmessinger/readdir-enhanced)\n[![Inline docs](http://inch-ci.org/github/BigstickCarpet/readdir-enhanced.svg?branch=master&style=shields)](http://inch-ci.org/github/BigstickCarpet/readdir-enhanced)\n[![Dependencies](https://david-dm.org/BigstickCarpet/readdir-enhanced.svg)](https://david-dm.org/BigstickCarpet/readdir-enhanced)\n\n[![npm](https://img.shields.io/npm/v/readdir-enhanced.svg?maxAge=43200)](https://www.npmjs.com/package/readdir-enhanced)\n[![License](https://img.shields.io/npm/l/readdir-enhanced.svg?maxAge=2592000)](LICENSE)\n\n`readdir-enhanced` is a [backward-compatible](#backward-compatible) drop-in replacement for [`fs.readdir()`](https://nodejs.org/api/fs.html#fs_fs_readdir_path_options_callback) and [`fs.readdirSync()`](https://nodejs.org/api/fs.html#fs_fs_readdirsync_path_options) with tons of extra features ([filtering](#filter), [recursion](#deep), [absolute paths](#basepath), [stats](#stats), and more) as well as additional APIs for Promises, Streams, and EventEmitters.\n\n\nPick Your API\n-----------------\n`readdir-enhanced` has multiple APIs, so you can pick whichever one you prefer.  There are three main APIs:\n\n- **Synchronous API**<br>\naliases: `readdir.sync`, `readdir.readdirSync`<br>\nBlocks the thread until all directory contents are read, and then returns all the results.\n\n- **Async API**<br>\naliases: `readdir`, `readdir.async`, `readdir.readdirAsync`<br>\nReads the starting directory contents asynchronously and buffers all the results until all contents have been read. Supports callback or Promise syntax (see example below).\n\n- **Streaming API**<br>\naliases: `readdir.stream`, `readdir.readdirStream`<br>\nThe streaming API reads the starting directory asynchronously and returns the results in real-time as they are read. The results can be [piped](https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options) to other Node.js streams, or you can listen for specific events via the [EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter) interface. (see example below)\n\n```javascript\nvar readdir = require('readdir-enhanced');\nvar through2 = require('through2');\n\n// Synchronous API\nvar files = readdir.sync('my/directory');\n\n// Callback API\nreaddir.async('my/directory', function(err, files) { ... });\n\n// Promises API\nreaddir.async('my/directory')\n  .then(function(files) { ... })\n  .catch(function(err) { ... });\n\n// EventEmitter API\nreaddir.stream('my/directory')\n  .on('data', function(path) { ... })\n  .on('file', function(path) { ... })\n  .on('directory', function(path) { ... })\n  .on('symlink', function(path) { ... })\n  .on('error', function(err) { ... });\n\n// Streaming API\nvar stream = readdir.stream('my/directory')\n  .pipe(through2.obj(function(data, enc, next) {\n    console.log(data);\n    this.push(data);\n    next();\n  });\n```\n\n\n<a id=\"options\"></a>\nEnhanced Features\n-----------------\n`readdir-enhanced` adds several features to the built-in `fs.readdir()` function.  All of the enhanced features are opt-in, which makes `readdir-enhanced` [fully backward compatible by default](#backward-compatible).  You can enable any of the features by passing-in an `options` argument as the second parameter.\n\n\n<a id=\"deep\"></a>\n### Recursion\nBy default, `readdir-enhanced` will only return the top-level contents of the starting directory. But you can set the `deep` option to recursively traverse the subdirectories and return their contents as well.\n\n#### Crawl ALL subdirectories\n\nThe `deep` option can be set to `true` to traverse the entire directory structure.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\nreaddir('my/directory', {deep: true}, function(err, files) {\n  console.log(files);\n  // => subdir1\n  // => subdir1/file.txt\n  // => subdir1/subdir2\n  // => subdir1/subdir2/file.txt\n  // => subdir1/subdir2/subdir3\n  // => subdir1/subdir2/subdir3/file.txt\n});\n```\n\n#### Crawl to a specific depth\nThe `deep` option can be set to a number to only traverse that many levels deep.  For example, calling `readdir('my/directory', {deep: 2})` will return `subdir1/file.txt` and `subdir1/subdir2/file.txt`, but it _won't_ return `subdir1/subdir2/subdir3/file.txt`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\nreaddir('my/directory', {deep: 2}, function(err, files) {\n  console.log(files);\n  // => subdir1\n  // => subdir1/file.txt\n  // => subdir1/subdir2\n  // => subdir1/subdir2/file.txt\n  // => subdir1/subdir2/subdir3\n});\n```\n\n#### Crawl subdirectories by name\nFor simple use-cases, you can use a [regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) or a [glob pattern](https://github.com/isaacs/node-glob#glob-primer) to crawl only the directories whose path matches the pattern.  The path is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath).\n\n> **NOTE:** Glob patterns [_always_ use forward-slashes](https://github.com/isaacs/node-glob#windows), even on Windows. This _does not_ apply to regular expressions though. Regular expressions should use the appropraite path separator for the environment. Or, you can match both types of separators using `[\\\\/]`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Only crawl the \"lib\" and \"bin\" subdirectories\n// (notice that the \"node_modules\" subdirectory does NOT get crawled)\nreaddir('my/directory', {deep: /lib|bin/}, function(err, files) {\n  console.log(files);\n  // => bin\n  // => bin/cli.js\n  // => lib\n  // => lib/index.js\n  // => node_modules\n  // => package.json\n});\n```\n\n#### Custom recursion logic\nFor more advanced recursion, you can set the `deep` option to a function that accepts an [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object and returns a truthy value if the starting directory should be crawled.\n\n> **NOTE:** The [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object that's passed to the function has additional `path` and `depth` properties. The `path` is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath). The `depth` is the number of subdirectories beneath the base path (see [`options.deep`](#deep)).\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Crawl all subdirectories, except \"node_modules\"\nfunction ignoreNodeModules (stats) {\n  return stats.path.indexOf('node_modules') === -1;\n}\n\nreaddir('my/directory', {deep: ignoreNodeModules}, function(err, files) {\n  console.log(files);\n  // => bin\n  // => bin/cli.js\n  // => lib\n  // => lib/index.js\n  // => node_modules\n  // => package.json\n});\n```\n\n\n<a id=\"filter\"></a>\n### Filtering\nThe `filter` option lets you limit the results based on any criteria you want.\n\n#### Filter by name\nFor simple use-cases, you can use a [regular expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) or a [glob pattern](https://github.com/isaacs/node-glob#glob-primer) to filter items by their path.  The path is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath).\n\n> **NOTE:** Glob patterns [_always_ use forward-slashes](https://github.com/isaacs/node-glob#windows), even on Windows. This _does not_ apply to regular expressions though. Regular expressions should use the appropraite path separator for the environment. Or, you can match both types of separators using `[\\\\/]`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Find all .txt files\nreaddir('my/directory', {filter: '*.txt'});\n\n// Find all package.json files\nreaddir('my/directory', {filter: '**/package.json', deep: true});\n\n// Find everything with at least one number in the name\nreaddir('my/directory', {filter: /\\d+/});\n```\n\n#### Custom filtering logic\nFor more advanced filtering, you can specify a filter function that accepts an [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object and returns a truthy value if the item should be included in the results.\n\n> **NOTE:** The [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) object that's passed to the filter function has additional `path` and `depth` properties. The `path` is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath). The `depth` is the number of subdirectories beneath the base path (see [`options.deep`](#deep)).\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Only return file names containing an underscore\nfunction myFilter(stats) {\n  return stats.isFile() && stats.path.indexOf('_') >= 0;\n}\n\nreaddir('my/directory', {filter: myFilter}, function(err, files) {\n  console.log(files);\n  // => __myFile.txt\n  // => my_other_file.txt\n  // => img_1.jpg\n  // => node_modules\n});\n```\n\n\n<a id=\"basepath\"></a>\n### Base Path\nBy default all `readdir-enhanced` functions return paths that are relative to the starting directory. But you can use the `basePath` option to customize this.  The `basePath` will be prepended to all of the returned paths.  One common use-case for this is to set `basePath` to the absolute path of the starting directory, so that all of the returned paths will be absolute.\n\n```javascript\nvar readdir = require('readdir-enhanced');\nvar path = require('path');\n\n// Get absolute paths\nvar absPath = path.resolve('my/dir');\nreaddir('my/directory', {basePath: absPath}, function(err, files) {\n  console.log(files);\n  // => /absolute/path/to/my/directory/file1.txt\n  // => /absolute/path/to/my/directory/file2.txt\n  // => /absolute/path/to/my/directory/subdir\n});\n\n// Get paths relative to the working directory\nreaddir('my/directory', {basePath: 'my/directory'}, function(err, files) {\n  console.log(files);\n  // => my/directory/file1.txt\n  // => my/directory/file2.txt\n  // => my/directory/subdir\n});\n```\n\n\n<a id=\"sep\"></a>\n### Path Separator\nBy default, `readdir-enhanced` uses the correct path separator for your OS (`\\` on Windows, `/` on Linux & MacOS). But you can set the `sep` option to any separator character(s) that you want to use instead.  This is usually used to ensure consistent path separators across different OSes.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Always use Windows path separators\nreaddir('my/directory', {sep: '\\\\', deep: true}, function(err, files) {\n  console.log(files);\n  // => subdir1\n  // => subdir1\\file.txt\n  // => subdir1\\subdir2\n  // => subdir1\\subdir2\\file.txt\n  // => subdir1\\subdir2\\subdir3\n  // => subdir1\\subdir2\\subdir3\\file.txt\n});\n```\n\n<a id=\"fs\"></a>\n### Custom FS methods\nBy default, `readdir-enhanced` uses the default [Node.js FileSystem module](https://nodejs.org/api/fs.html) for methods like `fs.stat`, `fs.readdir` and `fs.lstat`. But in some situations, you can want to use your own FS methods (FTP, SSH, remote drive and etc). So you can provide your own implementation of FS methods by setting `options.fs` or specific methods, such as `options.fs.stat`.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\nfunction myCustomReaddirMethod(dir, callback) {\n  callback(null, ['__myFile.txt']);\n}\n\nvar options = {\n  fs: {\n    readdir: myCustomReaddirMethod\n  }\n};\n\nreaddir('my/directory', options, function(err, files) {\n  console.log(files);\n  // => __myFile.txt\n});\n```\n\n<a id=\"stats\"></a>\nGet `fs.Stats` objects instead of strings\n------------------------\nAll of the `readdir-enhanced` functions listed above return an array of strings (paths). But in some situations, the path isn't enough information.  So, `readdir-enhanced` provides alternative versions of each function, which return an array of [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) objects instead of strings.  The `fs.Stats` object contains all sorts of useful information, such as the size, the creation date/time, and helper methods such as `isFile()`, `isDirectory()`, `isSymbolicLink()`, etc.\n\n> **NOTE:** The [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats) objects that are returned also have additional `path` and `depth` properties. The `path` is relative to the starting directory by default, but you can customize this via [`options.basePath`](#basepath). The `depth` is the number of subdirectories beneath the base path (see [`options.deep`](#deep)).\n\nTo get `fs.Stats` objects instead of strings, just add the word \"Stat\" to the function name.  As with the normal functions, each one is aliased (e.g. `readdir.async.stat` is the same as `readdir.readdirAsyncStat`), so you can use whichever naming style you prefer.\n\n```javascript\nvar readdir = require('readdir-enhanced');\n\n// Synchronous API\nvar stats = readdir.sync.stat('my/directory');\nvar stats = readdir.readdirSyncStat('my/directory');\n\n// Async API\nreaddir.async.stat('my/directory', function(err, stats) { ... });\nreaddir.readdirAsyncStat('my/directory', function(err, stats) { ... });\n\n// Streaming API\nreaddir.stream.stat('my/directory')\n  .on('data', function(stat) { ... })\n  .on('file', function(stat) { ... })\n  .on('directory', function(stat) { ... })\n  .on('symlink', function(stat) { ... });\n\nreaddir.readdirStreamStat('my/directory')\n  .on('data', function(stat) { ... })\n  .on('file', function(stat) { ... })\n  .on('directory', function(stat) { ... })\n  .on('symlink', function(stat) { ... });\n\n```\n\n<a id=\"backward-compatible\"></a>\nBackward Compatible\n--------------------\n`readdir-enhanced` is fully backward-compatible with Node.js' built-in `fs.readdir()` and `fs.readdirSync()` functions, so you can use it as a drop-in replacement in existing projects without affecting existing functionality, while still being able to use the enhanced features as needed.\n\n```javascript\nvar readdir = require('readdir-enhanced');\nvar readdirSync = readdir.sync;\n\n// Use it just like Node's built-in fs.readdir function\nreaddir('my/directory', function(err, files) { ... });\n\n// Use it just like Node's built-in fs.readdirSync function\nvar files = readdirSync('my/directory');\n```\n\n\n\nContributing\n--------------------------\nI welcome any contributions, enhancements, and bug-fixes.  [File an issue](https://github.com/BigstickCarpet/readdir-enhanced/issues) on GitHub and [submit a pull request](https://github.com/BigstickCarpet/readdir-enhanced/pulls).\n\n#### Building\nTo build the project locally on your computer:\n\n1. __Clone this repo__<br>\n`git clone https://github.com/bigstickcarpet/readdir-enhanced.git`\n\n2. __Install dependencies__<br>\n`npm install`\n\n3. __Run the tests__<br>\n`npm test`\n\n\n\nLicense\n--------------------------\n`readdir-enhanced` is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want."}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 203826}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 4628172}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 18542202}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 51819683}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 100612942}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 176891170}], "dependentsCount": 1, "starsCount": 0}}, "evaluation": {"quality": {"carefulness": 0.41000000000000003, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 17273227.666666668, "downloadsAcceleration": 51941.87598934551, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.21648674256537026, "detail": {"quality": 0.23618366555805723, "popularity": 0.36635536578981476, "maintenance": 0.04973504249005132}}}
{"analyzedAt": "2020-03-04T06:22:40.494Z", "collected": {"metadata": {"name": "ms", "scope": "unscoped", "version": "2.1.2", "description": "Tiny millisecond conversion utility", "date": "2019-06-06T17:31:55.859Z", "publisher": {"username": "styfle", "email": "steven@ceriously.com"}, "maintainers": [{"username": "cleishm", "email": "chris@leishman.org"}, {"username": "nazarenooviedo", "email": "nazareno@basement.studio"}, {"username": "maxleiter", "email": "maxwell.leiter@gmail.com"}, {"username": "chibicode", "email": "shu@chibicode.com"}, {"username": "gielcobben", "email": "g.cobben@gmail.com"}, {"username": "jaredpalmer", "email": "jared@palmer.net"}, {"username": "jkrems", "email": "jan.krems@gmail.com"}, {"username": "prateekbh", "email": "prateek89born@gmail.com"}, {"username": "kikobeats", "email": "josefrancisco.verdu@gmail.com"}, {"username": "gmonaco", "email": "gbmonaco@google.com"}, {"username": "housseindjirdeh", "email": "houssein.djirdeh@gmail.com"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "spanicker", "email": "shubhie@gmail.com"}, {"username": "keanulee", "email": "npm@keanulee.com"}, {"username": "atcastle", "email": "atcastle@gmail.com"}, {"username": "janicklas-ralph", "email": "janicklasralph036@gmail.com"}, {"username": "skllcrn", "email": "skllcrn@zeit.co"}, {"username": "paco", "email": "pvco.coursey@gmail.com"}, {"username": "guybedford", "email": "guybedford@gmail.com"}, {"username": "ragojose", "email": "ragojosefrancisco@gmail.com"}, {"username": "williamli", "email": "williamli@bbi.io"}, {"username": "msweeneydev", "email": "mail@msweeneydev.com"}, {"username": "coetry", "email": "allenhai03@gmail.com"}, {"username": "rabaut", "email": "rabautse@gmail.com"}, {"username": "lfades", "email": "luisito453@gmail.com"}, {"username": "mfix22", "email": "mrfix84@gmail.com"}, {"username": "ijjk", "email": "jj@jjsweb.site"}, {"username": "arzafran", "email": "franco@basement.studio"}, {"username": "caarlos0", "email": "caarlos0@gmail.com"}, {"username": "umegaya", "email": "iyatomi@gmail.com"}, {"username": "sarupbanskota", "email": "sbanskota08@gmail.com"}, {"username": "timer", "email": "timer150@gmail.com"}, {"username": "anatrajkovska", "email": "ana.trajkovska2015@gmail.com"}, {"username": "paulogdm", "email": "paulogdemitri@gmail.com"}, {"username": "andybitz", "email": "artzbitz@gmail.com"}, {"username": "alexaltea", "email": "alexandro@phi.nz"}, {"username": "mglagola", "email": "mark.glagola@gmail.com"}, {"username": "lucleray", "email": "luc.leray@gmail.com"}, {"username": "zeit-bot", "email": "team@zeit.co"}, {"username": "styfle", "email": "steven@ceriously.com"}, {"username": "juancampa", "email": "juancampa@gmail.com"}, {"username": "dav-is", "email": "mail@connordav.is"}, {"username": "quietshu", "email": "ds303077135@gmail.com"}, {"username": "fivepointseven", "email": "fivepointseven@icloud.com"}, {"username": "joecohens", "email": "joecohenr@gmail.com"}, {"username": "codetheory", "email": "thecodetheory@gmail.com"}, {"username": "matheuss", "email": "me@matheus.top"}, {"username": "arunoda", "email": "arunoda.susiripala@gmail.com"}, {"username": "igorklopov", "email": "igor@klopov.com"}, {"username": "leo", "email": "mindrun@icloud.com"}, {"username": "nkzawa", "email": "naoyuki.kanezawa@gmail.com"}, {"username": "tootallnate", "email": "nathan@tootallnate.net"}, {"username": "rauchg", "email": "rauchg@gmail.com"}, {"username": "timneutkens", "email": "tim@timneutkens.nl"}, {"username": "javivelasco", "email": "javier.velasco86@gmail.com"}, {"username": "iamevilrabbit", "email": "hello@evilrabb.it"}], "repository": {"type": "git", "url": "git+https://github.com/zeit/ms.git"}, "links": {"npm": "https://www.npmjs.com/package/ms", "homepage": "https://github.com/zeit/ms#readme", "repository": "https://github.com/zeit/ms", "bugs": "https://github.com/zeit/ms/issues"}, "license": "MIT", "devDependencies": {"eslint": "4.12.1", "expect.js": "0.3.1", "husky": "0.14.3", "lint-staged": "5.0.0", "mocha": "4.0.1"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/zeit)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\nms('-3 days') // -259200000\nms('-1h')     // -3600000\nms('-200')    // -200\n```\n\n### Convert from Milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(-3 * 60000)        // \"-3m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time Format Written-Out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [Node.js](https://nodejs.org) and in the browser\n- If a number is supplied to `ms`, a string with a unit is returned\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`)\n- If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned\n\n## Related Packages\n\n- [ms.macro](https://github.com/knpwrs/ms.macro) - Run `ms` as a macro at build-time.\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, Node.js will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 8347106}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 45157304}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 192175179}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 501855062}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 978747770}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1722825813}], "dependentsCount": 1265, "starsCount": 113}, "github": {"homepage": "https://npmjs.com/ms", "starsCount": 2689, "forksCount": 177, "subscribersCount": 31, "issues": {"count": 127, "openCount": 16, "distribution": {"3600": 21, "10800": 5, "32400": 8, "97200": 8, "291600": 4, "874800": 7, "2624400": 12, "7873200": 13, "23619600": 11, "70858800": 23, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "leo", "commitsCount": 46}, {"username": "tj", "commitsCount": 17}, {"username": "rauchg", "commitsCount": 14}, {"username": "greenkeeper[bot]", "commitsCount": 9}, {"username": "Swatinem", "commitsCount": 4}, {"username": "ArtskydJ", "commitsCount": 2}, {"username": "gobwas", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "yuler", "commitsCount": 2}, {"username": "7ma7X", "commitsCount": 1}, {"username": "EsrefDurna", "commitsCount": 1}, {"username": "Jokero", "commitsCount": 1}, {"username": "LeoIannacone", "commitsCount": 1}, {"username": "Wizek", "commitsCount": 1}, {"username": "adoyle-h", "commitsCount": 1}, {"username": "bbonamin", "commitsCount": 1}, {"username": "binki", "commitsCount": 1}, {"username": "caseywebdev", "commitsCount": 1}, {"username": "eknkc", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "jfmengels", "commitsCount": 1}, {"username": "juliangruber", "commitsCount": 1}, {"username": "karenyavine", "commitsCount": 1}, {"username": "knpwrs", "commitsCount": 1}, {"username": "nathankleyn", "commitsCount": 1}, {"username": "shime", "commitsCount": 1}, {"username": "thevtm", "commitsCount": 1}, {"username": "tubalmartin", "commitsCount": 1}, {"username": "yoavmmn", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2037, "testsSize": 7838}, "badges": [{"urls": {"original": "https://travis-ci.org/zeit/ms.svg?branch=master", "service": "https://api.travis-ci.org/zeit/ms.svg?branch=master", "shields": "https://img.shields.io/travis/zeit/ms/master.svg", "content": "https://img.shields.io/travis/zeit/ms/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 3039, "downloadsCount": 167285020.66666666, "downloadsAcceleration": 600796.3675038051, "dependentsCount": 1265}, "maintenance": {"releasesFrequency": 0.7745719178082191, "commitsFrequency": 0.03452054794520548, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7365583126521129, "detail": {"quality": 0.9547045235275585, "popularity": 0.7565225326421696, "maintenance": 0.529611626197389}}}
{"analyzedAt": "2020-02-21T18:07:35.823Z", "collected": {"metadata": {"name": "mute-stream", "scope": "unscoped", "version": "0.0.8", "description": "Bytes go in, but they don't come out (when muted).", "keywords": ["mute", "stream", "pipe"], "date": "2018-12-28T05:23:49.143Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "ruyadorno", "email": "ruyadorno@hotmail.com"}, {"username": "mikemimik", "email": "mike@mikecorp.ca"}, {"username": "claudiahdz", "email": "cghr1990@gmail.com"}, {"username": "darcyclarke", "email": "darcy@darcyclarke.me"}, {"username": "adam_baldwin", "email": "evilpacket@gmail.com"}, {"username": "ahmadnassri", "email": "ahmad@ahmadnassri.com"}, {"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/mute-stream.git"}, "links": {"npm": "https://www.npmjs.com/package/mute-stream", "homepage": "https://github.com/isaacs/mute-stream#readme", "repository": "https://github.com/isaacs/mute-stream", "bugs": "https://github.com/isaacs/mute-stream/issues"}, "license": "ISC", "devDependencies": {"tap": "^12.1.1"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 1}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# mute-stream\n\nBytes go in, but they don't come out (when muted).\n\nThis is a basic pass-through stream, but when muted, the bytes are\nsilently dropped, rather than being passed through.\n\n## Usage\n\n```javascript\nvar MuteStream = require('mute-stream')\n\nvar ms = new MuteStream(options)\n\nms.pipe(process.stdout)\nms.write('foo') // writes 'foo' to stdout\nms.mute()\nms.write('bar') // does not write 'bar'\nms.unmute()\nms.write('baz') // writes 'baz' to stdout\n\n// can also be used to mute incoming data\nvar ms = new MuteStream\ninput.pipe(ms)\n\nms.on('data', function (c) {\n  console.log('data: ' + c)\n})\n\ninput.emit('data', 'foo') // logs 'foo'\nms.mute()\ninput.emit('data', 'bar') // does not log 'bar'\nms.unmute()\ninput.emit('data', 'baz') // logs 'baz'\n```\n\n## Options\n\nAll options are optional.\n\n* `replace` Set to a string to replace each character with the\n  specified string when muted.  (So you can show `****` instead of the\n  password, for example.)\n\n* `prompt` If you are using a replacement char, and also using a\n  prompt with a readline stream (as for a `Password: *****` input),\n  then specify what the prompt is so that backspace will work\n  properly.  Otherwise, pressing backspace will overwrite the prompt\n  with the replacement character, which is weird.\n\n## ms.mute()\n\nSet `muted` to `true`.  Turns `.write()` into a no-op.\n\n## ms.unmute()\n\nSet `muted` to `false`\n\n## ms.isTTY\n\nTrue if the pipe destination is a TTY, or if the incoming pipe source is\na TTY.\n\n## Other stream methods...\n\nThe other standard readable and writable stream methods are all\navailable.  The MuteStream object acts as a facade to its pipe source\nand destination."}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2794557}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 14441914}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 60862531}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 154402782}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 295978623}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 525927981}], "dependentsCount": 97, "starsCount": 2}, "github": {"starsCount": 37, "forksCount": 16, "subscribersCount": 29, "issues": {"count": 13, "openCount": 6, "distribution": {"3600": 0, "10800": 1, "32400": 1, "97200": 1, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 4, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 22}, {"username": "alex-seville", "commitsCount": 1}, {"username": "limulus", "commitsCount": 1}, {"username": "tmpfs", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 1653, "testsSize": 4006}}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 88, "downloadsCount": 51467594, "downloadsAcceleration": 197819.89012557082, "dependentsCount": 97}, "maintenance": {"releasesFrequency": 0.29897260273972603, "commitsFrequency": 0, "openIssues": 0.5641025641025641, "issuesDistribution": 0}}, "score": {"final": 0.5559505276151057, "detail": {"quality": 0.7237608315858992, "popularity": 0.5472348538930665, "maintenance": 0.4208287979336076}}}
{"analyzedAt": "2020-03-01T19:41:11.077Z", "collected": {"metadata": {"name": "nanomatch", "scope": "unscoped", "version": "1.2.13", "description": "Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)", "keywords": ["bash", "expand", "expansion", "expression", "file", "files", "filter", "find", "glob", "globbing", "globs", "globstar", "match", "matcher", "matches", "matching", "micromatch", "minimatch", "multimatch", "nanomatch", "path", "pattern", "patterns", "regex", "regexp", "regular", "shell", "wildcard"], "date": "2018-06-27T13:02:41.391Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Devon Govett", "url": "http://badassjs.com"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/nanomatch.git"}, "links": {"npm": "https://www.npmjs.com/package/nanomatch", "homepage": "https://github.com/micromatch/nanomatch", "repository": "https://github.com/micromatch/nanomatch", "bugs": "https://github.com/micromatch/nanomatch/issues"}, "license": "MIT", "dependencies": {"arr-diff": "^4.0.0", "array-unique": "^0.3.2", "define-property": "^2.0.2", "extend-shallow": "^3.0.2", "fragment-cache": "^0.2.1", "is-windows": "^1.0.2", "kind-of": "^6.0.2", "object.pick": "^1.3.0", "regex-not": "^1.0.0", "snapdragon": "^0.8.1", "to-regex": "^3.0.1"}, "devDependencies": {"bash-match": "^1.0.2", "for-own": "^1.0.0", "gulp": "^3.9.1", "gulp-format-md": "^1.0.0", "gulp-istanbul": "^1.1.3", "gulp-mocha": "^5.0.0", "helper-changelog": "^0.3.0", "minimatch": "^3.0.4", "minimist": "^1.2.0", "mocha": "^3.5.3", "multimatch": "^2.1.0"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# nanomatch [![NPM version](https://img.shields.io/npm/v/nanomatch.svg?style=flat)](https://www.npmjs.com/package/nanomatch) [![NPM monthly downloads](https://img.shields.io/npm/dm/nanomatch.svg?style=flat)](https://npmjs.org/package/nanomatch) [![NPM total downloads](https://img.shields.io/npm/dt/nanomatch.svg?style=flat)](https://npmjs.org/package/nanomatch) [![Linux Build Status](https://img.shields.io/travis/micromatch/nanomatch.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/nanomatch) [![Windows Build Status](https://img.shields.io/appveyor/ci/micromatch/nanomatch.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/micromatch/nanomatch)\n\n> Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [What is nanomatch?](#what-is-nanomatch)\n- [Getting started](#getting-started)\n  * [Installing nanomatch](#installing-nanomatch)\n  * [Usage](#usage)\n- [Documentation](#documentation)\n  * [Escaping](#escaping)\n- [API](#api)\n- [Options](#options)\n  * [options.basename](#optionsbasename)\n  * [options.bash](#optionsbash)\n  * [options.cache](#optionscache)\n  * [options.dot](#optionsdot)\n  * [options.failglob](#optionsfailglob)\n  * [options.ignore](#optionsignore)\n  * [options.matchBase](#optionsmatchbase)\n  * [options.nocase](#optionsnocase)\n  * [options.nodupes](#optionsnodupes)\n  * [options.noglobstar](#optionsnoglobstar)\n  * [options.nonegate](#optionsnonegate)\n  * [options.nonull](#optionsnonull)\n  * [options.nullglob](#optionsnullglob)\n  * [options.slash](#optionsslash)\n  * [options.star](#optionsstar)\n  * [options.snapdragon](#optionssnapdragon)\n  * [options.sourcemap](#optionssourcemap)\n  * [options.unescape](#optionsunescape)\n  * [options.unixify](#optionsunixify)\n- [Features](#features)\n- [Bash expansion libs](#bash-expansion-libs)\n- [Benchmarks](#benchmarks)\n  * [Running benchmarks](#running-benchmarks)\n  * [Nanomatch vs. Minimatch vs. Multimatch](#nanomatch-vs-minimatch-vs-multimatch)\n- [About](#about)\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save nanomatch\n```\n\n<details>\n<summary><strong>Release history</strong></summary>\n\n## History\n\n### key\n\nChangelog entries are classified using the following labels _(from [keep-a-changelog](https://github.com/olivierlacan/keep-a-changelog)_):\n\n* `added`: for new features\n* `changed`: for changes in existing functionality\n* `deprecated`: for once-stable features removed in upcoming releases\n* `removed`: for deprecated features removed in this release\n* `fixed`: for any bug fixes\n* `bumped`: updated dependencies, only minor or higher will be listed.\n\n### [1.1.0](https://github.com/micromatch/nanomatch/compare/1.0.4...1.1.0) - 2017-04-11\n\n**Fixed**\n\n* adds support for unclosed quotes\n\n**Added**\n\n* adds support for `options.noglobstar`\n\n### [1.0.4](https://github.com/micromatch/nanomatch/compare/1.0.3...1.0.4) - 2017-04-06\n\nHousekeeping updates. Adds documentation section about escaping, cleans up utils.\n\n### [1.0.3](https://github.com/micromatch/nanomatch/compare/1.0.1...1.0.3) - 2017-04-06\n\nThis release includes fixes for windows path edge cases and other improvements for stricter adherence to bash spec.\n\n**Fixed**\n\n* More windows path edge cases\n\n**Added**\n\n* Support for bash-like quoted strings for escaping sequences of characters, such as `foo/\"**\"/bar` where `**` should be matched literally and not evaluated as special characters.\n\n### [1.0.1](https://github.com/micromatch/nanomatch/compare/1.0.0...1.0.1) - 2016-12-12\n\n**Added**\n\n* Support for windows path edge cases where backslashes are used in brackets or other unusual combinations.\n\n### [1.0.0](https://github.com/micromatch/nanomatch/compare/0.1.0...1.0.0) - 2016-12-12\n\nStable release.\n\n### [0.1.0] - 2016-10-08\n\nFirst release.\n\n</details>\n\n## What is nanomatch?\n\nNanomatch is a fast and accurate glob matcher with full support for standard Bash glob features, including the following \"metacharacters\": `*`, `**`, `?` and `[...]`.\n\n**Learn more**\n\n* [Getting started](#getting-started): learn how to install and begin using nanomatch\n* [Features](#features): jump to info about supported patterns, and a glob matching reference\n* [API documentation](#api): jump to available options and methods\n* [Unit tests](test): visit unit tests. there is no better way to learn a code library than spending time the unit tests. Nanomatch has 36,000 unit tests - go become a glob matching ninja!\n\n<details>\n<summary><strong>How is this different?</strong></summary>\n\n**Speed and accuracy**\n\nNanomatch uses [snapdragon](https://github.com/jonschlinkert/snapdragon) for parsing and compiling globs, which results in:\n\n* Granular control over the entire conversion process in a way that is easy to understand, reason about, and customize.\n* Faster matching, from a combination of optimized glob patterns and (optional) caching.\n* Much greater accuracy than minimatch. In fact, nanomatch passes _all of the spec tests_ from bash, including some that bash still fails. However, since there is no real specification for globs, if you encounter a pattern that yields unexpected match results [after researching previous issues](../../issues), [please let us know](../../issues/new).\n\n**Basic globbing only**\n\nNanomatch supports [basic globbing only](#features), which is limited to `*`, `**`, `?` and regex-like brackets.\n\nIf you need support for the other [bash \"expansion\" types](#bash-expansion-libs) (in addition to the wildcard matching provided by nanomatch), consider using [micromatch](https://github.com/micromatch/micromatch) instead. _(micromatch >=3.0.0  uses the nanomatch parser and compiler for basic glob matching)_\n\n</details>\n\n## Getting started\n\n### Installing nanomatch\n\n**Install with [yarn](https://yarnpkg.com/)**\n\n```sh\n$ yarn add nanomatch\n```\n\n**Install with [npm](https://npmjs.com)**\n\n```sh\n$ npm install nanomatch\n```\n\n### Usage\n\nAdd nanomatch to your project using node's `require()` system:\n\n```js\nvar nanomatch = require('nanomatch');\n\n// the main export is a function that takes an array of strings to match\n// and a string or array of patterns to use for matching\nnanomatch(list, patterns[, options]);\n```\n\n**Params**\n\n* `list` **{String|Array}**: List of strings to perform matches against. This is often a list of file paths.\n* `patterns` **{String|Array}**: One or more [glob paterns](#features) to use for matching.\n* `options` **{Object}**: Any [supported options](#options) may be passed\n\n**Examples**\n\n```js\nvar nm = require('nanomatch');\nconsole.log(nm(['a', 'b/b', 'c/c/c'], '*'));\n//=> ['a']\n\nconsole.log(nm(['a', 'b/b', 'c/c/c'], '*/*'));\n//=> ['b/b']\n\nconsole.log(nm(['a', 'b/b', 'c/c/c'], '**'));\n//=> ['a', 'b/b', 'c/c/c']\n```\n\nSee the [API documentation](#api) for available methods and [options](https://github.com/einaros/options.js).\n\n## Documentation\n\n### Escaping\n\n_Backslashes and quotes_ can be used to escape characters, forcing nanomatch to regard those characters as a literal characters.\n\n**Backslashes**\n\nUse backslashes to escape single characters. For example, the following pattern would match `foo/*/bar` exactly:\n\n```js\n'foo/\\*/bar'\n```\n\nThe following pattern would match `foo/` followed by a literal `*`, followed by zero or more of any characters besides `/`, followed by `/bar`.\n\n```js\n'foo/\\**/bar'\n```\n\n**Quoted strings**\n\nUse single or double quotes to escape sequences of characters. For example, the following patterns would match `foo/**/bar` exactly:\n\n```js\n'foo/\"**\"/bar'\n'foo/\\'**\\'/bar'\n\"foo/'**'/bar\"\n```\n\n**Matching literal quotes**\n\nIf you need to match quotes literally, you can escape them as well. For example, the following will match `foo/\"*\"/bar`, `foo/\"a\"/bar`, `foo/\"b\"/bar`, or `foo/\"c\"/bar`:\n\n```js\n'foo/\\\\\"*\\\\\"/bar'\n```\n\nAnd the following will match `foo/'*'/bar`, `foo/'a'/bar`, `foo/'b'/bar`, or `foo/'c'/bar`:\n\n```js\n'foo/\\\\\\'*\\\\\\'/bar'\n```\n\n## API\n\n### [nanomatch](index.js#L40)\n\nThe main function takes a list of strings and one or more glob patterns to use for matching.\n\n**Params**\n\n* `list` **{Array}**: A list of strings to match\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm(list, patterns[, options]);\n\nconsole.log(nm(['a.js', 'a.txt'], ['*.js']));\n//=> [ 'a.js' ]\n```\n\n### [.match](index.js#L106)\n\nSimilar to the main function, but `pattern` must be a string.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of matches\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.match(list, pattern[, options]);\n\nconsole.log(nm.match(['a.a', 'a.aa', 'a.b', 'a.c'], '*.a'));\n//=> ['a.a', 'a.aa']\n```\n\n### [.isMatch](index.js#L167)\n\nReturns true if the specified `string` matches the given glob `pattern`.\n\n**Params**\n\n* `string` **{String}**: String to match\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if the string matches the glob pattern.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.isMatch(string, pattern[, options]);\n\nconsole.log(nm.isMatch('a.a', '*.a'));\n//=> true\nconsole.log(nm.isMatch('a.b', '*.a'));\n//=> false\n```\n\n### [.some](index.js#L205)\n\nReturns true if some of the elements in the given `list` match any of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test. Returns as soon as the first match is found.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.some(list, patterns[, options]);\n\nconsole.log(nm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// true\nconsole.log(nm.some(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.every](index.js#L243)\n\nReturns true if every element in the given `list` matches at least one of the given glob `patterns`.\n\n**Params**\n\n* `list` **{String|Array}**: The string or array of strings to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.every(list, patterns[, options]);\n\nconsole.log(nm.every('foo.js', ['foo.js']));\n// true\nconsole.log(nm.every(['foo.js', 'bar.js'], ['*.js']));\n// true\nconsole.log(nm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n// false\nconsole.log(nm.every(['foo.js'], ['*.js', '!foo.js']));\n// false\n```\n\n### [.any](index.js#L277)\n\nReturns true if **any** of the given glob `patterns` match the specified `string`.\n\n**Params**\n\n* `str` **{String|Array}**: The string to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.any(string, patterns[, options]);\n\nconsole.log(nm.any('a.a', ['b.*', '*.a']));\n//=> true\nconsole.log(nm.any('a.a', 'b.*'));\n//=> false\n```\n\n### [.all](index.js#L325)\n\nReturns true if **all** of the given `patterns` match the specified string.\n\n**Params**\n\n* `str` **{String|Array}**: The string to test.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.all(string, patterns[, options]);\n\nconsole.log(nm.all('foo.js', ['foo.js']));\n// true\n\nconsole.log(nm.all('foo.js', ['*.js', '!foo.js']));\n// false\n\nconsole.log(nm.all('foo.js', ['*.js', 'foo.js']));\n// true\n\nconsole.log(nm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n// true\n```\n\n### [.not](index.js#L359)\n\nReturns a list of strings that _**do not match any**_ of the given `patterns`.\n\n**Params**\n\n* `list` **{Array}**: Array of strings to match.\n* `patterns` **{String|Array}**: One or more glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Array}**: Returns an array of strings that **do not match** the given patterns.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.not(list, patterns[, options]);\n\nconsole.log(nm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n//=> ['b.b', 'c.c']\n```\n\n### [.contains](index.js#L394)\n\nReturns true if the given `string` contains the given pattern. Similar to [.isMatch](#isMatch) but the pattern can match any part of the string.\n\n**Params**\n\n* `str` **{String}**: The string to match.\n* `patterns` **{String|Array}**: Glob pattern to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns true if the patter matches any part of `str`.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.contains(string, pattern[, options]);\n\nconsole.log(nm.contains('aa/bb/cc', '*b'));\n//=> true\nconsole.log(nm.contains('aa/bb/cc', '*d'));\n//=> false\n```\n\n### [.matchKeys](index.js#L450)\n\nFilter the keys of the given object with the given `glob` pattern and `options`. Does not attempt to match nested keys. If you need this feature, use [glob-object](https://github.com/jonschlinkert/glob-object) instead.\n\n**Params**\n\n* `object` **{Object}**: The object with keys to filter.\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Object}**: Returns an object with only keys that match the given patterns.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.matchKeys(object, patterns[, options]);\n\nvar obj = { aa: 'a', ab: 'b', ac: 'c' };\nconsole.log(nm.matchKeys(obj, '*b'));\n//=> { ab: 'b' }\n```\n\n### [.matcher](index.js#L479)\n\nReturns a memoized matcher function from the given glob `pattern` and `options`. The returned function takes a string to match as its only argument and returns true if the string is a match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed.\n* `returns` **{Function}**: Returns a matcher function.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.matcher(pattern[, options]);\n\nvar isMatch = nm.matcher('*.!(*a)');\nconsole.log(isMatch('a.a'));\n//=> false\nconsole.log(isMatch('a.b'));\n//=> true\n```\n\n### [.capture](index.js#L560)\n\nReturns an array of matches captured by `pattern` in `string, or`null` if the pattern did not match.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern to use for matching.\n* `string` **{String}**: String to match\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed\n* `returns` **{Boolean}**: Returns an array of captures if the string matches the glob pattern, otherwise `null`.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.capture(pattern, string[, options]);\n\nconsole.log(nm.capture('test/*.js', 'test/foo.js'));\n//=> ['foo']\nconsole.log(nm.capture('test/*.js', 'foo/bar.css'));\n//=> null\n```\n\n### [.makeRe](index.js#L595)\n\nCreate a regular expression from the given glob `pattern`.\n\n**Params**\n\n* `pattern` **{String}**: A glob pattern to convert to regex.\n* `options` **{Object}**: See available [options](#options) for changing how matches are performed.\n* `returns` **{RegExp}**: Returns a regex created from the given pattern.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.makeRe(pattern[, options]);\n\nconsole.log(nm.makeRe('*.js'));\n//=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n```\n\n### [.create](index.js#L658)\n\nParses the given glob `pattern` and returns an object with the compiled `output` and optional source `map`.\n\n**Params**\n\n* `pattern` **{String}**: Glob pattern to parse and compile.\n* `options` **{Object}**: Any [options](#options) to change how parsing and compiling is performed.\n* `returns` **{Object}**: Returns an object with the parsed AST, compiled string and optional source map.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.create(pattern[, options]);\n\nconsole.log(nm.create('abc/*.js'));\n// { options: { source: 'string', sourcemap: true },\n//   state: {},\n//   compilers:\n//    { ... },\n//   output: '(\\\\.[\\\\\\\\\\\\/])?abc\\\\/(?!\\\\.)(?=.)[^\\\\/]*?\\\\.js',\n//   ast:\n//    { type: 'root',\n//      errors: [],\n//      nodes:\n//       [ ... ],\n//      dot: false,\n//      input: 'abc/*.js' },\n//   parsingErrors: [],\n//   map:\n//    { version: 3,\n//      sources: [ 'string' ],\n//      names: [],\n//      mappings: 'AAAA,GAAG,EAAC,kBAAC,EAAC,EAAE',\n//      sourcesContent: [ 'abc/*.js' ] },\n//   position: { line: 1, column: 28 },\n//   content: {},\n//   files: {},\n//   idx: 6 }\n```\n\n### [.parse](index.js#L697)\n\nParse the given `str` with the given `options`.\n\n**Params**\n\n* `str` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an AST\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.parse(pattern[, options]);\n\nvar ast = nm.parse('a/{b,c}/d');\nconsole.log(ast);\n// { type: 'root',\n//   errors: [],\n//   input: 'a/{b,c}/d',\n//   nodes:\n//    [ { type: 'bos', val: '' },\n//      { type: 'text', val: 'a/' },\n//      { type: 'brace',\n//        nodes:\n//         [ { type: 'brace.open', val: '{' },\n//           { type: 'text', val: 'b,c' },\n//           { type: 'brace.close', val: '}' } ] },\n//      { type: 'text', val: '/d' },\n//      { type: 'eos', val: '' } ] }\n```\n\n### [.compile](index.js#L745)\n\nCompile the given `ast` or string with the given `options`.\n\n**Params**\n\n* `ast` **{Object|String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object that has an `output` property with the compiled string.\n\n**Example**\n\n```js\nvar nm = require('nanomatch');\nnm.compile(ast[, options]);\n\nvar ast = nm.parse('a/{b,c}/d');\nconsole.log(nm.compile(ast));\n// { options: { source: 'string' },\n//   state: {},\n//   compilers:\n//    { eos: [Function],\n//      noop: [Function],\n//      bos: [Function],\n//      brace: [Function],\n//      'brace.open': [Function],\n//      text: [Function],\n//      'brace.close': [Function] },\n//   output: [ 'a/(b|c)/d' ],\n//   ast:\n//    { ... },\n//   parsingErrors: [] }\n```\n\n### [.clearCache](index.js#L768)\n\nClear the regex cache.\n\n**Example**\n\n```js\nnm.clearCache();\n```\n\n## Options\n\n<details>\n<summary><strong>basename</strong></summary>\n\n### options.basename\n\nAllow glob patterns without slashes to match a file path based on its basename. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `matchBase`.\n\nType: `boolean`\n\nDefault: `false`\n\n**Example**\n\n```js\nnm(['a/b.js', 'a/c.md'], '*.js');\n//=> []\n\nnm(['a/b.js', 'a/c.md'], '*.js', {matchBase: true});\n//=> ['a/b.js']\n```\n\n</details>\n\n<details>\n<summary><strong>bash</strong></summary>\n\n### options.bash\n\nEnabled by default, this option enforces bash-like behavior with stars immediately following a bracket expression. Bash bracket expressions are similar to regex character classes, but unlike regex, a star following a bracket expression **does not repeat the bracketed characters**. Instead, the star is treated the same as an other star.\n\nType: `boolean`\n\nDefault: `true`\n\n**Example**\n\n```js\nvar files = ['abc', 'ajz'];\nconsole.log(nm(files, '[a-c]*'));\n//=> ['abc', 'ajz']\n\nconsole.log(nm(files, '[a-c]*', {bash: false}));\n```\n\n</details>\n\n<details>\n<summary><strong>cache</strong></summary>\n\n### options.cache\n\nDisable regex and function memoization.\n\nType: `boolean`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong>dot</strong></summary>\n\n### options.dot\n\nMatch dotfiles. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `dot`.\n\nType: `boolean`\n\nDefault: `false`\n\n</details>\n\n<details>\n<summary><strong>failglob</strong></summary>\n\n### options.failglob\n\nSimilar to the `--failglob` behavior in Bash, throws an error when no matches are found.\n\nType: `boolean`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong>ignore</strong></summary>\n\n### options.ignore\n\nString or array of glob patterns to match files to ignore.\n\nType: `String|Array`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong>matchBase</strong></summary>\n\n### options.matchBase\n\nAlias for [options.basename](#options-basename).\n\n</details>\n\n<details>\n<summary><strong>nocase</strong></summary>\n\n### options.nocase\n\nUse a case-insensitive regex for matching files. Same behavior as [minimatch](https://github.com/isaacs/minimatch).\n\nType: `boolean`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong>nodupes</strong></summary>\n\n### options.nodupes\n\nRemove duplicate elements from the result array.\n\nType: `boolean`\n\nDefault: `true` (enabled by default)\n\n**Example**\n\nExample of using the `unescape` and `nodupes` options together:\n\n```js\nnm.match(['a/b/c', 'a/b/c'], '**');\n//=> ['abc']\n\nnm.match(['a/b/c', 'a/b/c'], '**', {nodupes: false});\n//=> ['a/b/c', 'a/b/c']\n```\n\n</details>\n\n<details>\n<summary><strong>nonegate</strong></summary>\n\n### options.noglobstar\n\nDisable matching with globstars (`**`).\n\nType: `boolean`\n\nDefault: `undefined`\n\n```js\nnm(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**');\n//=> ['a/b', 'a/b/c', 'a/b/c/d']\n\nnm(['a/b', 'a/b/c', 'a/b/c/d'], 'a/**', {noglobstar: true});\n//=> ['a/b']\n```\n\n</details>\n\n<details>\n<summary><strong>nonegate</strong></summary>\n\n### options.nonegate\n\nDisallow negation (`!`) patterns, and treat leading `!` as a literal character to match.\n\nType: `boolean`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong>nonull</strong></summary>\n\n### options.nonull\n\nAlias for [options.nullglob](#options-nullglob).\n\n</details>\n\n<details>\n<summary><strong>nullglob</strong></summary>\n\n### options.nullglob\n\nIf `true`, when no matches are found the actual (arrayified) glob pattern is returned instead of an empty array. Same behavior as [minimatch](https://github.com/isaacs/minimatch) option `nonull`.\n\nType: `boolean`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong><a name=\"slash\">slash</a></strong></summary>\n\n### options.slash\n\nCustomize the slash character(s) to use for matching.\n\nType: `string|function`\n\nDefault: `[/\\\\]` (forward slash and backslash)\n\n</details>\n\n<details>\n<summary><strong><a name=\"star\">star</a></strong></summary>\n\n### options.star\n\nCustomize the star character(s) to use for matching. It's not recommended that you modify this unless you have advanced knowledge of the compiler and matching rules.\n\nType: `string|function`\n\nDefault: `[^/\\\\]*?`\n\n</details>\n\n<details>\n<summary><strong><a name=\"snapdragon\">snapdragon</a></strong></summary>\n\n### options.snapdragon\n\nPass your own instance of [snapdragon](https://github.com/jonschlinkert/snapdragon) to customize parsers or compilers.\n\nType: `object`\n\nDefault: `undefined`\n\n</details>\n\n<details>\n<summary><strong>snapdragon</strong></summary>\n\n### options.sourcemap\n\nGenerate a source map by enabling the `sourcemap` option with the `.parse`, `.compile`, or `.create` methods.\n\n**Examples**\n\n```js\nvar nm = require('nanomatch');\n\nvar res = nm.create('abc/*.js', {sourcemap: true});\nconsole.log(res.map);\n// { version: 3,\n//   sources: [ 'string' ],\n//   names: [],\n//   mappings: 'AAAA,GAAG,EAAC,iBAAC,EAAC,EAAE',\n//   sourcesContent: [ 'abc/*.js' ] }\n\nvar ast = nm.parse('abc/**/*.js');\nvar res = nm.compile(ast, {sourcemap: true});\nconsole.log(res.map);\n// { version: 3,\n//   sources: [ 'string' ],\n//   names: [],\n//   mappings: 'AAAA,GAAG,EAAC,2BAAE,EAAC,iBAAC,EAAC,EAAE',\n//   sourcesContent: [ 'abc/**/*.js' ] }\n```\n\n</details>\n\n<details>\n<summary><strong>unescape</strong></summary>\n\n### options.unescape\n\nRemove backslashes from returned matches.\n\nType: `boolean`\n\nDefault: `undefined`\n\n**Example**\n\nIn this example we want to match a literal `*`:\n\n```js\nnm.match(['abc', 'a\\\\*c'], 'a\\\\*c');\n//=> ['a\\\\*c']\n\nnm.match(['abc', 'a\\\\*c'], 'a\\\\*c', {unescape: true});\n//=> ['a*c']\n```\n\n</details>\n\n<details>\n<summary><strong>unixify</strong></summary>\n\n### options.unixify\n\nConvert path separators on returned files to posix/unix-style forward slashes.\n\nType: `boolean`\n\nDefault: `true`\n\n**Example**\n\n```js\nnm.match(['a\\\\b\\\\c'], 'a/**');\n//=> ['a/b/c']\n\nnm.match(['a\\\\b\\\\c'], {unixify: false});\n//=> ['a\\\\b\\\\c']\n```\n\n</details>\n\n## Features\n\nNanomatch has full support for standard Bash glob features, including the following \"metacharacters\": `*`, `**`, `?` and `[...]`.\n\nHere are some examples of how they work:\n\n| **Pattern** | **Description** | \n| --- | --- |\n| `*` | Matches any string except for `/`, leading `.`, or `/.` inside a path |\n| `**` | Matches any string including `/`, but not a leading `.` or `/.` inside a path. More than two stars (e.g. `***` is treated the same as one star, and `**` loses its special meaning | when it's not the only thing in a path segment, per Bash specifications) |\n| `foo*` | Matches any string beginning with `foo` |\n| `*bar*` | Matches any string containing `bar` (beginning, middle or end) |\n| `*.min.js` | Matches any string ending with `.min.js` |\n| `[abc]*.js` | Matches any string beginning with `a`, `b`, or `c` and ending with `.js` |\n| `abc?` | Matches `abcd` or `abcz` but not `abcde` |\n\nThe exceptions noted for `*` apply to all patterns that contain a `*`.\n\n**Not supported**\n\nThe following extended-globbing features are not supported:\n\n* [brace expansion](https://github.com/jonschlinkert/braces) (e.g. `{a,b,c}`)\n* [extglobs](https://github.com/jonschlinkert/extglob) (e.g. `@(a|!(c|d))`)\n* [POSIX brackets](https://github.com/jonschlinkert/expand-brackets) (e.g. `[[:alpha:][:digit:]]`)\n\nIf you need any of these features consider using [micromatch](https://github.com/micromatch/micromatch) instead.\n\n## Bash expansion libs\n\nNanomatch is part of a suite of libraries aimed at bringing the power and expressiveness of [Bash's](https://www.gnu.org/software/bash/) matching and expansion capabilities to JavaScript, _and - as you can see by the [benchmarks](#benchmarks) - without sacrificing speed_.\n\n| **Related library** | **Matching Type** | **Example** | **Description** | \n| --- | --- | --- | --- |\n| `nanomatch` (you are here) | Wildcards | `*` | [Filename expansion](https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html#Filename-Expansion), also referred to as globbing and pathname expansion, allows the use of [wildcards](#features) for matching. |\n| [expand-tilde](https://github.com/jonschlinkert/expand-tilde) | Tildes | `~` | [Tilde expansion](https://www.gnu.org/software/bash/manual/html_node/Tilde-Expansion.html#Tilde-Expansion) converts the leading tilde in a file path to the user home directory. |\n| [braces](https://github.com/jonschlinkert/braces) | Braces | `{a,b,c}` | [Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html) |\n| [expand-brackets](https://github.com/jonschlinkert/expand-brackets) | Brackets | `[[:alpha:]]` | [POSIX character classes](https://www.gnu.org/software/grep/manual/html_node/Character-Classes-and-Bracket-Expressions.html) (also referred to as POSIX brackets, or POSIX character classes) |\n| [extglob](https://github.com/jonschlinkert/extglob) | Parens | `!(a\\ | b)` | [Extglobs](https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html#Pattern-Matching) |\n| [micromatch](https://github.com/micromatch/micromatch) | All | all | Micromatch is built on top of the other libraries. |\n\nThere are many resources available on the web if you want to dive deeper into how these features work in Bash.\n\n## Benchmarks\n\n### Running benchmarks\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && node benchmark\n```\n\n### Nanomatch vs. Minimatch vs. Multimatch\n\n```bash\n# globstar-basic (182 bytes)\n  minimatch x 69,512 ops/sec \u00b11.92% (88 runs sampled)\n  multimatch x 63,376 ops/sec \u00b11.41% (89 runs sampled)\n  nanomatch x 432,451 ops/sec \u00b10.92% (88 runs sampled)\n\n  fastest is nanomatch (by 651% avg)\n\n# large-list-globstar (485686 bytes)\n  minimatch x 34.02 ops/sec \u00b11.42% (59 runs sampled)\n  multimatch x 33.58 ops/sec \u00b11.97% (58 runs sampled)\n  nanomatch x 483 ops/sec \u00b11.06% (86 runs sampled)\n\n  fastest is nanomatch (by 1429% avg)\n\n# long-list-globstar (194085 bytes)\n  minimatch x 383 ops/sec \u00b10.74% (90 runs sampled)\n  multimatch x 378 ops/sec \u00b10.59% (89 runs sampled)\n  nanomatch x 990 ops/sec \u00b11.14% (85 runs sampled)\n\n  fastest is nanomatch (by 260% avg)\n\n# negation-basic (132 bytes)\n  minimatch x 242,145 ops/sec \u00b11.17% (89 runs sampled)\n  multimatch x 76,403 ops/sec \u00b10.78% (92 runs sampled)\n  nanomatch x 537,253 ops/sec \u00b11.44% (86 runs sampled)\n\n  fastest is nanomatch (by 337% avg)\n\n# not-glob-basic (93 bytes)\n  minimatch x 252,402 ops/sec \u00b11.33% (89 runs sampled)\n  multimatch x 209,954 ops/sec \u00b11.30% (90 runs sampled)\n  nanomatch x 1,716,468 ops/sec \u00b11.13% (86 runs sampled)\n\n  fastest is nanomatch (by 742% avg)\n\n# star-basic (93 bytes)\n  minimatch x 182,780 ops/sec \u00b11.41% (91 runs sampled)\n  multimatch x 153,210 ops/sec \u00b10.72% (89 runs sampled)\n  nanomatch x 599,621 ops/sec \u00b11.22% (90 runs sampled)\n\n  fastest is nanomatch (by 357% avg)\n\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [extglob](https://www.npmjs.com/package/extglob): Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob\u2026 [more](https://github.com/micromatch/extglob) | [homepage](https://github.com/micromatch/extglob \"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\")\n* [is-extglob](https://www.npmjs.com/package/is-extglob): Returns true if a string has an extglob. | [homepage](https://github.com/jonschlinkert/is-extglob \"Returns true if a string has an extglob.\")\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern\u2026 [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 164 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [devongovett](https://github.com/devongovett) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on February 18, 2018._"}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 526445}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 10739870}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 44103228}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 117999918}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 233420116}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 438224372}], "dependentsCount": 81, "starsCount": 1}, "github": {"homepage": "https://github.com/micromatch", "starsCount": 68, "forksCount": 11, "subscribersCount": 5, "issues": {"count": 23, "openCount": 6, "distribution": {"3600": 4, "10800": 2, "32400": 1, "97200": 3, "291600": 0, "874800": 5, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 6, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 166}, {"username": "tonetheman", "commitsCount": 4}, {"username": "devongovett", "commitsCount": 1}, {"username": "sebdeckers", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 33388, "testsSize": 159108, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/nanomatch.svg?style=flat", "shields": "https://img.shields.io/npm/v/nanomatch.svg", "content": "https://img.shields.io/npm/v/nanomatch.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/nanomatch.svg?style=flat", "shields": "https://img.shields.io/npm/dm/nanomatch.svg", "content": "https://img.shields.io/npm/dm/nanomatch.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/nanomatch.svg?style=flat", "shields": "https://img.shields.io/npm/dt/nanomatch.svg", "content": "https://img.shields.io/npm/dt/nanomatch.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/nanomatch.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/nanomatch.svg", "shields": "https://img.shields.io/travis/micromatch/nanomatch.svg", "content": "https://img.shields.io/travis/micromatch/nanomatch.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/micromatch/nanomatch.svg?label=AppVeyor", "service": "https://ci.appveyor.com/api/projects/status/micromatch/nanomatch", "shields": "https://img.shields.io/appveyor/ci/micromatch/nanomatch.svg", "content": "https://img.shields.io/appveyor/ci/micromatch/nanomatch.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"snapdragon": {"required": "^0.8.1", "stable": "0.12.0", "latest": "0.12.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8181818181818181, "branding": 0.6}, "popularity": {"communityInterest": 89, "downloadsCount": 39333306, "downloadsAcceleration": 91414.146651446, "dependentsCount": 81}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8154842518364318, "detail": {"quality": 0.9402111064081374, "popularity": 0.5242028486627812, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-01T17:02:08.906Z", "collected": {"metadata": {"name": "natural-compare", "scope": "unscoped", "version": "1.4.0", "description": "Compare strings containing a mix of letters and numbers in the way a human being would in sort order.", "keywords": ["string", "natural", "order", "sort", "natsort", "natcmp", "compare", "alphanum", "litejs"], "date": "2016-07-22T20:48:12.217Z", "author": {"name": "Lauri Rooden", "url": "https://github.com/litejs/natural-compare-lite"}, "publisher": {"username": "megawac", "email": "megawac@gmail.com"}, "maintainers": [{"username": "megawac", "email": "megawac@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/litejs/natural-compare-lite.git"}, "links": {"npm": "https://www.npmjs.com/package/natural-compare", "homepage": "https://github.com/litejs/natural-compare-lite#readme", "repository": "https://github.com/litejs/natural-compare-lite", "bugs": "https://github.com/litejs/natural-compare-lite/issues"}, "license": "MIT", "devDependencies": {"buildman": "*", "testman": "*"}, "releases": [{"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2018-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[Build]:    http://img.shields.io/travis/litejs/natural-compare-lite.png\n[Coverage]: http://img.shields.io/coveralls/litejs/natural-compare-lite.png\n[1]: https://travis-ci.org/litejs/natural-compare-lite\n[2]: https://coveralls.io/r/litejs/natural-compare-lite\n[npm package]: https://npmjs.org/package/natural-compare-lite\n[GitHub repo]: https://github.com/litejs/natural-compare-lite\n\n\n\n    @version    1.4.0\n    @date       2015-10-26\n    @stability  3 - Stable\n\n\nNatural Compare &ndash; [![Build][]][1] [![Coverage][]][2]\n===============\n\nCompare strings containing a mix of letters and numbers\nin the way a human being would in sort order.\nThis is described as a \"natural ordering\".\n\n```text\nStandard sorting:   Natural order sorting:\n    img1.png            img1.png\n    img10.png           img2.png\n    img12.png           img10.png\n    img2.png            img12.png\n```\n\nString.naturalCompare returns a number indicating\nwhether a reference string comes before or after or is the same\nas the given string in sort order.\nUse it with builtin sort() function.\n\n\n\n### Installation\n\n- In browser\n\n```html\n<script src=min.natural-compare.js></script>\n```\n\n- In node.js: `npm install natural-compare-lite`\n\n```javascript\nrequire(\"natural-compare-lite\")\n```\n\n### Usage\n\n```javascript\n// Simple case sensitive example\nvar a = [\"z1.doc\", \"z10.doc\", \"z17.doc\", \"z2.doc\", \"z23.doc\", \"z3.doc\"];\na.sort(String.naturalCompare);\n// [\"z1.doc\", \"z2.doc\", \"z3.doc\", \"z10.doc\", \"z17.doc\", \"z23.doc\"]\n\n// Use wrapper function for case insensitivity\na.sort(function(a, b){\n  return String.naturalCompare(a.toLowerCase(), b.toLowerCase());\n})\n\n// In most cases we want to sort an array of objects\nvar a = [ {\"street\":\"350 5th Ave\", \"room\":\"A-1021\"}\n        , {\"street\":\"350 5th Ave\", \"room\":\"A-21046-b\"} ];\n\n// sort by street, then by room\na.sort(function(a, b){\n  return String.naturalCompare(a.street, b.street) || String.naturalCompare(a.room, b.room);\n})\n\n// When text transformation is needed (eg toLowerCase()),\n// it is best for performance to keep\n// transformed key in that object.\n// There are no need to do text transformation\n// on each comparision when sorting.\nvar a = [ {\"make\":\"Audi\", \"model\":\"A6\"}\n        , {\"make\":\"Kia\",  \"model\":\"Rio\"} ];\n\n// sort by make, then by model\na.map(function(car){\n  car.sort_key = (car.make + \" \" + car.model).toLowerCase();\n})\na.sort(function(a, b){\n  return String.naturalCompare(a.sort_key, b.sort_key);\n})\n```\n\n- Works well with dates in ISO format eg \"Rev 2012-07-26.doc\".\n\n\n### Custom alphabet\n\nIt is possible to configure a custom alphabet\nto achieve a desired order.\n\n```javascript\n// Estonian alphabet\nString.alphabet = \"ABDEFGHIJKLMNOPRS\u0160Z\u017dTUV\u00d5\u00c4\u00d6\u00dcXYabdefghijklmnoprs\u0161z\u017etuv\u00f5\u00e4\u00f6\u00fcxy\"\n[\"t\", \"z\", \"x\", \"\u00f5\"].sort(String.naturalCompare)\n// [\"z\", \"t\", \"\u00f5\", \"x\"]\n\n// Russian alphabet\nString.alphabet = \"\u0410\u0411\u0412\u0413\u0414\u0415\u0401\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0451\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\"\n[\"\u0401\", \"\u0410\", \"\u0411\"].sort(String.naturalCompare)\n// [\"\u0410\", \"\u0411\", \"\u0401\"]\n```\n\n\nExternal links\n--------------\n\n-   [GitHub repo][https://github.com/litejs/natural-compare-lite]\n-   [jsperf test](http://jsperf.com/natural-sort-2/12)\n\n\nLicence\n-------\n\nCopyright (c) 2012-2015 Lauri Rooden &lt;lauri@rooden.ee&gt;  \n[The MIT License](http://lauri.rooden.ee/mit-license.txt)"}, "npm": {"downloads": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1305621}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 7728239}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 31658375}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 87256782}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 170562134}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 314756875}], "dependentsCount": 55, "starsCount": 0}}, "evaluation": {"quality": {"carefulness": 0.41000000000000003, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 29085594, "downloadsAcceleration": 69537.84307458141, "dependentsCount": 55}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.22565388820969629, "detail": {"quality": 0.23618366555805723, "popularity": 0.4422822529779403, "maintenance": 0}}}
{"analyzedAt": "2020-03-02T03:29:40.904Z", "collected": {"metadata": {"name": "neo-async", "scope": "unscoped", "version": "2.6.1", "description": "Neo-Async is thought to be used as a drop-in replacement for Async, it almost fully covers its functionality and runs faster", "keywords": ["async", "util"], "date": "2019-05-13T01:56:35.978Z", "publisher": {"username": "suguru03", "email": "suguru.motegi@gmail.com"}, "maintainers": [{"username": "suguru03", "email": "hollow.03.03.bleach@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/suguru03/neo-async.git"}, "links": {"npm": "https://www.npmjs.com/package/neo-async", "homepage": "https://github.com/suguru03/neo-async", "repository": "https://github.com/suguru03/neo-async", "bugs": "https://github.com/suguru03/neo-async/issues"}, "license": "MIT", "devDependencies": {"aigle": "^1.8.1", "async": "^2.6.0", "benchmark": "^2.1.1", "bluebird": "^3.5.1", "codecov.io": "^0.1.6", "fs-extra": "^4.0.2", "func-comparator": "^0.7.2", "gulp": "^3.9.1", "gulp-bump": "^2.8.0", "gulp-exit": "0.0.2", "gulp-git": "^2.4.2", "gulp-jscs": "^4.0.0", "gulp-mocha": "^4.2.0", "gulp-tag-version": "^1.3.0", "gulp-util": "^3.0.7", "husky": "^1.2.0", "istanbul": "^0.4.3", "jsdoc": "^3.5.5", "jshint": "^2.9.5", "lint-staged": "^8.1.0", "lodash": "^4.16.6", "minimist": "^1.2.0", "mocha": "^3.5.3", "mocha-parallel-executor": "^0.3.0", "mocha.parallel": "^0.15.3", "prettier": "^1.15.2", "require-dir": "^0.3.0", "run-sequence": "^1.2.2"}, "releases": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 2}, {"from": "2018-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">Neo-Async</h1>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/wiki/suguru03/neo-async/images/neo_async_v2.png\" width=\"250px\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/neo-async\"><img alt=\"npm\" src=\"https://img.shields.io/npm/v/neo-async.svg\"></a>\n  <a href=\"https://travis-ci.org/suguru03/neo-async\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/suguru03/neo-async.svg\"></a>\n  <a href=\"https://codecov.io/gh/suguru03/neo-async\"><img alt=\"Coverage Status\" src=\"https://img.shields.io/codecov/c/github/suguru03/neo-async/master.svg\"></a>\n  <a href=\"https://www.npmjs.com/package/neo-async\"><img alt=\"download\" src=\"https://img.shields.io/npm/dm/neo-async.svg\"></a>\n  <a href=\"https://lgtm.com/projects/g/suguru03/neo-async/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/g/suguru03/neo-async.svg?logo=lgtm&logoWidth=18\" alt=\"Code Quality: Javascript\" height=\"18\"></a>\n  <a href=\"https://lgtm.com/projects/g/suguru03/neo-async/alerts\"><img src=\"https://img.shields.io/lgtm/alerts/g/suguru03/neo-async.svg?logo=lgtm&logoWidth=18\" alt=\"Total Alerts\" height=\"18\"></a>\n</p>\n\nNeo-Async is thought to be used as a drop-in replacement for [Async](https://github.com/caolan/async), it almost fully covers its functionality and runs [faster](#benchmark).\n\nBenchmark is [here](#benchmark)!\n\nBluebird's benchmark is [here](https://github.com/suguru03/bluebird/tree/aigle/benchmark)!\n\n## Code Coverage\n![coverage](https://raw.githubusercontent.com/wiki/suguru03/neo-async/images/coverage.png)\n\n## Installation\n\n### In a browser\n```html\n<script src=\"async.min.js\"></script>\n```\n\n### In an AMD loader\n```js\nrequire(['async'], function(async) {});\n```\n\n### Promise and async/await\n\nI recommend to use [`Aigle`](https://github.com/suguru03/aigle).\n\nIt is optimized for Promise handling and has almost the same functionality as `neo-async`.\n\n### Node.js\n\n#### standard\n\n```bash\n$ npm install neo-async\n```\n```js\nvar async = require('neo-async');\n```\n\n#### replacement\n```bash\n$ npm install neo-async\n$ ln -s ./node_modules/neo-async ./node_modules/async\n```\n```js\nvar async = require('async');\n```\n\n### Bower\n\n```bash\nbower install neo-async\n```\n\n## Feature\n\n[JSDoc](http://suguru03.github.io/neo-async/doc/async.html)\n\n\\* not in Async\n\n### Collections\n\n- [`each`](http://suguru03.github.io/neo-async/doc/async.each.html)\n- [`eachSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html)\n- [`eachLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html)\n- [`forEach`](http://suguru03.github.io/neo-async/doc/async.each.html) -> [`each`](http://suguru03.github.io/neo-async/doc/async.each.html)\n- [`forEachSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html) -> [`eachSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html)\n- [`forEachLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html) -> [`eachLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html)\n- [`eachOf`](http://suguru03.github.io/neo-async/doc/async.each.html) -> [`each`](http://suguru03.github.io/neo-async/doc/async.each.html)\n- [`eachOfSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html) -> [`eachSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html)\n- [`eachOfLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html) -> [`eachLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html)\n- [`forEachOf`](http://suguru03.github.io/neo-async/doc/async.each.html) -> [`each`](http://suguru03.github.io/neo-async/doc/async.each.html)\n- [`forEachOfSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html) -> [`eachSeries`](http://suguru03.github.io/neo-async/doc/async.eachSeries.html)\n- [`eachOfLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html) -> [`forEachLimit`](http://suguru03.github.io/neo-async/doc/async.eachLimit.html)\n- [`map`](http://suguru03.github.io/neo-async/doc/async.map.html)\n- [`mapSeries`](http://suguru03.github.io/neo-async/doc/async.mapSeries.html)\n- [`mapLimit`](http://suguru03.github.io/neo-async/doc/async.mapLimit.html)\n- [`mapValues`](http://suguru03.github.io/neo-async/doc/async.mapValues.html)\n- [`mapValuesSeries`](http://suguru03.github.io/neo-async/doc/async.mapValuesSeries.html)\n- [`mapValuesLimit`](http://suguru03.github.io/neo-async/doc/async.mapValuesLimit.html)\n- [`filter`](http://suguru03.github.io/neo-async/doc/async.filter.html)\n- [`filterSeries`](http://suguru03.github.io/neo-async/doc/async.filterSeries.html)\n- [`filterLimit`](http://suguru03.github.io/neo-async/doc/async.filterLimit.html)\n- [`select`](http://suguru03.github.io/neo-async/doc/async.filter.html) -> [`filter`](http://suguru03.github.io/neo-async/doc/async.filter.html)\n- [`selectSeries`](http://suguru03.github.io/neo-async/doc/async.filterSeries.html) -> [`filterSeries`](http://suguru03.github.io/neo-async/doc/async.filterSeries.html)\n- [`selectLimit`](http://suguru03.github.io/neo-async/doc/async.filterLimit.html) -> [`filterLimit`](http://suguru03.github.io/neo-async/doc/async.filterLimit.html)\n- [`reject`](http://suguru03.github.io/neo-async/doc/async.reject.html)\n- [`rejectSeries`](http://suguru03.github.io/neo-async/doc/async.rejectSeries.html)\n- [`rejectLimit`](http://suguru03.github.io/neo-async/doc/async.rejectLimit.html)\n- [`detect`](http://suguru03.github.io/neo-async/doc/async.detect.html)\n- [`detectSeries`](http://suguru03.github.io/neo-async/doc/async.detectSeries.html)\n- [`detectLimit`](http://suguru03.github.io/neo-async/doc/async.detectLimit.html)\n- [`find`](http://suguru03.github.io/neo-async/doc/async.detect.html) -> [`detect`](http://suguru03.github.io/neo-async/doc/async.detect.html)\n- [`findSeries`](http://suguru03.github.io/neo-async/doc/async.detectSeries.html) -> [`detectSeries`](http://suguru03.github.io/neo-async/doc/async.detectSeries.html)\n- [`findLimit`](http://suguru03.github.io/neo-async/doc/async.detectLimit.html) -> [`detectLimit`](http://suguru03.github.io/neo-async/doc/async.detectLimit.html)\n- [`pick`](http://suguru03.github.io/neo-async/doc/async.pick.html) *\n- [`pickSeries`](http://suguru03.github.io/neo-async/doc/async.pickSeries.html) *\n- [`pickLimit`](http://suguru03.github.io/neo-async/doc/async.pickLimit.html) *\n- [`omit`](http://suguru03.github.io/neo-async/doc/async.omit.html) *\n- [`omitSeries`](http://suguru03.github.io/neo-async/doc/async.omitSeries.html) *\n- [`omitLimit`](http://suguru03.github.io/neo-async/doc/async.omitLimit.html) *\n- [`reduce`](http://suguru03.github.io/neo-async/doc/async.reduce.html)\n- [`inject`](http://suguru03.github.io/neo-async/doc/async.reduce.html) -> [`reduce`](http://suguru03.github.io/neo-async/doc/async.reduce.html)\n- [`foldl`](http://suguru03.github.io/neo-async/doc/async.reduce.html) -> [`reduce`](http://suguru03.github.io/neo-async/doc/async.reduce.html)\n- [`reduceRight`](http://suguru03.github.io/neo-async/doc/async.reduceRight.html)\n- [`foldr`](http://suguru03.github.io/neo-async/doc/async.reduceRight.html) -> [`reduceRight`](http://suguru03.github.io/neo-async/doc/async.reduceRight.html)\n- [`transform`](http://suguru03.github.io/neo-async/doc/async.transform.html)\n- [`transformSeries`](http://suguru03.github.io/neo-async/doc/async.transformSeries.html) *\n- [`transformLimit`](http://suguru03.github.io/neo-async/doc/async.transformLimit.html) *\n- [`sortBy`](http://suguru03.github.io/neo-async/doc/async.sortBy.html)\n- [`sortBySeries`](http://suguru03.github.io/neo-async/doc/async.sortBySeries.html) *\n- [`sortByLimit`](http://suguru03.github.io/neo-async/doc/async.sortByLimit.html) *\n- [`some`](http://suguru03.github.io/neo-async/doc/async.some.html)\n- [`someSeries`](http://suguru03.github.io/neo-async/doc/async.someSeries.html)\n- [`someLimit`](http://suguru03.github.io/neo-async/doc/async.someLimit.html)\n- [`any`](http://suguru03.github.io/neo-async/doc/async.some.html) -> [`some`](http://suguru03.github.io/neo-async/doc/async.some.html)\n- [`anySeries`](http://suguru03.github.io/neo-async/doc/async.someSeries.html) -> [`someSeries`](http://suguru03.github.io/neo-async/doc/async.someSeries.html)\n- [`anyLimit`](http://suguru03.github.io/neo-async/doc/async.someLimit.html) -> [`someLimit`](http://suguru03.github.io/neo-async/doc/async.someLimit.html)\n- [`every`](http://suguru03.github.io/neo-async/doc/async.every.html)\n- [`everySeries`](http://suguru03.github.io/neo-async/doc/async.everySeries.html)\n- [`everyLimit`](http://suguru03.github.io/neo-async/doc/async.everyLimit.html)\n- [`all`](http://suguru03.github.io/neo-async/doc/async.every.html) -> [`every`](http://suguru03.github.io/neo-async/doc/async.every.html)\n- [`allSeries`](http://suguru03.github.io/neo-async/doc/async.everySeries.html) -> [`every`](http://suguru03.github.io/neo-async/doc/async.everySeries.html)\n- [`allLimit`](http://suguru03.github.io/neo-async/doc/async.everyLimit.html) -> [`every`](http://suguru03.github.io/neo-async/doc/async.everyLimit.html)\n- [`concat`](http://suguru03.github.io/neo-async/doc/async.concat.html)\n- [`concatSeries`](http://suguru03.github.io/neo-async/doc/async.concatSeries.html)\n- [`concatLimit`](http://suguru03.github.io/neo-async/doc/async.concatLimit.html) *\n\n### Control Flow\n\n- [`parallel`](http://suguru03.github.io/neo-async/doc/async.parallel.html)\n- [`series`](http://suguru03.github.io/neo-async/doc/async.series.html)\n- [`parallelLimit`](http://suguru03.github.io/neo-async/doc/async.series.html)\n- [`tryEach`](http://suguru03.github.io/neo-async/doc/async.tryEach.html)\n- [`waterfall`](http://suguru03.github.io/neo-async/doc/async.waterfall.html)\n- [`angelFall`](http://suguru03.github.io/neo-async/doc/async.angelFall.html) *\n- [`angelfall`](http://suguru03.github.io/neo-async/doc/async.angelFall.html) -> [`angelFall`](http://suguru03.github.io/neo-async/doc/async.angelFall.html) *\n- [`whilst`](#whilst)\n- [`doWhilst`](#doWhilst)\n- [`until`](#until)\n- [`doUntil`](#doUntil)\n- [`during`](#during)\n- [`doDuring`](#doDuring)\n- [`forever`](#forever)\n- [`compose`](#compose)\n- [`seq`](#seq)\n- [`applyEach`](#applyEach)\n- [`applyEachSeries`](#applyEachSeries)\n- [`queue`](#queue)\n- [`priorityQueue`](#priorityQueue)\n- [`cargo`](#cargo)\n- [`auto`](#auto)\n- [`autoInject`](#autoInject)\n- [`retry`](#retry)\n- [`retryable`](#retryable)\n- [`iterator`](#iterator)\n- [`times`](http://suguru03.github.io/neo-async/doc/async.times.html)\n- [`timesSeries`](http://suguru03.github.io/neo-async/doc/async.timesSeries.html)\n- [`timesLimit`](http://suguru03.github.io/neo-async/doc/async.timesLimit.html)\n- [`race`](#race)\n\n### Utils\n- [`apply`](#apply)\n- [`setImmediate`](#setImmediate)\n- [`nextTick`](#nextTick)\n- [`memoize`](#memoize)\n- [`unmemoize`](#unmemoize)\n- [`ensureAsync`](#ensureAsync)\n- [`constant`](#constant)\n- [`asyncify`](#asyncify)\n- [`wrapSync`](#asyncify) -> [`asyncify`](#asyncify)\n- [`log`](#log)\n- [`dir`](#dir)\n- [`timeout`](http://suguru03.github.io/neo-async/doc/async.timeout.html)\n- [`reflect`](#reflect)\n- [`reflectAll`](#reflectAll)\n- [`createLogger`](#createLogger)\n\n## Mode\n- [`safe`](#safe) *\n- [`fast`](#fast) *\n\n## Benchmark\n\n[Benchmark: Async vs Neo-Async](http://suguru03.hatenablog.com/entry/2016/06/10/135559)\n\n### How to check\n\n```bash\n$ node perf\n```\n\n### Environment\n\n* Darwin 17.3.0 x64\n* Node.js v8.9.4\n* async v2.6.0\n* neo-async v2.5.0\n* benchmark v2.1.4\n\n### Result\n\nThe value is the ratio (Neo-Async/Async) of the average speed.\n\n#### Collections\n|function|benchmark|\n|---|--:|\n|each/forEach|2.43|\n|eachSeries/forEachSeries|1.75|\n|eachLimit/forEachLimit|1.68|\n|eachOf|3.29|\n|eachOfSeries|1.50|\n|eachOfLimit|1.59|\n|map|3.95|\n|mapSeries|1.81|\n|mapLimit|1.27|\n|mapValues|2.73|\n|mapValuesSeries|1.59|\n|mapValuesLimit|1.23|\n|filter|3.00|\n|filterSeries|1.74|\n|filterLimit|1.17|\n|reject|4.59|\n|rejectSeries|2.31|\n|rejectLimit|1.58|\n|detect|4.30|\n|detectSeries|1.86|\n|detectLimit|1.32|\n|reduce|1.82|\n|transform|2.46|\n|sortBy|4.08|\n|some|2.19|\n|someSeries|1.83|\n|someLimit|1.32|\n|every|2.09|\n|everySeries|1.84|\n|everyLimit|1.35|\n|concat|3.79|\n|concatSeries|4.45|\n\n#### Control Flow\n|funciton|benchmark|\n|---|--:|\n|parallel|2.93|\n|series|1.96|\n|waterfall|1.29|\n|whilst|1.00|\n|doWhilst|1.12|\n|until|1.12|\n|doUntil|1.12|\n|during|1.18|\n|doDuring|2.42|\n|times|4.25|\n|auto|1.97|"}, "npm": {"downloads": [{"from": "2020-03-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 471767}, {"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 10034824}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 39937704}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 110609709}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 219986820}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 396711368}], "dependentsCount": 152, "starsCount": 19}, "github": {"starsCount": 534, "forksCount": 30, "subscribersCount": 13, "issues": {"count": 79, "openCount": 2, "distribution": {"3600": 13, "10800": 5, "32400": 10, "97200": 10, "291600": 10, "874800": 14, "2624400": 5, "7873200": 8, "23619600": 4, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "suguru03", "commitsCount": 655}, {"username": "greenkeeperio-bot", "commitsCount": 23}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "ORESoftware", "commitsCount": 1}, {"username": "dannygriffin000", "commitsCount": 1}, {"username": "e-jigsaw", "commitsCount": 1}, {"username": "exx8", "commitsCount": 1}, {"username": "fossabot", "commitsCount": 1}, {"username": "opichals", "commitsCount": 1}, {"username": "proYang", "commitsCount": 1}, {"username": "stevepeak", "commitsCount": 1}, {"username": "xcorail", "commitsCount": 1}, {"username": "yles9056", "commitsCount": 1}], "commits": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 1}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 11}], "statuses": [{"context": "License Compliance", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci", "state": "success"}]}, "source": {"files": {"readmeSize": 12753, "testsSize": 673602}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/neo-async.svg", "shields": "https://img.shields.io/npm/v/neo-async.svg", "content": "https://img.shields.io/npm/v/neo-async.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/suguru03/neo-async.svg", "service": "https://api.travis-ci.org/suguru03/neo-async.svg", "shields": "https://img.shields.io/travis/suguru03/neo-async.svg", "content": "https://img.shields.io/travis/suguru03/neo-async.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/suguru03/neo-async/master.svg", "service": "https://codecov.io/github/suguru03/neo-async/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/suguru03/neo-async/master.svg", "content": "https://img.shields.io/codecov/c/github/suguru03/neo-async/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/neo-async.svg", "shields": "https://img.shields.io/npm/dm/neo-async.svg", "content": "https://img.shields.io/npm/dm/neo-async.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["jscs", "jshint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 609, "downloadsCount": 36869903, "downloadsAcceleration": 94911.21986301366, "dependentsCount": 152}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.978642032611376}}, "score": {"final": 0.8516029349594498, "detail": {"quality": 0.989463614822099, "popularity": 0.5851011550533893, "maintenance": 0.9999384178403825}}}
{"analyzedAt": "2020-03-03T16:55:50.681Z", "collected": {"metadata": {"name": "nice-try", "scope": "unscoped", "version": "2.0.0", "description": "Tries to execute a function and discards any error that occurs", "keywords": ["try", "catch", "error"], "date": "2018-10-28T15:23:25.854Z", "publisher": {"username": "electerious", "email": "tobias@electerious.com"}, "maintainers": [{"username": "electerious", "email": "tobias@electerious.com"}], "repository": {"type": "git", "url": "git+https://github.com/electerious/nice-try.git"}, "links": {"npm": "https://www.npmjs.com/package/nice-try", "homepage": "https://github.com/electerious/nice-try", "repository": "https://github.com/electerious/nice-try", "bugs": "https://github.com/electerious/nice-try/issues"}, "license": "MIT", "devDependencies": {"chai": "^4.1.2", "coveralls": "^3.0.0", "nyc": "^12.0.1", "mocha": "^5.1.1"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# nice-try\n\n[![Travis Build Status](https://travis-ci.org/electerious/nice-try.svg?branch=master)](https://travis-ci.org/electerious/nice-try) [![AppVeyor Status](https://ci.appveyor.com/api/projects/status/8tqb09wrwci3xf8l?svg=true)](https://ci.appveyor.com/project/electerious/nice-try) [![Coverage Status](https://coveralls.io/repos/github/electerious/nice-try/badge.svg?branch=master)](https://coveralls.io/github/electerious/nice-try?branch=master) [![Dependencies](https://david-dm.org/electerious/nice-try.svg)](https://david-dm.org/electerious/nice-try#info=dependencies) [![Greenkeeper badge](https://badges.greenkeeper.io/electerious/nice-try.svg)](https://greenkeeper.io/)\n\nA function that tries to execute a function and discards any error that occurs.\n\n## Install\n\n```\nnpm install nice-try\n```\n\n## Usage\n\n```js\nconst niceTry = require('nice-try')\n\nniceTry(() => JSON.parse('true')) // true\nniceTry(() => JSON.parse('truee')) // undefined\nniceTry() // undefined\nniceTry(true) // undefined\n```\n\n## API\n\n### Parameters\n\n- `fn` `{Function}` Function that might or might not throw an error.\n\n### Returns\n\n- `{?*}` Return-value of the function when no error occurred."}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1987342}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 11120328}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 44804458}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 116393046}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 225482534}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 403297944}], "dependentsCount": 43, "starsCount": 0}, "github": {"starsCount": 41, "forksCount": 4, "subscribersCount": 1, "issues": {"count": 24, "openCount": 0, "distribution": {"3600": 5, "10800": 1, "32400": 9, "97200": 2, "291600": 6, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "electerious", "commitsCount": 31}, {"username": "greenkeeper[bot]", "commitsCount": 9}, {"username": "greenkeeperio-bot", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 1174, "testsSize": 714, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/electerious/nice-try.svg?branch=master", "service": "https://api.travis-ci.org/electerious/nice-try.svg?branch=master", "shields": "https://img.shields.io/travis/electerious/nice-try/master.svg", "content": "https://img.shields.io/travis/electerious/nice-try/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/electerious/nice-try/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/electerious/nice-try/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/electerious/nice-try/master.svg", "content": "https://img.shields.io/coveralls/electerious/nice-try/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/electerious/nice-try.svg", "service": "https://david-dm.org/electerious/nice-try.svg", "shields": "https://img.shields.io/david/electerious/nice-try.svg", "content": "https://img.shields.io/david/electerious/nice-try.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.9166666666666666, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 49, "downloadsCount": 38797682, "downloadsAcceleration": 134077.73245814315, "dependentsCount": 43}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8182781947714319, "detail": {"quality": 0.9706668843686987, "popularity": 0.5059986724897626, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-23T05:09:59.639Z", "collected": {"metadata": {"name": "@nodelib/fs.scandir", "scope": "nodelib", "version": "2.1.3", "description": "List files and directories inside the specified directory", "keywords": ["NodeLib", "fs", "FileSystem", "file system", "scandir", "readdir", "dirent"], "date": "2019-10-04T07:12:46.906Z", "publisher": {"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}, "maintainers": [{"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}], "repository": {"type": "git", "url": "git+https://github.com/nodelib/nodelib.git"}, "links": {"npm": "https://www.npmjs.com/package/%40nodelib%2Ffs.scandir", "homepage": "https://github.com/nodelib/nodelib#readme", "repository": "https://github.com/nodelib/nodelib", "bugs": "https://github.com/nodelib/nodelib/issues"}, "license": "MIT", "dependencies": {"@nodelib/fs.stat": "2.0.3", "run-parallel": "^1.1.9"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 16}], "hasTestScript": true, "readme": "# @nodelib/fs.scandir\n\n> List files and directories inside the specified directory.\n\n## :bulb: Highlights\n\nThe package is aimed at obtaining information about entries in the directory.\n\n* :moneybag: Returns useful information: `name`, `path`, `dirent` and `stats` (optional).\n* :gear: On Node.js 10.10+ uses the mechanism without additional calls to determine the entry type. See [`old` and `modern` mode](#old-and-modern-mode).\n* :link: Can safely work with broken symbolic links.\n\n## Install\n\n```console\nnpm install @nodelib/fs.scandir\n```\n\n## Usage\n\n```ts\nimport * as fsScandir from '@nodelib/fs.scandir';\n\nfsScandir.scandir('path', (error, stats) => { /* \u2026 */ });\n```\n\n## API\n\n### .scandir(path, [optionsOrSettings], callback)\n\nReturns an array of plain objects ([`Entry`](#entry)) with information about entry for provided path with standard callback-style.\n\n```ts\nfsScandir.scandir('path', (error, entries) => { /* \u2026 */ });\nfsScandir.scandir('path', {}, (error, entries) => { /* \u2026 */ });\nfsScandir.scandir('path', new fsScandir.Settings(), (error, entries) => { /* \u2026 */ });\n```\n\n### .scandirSync(path, [optionsOrSettings])\n\nReturns an array of plain objects ([`Entry`](#entry)) with information about entry for provided path.\n\n```ts\nconst entries = fsScandir.scandirSync('path');\nconst entries = fsScandir.scandirSync('path', {});\nconst entries = fsScandir.scandirSync(('path', new fsScandir.Settings());\n```\n\n#### path\n\n* Required: `true`\n* Type: `string | Buffer | URL`\n\nA path to a file. If a URL is provided, it must use the `file:` protocol.\n\n#### optionsOrSettings\n\n* Required: `false`\n* Type: `Options | Settings`\n* Default: An instance of `Settings` class\n\nAn [`Options`](#options) object or an instance of [`Settings`](#settingsoptions) class.\n\n> :book: When you pass a plain object, an instance of the `Settings` class will be created automatically. If you plan to call the method frequently, use a pre-created instance of the `Settings` class.\n\n### Settings([options])\n\nA class of full settings of the package.\n\n```ts\nconst settings = new fsScandir.Settings({ followSymbolicLinks: false });\n\nconst entries = fsScandir.scandirSync('path', settings);\n```\n\n## Entry\n\n* `name` \u2014 The name of the entry (`unknown.txt`).\n* `path` \u2014 The path of the entry relative to call directory (`root/unknown.txt`).\n* `dirent` \u2014 An instance of [`fs.Dirent`](./src/types/index.ts) class. On Node.js below 10.10 will be emulated by [`DirentFromStats`](./src/utils/fs.ts) class.\n* `stats` (optional) \u2014 An instance of `fs.Stats` class.\n\nFor example, the `scandir` call for `tools` directory with one directory inside:\n\n```ts\n{\n\tdirent: Dirent { name: 'typedoc', /* \u2026 */ },\n\tname: 'typedoc',\n\tpath: 'tools/typedoc'\n}\n```\n\n## Options\n\n### stats\n\n* Type: `boolean`\n* Default: `false`\n\nAdds an instance of `fs.Stats` class to the [`Entry`](#entry).\n\n> :book: Always use `fs.readdir` without the `withFileTypes` option. ??TODO??\n\n### followSymbolicLinks\n\n* Type: `boolean`\n* Default: `false`\n\nFollow symbolic links or not. Call `fs.stat` on symbolic link if `true`.\n\n### `throwErrorOnBrokenSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nThrow an error when symbolic link is broken if `true` or safely use `lstat` call if `false`.\n\n### `pathSegmentSeparator`\n\n* Type: `string`\n* Default: `path.sep`\n\nBy default, this package uses the correct path separator for your OS (`\\` on Windows, `/` on Unix-like systems). But you can set this option to any separator character(s) that you want to use instead.\n\n### `fs`\n\n* Type: [`FileSystemAdapter`](./src/adapters/fs.ts)\n* Default: A default FS methods\n\nBy default, the built-in Node.js module (`fs`) is used to work with the file system. You can replace any method with your own.\n\n```ts\ninterface FileSystemAdapter {\n\tlstat?: typeof fs.lstat;\n\tstat?: typeof fs.stat;\n\tlstatSync?: typeof fs.lstatSync;\n\tstatSync?: typeof fs.statSync;\n\treaddir?: typeof fs.readdir;\n\treaddirSync?: typeof fs.readdirSync;\n}\n\nconst settings = new fsScandir.Settings({\n\tfs: { lstat: fakeLstat }\n});\n```\n\n## `old` and `modern` mode\n\nThis package has two modes that are used depending on the environment and parameters of use.\n\n### old\n\n* Node.js below `10.10` or when the `stats` option is enabled\n\nWhen working in the old mode, the directory is read first (`fs.readdir`), then the type of entries is determined (`fs.lstat` and/or `fs.stat` for symbolic links).\n\n### modern\n\n* Node.js 10.10+ and the `stats` option is disabled\n\nIn the modern mode, reading the directory (`fs.readdir` with the `withFileTypes` option) is combined with obtaining information about its entries. An additional call for symbolic links (`fs.stat`) is still present.\n\nThis mode makes fewer calls to the file system. It's faster.\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/nodelib/nodelib/releases) for changelog for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 111806}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2525485}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 9865712}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 24263443}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 40001094}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 42663671}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 12, "forksCount": 2, "subscribersCount": 3, "issues": {"count": 49, "openCount": 3, "distribution": {"3600": 12, "10800": 2, "32400": 0, "97200": 7, "291600": 6, "874800": 3, "2624400": 7, "7873200": 6, "23619600": 4, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mrmlnc", "commitsCount": 183}, {"username": "hayes", "commitsCount": 1}, {"username": "opichals", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 50}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 91}]}, "source": {"files": {"readmeSize": 4959, "testsSize": 16720, "hasNpmIgnore": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 20, "downloadsCount": 8087814.333333333, "downloadsAcceleration": 79327.95673515981, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9049178082191781, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7325165592632283, "detail": {"quality": 0.833873934422406, "popularity": 0.37826378434276886, "maintenance": 0.99989158404725}}}
{"analyzedAt": "2020-01-31T15:21:34.116Z", "collected": {"metadata": {"name": "@nodelib/fs.stat", "scope": "nodelib", "version": "2.0.3", "description": "Get the status of a file with some features", "keywords": ["NodeLib", "fs", "FileSystem", "file system", "stat"], "date": "2019-10-04T07:12:43.265Z", "publisher": {"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}, "maintainers": [{"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}], "repository": {"type": "git", "url": "git+https://github.com/nodelib/nodelib.git"}, "links": {"npm": "https://www.npmjs.com/package/%40nodelib%2Ffs.stat", "homepage": "https://github.com/nodelib/nodelib#readme", "repository": "https://github.com/nodelib/nodelib", "bugs": "https://github.com/nodelib/nodelib/issues"}, "license": "MIT", "releases": [{"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 3}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 5}, {"from": "2018-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 13}], "hasTestScript": true, "readme": "# @nodelib/fs.stat\n\n> Get the status of a file with some features.\n\n## :bulb: Highlights\n\nWrapper around standard method `fs.lstat` and `fs.stat` with some features.\n\n* :beginner: Normally follows symbolic link.\n* :gear: Can safely work with broken symbolic link.\n\n## Install\n\n```console\nnpm install @nodelib/fs.stat\n```\n\n## Usage\n\n```ts\nimport * as fsStat from '@nodelib/fs.stat';\n\nfsStat.stat('path', (error, stats) => { /* \u2026 */ });\n```\n\n## API\n\n### .stat(path, [optionsOrSettings], callback)\n\nReturns an instance of `fs.Stats` class for provided path with standard callback-style.\n\n```ts\nfsStat.stat('path', (error, stats) => { /* \u2026 */ });\nfsStat.stat('path', {}, (error, stats) => { /* \u2026 */ });\nfsStat.stat('path', new fsStat.Settings(), (error, stats) => { /* \u2026 */ });\n```\n\n### .statSync(path, [optionsOrSettings])\n\nReturns an instance of `fs.Stats` class for provided path.\n\n```ts\nconst stats = fsStat.stat('path');\nconst stats = fsStat.stat('path', {});\nconst stats = fsStat.stat('path', new fsStat.Settings());\n```\n\n#### path\n\n* Required: `true`\n* Type: `string | Buffer | URL`\n\nA path to a file. If a URL is provided, it must use the `file:` protocol.\n\n#### optionsOrSettings\n\n* Required: `false`\n* Type: `Options | Settings`\n* Default: An instance of `Settings` class\n\nAn [`Options`](#options) object or an instance of [`Settings`](#settings) class.\n\n> :book: When you pass a plain object, an instance of the `Settings` class will be created automatically. If you plan to call the method frequently, use a pre-created instance of the `Settings` class.\n\n### Settings([options])\n\nA class of full settings of the package.\n\n```ts\nconst settings = new fsStat.Settings({ followSymbolicLink: false });\n\nconst stats = fsStat.stat('path', settings);\n```\n\n## Options\n\n### `followSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nFollow symbolic link or not. Call `fs.stat` on symbolic link if `true`.\n\n### `markSymbolicLink`\n\n* Type: `boolean`\n* Default: `false`\n\nMark symbolic link by setting the return value of `isSymbolicLink` function to always `true` (even after `fs.stat`).\n\n> :book: Can be used if you want to know what is hidden behind a symbolic link, but still continue to know that it is a symbolic link.\n\n### `throwErrorOnBrokenSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nThrow an error when symbolic link is broken if `true` or safely return `lstat` call if `false`.\n\n### `fs`\n\n* Type: [`FileSystemAdapter`](./src/adapters/fs.ts)\n* Default: A default FS methods\n\nBy default, the built-in Node.js module (`fs`) is used to work with the file system. You can replace any method with your own.\n\n```ts\ninterface FileSystemAdapter {\n\tlstat?: typeof fs.lstat;\n\tstat?: typeof fs.stat;\n\tlstatSync?: typeof fs.lstatSync;\n\tstatSync?: typeof fs.statSync;\n}\n\nconst settings = new fsStat.Settings({\n\tfs: { lstat: fakeLstat }\n});\n```\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/nodelib/nodelib/releases) for changelog for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license."}, "npm": {"downloads": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 1281993}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 6861903}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 26884242}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 73745504}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 135938810}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 213565456}], "dependentsCount": 3, "starsCount": 0}, "github": {"starsCount": 12, "forksCount": 2, "subscribersCount": 3, "issues": {"count": 49, "openCount": 3, "distribution": {"3600": 12, "10800": 2, "32400": 0, "97200": 7, "291600": 6, "874800": 3, "2624400": 7, "7873200": 6, "23619600": 4, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mrmlnc", "commitsCount": 183}, {"username": "hayes", "commitsCount": 1}, {"username": "opichals", "commitsCount": 1}], "commits": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 0}, {"from": "2019-11-02T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 1}, {"from": "2019-08-04T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 51}, {"from": "2019-01-31T00:00:00.000Z", "to": "2020-01-31T00:00:00.000Z", "count": 95}]}, "source": {"files": {"readmeSize": 3075, "testsSize": 9279, "hasNpmIgnore": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 20, "downloadsCount": 24581834.666666668, "downloadsAcceleration": 120283.83359969559, "dependentsCount": 3}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9077328767123288, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7538083864417175, "detail": {"quality": 0.833873934422406, "popularity": 0.4390965692039853, "maintenance": 0.999892591124574}}}
{"analyzedAt": "2020-02-23T04:41:03.789Z", "collected": {"metadata": {"name": "@nodelib/fs.walk", "scope": "nodelib", "version": "1.2.4", "description": "A library for efficiently walking a directory recursively", "keywords": ["NodeLib", "fs", "FileSystem", "file system", "walk", "scanner", "crawler"], "date": "2019-10-04T07:12:50.441Z", "publisher": {"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}, "maintainers": [{"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}], "repository": {"type": "git", "url": "git+https://github.com/nodelib/nodelib.git"}, "links": {"npm": "https://www.npmjs.com/package/%40nodelib%2Ffs.walk", "homepage": "https://github.com/nodelib/nodelib#readme", "repository": "https://github.com/nodelib/nodelib", "bugs": "https://github.com/nodelib/nodelib/issues"}, "license": "MIT", "dependencies": {"@nodelib/fs.scandir": "2.1.3", "fastq": "^1.6.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 11}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 11}], "hasTestScript": true, "readme": "# @nodelib/fs.walk\n\n> A library for efficiently walking a directory recursively.\n\n## :bulb: Highlights\n\n* :moneybag: Returns useful information: `name`, `path`, `dirent` and `stats` (optional).\n* :rocket: On Node.js 10.10+ uses the mechanism without additional calls to determine the entry type for performance reasons. See [`old` and `modern` mode](https://github.com/nodelib/nodelib/blob/master/packages/fs/fs.scandir/README.md#old-and-modern-mode).\n* :gear: Built-in directories/files and error filtering system.\n* :link: Can safely work with broken symbolic links.\n\n## Install\n\n```console\nnpm install @nodelib/fs.walk\n```\n\n## Usage\n\n```ts\nimport * as fsWalk from '@nodelib/fs.walk';\n\nfsWalk.walk('path', (error, entries) => { /* \u2026 */ });\n```\n\n## API\n\n### .walk(path, [optionsOrSettings], callback)\n\nReads the directory recursively and asynchronously. Requires a callback function.\n\n> :book: If you want to use the Promise API, use `util.promisify`.\n\n```ts\nfsWalk.walk('path', (error, entries) => { /* \u2026 */ });\nfsWalk.walk('path', {}, (error, entries) => { /* \u2026 */ });\nfsWalk.walk('path', new fsWalk.Settings(), (error, entries) => { /* \u2026 */ });\n```\n\n### .walkStream(path, [optionsOrSettings])\n\nReads the directory recursively and asynchronously. [Readable Stream](https://nodejs.org/dist/latest-v12.x/docs/api/stream.html#stream_readable_streams) is used as a provider.\n\n```ts\nconst stream = fsWalk.walkStream('path');\nconst stream = fsWalk.walkStream('path', {});\nconst stream = fsWalk.walkStream('path', new fsWalk.Settings());\n```\n\n### .walkSync(path, [optionsOrSettings])\n\nReads the directory recursively and synchronously. Returns an array of entries.\n\n```ts\nconst entries = fsWalk.walkSync('path');\nconst entries = fsWalk.walkSync('path', {});\nconst entries = fsWalk.walkSync('path', new fsWalk.Settings());\n```\n\n#### path\n\n* Required: `true`\n* Type: `string | Buffer | URL`\n\nA path to a file. If a URL is provided, it must use the `file:` protocol.\n\n#### optionsOrSettings\n\n* Required: `false`\n* Type: `Options | Settings`\n* Default: An instance of `Settings` class\n\nAn [`Options`](#options) object or an instance of [`Settings`](#settings) class.\n\n> :book: When you pass a plain object, an instance of the `Settings` class will be created automatically. If you plan to call the method frequently, use a pre-created instance of the `Settings` class.\n\n### Settings([options])\n\nA class of full settings of the package.\n\n```ts\nconst settings = new fsWalk.Settings({ followSymbolicLinks: true });\n\nconst entries = fsWalk.walkSync('path', settings);\n```\n\n## Entry\n\n* `name` \u2014 The name of the entry (`unknown.txt`).\n* `path` \u2014 The path of the entry relative to call directory (`root/unknown.txt`).\n* `dirent` \u2014 An instance of [`fs.Dirent`](./src/types/index.ts) class.\n* [`stats`] \u2014 An instance of `fs.Stats` class.\n\n## Options\n\n### basePath\n\n* Type: `string`\n* Default: `undefined`\n\nBy default, all paths are built relative to the root path. You can use this option to set custom root path.\n\nIn the example below we read the files from the `root` directory, but in the results the root path will be `custom`.\n\n```ts\nfsWalk.walkSync('root'); // \u2192 ['root/file.txt']\nfsWalk.walkSync('root', { basePath: 'custom' }); // \u2192 ['custom/file.txt']\n```\n\n### concurrency\n\n* Type: `number`\n* Default: `Infinity`\n\nThe maximum number of concurrent calls to `fs.readdir`.\n\n> :book: The higher the number, the higher performance and the load on the File System. If you want to read in quiet mode, set the value to `4 * os.cpus().length` (4 is default size of [thread pool work scheduling](http://docs.libuv.org/en/v1.x/threadpool.html#thread-pool-work-scheduling)).\n\n### deepFilter\n\n* Type: [`DeepFilterFunction`](./src/settings.ts)\n* Default: `undefined`\n\nA function that indicates whether the directory will be read deep or not.\n\n```ts\n// Skip all directories that starts with `node_modules`\nconst filter: DeepFilterFunction = (entry) => !entry.path.startsWith('node_modules');\n```\n\n### entryFilter\n\n* Type: [`EntryFilterFunction`](./src/settings.ts)\n* Default: `undefined`\n\nA function that indicates whether the entry will be included to results or not.\n\n```ts\n// Exclude all `.js` files from results\nconst filter: EntryFilterFunction = (entry) => !entry.name.endsWith('.js');\n```\n\n### errorFilter\n\n* Type: [`ErrorFilterFunction`](./src/settings.ts)\n* Default: `undefined`\n\nA function that allows you to skip errors that occur when reading directories.\n\nFor example, you can skip `ENOENT` errors if required:\n\n```ts\n// Skip all ENOENT errors\nconst filter: ErrorFilterFunction = (error) => error.code == 'ENOENT';\n```\n\n### stats\n\n* Type: `boolean`\n* Default: `false`\n\nAdds an instance of `fs.Stats` class to the [`Entry`](#entry).\n\n> :book: Always use `fs.readdir` with additional `fs.lstat/fs.stat` calls to determine the entry type.\n\n### followSymbolicLinks\n\n* Type: `boolean`\n* Default: `false`\n\nFollow symbolic links or not. Call `fs.stat` on symbolic link if `true`.\n\n### `throwErrorOnBrokenSymbolicLink`\n\n* Type: `boolean`\n* Default: `true`\n\nThrow an error when symbolic link is broken if `true` or safely return `lstat` call if `false`.\n\n### `pathSegmentSeparator`\n\n* Type: `string`\n* Default: `path.sep`\n\nBy default, this package uses the correct path separator for your OS (`\\` on Windows, `/` on Unix-like systems). But you can set this option to any separator character(s) that you want to use instead.\n\n### `fs`\n\n* Type: `FileSystemAdapter`\n* Default: A default FS methods\n\nBy default, the built-in Node.js module (`fs`) is used to work with the file system. You can replace any method with your own.\n\n```ts\ninterface FileSystemAdapter {\n\tlstat: typeof fs.lstat;\n\tstat: typeof fs.stat;\n\tlstatSync: typeof fs.lstatSync;\n\tstatSync: typeof fs.statSync;\n\treaddir: typeof fs.readdir;\n\treaddirSync: typeof fs.readdirSync;\n}\n\nconst settings = new fsWalk.Settings({\n\tfs: { lstat: fakeLstat }\n});\n```\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/nodelib/nodelib/releases) for changelog for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 111776}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2525689}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 9865425}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 24263325}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 40002084}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 42664575}], "dependentsCount": 2, "starsCount": 0}, "github": {"starsCount": 12, "forksCount": 2, "subscribersCount": 3, "issues": {"count": 49, "openCount": 3, "distribution": {"3600": 12, "10800": 2, "32400": 0, "97200": 7, "291600": 6, "874800": 3, "2624400": 7, "7873200": 6, "23619600": 4, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mrmlnc", "commitsCount": 183}, {"username": "hayes", "commitsCount": 1}, {"username": "opichals", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 50}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 91}]}, "source": {"files": {"readmeSize": 6139, "testsSize": 24449, "hasNpmIgnore": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 20, "downloadsCount": 8087775, "downloadsAcceleration": 79325.70171232877, "dependentsCount": 2}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9049178082191781, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7342683629019662, "detail": {"quality": 0.833873934422406, "popularity": 0.38326893759630554, "maintenance": 0.99989158404725}}}
{"analyzedAt": "2020-02-10T18:06:19.419Z", "collected": {"metadata": {"name": "object-copy", "scope": "unscoped", "version": "1.0.0", "description": "Copy static properties, prototype properties, and descriptors from one object to another.", "keywords": ["copy", "object"], "date": "2017-06-25T11:48:15.080Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/object-copy.git"}, "links": {"npm": "https://www.npmjs.com/package/object-copy", "homepage": "https://github.com/jonschlinkert/object-copy", "repository": "https://github.com/jonschlinkert/object-copy", "bugs": "https://github.com/jonschlinkert/object-copy/issues"}, "license": "MIT", "dependencies": {"copy-descriptor": "^0.1.1", "define-property": "^1.0.0", "kind-of": "^5.0.0"}, "devDependencies": {"gulp-format-md": "^0.1.12", "mocha": "^3.4.2"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# object-copy [![NPM version](https://img.shields.io/npm/v/object-copy.svg?style=flat)](https://www.npmjs.com/package/object-copy) [![NPM monthly downloads](https://img.shields.io/npm/dm/object-copy.svg?style=flat)](https://npmjs.org/package/object-copy) [![NPM total downloads](https://img.shields.io/npm/dt/object-copy.svg?style=flat)](https://npmjs.org/package/object-copy) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/object-copy.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/object-copy)\n\n> Copy static properties, prototype properties, and descriptors from one object to another.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save object-copy\n```\n\n## Usage\n\n```js\nvar copy = require('object-copy');\n```\n\n## API\n\n### [copy](index.js#L32)\n\nCopy static properties, prototype properties, and descriptors from one object to another.\n\n**Params**\n\n* `receiver` **{Object}**\n* `provider` **{Object}**\n* `omit` **{String|Array}**: (optional) One or more properties to omit\n* `filter` **{Function}**: (optional) Called on each key before copying the property. If the function returns false, the property will not be copied.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nfunction App() {}\nvar proto = App.prototype;\nApp.prototype.set = function() {};\nApp.prototype.get = function() {};\n\nvar obj = {};\ncopy(obj, proto);\n\n// filter out keys\ncopy(obj, proto, function(key) {\n  return key !== 'index';\n});\n```\n\n## About\n\n### Related projects\n\n* [copy-descriptor](https://www.npmjs.com/package/copy-descriptor): Copy a descriptor from object A to object B | [homepage](https://github.com/jonschlinkert/copy-descriptor \"Copy a descriptor from object A to object B\")\n* [define-property](https://www.npmjs.com/package/define-property): Define a non-enumerable property on an object. | [homepage](https://github.com/jonschlinkert/define-property \"Define a non-enumerable property on an object.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on June 25, 2017._"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 468104}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 9894752}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 38984834}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 108868465}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 216646164}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 406543781}], "dependentsCount": 43, "starsCount": 0}, "github": {"starsCount": 13, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 1, "openCount": 1, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 6}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3277, "testsSize": 1251}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/object-copy.svg?style=flat", "shields": "https://img.shields.io/npm/v/object-copy.svg", "content": "https://img.shields.io/npm/v/object-copy.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/object-copy.svg?style=flat", "shields": "https://img.shields.io/npm/dm/object-copy.svg", "content": "https://img.shields.io/npm/dm/object-copy.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/object-copy.svg?style=flat", "shields": "https://img.shields.io/npm/dt/object-copy.svg", "content": "https://img.shields.io/npm/dt/object-copy.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/object-copy.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/object-copy.svg", "shields": "https://img.shields.io/travis/jonschlinkert/object-copy.svg", "content": "https://img.shields.io/travis/jonschlinkert/object-copy.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"define-property": {"required": "^1.0.0", "stable": "2.0.2", "latest": "2.0.2"}, "kind-of": {"required": "^5.0.0", "stable": "6.0.3", "latest": "6.0.3"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 16, "downloadsCount": 36289488.333333336, "downloadsAcceleration": 68861.77762557077, "dependentsCount": 43}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7785000207184762, "detail": {"quality": 0.8718552146202256, "popularity": 0.47712438128683277, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-08T22:07:19.665Z", "collected": {"metadata": {"name": "object.pick", "scope": "unscoped", "version": "1.3.0", "description": "Returns a filtered copy of an object with only the specified keys, similar to `_.pick` from lodash / underscore.", "keywords": ["object", "pick"], "date": "2017-08-19T02:34:34.023Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "phated", "email": "blaine.bublitz@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/object.pick.git"}, "links": {"npm": "https://www.npmjs.com/package/object.pick", "homepage": "https://github.com/jonschlinkert/object.pick", "repository": "https://github.com/jonschlinkert/object.pick", "bugs": "https://github.com/jonschlinkert/object.pick/issues"}, "license": "MIT", "dependencies": {"isobject": "^3.0.1"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.1.2", "vinyl": "^2.0.0"}, "releases": [{"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2018-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# object.pick [![NPM version](https://img.shields.io/npm/v/object.pick.svg?style=flat)](https://www.npmjs.com/package/object.pick) [![NPM monthly downloads](https://img.shields.io/npm/dm/object.pick.svg?style=flat)](https://npmjs.org/package/object.pick)  [![NPM total downloads](https://img.shields.io/npm/dt/object.pick.svg?style=flat)](https://npmjs.org/package/object.pick) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/object.pick.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/object.pick)\n\n> Returns a filtered copy of an object with only the specified keys, similar to `_.pick` from lodash / underscore.\n\nYou might also be interested in [object.omit](https://github.com/jonschlinkert/object.omit).\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save object.pick\n```\n\n## benchmarks\n\nThis is the [fastest implementation](http://jsperf.com/pick-props) I tested. Pull requests welcome!\n\n## Usage\n\n```js\nvar pick = require('object.pick');\n\npick({a: 'a', b: 'b'}, 'a')\n//=> {a: 'a'}\n\npick({a: 'a', b: 'b', c: 'c'}, ['a', 'b'])\n//=> {a: 'a', b: 'b'}\n```\n\n## About\n\n### Related projects\n\n* [extend-shallow](https://www.npmjs.com/package/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util. | [homepage](https://github.com/jonschlinkert/extend-shallow \"Extend an object with the properties of additional objects. node.js/javascript util.\")\n* [get-value](https://www.npmjs.com/package/get-value): Use property paths (`a.b.c`) to get a nested value from an object. | [homepage](https://github.com/jonschlinkert/get-value \"Use property paths (`a.b.c`) to get a nested value from an object.\")\n* [mixin-deep](https://www.npmjs.com/package/mixin-deep): Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. | [homepage](https://github.com/jonschlinkert/mixin-deep \"Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone.\")\n* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value \"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/object.pick/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.2.0, on October 27, 2016._"}, "npm": {"downloads": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 1675448}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 9913297}, {"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 41483528}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 110425518}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 220008557}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 410013666}], "dependentsCount": 141, "starsCount": 2}, "github": {"starsCount": 30, "forksCount": 9, "subscribersCount": 4, "issues": {"count": 5, "openCount": 2, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 2, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 25}, {"username": "phated", "commitsCount": 2}], "commits": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2020-01-09T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-08-12T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}, {"from": "2019-02-08T00:00:00.000Z", "to": "2020-02-08T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3435, "testsSize": 1852}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/object.pick.svg?style=flat", "shields": "https://img.shields.io/npm/v/object.pick.svg", "content": "https://img.shields.io/npm/v/object.pick.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/object.pick.svg?style=flat", "shields": "https://img.shields.io/npm/dm/object.pick.svg", "content": "https://img.shields.io/npm/dm/object.pick.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/object.pick.svg?style=flat", "shields": "https://img.shields.io/npm/dt/object.pick.svg", "content": "https://img.shields.io/npm/dt/object.pick.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/object.pick.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/object.pick.svg", "shields": "https://img.shields.io/travis/jonschlinkert/object.pick.svg", "content": "https://img.shields.io/travis/jonschlinkert/object.pick.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 47, "downloadsCount": 36808506, "downloadsAcceleration": 89600.9507800609, "dependentsCount": 141}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8215110659621223, "detail": {"quality": 0.9596449968378136, "popularity": 0.524764697225032, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-04T11:41:09.792Z", "collected": {"metadata": {"name": "object-visit", "scope": "unscoped", "version": "1.0.1", "description": "Call a specified method on each value in the given object.", "keywords": ["context", "function", "helper", "key", "method", "object", "value", "visit", "visitor"], "date": "2017-05-30T04:25:21.809Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/object-visit.git"}, "links": {"npm": "https://www.npmjs.com/package/object-visit", "homepage": "https://github.com/jonschlinkert/object-visit", "repository": "https://github.com/jonschlinkert/object-visit", "bugs": "https://github.com/jonschlinkert/object-visit/issues"}, "license": "MIT", "dependencies": {"isobject": "^3.0.0"}, "devDependencies": {"gulp": "^3.9.1", "gulp-eslint": "^3.0.1", "gulp-format-md": "^0.1.12", "gulp-istanbul": "^1.1.1", "gulp-mocha": "^3.0.0", "mocha": "^3.2.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# object-visit [![NPM version](https://img.shields.io/npm/v/object-visit.svg?style=flat)](https://www.npmjs.com/package/object-visit) [![NPM monthly downloads](https://img.shields.io/npm/dm/object-visit.svg?style=flat)](https://npmjs.org/package/object-visit) [![NPM total downloads](https://img.shields.io/npm/dt/object-visit.svg?style=flat)](https://npmjs.org/package/object-visit) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/object-visit.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/object-visit)\n\n> Call a specified method on each value in the given object.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save object-visit\n```\n\n## Usage\n\n```js\nvar visit = require('object-visit');\n\nvar ctx = {\n  data: {},\n  set: function (key, value) {\n    if (typeof key === 'object') {\n      visit(ctx, 'set', key);\n    } else {\n      ctx.data[key] = value;\n    }\n  }\n};\n\nctx.set('a', 'a');\nctx.set('b', 'b');\nctx.set('c', 'c');\nctx.set({d: {e: 'f'}});\n\nconsole.log(ctx.data);\n//=> {a: 'a', b: 'b', c: 'c', d: { e: 'f' }};\n```\n\n## About\n\n### Related projects\n\n* [base-methods](https://www.npmjs.com/package/base-methods): base-methods is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting\u2026 [more](https://github.com/jonschlinkert/base-methods) | [homepage](https://github.com/jonschlinkert/base-methods \"base-methods is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting with a handful of common methods, like `set`, `get`, `del` and `use`.\")\n* [collection-visit](https://www.npmjs.com/package/collection-visit): Visit a method over the items in an object, or map visit over the objects\u2026 [more](https://github.com/jonschlinkert/collection-visit) | [homepage](https://github.com/jonschlinkert/collection-visit \"Visit a method over the items in an object, or map visit over the objects in an array.\")\n* [define-property](https://www.npmjs.com/package/define-property): Define a non-enumerable property on an object. | [homepage](https://github.com/jonschlinkert/define-property \"Define a non-enumerable property on an object.\")\n* [map-visit](https://www.npmjs.com/package/map-visit): Map `visit` over an array of objects. | [homepage](https://github.com/jonschlinkert/map-visit \"Map `visit` over an array of objects.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on May 30, 2017._"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2026188}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 10739633}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 44843202}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 113989251}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 225152933}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 422114022}], "dependentsCount": 52, "starsCount": 0}, "github": {"starsCount": 13, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 33}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3541, "testsSize": 1524}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/object-visit.svg?style=flat", "shields": "https://img.shields.io/npm/v/object-visit.svg", "content": "https://img.shields.io/npm/v/object-visit.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/object-visit.svg?style=flat", "shields": "https://img.shields.io/npm/dm/object-visit.svg", "content": "https://img.shields.io/npm/dm/object-visit.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/object-visit.svg?style=flat", "shields": "https://img.shields.io/npm/dt/object-visit.svg", "content": "https://img.shields.io/npm/dt/object-visit.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/object-visit.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/object-visit.svg", "shields": "https://img.shields.io/travis/jonschlinkert/object-visit.svg", "content": "https://img.shields.io/travis/jonschlinkert/object-visit.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 17, "downloadsCount": 37996417, "downloadsAcceleration": 108167.37064307457, "dependentsCount": 52}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8097840386717434, "detail": {"quality": 0.9596449968378136, "popularity": 0.49122616483157744, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-29T08:25:18.808Z", "collected": {"metadata": {"name": "once", "scope": "unscoped", "version": "1.4.0", "description": "Run a function exactly one time", "keywords": ["once", "function", "one", "single"], "date": "2016-09-06T21:11:09.367Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/once.git"}, "links": {"npm": "https://www.npmjs.com/package/once", "homepage": "https://github.com/isaacs/once#readme", "repository": "https://github.com/isaacs/once", "bugs": "https://github.com/isaacs/once/issues"}, "license": "ISC", "dependencies": {"wrappy": "1"}, "devDependencies": {"tap": "^7.0.1"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 2594824}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 15526038}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 64894543}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 170054402}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 334575121}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 626441996}], "dependentsCount": 902, "starsCount": 41}, "github": {"starsCount": 174, "forksCount": 22, "subscribersCount": 7, "issues": {"count": 15, "openCount": 0, "distribution": {"3600": 2, "10800": 1, "32400": 0, "97200": 2, "291600": 2, "874800": 1, "2624400": 3, "7873200": 2, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 12}, {"username": "floatdrop", "commitsCount": 1}, {"username": "juliangruber", "commitsCount": 1}, {"username": "morenoh149", "commitsCount": 1}, {"username": "parshap", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1772, "testsSize": 1867}, "coverage": 0.83}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.9744999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 250, "downloadsCount": 56684800.666666664, "downloadsAcceleration": 147335.8058409436, "dependentsCount": 902}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8345542357906919, "detail": {"quality": 0.8695645243612842, "popularity": 0.6392099901513122, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-14T12:52:40.211Z", "collected": {"metadata": {"name": "onetime", "scope": "unscoped", "version": "5.1.0", "description": "Ensure a function is only called once", "keywords": ["once", "function", "one", "onetime", "func", "fn", "single", "call", "called", "prevent"], "date": "2019-04-02T02:39:48.168Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/onetime.git"}, "links": {"npm": "https://www.npmjs.com/package/onetime", "homepage": "https://github.com/sindresorhus/onetime#readme", "repository": "https://github.com/sindresorhus/onetime", "bugs": "https://github.com/sindresorhus/onetime/issues"}, "license": "MIT", "dependencies": {"mimic-fn": "^2.1.0"}, "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.1", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 4}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# onetime [![Build Status](https://travis-ci.org/sindresorhus/onetime.svg?branch=master)](https://travis-ci.org/sindresorhus/onetime)\n\n> Ensure a function is only called once\n\nWhen called multiple times it will return the return value from the first call.\n\n*Unlike the module [once](https://github.com/isaacs/once), this one isn't naughty and extending `Function.prototype`.*\n\n\n## Install\n\n```\n$ npm install onetime\n```\n\n\n## Usage\n\n```js\nconst onetime = require('onetime');\n\nlet i = 0;\n\nconst foo = onetime(() => ++i);\n\nfoo(); //=> 0\nfoo(); //=> 0\nfoo(); //=> 0\n\nonetime.callCount(foo); //=> 3\n```\n\n```js\nconst onetime = require('onetime');\n\nconst foo = onetime(() => {}, {throw: true});\n\nfoo();\n\nfoo();\n//=> Error: Function `foo` can only be called once\n```\n\n\n## API\n\n### onetime(fn, [options])\n\nReturns a function that only calls `fn` once.\n\n#### fn\n\nType: `Function`\n\nFunction that should only be called once.\n\n#### options\n\nType: `Object`\n\n##### throw\n\nType: `boolean`<br>\nDefault: `false`\n\nThrow an error when called more than once.\n\n### onetime.callCount(fn)\n\nReturns a number representing how many times `fn` has been called.\n\nNote: It throws an error if you pass in a function that is not wrapped by `onetime`.\n\n```js\nconst foo = onetime(() => {});\n\nfoo();\nfoo();\nfoo();\n\nconsole.log(onetime.callCount(foo));\n//=> 3\n```\n\n#### fn\n\nType: `Function`\n\nFunction to get call count from.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3311198}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 17341501}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 71524350}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 181273270}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 342110810}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 578161133}], "dependentsCount": 82, "starsCount": 7}, "github": {"starsCount": 104, "forksCount": 5, "subscribersCount": 9, "issues": {"count": 10, "openCount": 1, "distribution": {"3600": 2, "10800": 0, "32400": 3, "97200": 2, "291600": 1, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 28}, {"username": "kevva", "commitsCount": 3}, {"username": "BendingBender", "commitsCount": 2}, {"username": "SamVerschueren", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "fregante", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 12}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1452, "testsSize": 746}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/onetime.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/onetime.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/onetime/master.svg", "content": "https://img.shields.io/travis/sindresorhus/onetime/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"mimic-fn": {"required": "^2.1.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 131, "downloadsCount": 60424423.333333336, "downloadsAcceleration": 279188.60072298325, "dependentsCount": 82}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9253413555194805}}, "score": {"final": 0.8288686578598323, "detail": {"quality": 0.9452098128507848, "popularity": 0.5580971133544185, "maintenance": 0.9999192123730012}}}
{"analyzedAt": "2020-02-12T09:32:46.342Z", "collected": {"metadata": {"name": "optimist", "scope": "unscoped", "version": "0.6.1", "description": "Light-weight option parsing with an argv hash. No optstrings attached.", "keywords": ["argument", "args", "option", "parser", "parsing", "cli", "command"], "date": "2014-02-06T05:40:56.954Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "substack", "email": "mail@substack.net"}, "maintainers": [{"username": "substack", "email": "substack@gmail.com"}, {"username": "chevex", "email": "alex.ford@codetunnel.com"}, {"username": "bcoe", "email": "ben@npmjs.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/substack/node-optimist.git"}, "links": {"npm": "https://www.npmjs.com/package/optimist", "homepage": "https://github.com/substack/node-optimist", "repository": "https://github.com/substack/node-optimist", "bugs": "https://github.com/substack/node-optimist/issues"}, "license": "MIT", "dependencies": {"wordwrap": "~0.0.2", "minimist": "~0.0.1"}, "devDependencies": {"hashish": "~0.0.4", "tap": "~0.4.0"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# DEPRECATION NOTICE\n\nI don't want to maintain this module anymore since I just use\n[minimist](https://npmjs.org/package/minimist), the argument parsing engine,\ndirectly instead nowadays.\n\nSee [yargs](https://github.com/chevex/yargs) for the modern, pirate-themed\nsuccessor to optimist.\n\n[![yarrrrrrrgs!](http://i.imgur.com/4WFGVJ9.png)](https://github.com/chevex/yargs)\n\nYou should also consider [nomnom](https://github.com/harthur/nomnom).\n\noptimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn't have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log('Buy more riffiwobbles');\n}\nelse {\n    console.log('Sell the xupptumblers');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one's optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There's more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist').argv;\nconsole.log('(%d,%d)', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require('util');\nvar argv = require('optimist').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? 'Le chat dit: ' : 'The cat says: ');\n}\nconsole.log(\n    (argv.fr ? 'miaou' : 'meow') + (argv.p ? '.' : '')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist').argv;\nconsole.log('(%d,%d)', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ 'moo' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ 'foo', 'bar', 'baz' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist')\n    .usage('Usage: $0 -x [num] -y [num]')\n    .demand(['x','y'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist')\n    .default('x', 10)\n    .default('y', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist')\n    .boolean('v')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ 'bar', 'baz', 'foo' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist')\n    .boolean(['x','y','z'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ 'one', 'two', 'three' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require('optimist')\n    .usage('Count the lines in a file.\\nUsage: $0')\n    .demand('f')\n    .alias('f', 'file')\n    .describe('f', 'Load a file')\n    .argv\n;\n\nvar fs = require('fs');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on('data', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on('end', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire('optimist').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire('optimist')([ '-x', '1', '-y', '2' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire('optimist').parse([ '-x', '1', '-y', '2' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn't\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require('optimist')\n    .options('f', {\n        alias : 'file',\n        default : '/etc/passwd',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require('optimist')\n    .alias('f', 'file')\n    .default('f', '/etc/passwd')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won't get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ '-c', '3', '-d', '4' ],\n      '$0': 'node ./examples/reflect.js',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      '$0': 'node ./examples/reflect.js',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      '$0': 'node ./examples/reflect.js',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       '$0': 'node ./examples/reflect.js',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\nshort numbers\n-------------\n\nShort numeric `head -n5` style argument work too:\n\n    $ node reflect.js -n123 -m456\n    { '3': true,\n      '6': true,\n      _: [],\n      '$0': 'node ./reflect.js',\n      n: 123,\n      m: 456 }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl's\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm)."}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1718119}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 9057846}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 39056916}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 108766715}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 217239191}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 409445992}], "dependentsCount": 4102, "starsCount": 143}, "github": {"starsCount": 2589, "forksCount": 163, "subscribersCount": 63, "issues": {"count": 149, "openCount": 13, "distribution": {"3600": 10, "10800": 6, "32400": 3, "97200": 6, "291600": 3, "874800": 7, "2624400": 10, "7873200": 8, "23619600": 19, "70858800": 49, "212576400": 28}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 148}, {"username": "indexzero", "commitsCount": 9}, {"username": "jfhbrook", "commitsCount": 8}, {"username": "coderarity", "commitsCount": 4}, {"username": "papandreou", "commitsCount": 2}, {"username": "colinta", "commitsCount": 1}, {"username": "danielbeardsley", "commitsCount": 1}, {"username": "guybrush", "commitsCount": 1}, {"username": "hdf", "commitsCount": 1}, {"username": "marshall", "commitsCount": 1}, {"username": "summatix", "commitsCount": 1}, {"username": "vojtajina", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}], "statuses": [{"context": "default", "state": "failure"}]}, "source": {"files": {"readmeSize": 10695, "testsSize": 20692}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/node-optimist.png", "service": "https://api.travis-ci.org/substack/node-optimist.svg", "shields": "https://img.shields.io/travis/substack/node-optimist.svg", "content": "https://img.shields.io/travis/substack/node-optimist.json"}, "info": {"service": "travis", "type": "build"}}], "outdatedDependencies": {"wordwrap": {"required": "~0.0.2", "stable": "1.0.0", "latest": "1.0.0"}, "minimist": {"required": "~0.0.1", "stable": "1.2.0", "latest": "1.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.355, "tests": 0.6, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 2970, "downloadsCount": 36255571.666666664, "downloadsAcceleration": 66310.47806316591, "dependentsCount": 4102}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5457501971526335, "detail": {"quality": 0.7289182204779419, "popularity": 0.7553757554691797, "maintenance": 0.17912347598582323}}}
{"analyzedAt": "2020-02-22T15:31:53.891Z", "collected": {"metadata": {"name": "optionator", "scope": "unscoped", "version": "0.8.3", "description": "option parsing and help generation", "keywords": ["options", "flags", "option parsing", "cli"], "date": "2019-11-06T21:55:39.994Z", "author": {"name": "George Zahariev", "email": "z@georgezahariev.com", "username": "gkz"}, "publisher": {"username": "gkz", "email": "z@georgezahariev.com"}, "maintainers": [{"username": "gkz", "email": "z@georgezahariev.com"}], "repository": {"type": "git", "url": "git://github.com/gkz/optionator.git"}, "links": {"npm": "https://www.npmjs.com/package/optionator", "homepage": "https://github.com/gkz/optionator", "repository": "https://github.com/gkz/optionator", "bugs": "https://github.com/gkz/optionator/issues"}, "license": "MIT", "dependencies": {"prelude-ls": "~1.1.2", "deep-is": "~0.1.3", "word-wrap": "~1.2.3", "type-check": "~0.3.2", "levn": "~0.3.0", "fast-levenshtein": "~2.0.6"}, "devDependencies": {"livescript": "~1.6.0", "mocha": "~6.2.2", "istanbul": "~0.4.5"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Optionator\n<a name=\"optionator\" />\n\nOptionator is a JavaScript/Node.js option parsing and help generation library used by [eslint](http://eslint.org), [Grasp](http://graspjs.com), [LiveScript](http://livescript.net), [esmangle](https://github.com/estools/esmangle), [escodegen](https://github.com/estools/escodegen), and [many more](https://www.npmjs.com/browse/depended/optionator).\n\nFor an online demo, check out the [Grasp online demo](http://www.graspjs.com/#demo).\n\n[About](#about) &middot; [Usage](#usage) &middot; [Settings Format](#settings-format) &middot; [Argument Format](#argument-format)\n\n## Why?\nThe  problem with other option parsers, such as `yargs` or `minimist`, is they just accept all input, valid or not.\nWith Optionator, if you mistype an option, it will give you an error (with a suggestion for what you meant).\nIf you give the wrong type of argument for an option, it will give you an error rather than supplying the wrong input to your application.\n\n    $ cmd --halp\n    Invalid option '--halp' - perhaps you meant '--help'?\n\n    $ cmd --count str\n    Invalid value for option 'count' - expected type Int, received value: str.\n\nOther helpful features include reformatting the help text based on the size of the console, so that it fits even if the console is narrow, and accepting not just an array (eg. process.argv), but a string or object as well, making things like testing much easier.\n\n## About\nOptionator uses [type-check](https://github.com/gkz/type-check) and [levn](https://github.com/gkz/levn) behind the scenes to cast and verify input according the specified types.\n\nMIT license. Version 0.8.3\n\n    npm install optionator\n\nFor updates on Optionator, [follow me on twitter](https://twitter.com/gkzahariev).\n\nOptionator is a Node.js module, but can be used in the browser as well if packed with webpack/browserify.\n\n## Usage\n`require('optionator');` returns a function. It has one property, `VERSION`, the current version of the library as a string. This function is called with an object specifying your options and other information, see the [settings format section](#settings-format). This in turn returns an object with three properties, `parse`, `parseArgv`, `generateHelp`, and `generateHelpForOption`, which are all functions.\n\n```js\nvar optionator = require('optionator')({\n    prepend: 'Usage: cmd [options]',\n    append: 'Version 1.0.0',\n    options: [{\n        option: 'help',\n        alias: 'h',\n        type: 'Boolean',\n        description: 'displays help'\n    }, {\n        option: 'count',\n        alias: 'c',\n        type: 'Int',\n        description: 'number of things',\n        example: 'cmd --count 2'\n    }]\n});\n\nvar options = optionator.parseArgv(process.argv);\nif (options.help) {\n    console.log(optionator.generateHelp());\n}\n...\n```\n\n### parse(input, parseOptions)\n`parse` processes the `input` according to your settings, and returns an object with the results.\n\n##### arguments\n* input - `[String] | Object | String` - the input you wish to parse\n* parseOptions - `{slice: Int}` - all options optional\n    - `slice` specifies how much to slice away from the beginning if the input is an array or string - by default `0` for string, `2` for array (works with `process.argv`)\n\n##### returns\n`Object` - the parsed options, each key is a camelCase version of the option name (specified in dash-case), and each value is the processed value for that option. Positional values are in an array under the `_` key.\n\n##### example\n```js\nparse(['node', 't.js', '--count', '2', 'positional']); // {count: 2, _: ['positional']}\nparse('--count 2 positional');                         // {count: 2, _: ['positional']}\nparse({count: 2, _:['positional']});                   // {count: 2, _: ['positional']}\n```\n\n### parseArgv(input)\n`parseArgv` works exactly like `parse`, but only for array input and it slices off the first two elements.\n\n##### arguments\n* input - `[String]` - the input you wish to parse\n\n##### returns\nSee \"returns\" section in \"parse\"\n\n##### example\n```js\nparseArgv(process.argv);\n```\n\n### generateHelp(helpOptions)\n`generateHelp` produces help text based on your settings.\n\n##### arguments\n* helpOptions - `{showHidden: Boolean, interpolate: Object}` - all options optional\n    - `showHidden` specifies whether to show options with `hidden: true` specified, by default it is `false`\n    - `interpolate` specify data to be interpolated in `prepend` and `append` text, `{{key}}` is the format - eg. `generateHelp({interpolate:{version: '0.4.2'}})`, will change this `append` text: `Version {{version}}` to `Version 0.4.2`\n\n##### returns\n`String` - the generated help text\n\n##### example\n```js\ngenerateHelp(); /*\n\"Usage: cmd [options] positional\n\n  -h, --help       displays help\n  -c, --count Int  number of things\n\nVersion  1.0.0\n\"*/\n```\n\n### generateHelpForOption(optionName)\n`generateHelpForOption` produces expanded help text for the specified with `optionName` option. If an `example` was specified for the option, it will be displayed,  and if a `longDescription` was specified, it will display that instead of the `description`.\n\n##### arguments\n* optionName - `String` - the name of the option to display\n\n##### returns\n`String` - the generated help text for the option\n\n##### example\n```js\ngenerateHelpForOption('count'); /*\n\"-c, --count Int\ndescription: number of things\nexample: cmd --count 2\n\"*/\n```\n\n## Settings Format\nWhen your `require('optionator')`, you get a function that takes in a settings object. This object has the type:\n\n    {\n      prepend: String,\n      append: String,\n      options: [{heading: String} | {\n        option: String,\n        alias: [String] | String,\n        type: String,\n        enum: [String],\n        default: String,\n        restPositional: Boolean,\n        required: Boolean,\n        overrideRequired: Boolean,\n        dependsOn: [String] | String,\n        concatRepeatedArrays: Boolean | (Boolean, Object),\n        mergeRepeatedObjects: Boolean,\n        description: String,\n        longDescription: String,\n        example: [String] | String\n      }],\n      helpStyle: {\n        aliasSeparator: String,\n        typeSeparator: String,\n        descriptionSeparator: String,\n        initialIndent: Int,\n        secondaryIndent: Int,\n        maxPadFactor: Number\n      },\n      mutuallyExclusive: [[String | [String]]],\n      concatRepeatedArrays: Boolean | (Boolean, Object), // deprecated, set in defaults object\n      mergeRepeatedObjects: Boolean, // deprecated, set in defaults object\n      positionalAnywhere: Boolean,\n      typeAliases: Object,\n      defaults: Object\n    }\n\nAll of the properties are optional (the `Maybe` has been excluded for brevities sake), except for having either `heading: String` or `option: String` in each object in the `options` array.\n\n### Top Level Properties\n* `prepend` is an optional string to be placed before the options in the help text\n* `append` is an optional string to be placed after the options in the help text\n* `options` is a required array specifying your options and headings, the options and headings will be displayed in the order specified\n* `helpStyle` is an optional object which enables you to change the default appearance of some aspects of the help text\n* `mutuallyExclusive` is an optional array of arrays of either strings or arrays of strings. The top level array is a list of rules, each rule is a list of elements - each element can be either a string (the name of an option), or a list of strings (a group of option names) - there will be an error if more than one element is present\n* `concatRepeatedArrays` see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the `defaults` property\n* `mergeRepeatedObjects` see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the `defaults` property\n* `positionalAnywhere` is an optional boolean (defaults to `true`) - when `true` it allows positional arguments anywhere, when `false`, all arguments after the first positional one are taken to be positional as well, even if they look like a flag. For example, with `positionalAnywhere: false`, the arguments `--flag --boom 12 --crack` would have two positional arguments: `12` and `--crack`\n* `typeAliases` is an optional object, it allows you to set aliases for types, eg. `{Path: 'String'}` would allow you to use the type `Path` as an alias for the type `String`\n* `defaults` is an optional object following the option properties format, which specifies default values for all options. A default will be overridden if manually set. For example, you can do `default: { type: \"String\" }` to set the default type of all options to `String`, and then override that default in an individual option by setting the `type` property\n\n#### Heading Properties\n* `heading` a required string, the name of the heading\n\n#### Option Properties\n* `option` the required name of the option - use dash-case, without the leading dashes\n* `alias` is an optional string or array of strings which specify any aliases for the option\n* `type` is a required string in the [type check](https://github.com/gkz/type-check) [format](https://github.com/gkz/type-check#type-format), this will be used to cast the inputted value and validate it\n* `enum` is an optional array of strings, each string will be parsed by [levn](https://github.com/gkz/levn) - the argument value must be one of the resulting values - each potential value must validate against the specified `type`\n* `default` is a optional string, which will be parsed by [levn](https://github.com/gkz/levn) and used as the default value if none is set - the value must validate against the specified `type`\n* `restPositional` is an optional boolean - if set to `true`, everything after the option will be taken to be a positional argument, even if it looks like a named argument\n* `required` is an optional boolean - if set to `true`, the option parsing will fail if the option is not defined\n* `overrideRequired` is a optional boolean - if set to `true` and the option is used, and there is another option which is required but not set, it will override the need for the required option and there will be no error - this is useful if you have required options and want to use `--help` or `--version` flags\n* `concatRepeatedArrays` is an optional boolean or tuple with boolean and options object (defaults to `false`) - when set to `true` and an option contains an array value and is repeated, the subsequent values for the flag will be appended rather than overwriting the original value - eg. option `g` of type `[String]`: `-g a -g b -g c,d` will result in `['a','b','c','d']`\n\n You can supply an options object by giving the following value: `[true, options]`. The one currently supported option is `oneValuePerFlag`, this only allows one array value per flag. This is useful if your potential values contain a comma.\n* `mergeRepeatedObjects` is an optional boolean (defaults to `false`) - when set to `true` and an option contains an object value and is repeated, the subsequent values for the flag will be merged rather than overwriting the original value - eg. option `g` of type `Object`: `-g a:1 -g b:2 -g c:3,d:4` will result in `{a: 1, b: 2, c: 3, d: 4}`\n* `dependsOn` is an optional string or array of strings - if simply a string (the name of another option), it will make sure that that other option is set, if an array of strings, depending on whether `'and'` or `'or'` is first, it will either check whether all (`['and', 'option-a', 'option-b']`), or at least one (`['or', 'option-a', 'option-b']`) other options are set\n* `description` is an optional string, which will be displayed next to the option in the help text\n* `longDescription` is an optional string, it will be displayed instead of the `description` when `generateHelpForOption` is used\n* `example` is an optional string or array of strings with example(s) for the option - these will be displayed when `generateHelpForOption` is used\n\n#### Help Style Properties\n* `aliasSeparator` is an optional string, separates multiple names from each other - default: ' ,'\n* `typeSeparator` is an optional string, separates the type from the names - default: ' '\n* `descriptionSeparator` is an optional string , separates the description from the padded name and type - default: '  '\n* `initialIndent` is an optional int - the amount of indent for options - default: 2\n* `secondaryIndent` is an optional int - the amount of indent if wrapped fully (in addition to the initial indent) - default: 4\n* `maxPadFactor` is an optional number - affects the default level of padding for the names/type, it is multiplied by the average of the length of the names/type - default: 1.5\n\n## Argument Format\nAt the highest level there are two types of arguments: named, and positional.\n\nName arguments of any length are prefixed with `--` (eg. `--go`), and those of one character may be prefixed with either `--` or `-` (eg. `-g`).\n\nThere are two types of named arguments: boolean flags (eg. `--problemo`, `-p`) which take no value and result in a `true` if they are present, the falsey `undefined` if they are not present, or `false` if present and explicitly prefixed with `no` (eg. `--no-problemo`). Named arguments with values (eg. `--tseries 800`, `-t 800`) are the other type. If the option has a type `Boolean` it will automatically be made into a boolean flag. Any other type results in a named argument that takes a value.\n\nFor more information about how to properly set types to get the value you want, take a look at the [type check](https://github.com/gkz/type-check) and [levn](https://github.com/gkz/levn) pages.\n\nYou can group single character arguments that use a single `-`, however all except the last must be boolean flags (which take no value). The last may be a boolean flag, or an argument which takes a value - eg. `-ba 2` is equivalent to `-b -a 2`.\n\nPositional arguments are all those values which do not fall under the above - they can be anywhere, not just at the end. For example, in `cmd -b one -a 2 two` where `b` is a boolean flag, and `a` has the type `Number`, there are two positional arguments, `one` and `two`.\n\nEverything after an `--` is positional, even if it looks like a named argument.\n\nYou may optionally use `=` to separate option names from values, for example: `--count=2`.\n\nIf you specify the option `NUM`, then any argument using a single `-` followed by a number will be valid and will set the value of `NUM`. Eg. `-2` will be parsed into `NUM: 2`.\n\nIf duplicate named arguments are present, the last one will be taken.\n\n## Technical About\n`optionator` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It uses [levn](https://github.com/gkz/levn) to cast arguments to their specified type, and uses [type-check](https://github.com/gkz/type-check) to validate values. It also uses the [prelude.ls](http://preludels.com/) library."}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1850945}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 10956961}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 46488610}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 120025946}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 226147361}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 405006162}], "dependentsCount": 185, "starsCount": 6}, "github": {"starsCount": 123, "forksCount": 7, "subscribersCount": 6, "issues": {"count": 31, "openCount": 11, "distribution": {"3600": 2, "10800": 1, "32400": 0, "97200": 3, "291600": 3, "874800": 2, "2624400": 2, "7873200": 1, "23619600": 5, "70858800": 4, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "gkz", "commitsCount": 65}, {"username": "paazmaya", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "raine", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3}]}, "source": {"files": {"readmeSize": 15047, "testsSize": 31253, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.43499999999999994, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 146, "downloadsCount": 40008648.666666664, "downloadsAcceleration": 146695.6786339421, "dependentsCount": 185}, "maintenance": {"releasesFrequency": 0.5366438356164384, "commitsFrequency": 0.19202054794520546, "openIssues": 0.7419354838709677, "issuesDistribution": 0}}, "score": {"final": 0.6352665012161377, "detail": {"quality": 0.7400080099690929, "popularity": 0.563583706731085, "maintenance": 0.6171708596272288}}}
{"analyzedAt": "2020-02-12T02:33:30.346Z", "collected": {"metadata": {"name": "os-tmpdir", "scope": "unscoped", "version": "2.0.0", "description": "Node.js os.tmpdir() ponyfill", "keywords": ["built-in", "core", "ponyfill", "polyfill", "shim", "os", "tmpdir", "tempdir", "tmp", "temp", "dir", "directory", "env", "environment"], "date": "2018-11-08T11:14:15.596Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/os-tmpdir.git"}, "links": {"npm": "https://www.npmjs.com/package/os-tmpdir", "homepage": "https://github.com/sindresorhus/os-tmpdir#readme", "repository": "https://github.com/sindresorhus/os-tmpdir", "bugs": "https://github.com/sindresorhus/os-tmpdir/issues"}, "license": "MIT", "devDependencies": {"ava": "*", "xo": "^0.16.0"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}], "deprecated": "This is not needed anymore. `require('os').tmpdir()` in Node.js 4 and up is good.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "**Deprecated:** This is not needed anymore. `require('os').tmpdir()` in Node.js 4 and up is good.\n\n---\n\n# os-tmpdir [![Build Status](https://travis-ci.org/sindresorhus/os-tmpdir.svg?branch=master)](https://travis-ci.org/sindresorhus/os-tmpdir)\n\n> Node.js [`os.tmpdir()`](https://nodejs.org/api/os.html#os_os_tmpdir) [ponyfill](https://ponyfill.com)\n\nUse this instead of `require('os').tmpdir()` to get a consistent behavior on different Node.js versions (even 0.8).\n\n\n## Install\n\n```\n$ npm install --save os-tmpdir\n```\n\n\n## Usage\n\n```js\nconst osTmpdir = require('os-tmpdir');\n\nosTmpdir();\n//=> '/var/folders/m3/5574nnhn0yj488ccryqr7tc80000gn/T'\n```\n\n\n## API\n\nSee the [`os.tmpdir()` docs](https://nodejs.org/api/os.html#os_os_tmpdir).\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2142014}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 11349912}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 47600330}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 125129795}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 247577065}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 469579862}], "dependentsCount": 168, "starsCount": 1}, "github": {"starsCount": 28, "forksCount": 2, "subscribersCount": 8, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": true}, "contributors": [{"username": "sindresorhus", "commitsCount": 10}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 797, "testsSize": 1187}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/os-tmpdir.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/os-tmpdir.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/os-tmpdir/master.svg", "content": "https://img.shields.io/travis/sindresorhus/os-tmpdir/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 40, "downloadsCount": 41709931.666666664, "downloadsAcceleration": 97266.36645738204, "dependentsCount": 168}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.011506849315068493, "openIssues": 0.5, "issuesDistribution": 0.5}}, "score": {"final": 0.5492090064198039, "detail": {"quality": 0.6147581114327593, "popularity": 0.532404084873043, "maintenance": 0.5098289808126031}}}
{"analyzedAt": "2020-02-09T11:16:49.542Z", "collected": {"metadata": {"name": "parent-module", "scope": "unscoped", "version": "2.0.0", "description": "Get the path of the parent module", "keywords": ["parent", "module", "package", "caller", "calling", "module", "path", "callsites", "callsite", "stacktrace", "stack", "trace", "function", "file"], "date": "2019-04-30T14:16:53.267Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/parent-module.git"}, "links": {"npm": "https://www.npmjs.com/package/parent-module", "homepage": "https://github.com/sindresorhus/parent-module#readme", "repository": "https://github.com/sindresorhus/parent-module", "bugs": "https://github.com/sindresorhus/parent-module/issues"}, "license": "MIT", "dependencies": {"callsites": "^3.1.0"}, "devDependencies": {"ava": "^1.4.1", "execa": "^1.0.0", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# parent-module [![Build Status](https://travis-ci.org/sindresorhus/parent-module.svg?branch=master)](https://travis-ci.org/sindresorhus/parent-module)\n\n> Get the path of the parent module\n\nNode.js exposes `module.parent`, but it only gives you the first cached parent, which is not necessarily the actual parent.\n\n\n## Install\n\n```\n$ npm install parent-module\n```\n\n\n## Usage\n\n```js\n// bar.js\nconst parentModule = require('parent-module');\n\nmodule.exports = () => {\n\tconsole.log(parentModule());\n\t//=> '/Users/sindresorhus/dev/unicorn/foo.js'\n};\n```\n\n```js\n// foo.js\nconst bar = require('./bar');\n\nbar();\n```\n\n\n## API\n\n### parentModule([filePath])\n\nBy default, it will return the path of the immediate parent.\n\n#### filePath\n\nType: `string`<br>\nDefault: [`__filename`](https://nodejs.org/api/globals.html#globals_filename)\n\nFile path of the module of which to get the parent path.\n\nUseful if you want it to work [multiple module levels down](https://github.com/sindresorhus/parent-module/tree/master/fixtures/filepath).\n\n\n## Tip\n\nCombine it with [`read-pkg-up`](https://github.com/sindresorhus/read-pkg-up) to read the package.json of the parent module.\n\n```js\nconst path = require('path');\nconst readPkgUp = require('read-pkg-up');\nconst parentModule = require('parent-module');\n\nconsole.log(readPkgUp.sync({cwd: path.dirname(parentModule())}).pkg);\n//=> {name: 'chalk', version: '1.0.0', \u2026}\n```\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 300552}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 6371750}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 25585514}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 66671912}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 120887347}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 193034452}], "dependentsCount": 43, "starsCount": 1}, "github": {"starsCount": 60, "forksCount": 1, "subscribersCount": 5, "issues": {"count": 4, "openCount": 0, "distribution": {"3600": 3, "10800": 0, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 13}, {"username": "BendingBender", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "devinivy", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1461, "testsSize": 359}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/parent-module.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/parent-module.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/parent-module/master.svg", "content": "https://img.shields.io/travis/sindresorhus/parent-module/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7885, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 71, "downloadsCount": 22223970.666666668, "downloadsAcceleration": 116680.95355783869, "dependentsCount": 43}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.805566154651179, "detail": {"quality": 0.9462540774474765, "popularity": 0.49060382093580157, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-12T04:59:40.105Z", "collected": {"metadata": {"name": "pascalcase", "scope": "unscoped", "version": "1.0.0", "description": "Convert a string to pascal-case.", "keywords": ["camelcase", "case", "casing", "pascal", "pascal-case", "pascal case", "pascalcase", "string", "UpperCamelCase"], "date": "2019-08-08T08:23:06.351Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/pascalcase.git"}, "links": {"npm": "https://www.npmjs.com/package/pascalcase", "homepage": "https://github.com/jonschlinkert/pascalcase", "repository": "https://github.com/jonschlinkert/pascalcase", "bugs": "https://github.com/jonschlinkert/pascalcase/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^2.0.0", "mocha": "^6.2.0"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# pascalcase [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/pascalcase.svg?style=flat)](https://www.npmjs.com/package/pascalcase) [![NPM monthly downloads](https://img.shields.io/npm/dm/pascalcase.svg?style=flat)](https://npmjs.org/package/pascalcase) [![NPM total downloads](https://img.shields.io/npm/dt/pascalcase.svg?style=flat)](https://npmjs.org/package/pascalcase) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/pascalcase.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/pascalcase)\n\n> Convert a string to pascal-case.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/) (requires [Node.js](https://nodejs.org/en/) >=8):\n\n```sh\n$ npm install --save pascalcase\n```\n\n## Usage\n\n```js\nconst pascalcase = require('pascalcase');\n\nconsole.log(pascalcase('a')); //=> 'A'\nconsole.log(pascalcase('foo bar baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('  foo bar baz  ')); //=> 'FooBarBaz'\nconsole.log(pascalcase('foo_bar-baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('foo.bar.baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('foo/bar/baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('foo[bar)baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('#foo+bar*baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('$foo~bar`baz')); //=> 'FooBarBaz'\nconsole.log(pascalcase('_foo_bar-baz-')); //=> 'FooBarBaz'\nconsole.log(pascalcase('foo 2 bar 5 baz')); //=> 'Foo2Bar5Baz'\nconsole.log(pascalcase('foo2bar5baz')); //=> 'Foo2bar5baz'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [ansi-colors](https://www.npmjs.com/package/ansi-colors): Easily add ANSI colors to your text and symbols in the terminal. A faster drop-in\u2026 [more](https://github.com/doowb/ansi-colors) | [homepage](https://github.com/doowb/ansi-colors \"Easily add ANSI colors to your text and symbols in the terminal. A faster drop-in replacement for chalk, kleur and turbocolor (without the dependencies and rendering bugs).\")\n* [justified](https://www.npmjs.com/package/justified): Wraps words to a specified length and justifies the text in each line. | [homepage](https://github.com/jonschlinkert/justified \"Wraps words to a specified length and justifies the text in each line.\")\n* [randomatic](https://www.npmjs.com/package/randomatic): Generate randomized strings of a specified length using simple character sequences. The original generate-password. | [homepage](https://github.com/jonschlinkert/randomatic \"Generate randomized strings of a specified length using simple character sequences. The original generate-password.\")\n* [word-wrap](https://www.npmjs.com/package/word-wrap): Wrap words to a specified length. | [homepage](https://github.com/jonschlinkert/word-wrap \"Wrap words to a specified length.\")\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on August 08, 2019._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1943340}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 10275086}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 42966586}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 115268440}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 226865878}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 418367681}], "dependentsCount": 104, "starsCount": 1}, "github": {"starsCount": 17, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 7}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4424, "testsSize": 2034}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/pascalcase.svg?style=flat", "shields": "https://img.shields.io/npm/v/pascalcase.svg", "content": "https://img.shields.io/npm/v/pascalcase.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/pascalcase.svg?style=flat", "shields": "https://img.shields.io/npm/dm/pascalcase.svg", "content": "https://img.shields.io/npm/dm/pascalcase.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/pascalcase.svg?style=flat", "shields": "https://img.shields.io/npm/dt/pascalcase.svg", "content": "https://img.shields.io/npm/dt/pascalcase.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/pascalcase.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/pascalcase.svg", "shields": "https://img.shields.io/travis/jonschlinkert/pascalcase.svg", "content": "https://img.shields.io/travis/jonschlinkert/pascalcase.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 21, "downloadsCount": 38422813.333333336, "downloadsAcceleration": 100039.96822678845, "dependentsCount": 104}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8187812848816447, "detail": {"quality": 0.9691397075145873, "popularity": 0.5087450815367518, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-03T14:15:25.159Z", "collected": {"metadata": {"name": "path-dirname", "scope": "unscoped", "version": "1.0.2", "description": "Node.js path.dirname() ponyfill", "keywords": ["dirname", "dir", "path", "paths", "file", "built-in", "util", "utils", "core", "stdlib", "ponyfill", "polyfill", "shim"], "date": "2016-10-18T17:27:03.641Z", "author": {"name": "Elan Shanker"}, "publisher": {"username": "es128", "email": "elan.shanker+npm@gmail.com"}, "maintainers": [{"username": "es128", "email": "elan.shanker+npm@gmail.com"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/es128/path-dirname.git"}, "links": {"npm": "https://www.npmjs.com/package/path-dirname", "homepage": "https://github.com/es128/path-dirname#readme", "repository": "https://github.com/es128/path-dirname", "bugs": "https://github.com/es128/path-dirname/issues"}, "license": "MIT", "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# path-dirname [![Build Status](https://travis-ci.org/es128/path-dirname.svg?branch=master)](https://travis-ci.org/es128/path-dirname)\n\n> Node.js [`path.dirname()`](https://nodejs.org/api/path.html#path_path_dirname_path) [ponyfill](https://ponyfill.com)\n\nThis was needed in order to expose `path.posix.dirname()` on Node.js v0.10\n\n## Install\n\n```\n$ npm install --save path-dirname\n```\n\n\n## Usage\n\n```js\nconst pathDirname = require('path-dirname');\n\npathDirname('/home/foo');\n//=> '/home'\npathDirname('C:\\\\Users\\\\foo');\n//=> 'C:\\\\Users'\npathDirname('foo');\n//=> '.'\npathDirname('foo/bar');\n//=> 'foo'\n\n//Using posix version for consistent output when dealing with glob escape chars\npathDirname.win32('C:\\\\Users\\\\foo/\\\\*bar');\n//=> 'C:\\\\Users\\\\foo/'\npathDirname.posix('C:\\\\Users\\\\foo/\\\\*bar');\n//=> 'C:\\\\Users\\\\foo'\n```\n\n\n## API\n\nSee the [`path.dirname()` docs](https://nodejs.org/api/path.html#path_path_dirname_path).\n\n### pathDirname(path)\n\n### pathDirname.posix(path)\n\nPOSIX specific version.\n\n### pathDirname.win32(path)\n\nWindows specific version.\n\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1707288}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 9513840}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 39154002}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 103557112}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 206723229}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 386018016}], "dependentsCount": 33, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 4, "subscribersCount": 4, "issues": {"count": 2, "openCount": 1, "distribution": {"3600": 0, "10800": 0, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "es128", "commitsCount": 9}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1070, "testsSize": 2921}, "badges": [{"urls": {"original": "https://travis-ci.org/es128/path-dirname.svg?branch=master", "service": "https://api.travis-ci.org/es128/path-dirname.svg?branch=master", "shields": "https://img.shields.io/travis/es128/path-dirname/master.svg", "content": "https://img.shields.io/travis/es128/path-dirname/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 20, "downloadsCount": 34519037.333333336, "downloadsAcceleration": 84607.14309360727, "dependentsCount": 33}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7982164232808002, "detail": {"quality": 0.9377660342578539, "popularity": 0.4769619717755054, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-06T12:05:49.663Z", "collected": {"metadata": {"name": "path-is-absolute", "scope": "unscoped", "version": "2.0.0", "description": "Node.js 0.12 path.isAbsolute() ponyfill", "keywords": ["path", "paths", "file", "dir", "absolute", "isabsolute", "is-absolute", "built-in", "util", "utils", "core", "ponyfill", "polyfill", "shim", "is", "detect", "check"], "date": "2018-11-08T11:03:52.447Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/path-is-absolute.git"}, "links": {"npm": "https://www.npmjs.com/package/path-is-absolute", "homepage": "https://github.com/sindresorhus/path-is-absolute#readme", "repository": "https://github.com/sindresorhus/path-is-absolute", "bugs": "https://github.com/sindresorhus/path-is-absolute/issues"}, "license": "MIT", "devDependencies": {"xo": "^0.16.0"}, "releases": [{"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2018-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 2}], "deprecated": "This package is no longer relevant as Node.js 0.12 is unmaintained.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Deprecated\n\nThis package is no longer relevant as Node.js 0.12 is unmaintained.\n\n---\n\n# path-is-absolute [![Build Status](https://travis-ci.org/sindresorhus/path-is-absolute.svg?branch=master)](https://travis-ci.org/sindresorhus/path-is-absolute)\n\n> Node.js 0.12 [`path.isAbsolute()`](http://nodejs.org/api/path.html#path_path_isabsolute_path) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save path-is-absolute\n```\n\n\n## Usage\n\n```js\nconst pathIsAbsolute = require('path-is-absolute');\n\n// Running on Linux\npathIsAbsolute('/home/foo');\n//=> true\npathIsAbsolute('C:/Users/foo');\n//=> false\n\n// Running on Windows\npathIsAbsolute('C:/Users/foo');\n//=> true\npathIsAbsolute('/home/foo');\n//=> false\n\n// Running on any OS\npathIsAbsolute.posix('/home/foo');\n//=> true\npathIsAbsolute.posix('C:/Users/foo');\n//=> false\npathIsAbsolute.win32('C:/Users/foo');\n//=> true\npathIsAbsolute.win32('/home/foo');\n//=> false\n```\n\n\n## API\n\nSee the [`path.isAbsolute()` docs](http://nodejs.org/api/path.html#path_path_isabsolute_path).\n\n### pathIsAbsolute(path)\n\n### pathIsAbsolute.posix(path)\n\nPOSIX specific version.\n\n### pathIsAbsolute.win32(path)\n\nWindows specific version.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 2405634}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 13083590}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 55181870}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 146835823}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 290903023}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 546091973}], "dependentsCount": 460, "starsCount": 8}, "github": {"starsCount": 33, "forksCount": 8, "subscribersCount": 8, "issues": {"count": 4, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 3, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 10}, {"username": "vitaly-t", "commitsCount": 1}], "commits": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 1}]}, "source": {"files": {"readmeSize": 1241, "testsSize": 1009}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/path-is-absolute.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/path-is-absolute.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/path-is-absolute/master.svg", "content": "https://img.shields.io/travis/sindresorhus/path-is-absolute/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 59, "downloadsCount": 48945274.333333336, "downloadsAcceleration": 115809.69716514467, "dependentsCount": 460}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.5631592893481114, "detail": {"quality": 0.5790095410678776, "popularity": 0.5776694886765947, "maintenance": 0.5350631599741142}}}
{"analyzedAt": "2020-02-02T04:07:14.695Z", "collected": {"metadata": {"name": "path-is-inside", "scope": "unscoped", "version": "1.0.2", "description": "Tests whether one path is inside another path", "keywords": ["path", "directory", "folder", "inside", "relative"], "date": "2016-09-10T23:35:10.802Z", "author": {"name": "Domenic Denicola", "email": "d@domenic.me", "url": "https://domenic.me"}, "publisher": {"username": "domenic", "email": "d@domenic.me"}, "maintainers": [{"username": "domenic", "email": "domenic@domenicdenicola.com"}], "repository": {"type": "git", "url": "git+https://github.com/domenic/path-is-inside.git"}, "links": {"npm": "https://www.npmjs.com/package/path-is-inside", "homepage": "https://github.com/domenic/path-is-inside#readme", "repository": "https://github.com/domenic/path-is-inside", "bugs": "https://github.com/domenic/path-is-inside/issues"}, "license": "(WTFPL OR MIT)", "devDependencies": {"jshint": "~2.3.0", "mocha": "~1.15.1"}, "releases": [{"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2018-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Is This Path Inside This Other Path?\n\nIt turns out this question isn't trivial to answer using Node's built-in path APIs. A naive `indexOf`-based solution will fail sometimes on Windows, which is case-insensitive (see e.g. [isaacs/npm#4214][]). You might then think to be clever with `path.resolve`, but you have to be careful to account for situations whether the paths have different drive letters, or else you'll cause bugs like [isaacs/npm#4313][]. And let's not even get started on trailing slashes.\n\nThe **path-is-inside** package will give you a robust, cross-platform way of detecting whether a given path is inside another path.\n\n## Usage\n\nPretty simple. First the path being tested; then the potential parent. Like so:\n\n```js\nvar pathIsInside = require(\"path-is-inside\");\n\npathIsInside(\"/x/y/z\", \"/x/y\") // true\npathIsInside(\"/x/y\", \"/x/y/z\") // false\n```\n\nPaths are considered to be inside themselves:\n\n```js\npathIsInside(\"/x/y\", \"/x/y\"); // true\n```\n\n## OS-Specific Behavior\n\nLike Node's built-in path module, path-is-inside treats all file paths on Windows as case-insensitive, whereas it treats all file paths on *-nix operating systems as case-sensitive. Keep this in mind especially when working on a Mac, where, despite Node's defaults, the OS usually treats paths case-insensitively.\n\nIn practice, this means:\n\n```js\n// On Windows\n\npathIsInside(\"C:\\\\X\\\\Y\\\\Z\", \"C:\\\\x\\\\y\") // true\n\n// On *-nix, including Mac OS X\n\npathIsInside(\"/X/Y/Z\", \"/x/y\") // false\n```\n\n[isaacs/npm#4214]: https://github.com/isaacs/npm/pull/4214\n[isaacs/npm#4313]: https://github.com/isaacs/npm/issues/4313"}, "npm": {"downloads": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 435985}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 8928603}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 36152504}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 103145878}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 203102244}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 383076017}], "dependentsCount": 154, "starsCount": 4}, "github": {"starsCount": 37, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 9, "openCount": 3, "distribution": {"3600": 1, "10800": 0, "32400": 1, "97200": 1, "291600": 2, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 2, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "domenic", "commitsCount": 13}, {"username": "pmarques", "commitsCount": 1}], "commits": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1599, "testsSize": 3605}, "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 51, "downloadsCount": 34381959.333333336, "downloadsAcceleration": 58595.64954337897, "dependentsCount": 154}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.79223086150717, "detail": {"quality": 0.8696225047872876, "popularity": 0.5182691062541901, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-11T04:37:10.345Z", "collected": {"metadata": {"name": "path-key", "scope": "unscoped", "version": "3.1.1", "description": "Get the PATH environment variable key cross-platform", "keywords": ["path", "key", "environment", "env", "variable", "var", "get", "cross-platform", "windows"], "date": "2019-11-22T16:47:18.153Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/path-key.git"}, "links": {"npm": "https://www.npmjs.com/package/path-key", "homepage": "https://github.com/sindresorhus/path-key#readme", "repository": "https://github.com/sindresorhus/path-key", "bugs": "https://github.com/sindresorhus/path-key/issues"}, "license": "MIT", "devDependencies": {"@types/node": "^11.13.0", "ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# path-key [![Build Status](https://travis-ci.org/sindresorhus/path-key.svg?branch=master)](https://travis-ci.org/sindresorhus/path-key)\n\n> Get the [PATH](https://en.wikipedia.org/wiki/PATH_(variable)) environment variable key cross-platform\n\nIt's usually `PATH`, but on Windows it can be any casing like `Path`...\n\n\n## Install\n\n```\n$ npm install path-key\n```\n\n\n## Usage\n\n```js\nconst pathKey = require('path-key');\n\nconst key = pathKey();\n//=> 'PATH'\n\nconst PATH = process.env[key];\n//=> '/usr/local/bin:/usr/bin:/bin'\n```\n\n\n## API\n\n### pathKey(options?)\n\n#### options\n\nType: `object`\n\n##### env\n\nType: `object`<br>\nDefault: [`process.env`](https://nodejs.org/api/process.html#process_process_env)\n\nUse a custom environment variables object.\n\n#### platform\n\nType: `string`<br>\nDefault: [`process.platform`](https://nodejs.org/api/process.html#process_process_platform)\n\nGet the PATH key for a specific platform.\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-path-key?utm_source=npm-path-key&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2895289}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 15788637}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 62287083}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 162299301}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 304210411}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 526286348}], "dependentsCount": 70, "starsCount": 2}, "github": {"starsCount": 25, "forksCount": 1, "subscribersCount": 5, "issues": {"count": 6, "openCount": 0, "distribution": {"3600": 1, "10800": 1, "32400": 1, "97200": 2, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 11}, {"username": "BendingBender", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "ehmicky", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1347, "testsSize": 472}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/path-key.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/path-key.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/path-key/master.svg", "content": "https://img.shields.io/travis/sindresorhus/path-key/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 38, "downloadsCount": 54099767, "downloadsAcceleration": 220633.2819824962, "dependentsCount": 70}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8211821823921062, "detail": {"quality": 0.9547045235275585, "popularity": 0.5279778035555234, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-04T06:28:45.383Z", "collected": {"metadata": {"name": "path-parse", "scope": "unscoped", "version": "1.0.6", "description": "Node.js path.parse() ponyfill", "keywords": ["path", "paths", "file", "dir", "parse", "built-in", "util", "utils", "core", "ponyfill", "polyfill", "shim"], "date": "2018-08-06T06:32:36.898Z", "author": {"name": "Javier Blanco", "email": "http://jbgutierrez.info"}, "publisher": {"username": "jbgutierrez", "email": "jbgutierrez@gmail.com"}, "maintainers": [{"username": "jbgutierrez", "email": "jbgutierrez@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jbgutierrez/path-parse.git"}, "links": {"npm": "https://www.npmjs.com/package/path-parse", "homepage": "https://github.com/jbgutierrez/path-parse#readme", "repository": "https://github.com/jbgutierrez/path-parse", "bugs": "https://github.com/jbgutierrez/path-parse/issues"}, "license": "MIT", "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "# path-parse [![Build Status](https://travis-ci.org/jbgutierrez/path-parse.svg?branch=master)](https://travis-ci.org/jbgutierrez/path-parse)\n\n> Node.js [`path.parse(pathString)`](https://nodejs.org/api/path.html#path_path_parse_pathstring) [ponyfill](https://ponyfill.com).\n\n## Install\n\n```\n$ npm install --save path-parse\n```\n\n## Usage\n\n```js\nvar pathParse = require('path-parse');\n\npathParse('/home/user/dir/file.txt');\n//=> {\n//       root : \"/\",\n//       dir : \"/home/user/dir\",\n//       base : \"file.txt\",\n//       ext : \".txt\",\n//       name : \"file\"\n//   }\n```\n\n## API\n\nSee [`path.parse(pathString)`](https://nodejs.org/api/path.html#path_path_parse_pathstring) docs.\n\n### pathParse(path)\n\n### pathParse.posix(path)\n\nThe Posix specific version.\n\n### pathParse.win32(path)\n\nThe Windows specific version.\n\n## License\n\nMIT \u00a9 [Javier Blanco](http://jbgutierrez.info)"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2348645}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 12627598}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 52771128}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 135046815}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 265904916}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 500863696}], "dependentsCount": 110, "starsCount": 4}, "github": {"starsCount": 14, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 7, "openCount": 4, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 4, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jbgutierrez", "commitsCount": 7}, {"username": "honzajavorek", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 871, "testsSize": 3720}, "badges": [{"urls": {"original": "https://travis-ci.org/jbgutierrez/path-parse.svg?branch=master", "service": "https://api.travis-ci.org/jbgutierrez/path-parse.svg?branch=master", "shields": "https://img.shields.io/travis/jbgutierrez/path-parse/master.svg", "content": "https://img.shields.io/travis/jbgutierrez/path-parse/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 29, "downloadsCount": 45015605, "downloadsAcceleration": 122957.1312785389, "dependentsCount": 110}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8107096043149198, "detail": {"quality": 0.9262615076490556, "popularity": 0.5225177975376741, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-03T18:34:02.534Z", "collected": {"metadata": {"name": "path-type", "scope": "unscoped", "version": "4.0.0", "description": "Check if a path is a file, directory, or symlink", "keywords": ["path", "fs", "type", "is", "check", "directory", "dir", "file", "filepath", "symlink", "symbolic", "link", "stat", "stats", "filesystem"], "date": "2019-03-12T09:25:18.333Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/path-type.git"}, "links": {"npm": "https://www.npmjs.com/package/path-type", "homepage": "https://github.com/sindresorhus/path-type#readme", "repository": "https://github.com/sindresorhus/path-type", "bugs": "https://github.com/sindresorhus/path-type/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.3.1", "nyc": "^13.3.0", "tsd-check": "^0.3.0", "xo": "^0.24.0"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 2}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# path-type [![Build Status](https://travis-ci.org/sindresorhus/path-type.svg?branch=master)](https://travis-ci.org/sindresorhus/path-type)\n\n> Check if a path is a file, directory, or symlink\n\n\n## Install\n\n```\n$ npm install path-type\n```\n\n\n## Usage\n\n```js\nconst {isFile} = require('path-type');\n\n(async () => {\n\tconsole.log(await isFile('package.json'));\n\t//=> true\n})();\n```\n\n\n## API\n\n### isFile(path)\n\nCheck whether the passed `path` is a file.\n\nReturns a `Promise<boolean>`.\n\n#### path\n\nType: `string`\n\nThe path to check.\n\n### isDirectory(path)\n\nCheck whether the passed `path` is a directory.\n\nReturns a `Promise<boolean>`.\n\n### isSymlink(path)\n\nCheck whether the passed `path` is a symlink.\n\nReturns a `Promise<boolean>`.\n\n### isFileSync(path)\n\nSynchronously check whether the passed `path` is a file.\n\nReturns a `boolean`.\n\n### isDirectorySync(path)\n\nSynchronously check whether the passed `path` is a directory.\n\nReturns a `boolean`.\n\n### isSymlinkSync(path)\n\nSynchronously check whether the passed `path` is a symlink.\n\nReturns a `boolean`.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 4837318}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 26876935}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 108658034}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 282936927}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 539846846}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 976740657}], "dependentsCount": 93, "starsCount": 2}, "github": {"starsCount": 47, "forksCount": 8, "subscribersCount": 7, "issues": {"count": 6, "openCount": 0, "distribution": {"3600": 1, "10800": 2, "32400": 1, "97200": 0, "291600": 0, "874800": 1, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 13}, {"username": "coreyfarrell", "commitsCount": 3}, {"username": "BendingBender", "commitsCount": 1}, {"username": "arthurvr", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1112, "testsSize": 1746}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/path-type.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/path-type.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/path-type/master.svg", "content": "https://img.shields.io/travis/sindresorhus/path-type/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 69, "downloadsCount": 94312309, "downloadsAcceleration": 317270.00277777785, "dependentsCount": 93}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8316544471999262, "detail": {"quality": 0.9547045235275585, "popularity": 0.5578985601492951, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-23T22:14:58.113Z", "collected": {"metadata": {"name": "picomatch", "scope": "unscoped", "version": "2.2.1", "description": "Blazing fast and accurate glob matcher written in JavaScript, with no dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions.", "keywords": ["glob", "match", "picomatch"], "date": "2020-01-04T21:19:48.019Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "mrmlnc", "email": "dmalinochkin@rambler.ru"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/picomatch.git"}, "links": {"npm": "https://www.npmjs.com/package/picomatch", "homepage": "https://github.com/micromatch/picomatch", "repository": "https://github.com/micromatch/picomatch", "bugs": "https://github.com/micromatch/picomatch/issues"}, "license": "MIT", "devDependencies": {"eslint": "^6.8.0", "fill-range": "^7.0.1", "gulp-format-md": "^2.0.0", "mocha": "^6.2.2", "nyc": "^15.0.0", "time-require": "github:jonschlinkert/time-require"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 5}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 14}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">Picomatch</h1>\n\n<p align=\"center\">\n  <a href=\"https://npmjs.org/package/picomatch\">\n    <img src=\"https://img.shields.io/npm/v/picomatch.svg\" alt=\"version\">\n  </a>\n  <a href=\"https://github.com/micromatch/picomatch/actions?workflow=Tests\">\n    <img src=\"https://github.com/micromatch/picomatch/workflows/Tests/badge.svg\" alt=\"test status\">\n  </a>\n  <a href=\"https://coveralls.io/github/micromatch/picomatch\">\n    <img src=\"https://img.shields.io/coveralls/github/micromatch/picomatch/master.svg\" alt=\"coverage status\">\n  </a>\n  <a href=\"https://npmjs.org/package/picomatch\">\n    <img src=\"https://img.shields.io/npm/dm/picomatch.svg\" alt=\"downloads\">\n  </a>\n</p>\n\n<br>\n<br>\n\n<p align=\"center\">\n<strong>Blazing fast and accurate glob matcher written in JavaScript.</strong></br>\n<em>No dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions.</em>\n</p>\n\n<br>\n<br>\n\n## Why picomatch?\n\n* **Lightweight** - No dependencies\n* **Minimal** - Tiny API surface. Main export is a function that takes a glob pattern and returns a matcher function.\n* **Fast** - Loads in about 2ms (that's several times faster than a [single frame of a HD movie](http://www.endmemo.com/sconvert/framespersecondframespermillisecond.php) at 60fps)\n* **Performant** - Use the returned matcher function to speed up repeat matching (like when watching files)\n* **Accurate matching** - Using wildcards (`*` and `?`), globstars (`**`) for nested directories, [advanced globbing](#advanced-globbing) with extglobs, braces, and POSIX brackets, and support for escaping special characters with `\\` or quotes.\n* **Well tested** - Thousands of unit tests\n\nSee the [library comparison](#library-comparisons) to other libraries.\n\n<br>\n<br>\n\n## Table of Contents\n\n<details><summary> Click to expand </summary>\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  * [picomatch](#picomatch)\n  * [.test](#test)\n  * [.matchBase](#matchbase)\n  * [.isMatch](#ismatch)\n  * [.parse](#parse)\n  * [.scan](#scan)\n  * [.compileRe](#compilere)\n  * [.toRegex](#toregex)\n- [Options](#options)\n  * [Picomatch options](#picomatch-options)\n  * [Scan Options](#scan-options)\n  * [Options Examples](#options-examples)\n- [Globbing features](#globbing-features)\n  * [Basic globbing](#basic-globbing)\n  * [Advanced globbing](#advanced-globbing)\n  * [Braces](#braces)\n  * [Matching special characters as literals](#matching-special-characters-as-literals)\n- [Library Comparisons](#library-comparisons)\n- [Benchmarks](#benchmarks)\n- [Philosophies](#philosophies)\n- [About](#about)\n  * [Author](#author)\n  * [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n</details>\n\n<br>\n<br>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\nnpm install --save picomatch\n```\n\n<br>\n\n## Usage\n\nThe main export is a function that takes a glob pattern and an options object and returns a function for matching strings.\n\n```js\nconst pm = require('picomatch');\nconst isMatch = pm('*.js');\n\nconsole.log(isMatch('abcd')); //=> false\nconsole.log(isMatch('a.js')); //=> true\nconsole.log(isMatch('a.md')); //=> false\nconsole.log(isMatch('a/b.js')); //=> false\n```\n\n<br>\n\n## API\n\n### [picomatch](lib/picomatch.js#L32)\n\nCreates a matcher function from one or more glob patterns. The returned function takes a string to match as its first argument, and returns true if the string is a match. The returned matcher function also takes a boolean as the second argument that, when true, returns an object with additional information.\n\n**Params**\n\n* `globs` **{String|Array}**: One or more glob patterns.\n* `options` **{Object=}**\n* `returns` **{Function=}**: Returns a matcher function.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch(glob[, options]);\n\nconst isMatch = picomatch('*.!(*a)');\nconsole.log(isMatch('a.a')); //=> false\nconsole.log(isMatch('a.b')); //=> true\n```\n\n### [.test](lib/picomatch.js#L117)\n\nTest `input` with the given `regex`. This is used by the main `picomatch()` function to test the input string.\n\n**Params**\n\n* `input` **{String}**: String to test.\n* `regex` **{RegExp}**\n* `returns` **{Object}**: Returns an object with matching info.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.test(input, regex[, options]);\n\nconsole.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n// { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n```\n\n### [.matchBase](lib/picomatch.js#L161)\n\nMatch the basename of a filepath.\n\n**Params**\n\n* `input` **{String}**: String to test.\n* `glob` **{RegExp|String}**: Glob pattern or regex created by [.makeRe](#makeRe).\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.matchBase(input, glob[, options]);\nconsole.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n```\n\n### [.isMatch](lib/picomatch.js#L183)\n\nReturns true if **any** of the given glob `patterns` match the specified `string`.\n\n**Params**\n\n* **{String|Array}**: str The string to test.\n* **{String|Array}**: patterns One or more glob patterns to use for matching.\n* **{Object}**: See available [options](#options).\n* `returns` **{Boolean}**: Returns true if any patterns match `str`\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.isMatch(string, patterns[, options]);\n\nconsole.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\nconsole.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n```\n\n### [.parse](lib/picomatch.js#L199)\n\nParse a glob pattern to create the source string for a regular expression.\n\n**Params**\n\n* `pattern` **{String}**\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with useful properties and output to be used as a regex source string.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\nconst result = picomatch.parse(pattern[, options]);\n```\n\n### [.scan](lib/picomatch.js#L231)\n\nScan a glob pattern to separate the pattern into segments.\n\n**Params**\n\n* `input` **{String}**: Glob pattern to scan.\n* `options` **{Object}**\n* `returns` **{Object}**: Returns an object with\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.scan(input[, options]);\n\nconst result = picomatch.scan('!./foo/*.js');\nconsole.log(result);\n{ prefix: '!./',\n  input: '!./foo/*.js',\n  start: 3,\n  base: 'foo',\n  glob: '*.js',\n  isBrace: false,\n  isBracket: false,\n  isGlob: true,\n  isExtglob: false,\n  isGlobstar: false,\n  negated: true }\n```\n\n### [.compileRe](lib/picomatch.js#L249)\n\nCreate a regular expression from a glob pattern.\n\n**Params**\n\n* `input` **{String}**: A glob pattern to convert to regex.\n* `options` **{Object}**\n* `returns` **{RegExp}**: Returns a regex created from the given pattern.\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.makeRe(input[, options]);\n\nconsole.log(picomatch.makeRe('*.js'));\n//=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n```\n\n### [.toRegex](lib/picomatch.js#L317)\n\nCreate a regular expression from the given regex source string.\n\n**Params**\n\n* `source` **{String}**: Regular expression source string.\n* `options` **{Object}**\n* `returns` **{RegExp}**\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\n// picomatch.toRegex(source[, options]);\n\nconst { output } = picomatch.parse('*.js');\nconsole.log(picomatch.toRegex(output));\n//=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n```\n\n<br>\n\n## Options\n\n### Picomatch options\n\nThe following options may be used with the main `picomatch()` function or any of the methods on the picomatch API.\n\n| **Option** | **Type** | **Default value** | **Description** |\n| --- | --- | --- | --- |\n| `basename`            | `boolean`      | `false`     | If set, then patterns without slashes will be matched against the basename of the path if it contains slashes.  For example, `a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`. |\n| `bash`                | `boolean`      | `false`     | Follow bash matching rules more strictly - disallows backslashes as escape characters, and treats single stars as globstars (`**`). |\n| `capture`             | `boolean`      | `undefined` | Return regex matches in supporting methods. |\n| `contains`            | `boolean`      | `undefined` | Allows glob to match any part of the given string(s). |\n| `cwd`                 | `string`       | `process.cwd()` | Current working directory. Used by `picomatch.split()` |\n| `debug`               | `boolean`      | `undefined` | Debug regular expressions when an error is thrown. |\n| `dot`                 | `boolean`      | `false`     | Enable dotfile matching. By default, dotfiles are ignored unless a `.` is explicitly defined in the pattern, or `options.dot` is true |\n| `expandRange`         | `function`     | `undefined` | Custom function for expanding ranges in brace patterns, such as `{a..z}`. The function receives the range values as two arguments, and it must return a string to be used in the generated regex. It's recommended that returned strings be wrapped in parentheses. |\n| `failglob`            | `boolean`      | `false`     | Throws an error if no matches are found. Based on the bash option of the same name. |\n| `fastpaths`           | `boolean`      | `true`      | To speed up processing, full parsing is skipped for a handful common glob patterns. Disable this behavior by setting this option to `false`. |\n| `flags`               | `boolean`      | `undefined` | Regex flags to use in the generated regex. If defined, the `nocase` option will be overridden. |\n| [format](#optionsformat) | `function` | `undefined` | Custom function for formatting the returned string. This is useful for removing leading slashes, converting Windows paths to Posix paths, etc. |\n| `ignore`              | `array\\|string` | `undefined` | One or more glob patterns for excluding strings that should not be matched from the result. |\n| `keepQuotes`          | `boolean`      | `false`     | Retain quotes in the generated regex, since quotes may also be used as an alternative to backslashes.  |\n| `literalBrackets`     | `boolean`      | `undefined` | When `true`, brackets in the glob pattern will be escaped so that only literal brackets will be matched. |\n| `lookbehinds`         | `boolean`      | `true`      | Support regex positive and negative lookbehinds. Note that you must be using Node 8.1.10 or higher to enable regex lookbehinds. |\n| `matchBase`           | `boolean`      | `false`     | Alias for `basename` |\n| `maxLength`           | `boolean`      | `65536`     | Limit the max length of the input string. An error is thrown if the input string is longer than this value. |\n| `nobrace`             | `boolean`      | `false`     | Disable brace matching, so that `{a,b}` and `{1..3}` would be treated as literal characters. |\n| `nobracket`           | `boolean`      | `undefined` | Disable matching with regex brackets. |\n| `nocase`              | `boolean`      | `false`     | Make matching case-insensitive. Equivalent to the regex `i` flag. Note that this option is overridden by the `flags` option. |\n| `nodupes`             | `boolean`      | `true`      | Deprecated, use `nounique` instead. This option will be removed in a future major release. By default duplicates are removed. Disable uniquification by setting this option to false. |\n| `noext`               | `boolean`      | `false`     | Alias for `noextglob` |\n| `noextglob`           | `boolean`      | `false`     | Disable support for matching with extglobs (like `+(a\\|b)`) |\n| `noglobstar`          | `boolean`      | `false`     | Disable support for matching nested directories with globstars (`**`) |\n| `nonegate`            | `boolean`      | `false`     | Disable support for negating with leading `!` |\n| `noquantifiers`       | `boolean`      | `false`     | Disable support for regex quantifiers (like `a{1,2}`) and treat them as brace patterns to be expanded. |\n| [onIgnore](#optionsonIgnore) | `function` | `undefined` | Function to be called on ignored items. |\n| [onMatch](#optionsonMatch) | `function` | `undefined` | Function to be called on matched items. |\n| [onResult](#optionsonResult) | `function` | `undefined` | Function to be called on all items, regardless of whether or not they are matched or ignored. |\n| `posix`               | `boolean`      | `false`     | Support POSIX character classes (\"posix brackets\"). |\n| `posixSlashes`        | `boolean`      | `undefined` | Convert all slashes in file paths to forward slashes. This does not convert slashes in the glob pattern itself |\n| `prepend`             | `boolean`      | `undefined` | String to prepend to the generated regex used for matching. |\n| `regex`               | `boolean`      | `false`     | Use regular expression rules for `+` (instead of matching literal `+`), and for stars that follow closing parentheses or brackets (as in `)*` and `]*`). |\n| `strictBrackets`      | `boolean`      | `undefined` | Throw an error if brackets, braces, or parens are imbalanced. |\n| `strictSlashes`       | `boolean`      | `undefined` | When true, picomatch won't match trailing slashes with single stars. |\n| `unescape`            | `boolean`      | `undefined` | Remove backslashes preceding escaped characters in the glob pattern. By default, backslashes are retained. |\n| `unixify`             | `boolean`      | `undefined` | Alias for `posixSlashes`, for backwards compatibility. |\n\n### Scan Options\n\nIn addition to the main [picomatch options](#picomatch-options), the following options may also be used with the [.scan](#scan) method.\n\n| **Option** | **Type** | **Default value** | **Description** |\n| --- | --- | --- | --- |\n| `tokens` | `boolean` | `false` | When `true`, the returned object will include an array of tokens (objects), representing each path \"segment\" in the scanned glob pattern |\n| `parts` | `boolean` | `false` | When `true`, the returned object will include an array of strings representing each path \"segment\" in the scanned glob pattern. This is automatically enabled when `options.tokens` is true |\n\n**Example**\n\n```js\nconst picomatch = require('picomatch');\nconst result = picomatch.scan('!./foo/*.js', { tokens: true });\nconsole.log(result);\n// {\n//   prefix: '!./',\n//   input: '!./foo/*.js',\n//   start: 3,\n//   base: 'foo',\n//   glob: '*.js',\n//   isBrace: false,\n//   isBracket: false,\n//   isGlob: true,\n//   isExtglob: false,\n//   isGlobstar: false,\n//   negated: true,\n//   maxDepth: 2,\n//   tokens: [\n//     { value: '!./', depth: 0, isGlob: false, negated: true, isPrefix: true },\n//     { value: 'foo', depth: 1, isGlob: false },\n//     { value: '*.js', depth: 1, isGlob: true }\n//   ],\n//   slashes: [ 2, 6 ],\n//   parts: [ 'foo', '*.js' ]\n// }\n```\n\n<br>\n\n### Options Examples\n\n#### options.expandRange\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for expanding ranges in brace patterns. The [fill-range](https://github.com/jonschlinkert/fill-range) library is ideal for this purpose, or you can use custom code to do whatever you need.\n\n**Example**\n\nThe following example shows how to create a glob that matches a folder\n\n```js\nconst fill = require('fill-range');\nconst regex = pm.makeRe('foo/{01..25}/bar', {\n  expandRange(a, b) {\n    return `(${fill(a, b, { toRegex: true })})`;\n  }\n});\n\nconsole.log(regex);\n//=> /^(?:foo\\/((?:0[1-9]|1[0-9]|2[0-5]))\\/bar)$/\n\nconsole.log(regex.test('foo/00/bar'))  // false\nconsole.log(regex.test('foo/01/bar'))  // true\nconsole.log(regex.test('foo/10/bar')) // true\nconsole.log(regex.test('foo/22/bar')) // true\nconsole.log(regex.test('foo/25/bar')) // true\nconsole.log(regex.test('foo/26/bar')) // false\n```\n\n#### options.format\n\n**Type**: `function`\n\n**Default**: `undefined`\n\nCustom function for formatting strings before they're matched.\n\n**Example**\n\n```js\n// strip leading './' from strings\nconst format = str => str.replace(/^\\.\\//, '');\nconst isMatch = picomatch('foo/*.js', { format });\nconsole.log(isMatch('./foo/bar.js')); //=> true\n```\n\n#### options.onMatch\n\n```js\nconst onMatch = ({ glob, regex, input, output }) => {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onMatch });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n#### options.onIgnore\n\n```js\nconst onIgnore = ({ glob, regex, input, output }) => {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onIgnore, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n#### options.onResult\n\n```js\nconst onResult = ({ glob, regex, input, output }) => {\n  console.log({ glob, regex, input, output });\n};\n\nconst isMatch = picomatch('*', { onResult, ignore: 'f*' });\nisMatch('foo');\nisMatch('bar');\nisMatch('baz');\n```\n\n<br>\n<br>\n\n## Globbing features\n\n* [Basic globbing](#basic-globbing) (Wildcard matching)\n* [Advanced globbing](#advanced-globbing) (extglobs, posix brackets, brace matching)\n\n### Basic globbing\n\n| **Character** | **Description** |\n| --- | --- |\n| `*` | Matches any character zero or more times, excluding path separators. Does _not match_ path separators or hidden files or directories (\"dotfiles\"), unless explicitly enabled by setting the `dot` option to `true`. |\n| `**` | Matches any character zero or more times, including path separators. Note that `**` will only match path separators (`/`, and `\\\\` on Windows) when they are the only characters in a path segment. Thus, `foo**/bar` is equivalent to `foo*/bar`, and `foo/a**b/bar` is equivalent to `foo/a*b/bar`, and _more than two_ consecutive stars in a glob path segment are regarded as _a single star_. Thus, `foo/***/bar` is equivalent to `foo/*/bar`. |\n| `?` | Matches any character excluding path separators one time. Does _not match_ path separators or leading dots.  |\n| `[abc]` | Matches any characters inside the brackets. For example, `[abc]` would match the characters `a`, `b` or `c`, and nothing else. |\n\n#### Matching behavior vs. Bash\n\nPicomatch's matching features and expected results in unit tests are based on Bash's unit tests and the Bash 4.3 specification, with the following exceptions:\n\n* Bash will match `foo/bar/baz` with `*`. Picomatch only matches nested directories with `**`.\n* Bash greedily matches with negated extglobs. For example, Bash 4.3 says that `!(foo)*` should match `foo` and `foobar`, since the trailing `*` bracktracks to match the preceding pattern. This is very memory-inefficient, and IMHO, also incorrect. Picomatch would return `false` for both `foo` and `foobar`.\n\n<br>\n\n### Advanced globbing\n\n* [extglobs](#extglobs)\n* [POSIX brackets](#posix-brackets)\n* [Braces](#brace-expansion)\n\n#### Extglobs\n\n| **Pattern** | **Description** |\n| --- | --- |\n| `@(pattern)` | Match _only one_ consecutive occurrence of `pattern` |\n| `*(pattern)` | Match _zero or more_ consecutive occurrences of `pattern` |\n| `+(pattern)` | Match _one or more_ consecutive occurrences of `pattern` |\n| `?(pattern)` | Match _zero or **one**_ consecutive occurrences of `pattern` |\n| `!(pattern)` | Match _anything but_ `pattern` |\n\n**Examples**\n\n```js\nconst pm = require('picomatch');\n\n// *(pattern) matches ZERO or more of \"pattern\"\nconsole.log(pm.isMatch('a', 'a*(z)')); // true\nconsole.log(pm.isMatch('az', 'a*(z)')); // true\nconsole.log(pm.isMatch('azzz', 'a*(z)')); // true\n\n// +(pattern) matches ONE or more of \"pattern\"\nconsole.log(pm.isMatch('a', 'a*(z)')); // true\nconsole.log(pm.isMatch('az', 'a*(z)')); // true\nconsole.log(pm.isMatch('azzz', 'a*(z)')); // true\n\n// supports multiple extglobs\nconsole.log(pm.isMatch('foo.bar', '!(foo).!(bar)')); // false\n\n// supports nested extglobs\nconsole.log(pm.isMatch('foo.bar', '!(!(foo)).!(!(bar))')); // true\n```\n\n#### POSIX brackets\n\nPOSIX classes are disabled by default. Enable this feature by setting the `posix` option to true.\n\n**Enable POSIX bracket support**\n\n```js\nconsole.log(pm.makeRe('[[:word:]]+', { posix: true }));\n//=> /^(?:(?=.)[A-Za-z0-9_]+\\/?)$/\n```\n\n**Supported POSIX classes**\n\nThe following named POSIX bracket expressions are supported:\n\n* `[:alnum:]` - Alphanumeric characters, equ `[a-zA-Z0-9]`\n* `[:alpha:]` - Alphabetical characters, equivalent to `[a-zA-Z]`.\n* `[:ascii:]` - ASCII characters, equivalent to `[\\\\x00-\\\\x7F]`.\n* `[:blank:]` - Space and tab characters, equivalent to `[ \\\\t]`.\n* `[:cntrl:]` - Control characters, equivalent to `[\\\\x00-\\\\x1F\\\\x7F]`.\n* `[:digit:]` - Numerical digits, equivalent to `[0-9]`.\n* `[:graph:]` - Graph characters, equivalent to `[\\\\x21-\\\\x7E]`.\n* `[:lower:]` - Lowercase letters, equivalent to `[a-z]`.\n* `[:print:]` - Print characters, equivalent to `[\\\\x20-\\\\x7E ]`.\n* `[:punct:]` - Punctuation and symbols, equivalent to `[\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~]`.\n* `[:space:]` - Extended space characters, equivalent to `[ \\\\t\\\\r\\\\n\\\\v\\\\f]`.\n* `[:upper:]` - Uppercase letters, equivalent to `[A-Z]`.\n* `[:word:]` -  Word characters (letters, numbers and underscores), equivalent to `[A-Za-z0-9_]`.\n* `[:xdigit:]` - Hexadecimal digits, equivalent to `[A-Fa-f0-9]`.\n\nSee the [Bash Reference Manual](https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html) for more information.\n\n### Braces\n\nPicomatch does not do brace expansion. For [brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html) and advanced matching with braces, use [micromatch](https://github.com/micromatch/micromatch) instead. Picomatch has very basic support for braces.\n\n### Matching special characters as literals\n\nIf you wish to match the following special characters in a filepath, and you want to use these characters in your glob pattern, they must be escaped with backslashes or quotes:\n\n**Special Characters**\n\nSome characters that are used for matching in regular expressions are also regarded as valid file path characters on some platforms.\n\nTo match any of the following characters as literals: `$^*+?()[]\n\nExamples:\n\n```js\nconsole.log(pm.makeRe('foo/bar \\\\(1\\\\)'));\nconsole.log(pm.makeRe('foo/bar \\\\(1\\\\)'));\n```\n\n<br>\n<br>\n\n## Library Comparisons\n\nThe following table shows which features are supported by [minimatch](https://github.com/isaacs/minimatch), [micromatch](https://github.com/micromatch/micromatch), [picomatch](https://github.com/micromatch/picomatch), [nanomatch](https://github.com/micromatch/nanomatch), [extglob](https://github.com/micromatch/extglob), [braces](https://github.com/micromatch/braces), and [expand-brackets](https://github.com/micromatch/expand-brackets).\n\n| **Feature** | `minimatch` | `micromatch` | `picomatch` | `nanomatch` | `extglob` | `braces` | `expand-brackets` |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Wildcard matching (`*?+`) | \u2714 | \u2714 | \u2714 | \u2714 | - | - | - |\n| Advancing globbing        | \u2714 | \u2714 | \u2714 | - | - | - | - |\n| Brace _matching_          | \u2714 | \u2714 | \u2714 | - | - | \u2714 | - |\n| Brace _expansion_         | \u2714 | \u2714 | - | - | - | \u2714 | - |\n| Extglobs                  | partial | \u2714 | \u2714 | - | \u2714 | - | - |\n| Posix brackets            | - | \u2714 | \u2714 | - | - | - | \u2714 |\n| Regular expression syntax | - | \u2714 | \u2714 | \u2714 | \u2714 | - | \u2714 |\n| File system operations    | - | - | - | - | - | - | - |\n\n<br>\n<br>\n\n## Benchmarks\n\nPerformance comparison of picomatch and minimatch.\n\n```\n# .makeRe star\n  picomatch x 1,993,050 ops/sec \u00b10.51% (91 runs sampled)\n  minimatch x 627,206 ops/sec \u00b11.96% (87 runs sampled))\n\n# .makeRe star; dot=true\n  picomatch x 1,436,640 ops/sec \u00b10.62% (91 runs sampled)\n  minimatch x 525,876 ops/sec \u00b10.60% (88 runs sampled)\n\n# .makeRe globstar\n  picomatch x 1,592,742 ops/sec \u00b10.42% (90 runs sampled)\n  minimatch x 962,043 ops/sec \u00b11.76% (91 runs sampled)d)\n\n# .makeRe globstars\n  picomatch x 1,615,199 ops/sec \u00b10.35% (94 runs sampled)\n  minimatch x 477,179 ops/sec \u00b11.33% (91 runs sampled)\n\n# .makeRe with leading star\n  picomatch x 1,220,856 ops/sec \u00b10.40% (92 runs sampled)\n  minimatch x 453,564 ops/sec \u00b11.43% (94 runs sampled)\n\n# .makeRe - basic braces\n  picomatch x 392,067 ops/sec \u00b10.70% (90 runs sampled)\n  minimatch x 99,532 ops/sec \u00b12.03% (87 runs sampled))\n```\n\n<br>\n<br>\n\n## Philosophies\n\nThe goal of this library is to be blazing fast, without compromising on accuracy.\n\n**Accuracy**\n\nThe number one of goal of this library is accuracy. However, it's not unusual for different glob implementations to have different rules for matching behavior, even with simple wildcard matching. It gets increasingly more complicated when combinations of different features are combined, like when extglobs are combined with globstars, braces, slashes, and so on: `!(**/{a,b,*/c})`.\n\nThus, given that there is no canonical glob specification to use as a single source of truth when differences of opinion arise regarding behavior, sometimes we have to implement our best judgement and rely on feedback from users to make improvements.\n\n**Performance**\n\nAlthough this library performs well in benchmarks, and in most cases it's faster than other popular libraries we benchmarked against, we will always choose accuracy over performance. It's not helpful to anyone if our library is faster at returning the wrong answer.\n\n<br>\n<br>\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\nnpm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\nnpm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017-present, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 385172}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7730187}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 28894497}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 66334741}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 106809981}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 123053646}], "dependentsCount": 37, "starsCount": 0}, "github": {"homepage": "https://github.com/micromatch", "starsCount": 301, "forksCount": 20, "subscribersCount": 10, "issues": {"count": 63, "openCount": 10, "distribution": {"3600": 13, "10800": 1, "32400": 4, "97200": 3, "291600": 9, "874800": 3, "2624400": 7, "7873200": 17, "23619600": 5, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 98}, {"username": "XhmikosR", "commitsCount": 16}, {"username": "doowb", "commitsCount": 15}, {"username": "mrmlnc", "commitsCount": 5}, {"username": "M4rk9696", "commitsCount": 4}, {"username": "coreyfarrell", "commitsCount": 3}, {"username": "paulmillr", "commitsCount": 3}, {"username": "DrPizza", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "jon-simpkins", "commitsCount": 1}, {"username": "juszczykjakub", "commitsCount": 1}, {"username": "lozinsky", "commitsCount": 1}, {"username": "nicolo-ribaudo", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 15}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 54}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 101}]}, "source": {"files": {"readmeSize": 26547, "testsSize": 622517, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/picomatch.svg", "shields": "https://img.shields.io/npm/v/picomatch.svg", "content": "https://img.shields.io/npm/v/picomatch.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/micromatch/picomatch/master.svg", "service": "https://coveralls.io/repos/github/micromatch/picomatch/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/micromatch/picomatch/master.svg", "content": "https://img.shields.io/coveralls/github/micromatch/picomatch/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/picomatch.svg", "shields": "https://img.shields.io/npm/dm/picomatch.svg", "content": "https://img.shields.io/npm/dm/picomatch.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.738, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 345, "downloadsCount": 22111580.333333332, "downloadsAcceleration": 220568.03247716895, "dependentsCount": 37}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9142054794520548, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8242840529928231, "detail": {"quality": 0.9625313102865174, "popularity": 0.5301277828898177, "maintenance": 0.9999426739869479}}}
{"analyzedAt": "2020-02-14T16:26:55.361Z", "collected": {"metadata": {"name": "pify", "scope": "unscoped", "version": "5.0.0", "description": "Promisify a callback-style function", "keywords": ["promisify", "callback", "promise", "promises", "denodify", "denodeify", "node", "then", "thenify", "convert", "transform", "wrap", "wrapper", "bind", "async", "await", "es2015", "bluebird"], "date": "2020-02-14T16:26:35.672Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "https://sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/pify.git"}, "links": {"npm": "https://www.npmjs.com/package/pify", "homepage": "https://github.com/sindresorhus/pify#readme", "repository": "https://github.com/sindresorhus/pify", "bugs": "https://github.com/sindresorhus/pify/issues"}, "license": "MIT", "devDependencies": {"ava": "^2.4.0", "pinkie-promise": "^2.0.0", "v8-natives": "^1.1.0", "xo": "^0.26.1"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# pify [![Build Status](https://travis-ci.org/sindresorhus/pify.svg?branch=master)](https://travis-ci.org/sindresorhus/pify)\n\n> Promisify a callback-style function\n\n## Install\n\n```\n$ npm install pify\n```\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst pify = require('pify');\n\n(async () => {\n\t// Promisify a single function.\n\tconst data = await pify(fs.readFile)('package.json', 'utf8');\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n\n\t// Promisify all methods in a module.\n\tconst data2 = await pify(fs).readFile('package.json', 'utf8');\n\tconsole.log(JSON.parse(data2).name);\n\t//=> 'pify'\n})();\n```\n\n## API\n\n### pify(input, options?)\n\nReturns a `Promise` wrapped version of the supplied function or module.\n\n#### input\n\nType: `Function | object`\n\nCallback-style function or module whose methods you want to promisify.\n\n#### options\n\nType: `object`\n\n##### multiArgs\n\nType: `boolean`\\\nDefault: `false`\n\nBy default, the promisified function will only return the second argument from the callback, which works fine for most APIs. This option can be useful for modules like `request` that return multiple arguments. Turning this on will make it return an array of all arguments from the callback, excluding the error argument, instead of just the second argument. This also applies to rejections, where it returns an array of all the callback arguments, including the error.\n\n```js\nconst request = require('request');\nconst pify = require('pify');\n\nconst pRequest = pify(request, {multiArgs: true});\n\n(async () => {\n\tconst [httpResponse, body] = await pRequest('https://sindresorhus.com');\n})();\n```\n\n##### include\n\nType: `Array<string | RegExp>`\n\nMethods in a module to promisify. Remaining methods will be left untouched.\n\n##### exclude\n\nType: `Array<string | RegExp>`\\\nDefault: `[/.+(?:Sync|Stream)$/]`\n\nMethods in a module **not** to promisify. Methods with names ending with `'Sync'` are excluded by default.\n\n##### excludeMain\n\nType: `boolean`\\\nDefault: `false`\n\nIf the given module is a function itself, it will be promisified. Enable this option if you want to promisify only methods of the module.\n\n```js\nconst pify = require('pify');\n\nfunction fn() {\n\treturn true;\n}\n\nfn.method = (data, callback) => {\n\tsetImmediate(() => {\n\t\tcallback(null, data);\n\t});\n};\n\n(async () => {\n\t// Promisify methods but not `fn()`.\n\tconst promiseFn = pify(fn, {excludeMain: true});\n\n\tif (promiseFn()) {\n\t\tconsole.log(await promiseFn.method('hi'));\n\t}\n})();\n```\n\n##### errorFirst\n\nType: `boolean`\\\nDefault: `true`\n\nWhether the callback has an error as the first argument. You'll want to set this to `false` if you're dealing with an API that doesn't have an error as the first argument, like `fs.exists()`, some browser APIs, Chrome Extension APIs, etc.\n\n##### promiseModule\n\nType: `Function`\n\nCustom promise module to use instead of the native one.\n\n## FAQ\n\n#### How is this different from Node.js's [`util.promisify`](https://nodejs.org/api/util.html#util_util_promisify_original)?\n\n- Pify existed long before `util.promisify`.\n- Pify is [faster](https://github.com/sindresorhus/pify/issues/41#issuecomment-429988506).\n- Pify supports wrapping a whole module/object, not just a specific method.\n- Pify has useful options like the ability to handle multiple arguments (`multiArgs`).\n- Pify does not have [magic behavior](https://nodejs.org/api/util.html#util_custom_promisified_functions) for certain Node.js methods and instead focuses on predictability.\n\n## Related\n\n- [p-event](https://github.com/sindresorhus/p-event) - Promisify an event by waiting for it to be emitted\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [More\u2026](https://github.com/sindresorhus/promise-fun)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-pify?utm_source=npm-pify&utm_medium=referral&utm_campaign=readme\">Get professional support for 'pify' with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 5776162}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 30979669}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 129230830}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 339527092}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 669939856}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1195557709}], "dependentsCount": 1305, "starsCount": 61}, "github": {"starsCount": 1256, "forksCount": 82, "subscribersCount": 21, "issues": {"count": 74, "openCount": 2, "distribution": {"3600": 22, "10800": 2, "32400": 8, "97200": 5, "291600": 3, "874800": 3, "2624400": 3, "7873200": 9, "23619600": 6, "70858800": 10, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 42}, {"username": "dsblv", "commitsCount": 3}, {"username": "SamVerschueren", "commitsCount": 2}, {"username": "schnittstabil", "commitsCount": 2}, {"username": "DanSnow", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "Mottie", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "frangio", "commitsCount": 1}, {"username": "fregante", "commitsCount": 1}, {"username": "kevinoid", "commitsCount": 1}, {"username": "mightyiam", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 4}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 4122, "testsSize": 11046}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/pify.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/pify.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/pify/master.svg", "content": "https://img.shields.io/travis/sindresorhus/pify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1433, "downloadsCount": 113175697.33333333, "downloadsAcceleration": 369645.31925418566, "dependentsCount": 1305}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8832050101971648, "detail": {"quality": 0.9301896585895763, "popularity": 0.7262478019741273, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-04T06:35:21.109Z", "collected": {"metadata": {"name": "posix-character-classes", "scope": "unscoped", "version": "1.0.0", "description": "POSIX character classes for creating regular expressions.", "keywords": ["character", "classes", "posix"], "date": "2017-04-20T04:43:13.188Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/posix-character-classes.git"}, "links": {"npm": "https://www.npmjs.com/package/posix-character-classes", "homepage": "https://github.com/jonschlinkert/posix-character-classes", "repository": "https://github.com/jonschlinkert/posix-character-classes", "bugs": "https://github.com/jonschlinkert/posix-character-classes/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^0.1.12", "mocha": "^3.2.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# posix-character-classes [![NPM version](https://img.shields.io/npm/v/posix-character-classes.svg?style=flat)](https://www.npmjs.com/package/posix-character-classes) [![NPM monthly downloads](https://img.shields.io/npm/dm/posix-character-classes.svg?style=flat)](https://npmjs.org/package/posix-character-classes)  [![NPM total downloads](https://img.shields.io/npm/dt/posix-character-classes.svg?style=flat)](https://npmjs.org/package/posix-character-classes) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/posix-character-classes.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/posix-character-classes)\n\n> POSIX character classes for creating regular expressions.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save posix-character-classes\n```\n\nInstall with [yarn](https://yarnpkg.com):\n\n```sh\n$ yarn add posix-character-classes\n```\n\n## Usage\n\n```js\nvar posix = require('posix-character-classes');\nconsole.log(posix.alpha);\n//=> 'A-Za-z'\n```\n\n## POSIX Character classes\n\nThe POSIX standard supports the following classes or categories of charactersh (note that classes must be defined within brackets)<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>:\n\n| **POSIX class** | **Equivalent to** | **Matches** | \n| --- | --- | --- |\n| `[:alnum:]` | `[A-Za-z0-9]` | digits, uppercase and lowercase letters |\n| `[:alpha:]` | `[A-Za-z]` | upper- and lowercase letters |\n| `[:ascii:]` | `[\\x00-\\x7F]` | ASCII characters |\n| `[:blank:]` | `[ \\t]` | space and TAB characters only |\n| `[:cntrl:]` | `[\\x00-\\x1F\\x7F]` | Control characters |\n| `[:digit:]` | `[0-9]` | digits |\n| `[:graph:]` | `[^[:cntrl:]]` | graphic characters (all characters which have graphic representation) |\n| `[:lower:]` | `[a-z]` | lowercase letters |\n| `[:print:]` | `[[:graph] ]` | graphic characters and space |\n| `[:punct:]` | ``[-!\"#$%&'()*+,./:;<=>?@[]^_`{ | }~]`` | all punctuation characters (all graphic characters except letters and digits) |\n| `[:space:]` | `[ \\t\\n\\r\\f\\v]` | all blank (whitespace) characters, including spaces, tabs, new lines, carriage returns, form feeds, and vertical tabs |\n| `[:upper:]` | `[A-Z]` | uppercase letters |\n| `[:word:]` | `[A-Za-z0-9_]` | word characters |\n| `[:xdigit:]` | `[0-9A-Fa-f]` | hexadecimal digits |\n\n## Examples\n\n* `a[[:digit:]]b` matches `a0b`, `a1b`, ..., `a9b`.\n* `a[:digit:]b` is invalid, character classes must be enclosed in brackets\n* `[[:digit:]abc]` matches any digit, as well as `a`, `b`, and `c`.\n* `[abc[:digit:]]` is the same as the previous, matching any digit, as well as `a`, `b`, and `c`\n* `[^ABZ[:lower:]]` matches any character except lowercase letters, `A`, `B`, and `Z`.\n\n## About\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.5.0, on April 20, 2017._\n\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\"  class=\"footnote-item\">table and examples are based on the WikiBooks page for [Regular Expressions/POSIX Basic Regular Expressions](https://en.wikibooks.org/wiki/Regular_Expressions/POSIX_Basic_Regular_Expressions), which is available under the [Creative Commons Attribution-ShareAlike License](https://creativecommons.org/licenses/by-sa/3.0/). <a href=\"#fnref1\" class=\"footnote-backref\">\u21a9</a>\n\n</li>\n</ol>\n</section>"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1991491}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 10575389}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 44211146}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 112594331}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 222526032}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 417277596}], "dependentsCount": 46, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 1, "subscribersCount": 2, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 7}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4378, "testsSize": 476}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/posix-character-classes.svg?style=flat", "shields": "https://img.shields.io/npm/v/posix-character-classes.svg", "content": "https://img.shields.io/npm/v/posix-character-classes.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/posix-character-classes.svg?style=flat", "shields": "https://img.shields.io/npm/dm/posix-character-classes.svg", "content": "https://img.shields.io/npm/dm/posix-character-classes.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/posix-character-classes.svg?style=flat", "shields": "https://img.shields.io/npm/dt/posix-character-classes.svg", "content": "https://img.shields.io/npm/dt/posix-character-classes.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/posix-character-classes.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/posix-character-classes.svg", "shields": "https://img.shields.io/travis/jonschlinkert/posix-character-classes.svg", "content": "https://img.shields.io/travis/jonschlinkert/posix-character-classes.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 15, "downloadsCount": 37531443.666666664, "downloadsAcceleration": 105877.00479452056, "dependentsCount": 46}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8109936212901079, "detail": {"quality": 0.9691397075145873, "popularity": 0.4864946141323606, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-28T08:36:09.053Z", "collected": {"metadata": {"name": "prelude-ls", "scope": "unscoped", "version": "1.1.2", "description": "prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript.", "keywords": ["prelude", "livescript", "utility", "ls", "coffeescript", "javascript", "library", "functional", "array", "list", "object", "string"], "date": "2015-05-15T02:42:34.500Z", "author": {"name": "George Zahariev", "email": "z@georgezahariev.com", "username": "gkz"}, "publisher": {"username": "gkz", "email": "z@georgezahariev.com"}, "maintainers": [{"username": "gkz", "email": "z@georgezahariev.com"}], "repository": {"type": "git", "url": "git://github.com/gkz/prelude-ls.git"}, "links": {"npm": "https://www.npmjs.com/package/prelude-ls", "homepage": "http://preludels.com", "repository": "https://github.com/gkz/prelude-ls", "bugs": "https://github.com/gkz/prelude-ls/issues"}, "license": "MIT", "devDependencies": {"livescript": "~1.4.0", "uglify-js": "~2.4.12", "mocha": "~2.2.4", "istanbul": "~0.2.4", "browserify": "~3.24.13", "sinon": "~1.10.2"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# prelude.ls [![Build Status](https://travis-ci.org/gkz/prelude-ls.png?branch=master)](https://travis-ci.org/gkz/prelude-ls)\n\nis a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, <a href=\"http://livescript.net\">LiveScript</a>.\n\nSee **[the prelude.ls site](http://preludels.com)** for examples, a reference, and more.\n\nYou can install via npm `npm install prelude-ls`\n\n### Development\n\n`make test` to test\n\n`make build` to build `lib` from `src`\n\n`make build-browser` to build browser versions"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1870514}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 9823865}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 41502760}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 105668603}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 208057981}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 385930125}], "dependentsCount": 220, "starsCount": 5}, "github": {"homepage": "http://preludels.com/", "starsCount": 415, "forksCount": 54, "subscribersCount": 19, "issues": {"count": 121, "openCount": 32, "distribution": {"3600": 19, "10800": 8, "32400": 13, "97200": 8, "291600": 9, "874800": 3, "2624400": 7, "7873200": 5, "23619600": 13, "70858800": 10, "212576400": 26}, "isDisabled": false}, "contributors": [{"username": "gkz", "commitsCount": 152}, {"username": "johngeorgewright", "commitsCount": 7}, {"username": "audreyt", "commitsCount": 5}, {"username": "vendethiel", "commitsCount": 5}, {"username": "michaelficarra", "commitsCount": 4}, {"username": "chrisvfritz", "commitsCount": 3}, {"username": "paulmillr", "commitsCount": 3}, {"username": "apaleslimghost", "commitsCount": 2}, {"username": "jampekka", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "texastoland", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 613, "testsSize": 35840, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gkz/prelude-ls.png?branch=master", "service": "https://api.travis-ci.org/gkz/prelude-ls.svg?branch=master", "shields": "https://img.shields.io/travis/gkz/prelude-ls/master.svg", "content": "https://img.shields.io/travis/gkz/prelude-ls/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.85, "health": 1, "branding": 0.55}, "popularity": {"communityInterest": 504, "downloadsCount": 35222867.666666664, "downloadsAcceleration": 106154.3472792998, "dependentsCount": 220}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.8925619834710744, "issuesDistribution": 0}}, "score": {"final": 0.5537598651323955, "detail": {"quality": 0.9625032180096805, "popularity": 0.5905427815973289, "maintenance": 0.16662550334407497}}}
{"analyzedAt": "2020-02-12T03:38:28.247Z", "collected": {"metadata": {"name": "progress", "scope": "unscoped", "version": "2.0.3", "description": "Flexible ascii progress bar", "keywords": ["cli", "progress"], "date": "2018-12-05T16:57:58.058Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "turbopope", "email": "PapstDonB@Googlemail.com"}, "maintainers": [{"username": "prezjordan", "email": "scalesjordan@gmail.com"}, {"username": "thebigredgeek", "email": "rhyneandrew@gmail.com"}, {"username": "thejameskyle", "email": "me@thejameskyle.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}], "contributors": [{"name": "Christoffer Hallas", "email": "christoffer.hallas@gmail.com"}, {"name": "Jordan Scales", "email": "scalesjordan@gmail.com"}, {"name": "Andrew Rhyne", "email": "rhyneandrew@gmail.com"}, {"name": "Marco Brack", "email": "PapstDonB@Googlemail.com"}], "repository": {"type": "git", "url": "git://github.com/visionmedia/node-progress.git"}, "links": {"npm": "https://www.npmjs.com/package/progress", "homepage": "https://github.com/visionmedia/node-progress#readme", "repository": "https://github.com/visionmedia/node-progress", "bugs": "https://github.com/visionmedia/node-progress/issues"}, "license": "MIT", "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 4}], "readme": "Flexible ascii progress bar.\n\n## Installation\n\n```bash\n$ npm install progress\n```\n\n## Usage\n\nFirst we create a `ProgressBar`, giving it a format string\nas well as the `total`, telling the progress bar when it will\nbe considered complete. After that all we need to do is `tick()` appropriately.\n\n```javascript\nvar ProgressBar = require('progress');\n\nvar bar = new ProgressBar(':bar', { total: 10 });\nvar timer = setInterval(function () {\n  bar.tick();\n  if (bar.complete) {\n    console.log('\\ncomplete\\n');\n    clearInterval(timer);\n  }\n}, 100);\n```\n\n### Options\n\nThese are keys in the options object you can pass to the progress bar along with\n`total` as seen in the example above.\n\n- `curr` current completed index\n- `total` total number of ticks to complete\n- `width` the displayed width of the progress bar defaulting to total\n- `stream` the output stream defaulting to stderr\n- `head` head character defaulting to complete character\n- `complete` completion character defaulting to \"=\"\n- `incomplete` incomplete character defaulting to \"-\"\n- `renderThrottle` minimum time between updates in milliseconds defaulting to 16\n- `clear` option to clear the bar on completion defaulting to false\n- `callback` optional function to call when the progress bar completes\n\n### Tokens\n\nThese are tokens you can use in the format of your progress bar.\n\n- `:bar` the progress bar itself\n- `:current` current tick number\n- `:total` total ticks\n- `:elapsed` time elapsed in seconds\n- `:percent` completion percentage\n- `:eta` estimated completion time in seconds\n- `:rate` rate of ticks per second\n\n### Custom Tokens\n\nYou can define custom tokens by adding a `{'name': value}` object parameter to your method (`tick()`, `update()`, etc.) calls.\n\n```javascript\nvar bar = new ProgressBar(':current: :token1 :token2', { total: 3 })\nbar.tick({\n  'token1': \"Hello\",\n  'token2': \"World!\\n\"\n})\nbar.tick(2, {\n  'token1': \"Goodbye\",\n  'token2': \"World!\"\n})\n```\nThe above example would result in the output below.\n\n```\n1: Hello World!\n3: Goodbye World!\n```\n\n## Examples\n\n### Download\n\nIn our download example each tick has a variable influence, so we pass the chunk\nlength which adjusts the progress bar appropriately relative to the total\nlength.\n\n```javascript\nvar ProgressBar = require('progress');\nvar https = require('https');\n\nvar req = https.request({\n  host: 'download.github.com',\n  port: 443,\n  path: '/visionmedia-node-jscoverage-0d4608a.zip'\n});\n\nreq.on('response', function(res){\n  var len = parseInt(res.headers['content-length'], 10);\n\n  console.log();\n  var bar = new ProgressBar('  downloading [:bar] :rate/bps :percent :etas', {\n    complete: '=',\n    incomplete: ' ',\n    width: 20,\n    total: len\n  });\n\n  res.on('data', function (chunk) {\n    bar.tick(chunk.length);\n  });\n\n  res.on('end', function () {\n    console.log('\\n');\n  });\n});\n\nreq.end();\n```\n\nThe above example result in a progress bar like the one below.\n\n```\ndownloading [=====             ] 39/bps 29% 3.7s\n```\n\n### Interrupt\n\nTo display a message during progress bar execution, use `interrupt()`\n```javascript\nvar ProgressBar = require('progress');\n\nvar bar = new ProgressBar(':bar :current/:total', { total: 10 });\nvar timer = setInterval(function () {\n  bar.tick();\n  if (bar.complete) {\n    clearInterval(timer);\n  } else if (bar.curr === 5) {\n      bar.interrupt('this message appears above the progress bar\\ncurrent progress is ' + bar.curr + '/' + bar.total);\n  }\n}, 1000);\n```\n\nYou can see more examples in the `examples` folder.\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1894138}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 9940424}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 41682942}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 109182305}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 216238423}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 409682437}], "dependentsCount": 2038, "starsCount": 125}, "github": {"starsCount": 2370, "forksCount": 201, "subscribersCount": 33, "issues": {"count": 194, "openCount": 61, "distribution": {"3600": 22, "10800": 5, "32400": 7, "97200": 4, "291600": 8, "874800": 12, "2624400": 11, "7873200": 16, "23619600": 22, "70858800": 44, "212576400": 43}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 17}, {"username": "jdan", "commitsCount": 15}, {"username": "hallas", "commitsCount": 10}, {"username": "davglass", "commitsCount": 4}, {"username": "westwood846", "commitsCount": 4}, {"username": "Dineshs91", "commitsCount": 2}, {"username": "nullivex", "commitsCount": 2}, {"username": "quimcalpe", "commitsCount": 2}, {"username": "sjfkai", "commitsCount": 2}, {"username": "Pomax", "commitsCount": 1}, {"username": "bahmutov", "commitsCount": 1}, {"username": "bentruyman", "commitsCount": 1}, {"username": "brollb", "commitsCount": 1}, {"username": "configurator", "commitsCount": 1}, {"username": "eirikurn", "commitsCount": 1}, {"username": "frewsxcv", "commitsCount": 1}, {"username": "hughsk", "commitsCount": 1}, {"username": "jeetiss", "commitsCount": 1}, {"username": "kmsheng", "commitsCount": 1}, {"username": "larshp", "commitsCount": 1}, {"username": "mleguen", "commitsCount": 1}, {"username": "simme", "commitsCount": 1}, {"username": "thebigredgeek", "commitsCount": 1}, {"username": "themasch", "commitsCount": 1}, {"username": "trenskow", "commitsCount": 1}, {"username": "zzarcon", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3516, "testsSize": 0, "hasNpmIgnore": true, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 2755, "downloadsCount": 36394101.666666664, "downloadsAcceleration": 86480.17524733627, "dependentsCount": 2038}, "maintenance": {"releasesFrequency": 0.09863013698630138, "commitsFrequency": 0, "openIssues": 0.8092783505154639, "issuesDistribution": 0}}, "score": {"final": 0.5076580413744132, "detail": {"quality": 0.5335743134448279, "popularity": 0.7279549143236893, "maintenance": 0.26514722093621}}}
{"analyzedAt": "2020-02-13T14:23:16.443Z", "collected": {"metadata": {"name": "punycode", "scope": "unscoped", "version": "2.1.1", "description": "A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.", "keywords": ["punycode", "unicode", "idn", "idna", "dns", "url", "domain"], "date": "2018-05-22T02:46:47.304Z", "author": {"name": "Mathias Bynens", "url": "https://mathiasbynens.be/"}, "publisher": {"username": "mathias", "email": "mathias@qiwi.be"}, "maintainers": [{"username": "mathias", "email": "mathias@qiwi.be"}, {"username": "reconbot", "email": "wizard@roborooter.com"}], "contributors": [{"name": "Mathias Bynens", "url": "https://mathiasbynens.be/"}], "repository": {"type": "git", "url": "git+https://github.com/bestiejs/punycode.js.git"}, "links": {"npm": "https://www.npmjs.com/package/punycode", "homepage": "https://mths.be/punycode", "repository": "https://github.com/bestiejs/punycode.js", "bugs": "https://github.com/bestiejs/punycode.js/issues"}, "license": "MIT", "devDependencies": {"codecov": "^1.0.1", "istanbul": "^0.4.1", "mocha": "^2.5.3"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Punycode.js [![Build status](https://travis-ci.org/bestiejs/punycode.js.svg?branch=master)](https://travis-ci.org/bestiejs/punycode.js) [![Code coverage status](http://img.shields.io/codecov/c/github/bestiejs/punycode.js.svg)](https://codecov.io/gh/bestiejs/punycode.js) [![Dependency status](https://gemnasium.com/bestiejs/punycode.js.svg)](https://gemnasium.com/bestiejs/punycode.js)\n\nPunycode.js is a robust Punycode converter that fully complies to [RFC 3492](https://tools.ietf.org/html/rfc3492) and [RFC 5891](https://tools.ietf.org/html/rfc5891).\n\nThis JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:\n\n* [The C example code from RFC 3492](https://tools.ietf.org/html/rfc3492#appendix-C)\n* [`punycode.c` by _Markus W. Scherer_ (IBM)](http://opensource.apple.com/source/ICU/ICU-400.42/icuSources/common/punycode.c)\n* [`punycode.c` by _Ben Noordhuis_](https://github.com/bnoordhuis/punycode/blob/master/punycode.c)\n* [JavaScript implementation by _some_](http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion/301287#301287)\n* [`punycode.js` by _Ben Noordhuis_](https://github.com/joyent/node/blob/426298c8c1c0d5b5224ac3658c41e7c2a3fe9377/lib/punycode.js) (note: [not fully compliant](https://github.com/joyent/node/issues/2072))\n\nThis project was [bundled](https://github.com/joyent/node/blob/master/lib/punycode.js) with Node.js from [v0.6.2+](https://github.com/joyent/node/compare/975f1930b1...61e796decc) until [v7](https://github.com/nodejs/node/pull/7941) (soft-deprecated).\n\nThe current version supports recent versions of Node.js only. It provides a CommonJS module and an ES6 module. For the old version that offers the same functionality with broader support, including Rhino, Ringo, Narwhal, and web browsers, see [v1.4.1](https://github.com/bestiejs/punycode.js/releases/tag/v1.4.1).\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install punycode --save\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst punycode = require('punycode');\n```\n\n## API\n\n### `punycode.decode(string)`\n\nConverts a Punycode string of ASCII symbols to a string of Unicode symbols.\n\n```js\n// decode domain name parts\npunycode.decode('maana-pta'); // 'ma\u00f1ana'\npunycode.decode('--dqo34k'); // '\u2603-\u2318'\n```\n\n### `punycode.encode(string)`\n\nConverts a string of Unicode symbols to a Punycode string of ASCII symbols.\n\n```js\n// encode domain name parts\npunycode.encode('ma\u00f1ana'); // 'maana-pta'\npunycode.encode('\u2603-\u2318'); // '--dqo34k'\n```\n\n### `punycode.toUnicode(input)`\n\nConverts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn\u2019t matter if you call it on a string that has already been converted to Unicode.\n\n```js\n// decode domain names\npunycode.toUnicode('xn--maana-pta.com');\n// \u2192 'ma\u00f1ana.com'\npunycode.toUnicode('xn----dqo34k.com');\n// \u2192 '\u2603-\u2318.com'\n\n// decode email addresses\npunycode.toUnicode('\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq');\n// \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a'\n```\n\n### `punycode.toASCII(input)`\n\nConverts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn\u2019t matter if you call it with a domain that\u2019s already in ASCII.\n\n```js\n// encode domain names\npunycode.toASCII('ma\u00f1ana.com');\n// \u2192 'xn--maana-pta.com'\npunycode.toASCII('\u2603-\u2318.com');\n// \u2192\u00a0'xn----dqo34k.com'\n\n// encode email addresses\npunycode.toASCII('\u0434\u0436\u0443\u043c\u043b\u0430@\u0434\u0436p\u0443\u043c\u043b\u0430\u0442\u0435\u0441\u0442.b\u0440\u0444a');\n// \u2192 '\u0434\u0436\u0443\u043c\u043b\u0430@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq'\n```\n\n### `punycode.ucs2`\n\n#### `punycode.ucs2.decode(string)`\n\nCreates an array containing the numeric code point values of each Unicode symbol in the string. While [JavaScript uses UCS-2 internally](https://mathiasbynens.be/notes/javascript-encoding), this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.\n\n```js\npunycode.ucs2.decode('abc');\n// \u2192 [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode('\\uD834\\uDF06');\n// \u2192 [0x1D306]\n```\n\n#### `punycode.ucs2.encode(codePoints)`\n\nCreates a string based on an array of numeric code point values.\n\n```js\npunycode.ucs2.encode([0x61, 0x62, 0x63]);\n// \u2192 'abc'\npunycode.ucs2.encode([0x1D306]);\n// \u2192 '\\uD834\\uDF06'\n```\n\n### `punycode.version`\n\nA string representing the current Punycode.js version number.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\nPunycode.js is available under the [MIT](https://mths.be/mit) license."}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 6351710}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 35093247}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 147831847}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 390982751}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 773569349}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 1449160864}], "dependentsCount": 289, "starsCount": 14}, "github": {"homepage": "https://mths.be/punycode", "starsCount": 1115, "forksCount": 128, "subscribersCount": 32, "issues": {"count": 98, "openCount": 29, "distribution": {"3600": 21, "10800": 6, "32400": 9, "97200": 3, "291600": 3, "874800": 6, "2624400": 5, "7873200": 6, "23619600": 11, "70858800": 19, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "mathiasbynens", "commitsCount": 111}, {"username": "garycourt", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "abetomo", "commitsCount": 1}, {"username": "bnjmnt4n", "commitsCount": 1}, {"username": "bnoordhuis", "commitsCount": 1}, {"username": "guybedford", "commitsCount": 1}, {"username": "mscdex", "commitsCount": 1}, {"username": "nathanhammond", "commitsCount": 1}, {"username": "nstepien", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 1}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4941, "testsSize": 10511}, "badges": [{"urls": {"original": "https://travis-ci.org/bestiejs/punycode.js.svg?branch=master", "service": "https://api.travis-ci.org/bestiejs/punycode.js.svg?branch=master", "shields": "https://img.shields.io/travis/bestiejs/punycode.js/master.svg", "content": "https://img.shields.io/travis/bestiejs/punycode.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/codecov/c/github/bestiejs/punycode.js.svg", "service": "https://codecov.io/github/bestiejs/punycode.js/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/bestiejs/punycode.js.svg", "content": "https://img.shields.io/codecov/c/github/bestiejs/punycode.js.json"}, "info": {"service": "codecov", "type": "coverage"}}], "linters": ["editorconfig"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9954999999999999, "health": 1, "branding": 0.7}, "popularity": {"communityInterest": 1299, "downloadsCount": 130327583.66666667, "downloadsAcceleration": 321182.06345129386, "dependentsCount": 289}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.011506849315068493, "openIssues": 0.8401360544217688, "issuesDistribution": 0}}, "score": {"final": 0.6012181125074075, "detail": {"quality": 0.9891637142630553, "popularity": 0.6683314846264303, "maintenance": 0.2015799388835438}}}
{"analyzedAt": "2020-02-12T07:13:49.064Z", "collected": {"metadata": {"name": "regex-not", "scope": "unscoped", "version": "1.0.2", "description": "Create a javascript regular expression for matching everything except for the given string.", "keywords": ["exec", "match", "negate", "negation", "not", "regex", "regular expression", "test"], "date": "2018-02-20T02:31:14.441Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/regex-not.git"}, "links": {"npm": "https://www.npmjs.com/package/regex-not", "homepage": "https://github.com/jonschlinkert/regex-not", "repository": "https://github.com/jonschlinkert/regex-not", "bugs": "https://github.com/jonschlinkert/regex-not/issues"}, "license": "MIT", "dependencies": {"extend-shallow": "^3.0.2", "safe-regex": "^1.1.0"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# regex-not [![NPM version](https://img.shields.io/npm/v/regex-not.svg?style=flat)](https://www.npmjs.com/package/regex-not) [![NPM monthly downloads](https://img.shields.io/npm/dm/regex-not.svg?style=flat)](https://npmjs.org/package/regex-not) [![NPM total downloads](https://img.shields.io/npm/dt/regex-not.svg?style=flat)](https://npmjs.org/package/regex-not) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/regex-not.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/regex-not)\n\n> Create a javascript regular expression for matching everything except for the given string.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save regex-not\n```\n\n## Usage\n\n```js\nvar not = require('regex-not');\n```\n\nThe main export is a function that takes a string an options object.\n\n```js\nnot(string[, options]);\n```\n\n**Example**\n\n```js\nvar not = require('regex-not');\nconsole.log(not('foo'));\n//=> /^(?:(?!^(?:foo)$).)+$/\n```\n\n**Strict matching**\n\nBy default, the returned regex is for strictly (not) matching the exact given pattern (in other words, \"match this string if it does NOT _exactly equal_ `foo`\"):\n\n```js\nvar re = not('foo');\nconsole.log(re.test('foo'));     //=> false\nconsole.log(re.test('bar'));     //=> true\nconsole.log(re.test('foobar'));  //=> true\nconsole.log(re.test('barfoo'));  //=> true\n```\n\n### .create\n\nReturns a string to allow you to create your own regex:\n\n```js\nconsole.log(not.create('foo'));\n//=> '(?:(?!^(?:foo)$).)+'\n```\n\n### Options\n\n**options.contains**\n\nYou can relax strict matching by setting `options.contains` to true (in other words, \"match this string if it does NOT _contain_ `foo`\"):\n\n```js\nvar re = not('foo');\nconsole.log(re.test('foo', {contains: true}));     //=> false\nconsole.log(re.test('bar', {contains: true}));     //=> true\nconsole.log(re.test('foobar', {contains: true}));  //=> false\nconsole.log(re.test('barfoo', {contains: true}));  //=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [regex-cache](https://www.npmjs.com/package/regex-cache): Memoize the results of a call to the RegExp constructor, avoiding repetitious runtime compilation of\u2026 [more](https://github.com/jonschlinkert/regex-cache) | [homepage](https://github.com/jonschlinkert/regex-cache \"Memoize the results of a call to the RegExp constructor, avoiding repetitious runtime compilation of the same string and options, resulting in surprising performance improvements.\")\n* [to-regex](https://www.npmjs.com/package/to-regex): Generate a regex from a string or array of strings. | [homepage](https://github.com/jonschlinkert/to-regex \"Generate a regex from a string or array of strings.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 9 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [doowb](https://github.com/doowb) |\n| 1 | [EdwardBetts](https://github.com/EdwardBetts) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on February 19, 2018._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1935596}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 10227176}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 42688634}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 111683468}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 223281444}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 421301900}], "dependentsCount": 46, "starsCount": 2}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 24, "forksCount": 3, "subscribersCount": 3, "issues": {"count": 3, "openCount": 1, "distribution": {"3600": 0, "10800": 0, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 15}, {"username": "EdwardBetts", "commitsCount": 1}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4491, "testsSize": 2163}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/regex-not.svg?style=flat", "shields": "https://img.shields.io/npm/v/regex-not.svg", "content": "https://img.shields.io/npm/v/regex-not.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/regex-not.svg?style=flat", "shields": "https://img.shields.io/npm/dm/regex-not.svg", "content": "https://img.shields.io/npm/dm/regex-not.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/regex-not.svg?style=flat", "shields": "https://img.shields.io/npm/dt/regex-not.svg", "content": "https://img.shields.io/npm/dt/regex-not.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/regex-not.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/regex-not.svg", "shields": "https://img.shields.io/travis/jonschlinkert/regex-not.svg", "content": "https://img.shields.io/travis/jonschlinkert/regex-not.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"safe-regex": {"required": "^1.1.0", "stable": "2.1.1", "latest": "2.1.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 34, "downloadsCount": 37227822.666666664, "downloadsAcceleration": 88725.84292237437, "dependentsCount": 46}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8106702316641801, "detail": {"quality": 0.9596449968378136, "popularity": 0.49379088494519696, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-22T04:30:16.951Z", "collected": {"metadata": {"name": "regexpp", "scope": "unscoped", "version": "3.0.0", "description": "Regular expression parser for ECMAScript.", "keywords": ["regexp", "regular", "expression", "parser", "validator", "ast", "abstract", "syntax", "tree", "ecmascript", "es2015", "es2016", "es2017", "es2018", "es2019", "es2020", "annexB"], "date": "2019-08-30T02:44:42.581Z", "author": {"name": "Toru Nagashima", "url": "https://github.com/mysticatea"}, "publisher": {"username": "mysticatea", "email": "public@mysticatea.dev"}, "maintainers": [{"username": "mysticatea", "email": "star.ctor@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mysticatea/regexpp.git"}, "links": {"npm": "https://www.npmjs.com/package/regexpp", "homepage": "https://github.com/mysticatea/regexpp#readme", "repository": "https://github.com/mysticatea/regexpp", "bugs": "https://github.com/mysticatea/regexpp/issues"}, "license": "MIT", "devDependencies": {"@mysticatea/eslint-plugin": "^11.0.0", "@types/eslint": "^4.16.2", "@types/jsdom": "^12.2.4", "@types/mocha": "^5.2.2", "@types/node": "^12.6.8", "codecov": "^3.5.0", "dts-bundle": "^0.7.3", "eslint": "^6.1.0", "jsdom": "^15.1.1", "mocha": "^6.2.0", "npm-run-all": "^4.1.5", "nyc": "^14.1.1", "rimraf": "^2.6.2", "rollup": "^1.17.0", "rollup-plugin-node-resolve": "^5.2.0", "rollup-plugin-sourcemaps": "^0.4.2", "ts-node": "^8.3.0", "typescript": "^3.5.3"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 10}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# regexpp\n\n[![npm version](https://img.shields.io/npm/v/regexpp.svg)](https://www.npmjs.com/package/regexpp)\n[![Downloads/month](https://img.shields.io/npm/dm/regexpp.svg)](http://www.npmtrends.com/regexpp)\n[![Build Status](https://github.com/mysticatea/regexpp/workflows/CI/badge.svg)](https://github.com/mysticatea/regexpp/actions)\n[![codecov](https://codecov.io/gh/mysticatea/regexpp/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/regexpp)\n[![Dependency Status](https://david-dm.org/mysticatea/regexpp.svg)](https://david-dm.org/mysticatea/regexpp)\n\nA regular expression parser for ECMAScript.\n\n## \ud83d\udcbf Installation\n\n```bash\n$ npm install regexpp\n```\n\n- require Node.js 8 or newer.\n\n## \ud83d\udcd6 Usage\n\n```ts\nimport {\n    AST,\n    RegExpParser,\n    RegExpValidator,\n    RegExpVisitor,\n    parseRegExpLiteral,\n    validateRegExpLiteral,\n    visitRegExpAST\n} from \"regexpp\"\n```\n\n### parseRegExpLiteral(source, options?)\n\nParse a given regular expression literal then make AST object.\n\nThis is equivalent to `new RegExpParser(options).parseLiteral(source)`.\n\n- **Parameters:**\n    - `source` (`string | RegExp`) The source code to parse.\n    - `options?` ([`RegExpParser.Options`]) The options to parse.\n- **Return:**\n    - The AST of the regular expression.\n\n### validateRegExpLiteral(source, options?)\n\nValidate a given regular expression literal.\n\nThis is equivalent to `new RegExpValidator(options).validateLiteral(source)`.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `options?` ([`RegExpValidator.Options`]) The options to validate.\n\n### visitRegExpAST(ast, handlers)\n\nVisit each node of a given AST.\n\nThis is equivalent to `new RegExpVisitor(handlers).visit(ast)`.\n\n- **Parameters:**\n    - `ast` ([`AST.Node`]) The AST to visit.\n    - `handlers` ([`RegExpVisitor.Handlers`]) The callbacks.\n\n### RegExpParser\n\n#### new RegExpParser(options?)\n\n- **Parameters:**\n    - `options?` ([`RegExpParser.Options`]) The options to parse.\n\n#### parser.parseLiteral(source, start?, end?)\n\nParse a regular expression literal.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"/abc/g\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n- **Return:**\n    - The AST of the regular expression.\n\n#### parser.parsePattern(source, start?, end?, uFlag?)\n\nParse a regular expression pattern.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"abc\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n    - `uFlag?` (`boolean`) The flag to enable Unicode mode.\n- **Return:**\n    - The AST of the regular expression pattern.\n\n#### parser.parseFlags(source, start?, end?)\n\nParse a regular expression flags.\n\n- **Parameters:**\n    - `source` (`string`) The source code to parse. E.g. `\"gim\"`.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n- **Return:**\n    - The AST of the regular expression flags.\n\n### RegExpValidator\n\n#### new RegExpValidator(options)\n\n- **Parameters:**\n    - `options` ([`RegExpValidator.Options`]) The options to validate.\n\n#### validator.validateLiteral(source, start, end)\n\nValidate a regular expression literal.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n\n#### validator.validatePattern(source, start, end, uFlag)\n\nValidate a regular expression pattern.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n    - `uFlag?` (`boolean`) The flag to enable Unicode mode.\n\n#### validator.validateFlags(source, start, end)\n\nValidate a regular expression flags.\n\n- **Parameters:**\n    - `source` (`string`) The source code to validate.\n    - `start?` (`number`) The start index in the source code. Default is `0`.\n    - `end?` (`number`) The end index in the source code. Default is `source.length`.\n\n### RegExpVisitor\n\n#### new RegExpVisitor(handlers)\n\n- **Parameters:**\n    - `handlers` ([`RegExpVisitor.Handlers`]) The callbacks.\n\n#### visitor.visit(ast)\n\nValidate a regular expression literal.\n\n- **Parameters:**\n    - `ast` ([`AST.Node`]) The AST to visit.\n\n## \ud83d\udcf0 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/regexpp/releases)\n\n## \ud83c\udf7b Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run build` compiles TypeScript source code to `index.js`, `index.js.map`, and `index.d.ts`.\n- `npm run clean` removes the temporary files which are created by `npm test` and `npm run build`.\n- `npm run lint` runs ESLint.\n- `npm run update:test` updates test fixtures.\n- `npm run update:ids` updates `src/unicode/ids.ts`.\n- `npm run watch` runs tests with `--watch` option.\n\n[`AST.Node`]: src/ast.ts#L4\n[`RegExpParser.Options`]: src/parser.ts#L539\n[`RegExpValidator.Options`]: src/validator.ts#L127\n[`RegExpVisitor.Handlers`]: src/visitor.ts#L204"}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1700878}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 9963249}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 40662370}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 100031690}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 178801376}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 301798991}], "dependentsCount": 35, "starsCount": 0}, "github": {"starsCount": 80, "forksCount": 3, "subscribersCount": 4, "issues": {"count": 8, "openCount": 1, "distribution": {"3600": 1, "10800": 0, "32400": 1, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 5, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mysticatea", "commitsCount": 34}, {"username": "bluelovers", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 10}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 5481, "testsSize": 1790904}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/regexpp.svg", "shields": "https://img.shields.io/npm/v/regexpp.svg", "content": "https://img.shields.io/npm/v/regexpp.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/regexpp.svg", "shields": "https://img.shields.io/npm/dm/regexpp.svg", "content": "https://img.shields.io/npm/dm/regexpp.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/mysticatea/regexpp.svg", "service": "https://david-dm.org/mysticatea/regexpp.svg", "shields": "https://img.shields.io/david/mysticatea/regexpp.svg", "content": "https://img.shields.io/david/mysticatea/regexpp.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"], "coverage": 0.87}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9804999999999999, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 89, "downloadsCount": 33343896.666666668, "downloadsAcceleration": 173765.05243531204, "dependentsCount": 35}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9513616832386363}}, "score": {"final": 0.8245040866645992, "detail": {"quality": 0.9856688307865813, "popularity": 0.5109333292751362, "maintenance": 0.999933634806649}}}
{"analyzedAt": "2020-02-11T00:15:11.406Z", "collected": {"metadata": {"name": "repeat-element", "scope": "unscoped", "version": "1.1.3", "description": "Create an array by repeating the given value n times.", "keywords": ["array", "element", "repeat", "string"], "date": "2018-08-19T15:30:30.501Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/repeat-element.git"}, "links": {"npm": "https://www.npmjs.com/package/repeat-element", "homepage": "https://github.com/jonschlinkert/repeat-element", "repository": "https://github.com/jonschlinkert/repeat-element", "bugs": "https://github.com/jonschlinkert/repeat-element/issues"}, "license": "MIT", "devDependencies": {"benchmarked": "^2.0.0", "chalk": "^2.4.1", "glob": "^7.1.2", "gulp-format-md": "^1.0.0", "minimist": "^1.2.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# repeat-element [![NPM version](https://img.shields.io/npm/v/repeat-element.svg?style=flat)](https://www.npmjs.com/package/repeat-element) [![NPM monthly downloads](https://img.shields.io/npm/dm/repeat-element.svg?style=flat)](https://npmjs.org/package/repeat-element) [![NPM total downloads](https://img.shields.io/npm/dt/repeat-element.svg?style=flat)](https://npmjs.org/package/repeat-element) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/repeat-element.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/repeat-element)\n\n> Create an array by repeating the given value n times.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save repeat-element\n```\n\n## Usage\n\n```js\nconst repeat = require('repeat-element');\n\nrepeat('a', 5);\n//=> ['a', 'a', 'a', 'a', 'a']\n\nrepeat('a', 1);\n//=> ['a']\n\nrepeat('a', 0);\n//=> []\n\nrepeat(null, 5)\n//\u00bb [ null, null, null, null, null ]\n\nrepeat({some: 'object'}, 5)\n//\u00bb [ { some: 'object' },\n//    { some: 'object' },\n//    { some: 'object' },\n//    { some: 'object' },\n//    { some: 'object' } ]\n\nrepeat(5, 5)\n//\u00bb [ 5, 5, 5, 5, 5 ]\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 17 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 3 | [LinusU](https://github.com/LinusU) |\n| 1 | [architectcodes](https://github.com/architectcodes) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on August 19, 2018._"}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 8612733}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 40715001}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 113961247}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 230490997}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 441868904}], "dependentsCount": 72, "starsCount": 0}, "github": {"starsCount": 17, "forksCount": 3, "subscribersCount": 2, "issues": {"count": 5, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 1, "97200": 2, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 17}, {"username": "LinusU", "commitsCount": 3}, {"username": "architectcodes", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 2910, "testsSize": 1385}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/repeat-element.svg?style=flat", "shields": "https://img.shields.io/npm/v/repeat-element.svg", "content": "https://img.shields.io/npm/v/repeat-element.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/repeat-element.svg?style=flat", "shields": "https://img.shields.io/npm/dm/repeat-element.svg", "content": "https://img.shields.io/npm/dm/repeat-element.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/repeat-element.svg?style=flat", "shields": "https://img.shields.io/npm/dt/repeat-element.svg", "content": "https://img.shields.io/npm/dt/repeat-element.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/repeat-element.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/repeat-element.svg", "shields": "https://img.shields.io/travis/jonschlinkert/repeat-element.svg", "content": "https://img.shields.io/travis/jonschlinkert/repeat-element.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 26, "downloadsCount": 37987082.333333336, "downloadsAcceleration": 54118.191229071526, "dependentsCount": 72}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8018206520085802, "detail": {"quality": 0.9333911371497057, "popularity": 0.49092776221218026, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-13T12:34:52.584Z", "collected": {"metadata": {"name": "repeat-string", "scope": "unscoped", "version": "1.6.1", "description": "Repeat the given string n times. Fastest implementation for repeating a string.", "keywords": ["fast", "fastest", "fill", "left", "left-pad", "multiple", "pad", "padding", "repeat", "repeating", "repetition", "right", "right-pad", "string", "times"], "date": "2016-10-23T16:54:00.613Z", "author": {"name": "Jon Schlinkert", "url": "http://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "email": "brian.woodward@gmail.com", "url": "https://github.com/doowb"}, {"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}, {"name": "Linus Unneb\u00e4ck", "email": "linus@folkdatorn.se", "url": "http://linus.unneb\u00e4ck.se"}, {"name": "Thijs Busser", "email": "tbusser@gmail.com", "url": "http://tbusser.net"}, {"name": "Titus", "email": "tituswormer@gmail.com", "url": "wooorm.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/repeat-string.git"}, "links": {"npm": "https://www.npmjs.com/package/repeat-string", "homepage": "https://github.com/jonschlinkert/repeat-string", "repository": "https://github.com/jonschlinkert/repeat-string", "bugs": "https://github.com/jonschlinkert/repeat-string/issues"}, "license": "MIT", "devDependencies": {"ansi-cyan": "^0.1.1", "benchmarked": "^0.2.5", "gulp-format-md": "^0.1.11", "isobject": "^2.1.0", "mocha": "^3.1.2", "repeating": "^3.0.0", "text-table": "^0.2.0", "yargs-parser": "^4.0.2"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# repeat-string [![NPM version](https://img.shields.io/npm/v/repeat-string.svg?style=flat)](https://www.npmjs.com/package/repeat-string) [![NPM monthly downloads](https://img.shields.io/npm/dm/repeat-string.svg?style=flat)](https://npmjs.org/package/repeat-string)  [![NPM total downloads](https://img.shields.io/npm/dt/repeat-string.svg?style=flat)](https://npmjs.org/package/repeat-string) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/repeat-string.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/repeat-string)\n\n> Repeat the given string n times. Fastest implementation for repeating a string.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save repeat-string\n```\n\n## Usage\n\n### [repeat](index.js#L41)\n\nRepeat the given `string` the specified `number` of times.\n\n**Example:**\n\n**Example**\n\n```js\nvar repeat = require('repeat-string');\nrepeat('A', 5);\n//=> AAAAA\n```\n\n**Params**\n\n* `string` **{String}**: The string to repeat\n* `number` **{Number}**: The number of times to repeat the string\n* `returns` **{String}**: Repeated string\n\n## Benchmarks\n\nRepeat string is significantly faster than the native method (which is itself faster than [repeating](https://github.com/sindresorhus/repeating)):\n\n```sh\n# 2x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (26,953,977 ops/sec)\nrepeating      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                  (9,855,695 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         (19,453,895 ops/sec)\n\n# 3x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (19,445,252 ops/sec)\nrepeating      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                (8,661,565 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588       (16,020,598 ops/sec)\n\n# 10x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (23,792,521 ops/sec)\nrepeating      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                  (8,571,332 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588            (14,582,955 ops/sec)\n\n# 50x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (23,640,179 ops/sec)\nrepeating      \u2588\u2588\u2588\u2588\u2588                      (5,505,509 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                 (10,085,557 ops/sec)\n\n# 250x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (23,489,618 ops/sec)\nrepeating      \u2588\u2588\u2588\u2588                       (3,962,937 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                   (7,724,892 ops/sec)\n\n# 2000x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (20,315,172 ops/sec)\nrepeating      \u2588\u2588\u2588\u2588                       (3,297,079 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588\u2588\u2588                    (6,203,331 ops/sec)\n\n# 20000x\nrepeat-string  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  (23,382,915 ops/sec)\nrepeating      \u2588\u2588\u2588                        (2,980,058 ops/sec)\nnative         \u2588\u2588\u2588\u2588\u2588                      (5,578,808 ops/sec)\n```\n\n**Run the benchmarks**\n\nInstall dev dependencies:\n\n```sh\nnpm i -d && node benchmark\n```\n\n## About\n\n### Related projects\n\n[repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element \"Create an array by repeating the given value n times.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor**<br/> | \n| --- | --- |\n| 51 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [LinusU](https://github.com/LinusU) |\n| 2 | [tbusser](https://github.com/tbusser) |\n| 1 | [doowb](https://github.com/doowb) |\n| 1 | [wooorm](https://github.com/wooorm) |\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2016, [Jon Schlinkert](http://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/repeat-string/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.2.0, on October 23, 2016._"}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2129472}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 11179939}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 46867181}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 122959887}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 247308453}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 478408352}], "dependentsCount": 193, "starsCount": 5}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 35, "forksCount": 10, "subscribersCount": 5, "issues": {"count": 9, "openCount": 2, "distribution": {"3600": 2, "10800": 2, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 2, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 60}, {"username": "LinusU", "commitsCount": 2}, {"username": "tbusser", "commitsCount": 2}, {"username": "doowb", "commitsCount": 1}, {"username": "wooorm", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5057, "testsSize": 2287}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/repeat-string.svg?style=flat", "shields": "https://img.shields.io/npm/v/repeat-string.svg", "content": "https://img.shields.io/npm/v/repeat-string.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/repeat-string.svg?style=flat", "shields": "https://img.shields.io/npm/dm/repeat-string.svg", "content": "https://img.shields.io/npm/dm/repeat-string.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/repeat-string.svg?style=flat", "shields": "https://img.shields.io/npm/dt/repeat-string.svg", "content": "https://img.shields.io/npm/dt/repeat-string.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/repeat-string.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/repeat-string.svg", "shields": "https://img.shields.io/travis/jonschlinkert/repeat-string.svg", "content": "https://img.shields.io/travis/jonschlinkert/repeat-string.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 60, "downloadsCount": 40986629, "downloadsAcceleration": 78689.89731735166, "dependentsCount": 193}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.962962962962963, "issuesDistribution": 0.9}}, "score": {"final": 0.829182708246046, "detail": {"quality": 0.9691397075145873, "popularity": 0.538514099319656, "maintenance": 0.9998881749422579}}}
{"analyzedAt": "2020-02-05T21:31:10.098Z", "collected": {"metadata": {"name": "resolve", "scope": "unscoped", "version": "1.15.1", "description": "resolve like require.resolve() on behalf of files asynchronously and synchronously", "keywords": ["resolve", "require", "node", "module"], "date": "2020-02-05T21:30:57.685Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "substack", "email": "substack@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/browserify/resolve.git"}, "links": {"npm": "https://www.npmjs.com/package/resolve", "homepage": "https://github.com/browserify/resolve#readme", "repository": "https://github.com/browserify/resolve", "bugs": "https://github.com/browserify/resolve/issues"}, "license": "MIT", "dependencies": {"path-parse": "^1.0.6"}, "devDependencies": {"@ljharb/eslint-config": "^16.0.0", "array.prototype.map": "^1.0.2", "eslint": "^6.8.0", "object-keys": "^1.1.1", "safe-publish-latest": "^1.1.4", "tap": "0.4.13", "tape": "^5.0.0-next.4"}, "releases": [{"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 3}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 11}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 11}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 15}, {"from": "2018-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 22}], "hasTestScript": true, "readme": "# resolve\n\nimplements the [node `require.resolve()`\nalgorithm](https://nodejs.org/api/modules.html#modules_all_together)\nsuch that you can `require.resolve()` on behalf of a file asynchronously and\nsynchronously\n\n[![build status](https://secure.travis-ci.org/browserify/resolve.png)](http://travis-ci.org/browserify/resolve)\n\n# example\n\nasynchronously resolve:\n\n```js\nvar resolve = require('resolve');\nresolve('tap', { basedir: __dirname }, function (err, res) {\n    if (err) console.error(err);\n    else console.log(res);\n});\n```\n\n```\n$ node example/async.js\n/home/substack/projects/node-resolve/node_modules/tap/lib/main.js\n```\n\nsynchronously resolve:\n\n```js\nvar resolve = require('resolve');\nvar res = resolve.sync('tap', { basedir: __dirname });\nconsole.log(res);\n```\n\n```\n$ node example/sync.js\n/home/substack/projects/node-resolve/node_modules/tap/lib/main.js\n```\n\n# methods\n\n```js\nvar resolve = require('resolve');\n```\n\n## resolve(id, opts={}, cb)\n\nAsynchronously resolve the module path string `id` into `cb(err, res [, pkg])`, where `pkg` (if defined) is the data from `package.json`.\n\noptions are:\n\n* opts.basedir - directory to begin resolving from\n\n* opts.package - `package.json` data applicable to the module being loaded\n\n* opts.extensions - array of file extensions to search in order\n\n* opts.readFile - how to read files asynchronously\n\n* opts.isFile - function to asynchronously test whether a file exists\n\n* opts.isDirectory - function to asynchronously test whether a directory exists\n\n* `opts.packageFilter(pkg, pkgfile, dir)` - transform the parsed package.json contents before looking at the \"main\" field\n  * pkg - package data\n  * pkgfile - path to package.json\n  * dir - directory for package.json\n\n* `opts.pathFilter(pkg, path, relativePath)` - transform a path within a package\n  * pkg - package data\n  * path - the path being resolved\n  * relativePath - the path relative from the package.json location\n  * returns - a relative path that will be joined from the package.json location\n\n* opts.paths - require.paths array to use if nothing is found on the normal `node_modules` recursive walk (probably don't use this)\n\n  For advanced users, `paths` can also be a `opts.paths(request, start, opts)` function\n    * request - the import specifier being resolved\n    * start - lookup path\n    * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard `node_modules` resolution\n    * opts - the resolution options\n\n* `opts.packageIterator(request, start, opts)` - return the list of candidate paths where the packages sources may be found (probably don't use this)\n    * request - the import specifier being resolved\n    * start - lookup path\n    * getPackageCandidates - a thunk (no-argument function) that returns the paths using standard `node_modules` resolution\n    * opts - the resolution options\n\n* opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: `\"node_modules\"`\n\n* opts.preserveSymlinks - if true, doesn't resolve `basedir` to real path before resolving.\nThis is the way Node resolves dependencies when executed with the [--preserve-symlinks](https://nodejs.org/api/all.html#cli_preserve_symlinks) flag.\n**Note:** this property is currently `true` by default but it will be changed to\n`false` in the next major version because *Node's resolution algorithm does not preserve symlinks by default*.\n\ndefault `opts` values:\n\n```js\n{\n    paths: [],\n    basedir: __dirname,\n    extensions: ['.js'],\n    readFile: fs.readFile,\n    isFile: function isFile(file, cb) {\n        fs.stat(file, function (err, stat) {\n            if (!err) {\n                return cb(null, stat.isFile() || stat.isFIFO());\n            }\n            if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n            return cb(err);\n        });\n    },\n    isDirectory: function isDirectory(dir, cb) {\n        fs.stat(dir, function (err, stat) {\n            if (!err) {\n                return cb(null, stat.isDirectory());\n            }\n            if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n            return cb(err);\n        });\n    },\n    moduleDirectory: 'node_modules',\n    preserveSymlinks: true\n}\n```\n\n## resolve.sync(id, opts)\n\nSynchronously resolve the module path string `id`, returning the result and\nthrowing an error when `id` can't be resolved.\n\noptions are:\n\n* opts.basedir - directory to begin resolving from\n\n* opts.extensions - array of file extensions to search in order\n\n* opts.readFile - how to read files synchronously\n\n* opts.isFile - function to synchronously test whether a file exists\n\n* opts.isDirectory - function to synchronously test whether a directory exists\n\n* `opts.packageFilter(pkg, dir)` - transform the parsed package.json contents before looking at the \"main\" field\n  * pkg - package data\n  * dir - directory for package.json (Note: the second argument will change to \"pkgfile\" in v2)\n\n* `opts.pathFilter(pkg, path, relativePath)` - transform a path within a package\n  * pkg - package data\n  * path - the path being resolved\n  * relativePath - the path relative from the package.json location\n  * returns - a relative path that will be joined from the package.json location\n\n* opts.paths - require.paths array to use if nothing is found on the normal `node_modules` recursive walk (probably don't use this)\n\n  For advanced users, `paths` can also be a `opts.paths(request, start, opts)` function\n    * request - the import specifier being resolved\n    * start - lookup path\n    * getNodeModulesDirs - a thunk (no-argument function) that returns the paths using standard `node_modules` resolution\n    * opts - the resolution options\n\n* `opts.packageIterator(request, start, opts)` - return the list of candidate paths where the packages sources may be found (probably don't use this)\n    * request - the import specifier being resolved\n    * start - lookup path\n    * getPackageCandidates - a thunk (no-argument function) that returns the paths using standard `node_modules` resolution\n    * opts - the resolution options\n\n* opts.moduleDirectory - directory (or directories) in which to recursively look for modules. default: `\"node_modules\"`\n\n* opts.preserveSymlinks - if true, doesn't resolve `basedir` to real path before resolving.\nThis is the way Node resolves dependencies when executed with the [--preserve-symlinks](https://nodejs.org/api/all.html#cli_preserve_symlinks) flag.\n**Note:** this property is currently `true` by default but it will be changed to\n`false` in the next major version because *Node's resolution algorithm does not preserve symlinks by default*.\n\ndefault `opts` values:\n\n```js\n{\n    paths: [],\n    basedir: __dirname,\n    extensions: ['.js'],\n    readFileSync: fs.readFileSync,\n    isFile: function isFile(file) {\n        try {\n            var stat = fs.statSync(file);\n        } catch (e) {\n            if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n            throw e;\n        }\n        return stat.isFile() || stat.isFIFO();\n    },\n    isDirectory: function isDirectory(dir) {\n        try {\n            var stat = fs.statSync(dir);\n        } catch (e) {\n            if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n            throw e;\n        }\n        return stat.isDirectory();\n    },\n    moduleDirectory: 'node_modules',\n    preserveSymlinks: true\n}\n```\n\n## resolve.isCore(pkg)\n\nReturn whether a package is in core.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```sh\nnpm install resolve\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 5018817}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 26236783}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 109555051}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 282288122}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 547260833}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 1012282015}], "dependentsCount": 4179, "starsCount": 29}, "github": {"starsCount": 558, "forksCount": 158, "subscribersCount": 20, "issues": {"count": 212, "openCount": 16, "distribution": {"3600": 21, "10800": 11, "32400": 17, "97200": 15, "291600": 18, "874800": 14, "2624400": 15, "7873200": 19, "23619600": 28, "70858800": 28, "212576400": 26}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 201}, {"username": "substack", "commitsCount": 109}, {"username": "jmm", "commitsCount": 5}, {"username": "searls", "commitsCount": 5}, {"username": "arcanis", "commitsCount": 4}, {"username": "jaredhanson", "commitsCount": 4}, {"username": "keithamus", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "bouk", "commitsCount": 2}, {"username": "goto-bus-stop", "commitsCount": 2}, {"username": "justinbmeyer", "commitsCount": 2}, {"username": "manucorporat", "commitsCount": 2}, {"username": "nicolo-ribaudo", "commitsCount": 2}, {"username": "robert-chiniquy", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "stefanpenner", "commitsCount": 2}, {"username": "tcchau", "commitsCount": 2}, {"username": "thlorenz", "commitsCount": 2}, {"username": "zkochan", "commitsCount": 2}, {"username": "FugueNation", "commitsCount": 1}, {"username": "NiroSugir", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TimvdEijnden", "commitsCount": 1}, {"username": "TooTallNate", "commitsCount": 1}, {"username": "airportyh", "commitsCount": 1}, {"username": "cellvia", "commitsCount": 1}, {"username": "cjblomqvist", "commitsCount": 1}, {"username": "dodo", "commitsCount": 1}, {"username": "dominictarr", "commitsCount": 1}, {"username": "ef4", "commitsCount": 1}, {"username": "erithmetic", "commitsCount": 1}, {"username": "errcw", "commitsCount": 1}, {"username": "gasp", "commitsCount": 1}, {"username": "goshakkk", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "kamilogorek", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "kesla", "commitsCount": 1}, {"username": "lbogdan", "commitsCount": 1}, {"username": "mafintosh", "commitsCount": 1}, {"username": "matthewp", "commitsCount": 1}, {"username": "michaelficarra", "commitsCount": 1}, {"username": "nateps", "commitsCount": 1}, {"username": "parshap", "commitsCount": 1}, {"username": "paulirish", "commitsCount": 1}, {"username": "philosoralphter", "commitsCount": 1}, {"username": "rektide", "commitsCount": 1}, {"username": "simonhaenisch", "commitsCount": 1}], "commits": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 2}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 11}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 52}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 55}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 93}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 7574, "testsSize": 64495}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/browserify/resolve.png", "service": "https://api.travis-ci.org/browserify/resolve.svg", "shields": "https://img.shields.io/travis/browserify/resolve.svg", "content": "https://img.shields.io/travis/browserify/resolve.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 813, "downloadsCount": 94096040.66666667, "downloadsAcceleration": 286355.5568302892, "dependentsCount": 4179}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9900753424657535, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7799709424657161, "detail": {"quality": 0.944440087302414, "popularity": 0.752301676986546, "maintenance": 0.6666666552277164}}}
{"analyzedAt": "2020-02-06T03:20:45.546Z", "collected": {"metadata": {"name": "resolve-from", "scope": "unscoped", "version": "5.0.0", "description": "Resolve the path of a module like `require.resolve()` but from a given path", "keywords": ["require", "resolve", "path", "module", "from", "like", "import"], "date": "2019-04-15T04:06:25.601Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/resolve-from.git"}, "links": {"npm": "https://www.npmjs.com/package/resolve-from", "homepage": "https://github.com/sindresorhus/resolve-from#readme", "repository": "https://github.com/sindresorhus/resolve-from", "bugs": "https://github.com/sindresorhus/resolve-from/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 2}, {"from": "2018-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# resolve-from [![Build Status](https://travis-ci.org/sindresorhus/resolve-from.svg?branch=master)](https://travis-ci.org/sindresorhus/resolve-from)\n\n> Resolve the path of a module like [`require.resolve()`](https://nodejs.org/api/globals.html#globals_require_resolve) but from a given path\n\n\n## Install\n\n```\n$ npm install resolve-from\n```\n\n\n## Usage\n\n```js\nconst resolveFrom = require('resolve-from');\n\n// There is a file at `./foo/bar.js`\n\nresolveFrom('foo', './bar');\n//=> '/Users/sindresorhus/dev/test/foo/bar.js'\n```\n\n\n## API\n\n### resolveFrom(fromDirectory, moduleId)\n\nLike `require()`, throws when the module can't be found.\n\n### resolveFrom.silent(fromDirectory, moduleId)\n\nReturns `undefined` instead of throwing when the module can't be found.\n\n#### fromDirectory\n\nType: `string`\n\nDirectory to resolve from.\n\n#### moduleId\n\nType: `string`\n\nWhat you would use in `require()`.\n\n\n## Tip\n\nCreate a partial using a bound function if you want to resolve from the same `fromDirectory` multiple times:\n\n```js\nconst resolveFromFoo = resolveFrom.bind(null, 'foo');\n\nresolveFromFoo('./bar');\nresolveFromFoo('./baz');\n```\n\n\n## Related\n\n- [resolve-cwd](https://github.com/sindresorhus/resolve-cwd) - Resolve the path of a module from the current working directory\n- [import-from](https://github.com/sindresorhus/import-from) - Import a module from a given path\n- [import-cwd](https://github.com/sindresorhus/import-cwd) - Import a module from the current working directory\n- [resolve-pkg](https://github.com/sindresorhus/resolve-pkg) - Resolve the path of a package regardless of it having an entry point\n- [import-lazy](https://github.com/sindresorhus/import-lazy) - Import a module lazily\n- [resolve-global](https://github.com/sindresorhus/resolve-global) - Resolve the path of a globally installed module\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 4206777}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 22430567}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 93681077}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 242352627}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 469543398}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 837392355}], "dependentsCount": 464, "starsCount": 6}, "github": {"starsCount": 85, "forksCount": 8, "subscribersCount": 9, "issues": {"count": 15, "openCount": 2, "distribution": {"3600": 4, "10800": 1, "32400": 3, "97200": 1, "291600": 3, "874800": 0, "2624400": 0, "7873200": 2, "23619600": 0, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 22}, {"username": "SamVerschueren", "commitsCount": 3}, {"username": "BendingBender", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "ranyitz", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 1}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1867, "testsSize": 1137}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/resolve-from.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/resolve-from.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/resolve-from/master.svg", "content": "https://img.shields.io/travis/sindresorhus/resolve-from/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 114, "downloadsCount": 80784209, "downloadsAcceleration": 285706.43493150687, "dependentsCount": 464}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8504576754999637, "detail": {"quality": 0.9547045235275585, "popularity": 0.6116712471781396, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-28T12:33:15.719Z", "collected": {"metadata": {"name": "resolve-url", "scope": "unscoped", "version": "0.2.1", "description": "Like Node.js\u2019 `path.resolve`/`url.resolve` for the browser.", "keywords": ["resolve", "url"], "date": "2014-02-25T18:48:50.732Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/lydell/resolve-url.git"}, "links": {"npm": "https://www.npmjs.com/package/resolve-url", "homepage": "https://github.com/lydell/resolve-url", "repository": "https://github.com/lydell/resolve-url", "bugs": "https://github.com/lydell/resolve-url/issues"}, "license": "MIT", "devDependencies": {"testling": "~1.6.0", "jshint": "~2.4.3", "tape": "~2.5.0"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "Overview\r\n========\r\n\r\n[![browser support](https://ci.testling.com/lydell/resolve-url.png)](https://ci.testling.com/lydell/resolve-url)\r\n\r\nLike Node.js\u2019 [`path.resolve`]/[`url.resolve`] for the browser.\r\n\r\n```js\r\nvar resolveUrl = require(\"resolve-url\")\r\n\r\nwindow.location\r\n// https://example.com/articles/resolving-urls/edit\r\n\r\nresolveUrl(\"remove\")\r\n// https://example.com/articles/resolving-urls/remove\r\n\r\nresolveUrl(\"/static/scripts/app.js\")\r\n// https://example.com/static/scripts/app.js\r\n\r\n// Imagine /static/scripts/app.js contains `//# sourceMappingURL=../source-maps/app.js.map`\r\nresolveUrl(\"/static/scripts/app.js\", \"../source-maps/app.js.map\")\r\n// https://example.com/static/source-maps/app.js.map\r\n\r\nresolveUrl(\"/static/scripts/app.js\", \"../source-maps/app.js.map\", \"../coffee/app.coffee\")\r\n// https://example.com/static/coffee/app.coffee\r\n\r\nresolveUrl(\"//cdn.example.com/jquery.js\")\r\n// https://cdn.example.com/jquery.js\r\n\r\nresolveUrl(\"http://foo.org/\")\r\n// http://foo.org/\r\n```\r\n\r\n\r\nInstallation\r\n============\r\n\r\n- `npm install resolve-url`\r\n- `bower install resolve-url`\r\n- `component install lydell/resolve-url`\r\n\r\nWorks with CommonJS, AMD and browser globals, through UMD.\r\n\r\n\r\nUsage\r\n=====\r\n\r\n### `resolveUrl(...urls)` ###\r\n\r\nPass one or more urls. Resolves the last one to an absolute url, using the\r\nprevious ones and `window.location`.\r\n\r\nIt\u2019s like starting out on `window.location`, and then clicking links with the\r\nurls as `href` attributes in order, from left to right.\r\n\r\nUnlike Node.js\u2019 [`path.resolve`], this function always goes through all of the\r\narguments, from left to right. `path.resolve` goes from right to left and only\r\nin the worst case goes through them all. Should that matter.\r\n\r\nActually, the function is _really_ like clicking a lot of links in series: An\r\nactual `<a>` gets its `href` attribute set for each url! This means that the\r\nurl resolution of the browser is used, which makes this module really\r\nlight-weight.\r\n\r\nAlso note that this functions deals with urls, not paths, so in that respect it\r\nhas more in common with Node.js\u2019 [`url.resolve`]. But the arguments are more\r\nlike [`path.resolve`].\r\n\r\n[`path.resolve`]: http://nodejs.org/api/path.html#path_path_resolve_from_to\r\n[`url.resolve`]: http://nodejs.org/api/url.html#url_url_resolve_from_to\r\n\r\n\r\nTests\r\n=====\r\n\r\nRun `npm test`, which lints the code and then gives you a link to open in a\r\nbrowser of choice (using `testling`).\r\n\r\n\r\nLicense\r\n=======\r\n\r\n[The X11 (\u201cMIT\u201d) License](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 1990200}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 10454790}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 44485038}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 113841426}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 226112796}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 423736343}], "dependentsCount": 84, "starsCount": 1}, "github": {"starsCount": 27, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 5, "openCount": 2, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 1, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 20}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 2747, "testsSize": 1551, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 33, "downloadsCount": 37947142, "downloadsAcceleration": 104293.45616438362, "dependentsCount": 84}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.6666666666666666, "issuesDistribution": 0}}, "score": {"final": 0.46465855256023014, "detail": {"quality": 0.7618105366458143, "popularity": 0.5099385439452746, "maintenance": 0.16467686053039943}}}
{"analyzedAt": "2020-03-05T04:48:00.198Z", "collected": {"metadata": {"name": "restore-cursor", "scope": "unscoped", "version": "3.1.0", "description": "Gracefully restore the CLI cursor on exit", "keywords": ["exit", "quit", "process", "graceful", "shutdown", "sigterm", "sigint", "terminate", "kill", "stop", "cli", "cursor", "ansi", "show", "term", "terminal", "console", "tty", "shell", "command-line"], "date": "2019-04-26T06:29:35.632Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/restore-cursor.git"}, "links": {"npm": "https://www.npmjs.com/package/restore-cursor", "homepage": "https://github.com/sindresorhus/restore-cursor#readme", "repository": "https://github.com/sindresorhus/restore-cursor", "bugs": "https://github.com/sindresorhus/restore-cursor/issues"}, "license": "MIT", "dependencies": {"onetime": "^5.1.0", "signal-exit": "^3.0.2"}, "devDependencies": {"tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# restore-cursor [![Build Status](https://travis-ci.org/sindresorhus/restore-cursor.svg?branch=master)](https://travis-ci.org/sindresorhus/restore-cursor)\n\n> Gracefully restore the CLI cursor on exit\n\nPrevent the cursor you've hidden interactively from remaining hidden if the process crashes.\n\n\n## Install\n\n```\n$ npm install restore-cursor\n```\n\n\n## Usage\n\n```js\nconst restoreCursor = require('restore-cursor');\n\nrestoreCursor();\n```\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 3133870}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 16799607}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 70153552}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 173795627}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 322808943}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 554241520}], "dependentsCount": 60, "starsCount": 0}, "github": {"starsCount": 19, "forksCount": 2, "subscribersCount": 7, "issues": {"count": 5, "openCount": 0, "distribution": {"3600": 1, "10800": 1, "32400": 1, "97200": 1, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 11}, {"username": "BendingBender", "commitsCount": 1}, {"username": "michaelmior", "commitsCount": 1}, {"username": "wooorm", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 497, "testsSize": 0}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/restore-cursor.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/restore-cursor.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/restore-cursor/master.svg", "content": "https://img.shields.io/travis/sindresorhus/restore-cursor/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.25, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 32, "downloadsCount": 57931875.666666664, "downloadsAcceleration": 273723.72859589045, "dependentsCount": 60}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7847874557358625, "detail": {"quality": 0.8361440698577648, "popularity": 0.5256161162546507, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-09T21:27:25.319Z", "collected": {"metadata": {"name": "ret", "scope": "unscoped", "version": "0.3.1", "description": "Tokenizes a string that represents a regular expression.", "keywords": ["regex", "regexp", "regular expression", "parser", "tokenizer"], "date": "2019-04-08T13:57:54.174Z", "author": {"name": "fent", "url": "https://github.com/fent"}, "publisher": {"username": "fent", "email": "fentbox@gmail.com"}, "maintainers": [{"username": "fent", "email": "roly426@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/fent/ret.js.git"}, "links": {"npm": "https://www.npmjs.com/package/ret", "homepage": "https://github.com/fent/ret.js#readme", "repository": "https://github.com/fent/ret.js", "bugs": "https://github.com/fent/ret.js/issues"}, "license": "MIT", "devDependencies": {"istanbul": "^0.4.5", "vows": "^0.8.2"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 3}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Regular Expression Tokenizer\n\nTokenizes strings that represent a regular expressions.\n\n[![Build Status](https://secure.travis-ci.org/fent/ret.js.svg)](http://travis-ci.org/fent/ret.js)\n[![Dependency Status](https://david-dm.org/fent/ret.js.svg)](https://david-dm.org/fent/ret.js)\n[![codecov](https://codecov.io/gh/fent/ret.js/branch/master/graph/badge.svg)](https://codecov.io/gh/fent/ret.js)\n\n# Usage\n\n```js\nconst ret = require('ret');\n\nvar tokens = ret(/foo|bar/.source);\n```\n\n`tokens` will contain the following object\n\n```js\n{\n  \"type\": ret.types.ROOT\n  \"options\": [\n    [ { \"type\": ret.types.CHAR, \"value\", 102 },\n      { \"type\": ret.types.CHAR, \"value\", 111 },\n      { \"type\": ret.types.CHAR, \"value\", 111 } ],\n    [ { \"type\": ret.types.CHAR, \"value\",  98 },\n      { \"type\": ret.types.CHAR, \"value\",  97 },\n      { \"type\": ret.types.CHAR, \"value\", 114 } ]\n  ]\n}\n```\n\n# Token Types\n\n`ret.types` is a collection of the various token types exported by ret.\n\n### ROOT\n\nOnly used in the root of the regexp. This is needed due to the posibility of the root containing a pipe `|` character. In that case, the token will have an `options` key that will be an array of arrays of tokens. If not, it will contain a `stack` key that is an array of tokens.\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [token1, token2...],\n}\n```\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"options\" [\n    [token1, token2...],\n    [othertoken1, othertoken2...]\n    ...\n  ],\n}\n```\n\n### GROUP\n\nGroups contain tokens that are inside of a parenthesis. If the group begins with `?` followed by another character, it's a special type of group. A ':' tells the group not to be remembered when `exec` is used. '=' means the previous token matches only if followed by this group, and '!' means the previous token matches only if NOT followed.\n\nLike root, it can contain an `options` key instead of `stack` if there is a pipe.\n\n```js\n{\n  \"type\": ret.types.GROUP,\n  \"remember\" true,\n  \"followedBy\": false,\n  \"notFollowedBy\": false,\n  \"stack\": [token1, token2...],\n}\n```\n\n```js\n{\n  \"type\": ret.types.GROUP,\n  \"remember\" true,\n  \"followedBy\": false,\n  \"notFollowedBy\": false,\n  \"options\" [\n    [token1, token2...],\n    [othertoken1, othertoken2...]\n    ...\n  ],\n}\n```\n\n### POSITION\n\n`\\b`, `\\B`, `^`, and `$` specify positions in the regexp.\n\n```js\n{\n  \"type\": ret.types.POSITION,\n  \"value\": \"^\",\n}\n```\n\n### SET\n\nContains a key `set` specifying what tokens are allowed and a key `not` specifying if the set should be negated. A set can contain other sets, ranges, and characters.\n\n```js\n{\n  \"type\": ret.types.SET,\n  \"set\": [token1, token2...],\n  \"not\": false,\n}\n```\n\n### RANGE\n\nUsed in set tokens to specify a character range. `from` and `to` are character codes.\n\n```js\n{\n  \"type\": ret.types.RANGE,\n  \"from\": 97,\n  \"to\": 122,\n}\n```\n\n### REPETITION\n\n```js\n{\n  \"type\": ret.types.REPETITION,\n  \"min\": 0,\n  \"max\": Infinity,\n  \"value\": token,\n}\n```\n\n### REFERENCE\n\nReferences a group token. `value` is 1-9.\n\n```js\n{\n  \"type\": ret.types.REFERENCE,\n  \"value\": 1,\n}\n```\n\n### CHAR\n\nRepresents a single character token. `value` is the character code. This might seem a bit cluttering instead of concatenating characters together. But since repetition tokens only repeat the last token and not the last clause like the pipe, it's simpler to do it this way.\n\n```js\n{\n  \"type\": ret.types.CHAR,\n  \"value\": 123,\n}\n```\n\n## Errors\n\nret.js will throw errors if given a string with an invalid regular expression. All possible errors are\n\n* Invalid group. When a group with an immediate `?` character is followed by an invalid character. It can only be followed by `!`, `=`, or `:`. Example: `/(?_abc)/`\n* Nothing to repeat. Thrown when a repetitional token is used as the first token in the current clause, as in right in the beginning of the regexp or group, or right after a pipe. Example: `/foo|?bar/`, `/{1,3}foo|bar/`, `/foo(+bar)/`\n* Unmatched ). A group was not opened, but was closed. Example: `/hello)2u/`\n* Unterminated group. A group was not closed. Example: `/(1(23)4/`\n* Unterminated character class. A custom character set was not closed. Example: `/[abc/`\n\n# Regular Expression Syntax\n\nRegular expressions follow the [JavaScript syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).\n\nThe following latest JavaScript additions are not supported yet:\n* `\\p` and `\\P`: [Unicode property escapes](https://github.com/tc39/proposal-regexp-unicode-property-escapes)\n* `(?<group>)` and `\\k<group>`: [Named groups](https://github.com/tc39/proposal-regexp-named-groups)\n* `(?<=)` and `(?<!)`: [Negative lookbehind assertions](https://github.com/tc39/proposal-regexp-lookbehind)\n\n# Examples\n\n`/abc/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [\n    { \"type\": ret.types.CHAR, \"value\": 97 },\n    { \"type\": ret.types.CHAR, \"value\": 98 },\n    { \"type\": ret.types.CHAR, \"value\": 99 }\n  ]\n}\n```\n\n`/[abc]/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.SET,\n    \"set\": [\n      { \"type\": ret.types.CHAR, \"value\": 97 },\n      { \"type\": ret.types.CHAR, \"value\": 98 },\n      { \"type\": ret.types.CHAR, \"value\": 99 }\n    ],\n    \"not\": false\n  }]\n}\n```\n\n`/[^abc]/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.SET,\n    \"set\": [\n      { \"type\": ret.types.CHAR, \"value\": 97 },\n      { \"type\": ret.types.CHAR, \"value\": 98 },\n      { \"type\": ret.types.CHAR, \"value\": 99 }\n    ],\n    \"not\": true\n  }]\n}\n```\n\n`/[a-z]/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.SET,\n    \"set\": [\n      { \"type\": ret.types.RANGE, \"from\": 97, \"to\": 122 }\n    ],\n    \"not\": false\n  }]\n}\n```\n\n`/\\w/`\n\n```js\n// Similar logic for `\\W`, `\\d`, `\\D`, `\\s` and `\\S`    \n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.SET,\n    \"set\": [{\n      { \"type\": ret.types.CHAR, \"value\": 95 },\n      { \"type\": ret.types.RANGE, \"from\": 97, \"to\": 122 },\n      { \"type\": ret.types.RANGE, \"from\": 65, \"to\": 90 },\n      { \"type\": ret.types.RANGE, \"from\": 48, \"to\": 57 }\n    }],\n    \"not\": false\n  }]\n}\n```\n\n`/./`\n\n```js\n// any character but CR, LF, U+2028 or U+2029\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.SET,\n    \"set\": [ \n      { \"type\": ret.types.CHAR, \"value\": 10 },\n      { \"type\": ret.types.CHAR, \"value\": 13 },\n      { \"type\": ret.types.CHAR, \"value\": 8232 },\n      { \"type\": ret.types.CHAR, \"value\": 8233 }\n    ],\n    \"not\": true\n  }]\n}\n```\n\n`/a*/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.REPETITION, \n    \"min\": 0,\n    \"max\": Infinity,\n    \"value\": { \"type\": ret.types.CHAR, \"value\": 97 }\n  }]\n}\n```\n\n`/a+/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.REPETITION, \n    \"min\": 1,\n    \"max\": Infinity,\n    \"value\": { \"type\": ret.types.CHAR, \"value\": 97 },\n  }]\n}\n```\n\n`/a?/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.REPETITION, \n    \"min\": 0,\n    \"max\": 1,\n    \"value\": { \"type\": ret.types.CHAR, \"value\": 97 }\n  }]\n}\n```\n\n`/a{3}/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.REPETITION, \n    \"min\": 3,\n    \"max\": 3,\n    \"value\": { \"type\": ret.types.CHAR, \"value\": 97 }\n  }]\n}\n```\n\n`/a{3,5}/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.REPETITION, \n    \"min\": 3,\n    \"max\": 5,\n    \"value\": { \"type\": ret.types.CHAR, \"value\": 97 }\n  }]\n}\n```\n\n`/a{3,}/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.REPETITION, \n    \"min\": 3,\n    \"max\": Infinity,\n    \"value\": { \"type\": ret.types.CHAR, \"value\": 97 }\n  }]\n}\n```\n\n`/(a)/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.GROUP, \n    \"stack\": { \"type\": ret.types.CHAR, \"value\": 97 },\n    \"remember\": true\n  }]\n}\n```\n\n`/(?:a)/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.GROUP, \n    \"stack\": { \"type\": ret.types.CHAR, \"value\": 97 },\n    \"remember\": false\n  }]\n}\n```\n\n`/(?=a)/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.GROUP, \n    \"stack\": { \"type\": ret.types.CHAR, \"value\": 97 },\n    \"remember\": false,\n    \"followedBy\": true\n  }]\n}\n```\n\n`/(?!a)/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{ \n    \"type\": ret.types.GROUP, \n    \"stack\": { \"type\": ret.types.CHAR, \"value\": 97 },\n    \"remember\": false,\n    \"notFollowedBy\": true\n  }]\n}\n```\n\n`/a|b/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"options\": [\n    [{ \"type\": ret.types.CHAR, \"value\": 97 }], \n    [{ \"type\": ret.types.CHAR, \"value\": 98 }] \n  ]\n}\n```\n\n`/(a|b)/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [\n    \"type\": ret.types.GROUP,\n    \"remember\": true,\n    \"options\": [\n      [{ \"type\": ret.types.CHAR, \"value\": 97 }], \n      [{ \"type\": ret.types.CHAR, \"value\": 98 }] \n    ]\n  ]\n}\n```\n\n`/^/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.POSITION,\n    \"value\": \"^\"\n  }]\n}\n```\n\n`/$/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.POSITION,\n    \"value\": \"$\"\n  }]\n}\n```\n\n`/\\b/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.POSITION,\n    \"value\": \"b\"\n  }]\n}\n```\n\n`/\\B/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.POSITION,\n    \"value\": \"B\"\n  }]\n}\n```\n\n`/\\1/`\n\n```js\n{\n  \"type\": ret.types.ROOT,\n  \"stack\": [{\n    \"type\": ret.types.REFERENCE,\n    \"value\": 1\n  }]\n}\n```\n\n# Install\n\n    npm install ret\n\n\n# Tests\n\nTests are written with [vows](http://vowsjs.org/)\n\n```bash\nnpm test\n```"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 543350}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10826382}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 43922560}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 120929653}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 239327394}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 446042699}], "dependentsCount": 50, "starsCount": 5}, "github": {"starsCount": 59, "forksCount": 8, "subscribersCount": 5, "issues": {"count": 20, "openCount": 1, "distribution": {"3600": 5, "10800": 1, "32400": 1, "97200": 2, "291600": 6, "874800": 2, "2624400": 2, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "fent", "commitsCount": 77}, {"username": "dtudury", "commitsCount": 4}, {"username": "alixaxel", "commitsCount": 3}, {"username": "ehmicky", "commitsCount": 1}, {"username": "rangoo94", "commitsCount": 1}, {"username": "zouxuoz", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 9403, "testsSize": 16551}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/fent/ret.js.svg", "service": "https://api.travis-ci.org/fent/ret.js.svg", "shields": "https://img.shields.io/travis/fent/ret.js.svg", "content": "https://img.shields.io/travis/fent/ret.js.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://david-dm.org/fent/ret.js.svg", "service": "https://david-dm.org/fent/ret.js.svg", "shields": "https://img.shields.io/david/fent/ret.js.svg", "content": "https://img.shields.io/david/fent/ret.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 83, "downloadsCount": 40309884.333333336, "downloadsAcceleration": 87403.09577625565, "dependentsCount": 50}, "maintenance": {"releasesFrequency": 0.19726027397260276, "commitsFrequency": 0.3250684931506849, "openIssues": 1, "issuesDistribution": 0.8305571225649351}}, "score": {"final": 0.7367374733738673, "detail": {"quality": 0.8749967842223757, "popularity": 0.5122431693170975, "maintenance": 0.8427237967033445}}}
{"analyzedAt": "2020-03-04T23:34:29.474Z", "collected": {"metadata": {"name": "reusify", "scope": "unscoped", "version": "1.0.4", "description": "Reuse objects and functions with style", "keywords": ["reuse", "object", "performance", "function", "fast"], "date": "2018-01-26T09:28:18.775Z", "author": {"name": "Matteo Collina", "email": "hello@matteocollina.com", "username": "matteo.collina"}, "publisher": {"username": "matteo.collina", "email": "hello@matteocollina.com"}, "maintainers": [{"username": "matteo.collina", "email": "hello@matteocollina.com"}], "repository": {"type": "git", "url": "git+https://github.com/mcollina/reusify.git"}, "links": {"npm": "https://www.npmjs.com/package/reusify", "homepage": "https://github.com/mcollina/reusify#readme", "repository": "https://github.com/mcollina/reusify", "bugs": "https://github.com/mcollina/reusify/issues"}, "license": "MIT", "devDependencies": {"coveralls": "^2.13.3", "faucet": "0.0.1", "istanbul": "^0.4.5", "pre-commit": "^1.2.2", "standard": "^10.0.3", "tape": "^4.8.0"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "# reusify\n\n[![npm version][npm-badge]][npm-url]\n[![Build Status][travis-badge]][travis-url]\n[![Coverage Status][coveralls-badge]][coveralls-url]\n\nReuse your objects and functions for maximum speed. This technique will\nmake any function run ~10% faster. You call your functions a\nlot, and it adds up quickly in hot code paths.\n\n```\n$ node benchmarks/createNoCodeFunction.js\nTotal time 53133\nTotal iterations 100000000\nIteration/s 1882069.5236482036\n\n$ node benchmarks/reuseNoCodeFunction.js\nTotal time 50617\nTotal iterations 100000000\nIteration/s 1975620.838848608\n```\n\nThe above benchmark uses fibonacci to simulate a real high-cpu load.\nThe actual numbers might differ for your use case, but the difference\nshould not.\n\nThe benchmark was taken using Node v6.10.0.\n\nThis library was extracted from\n[fastparallel](http://npm.im/fastparallel).\n\n## Example\n\n```js\nvar reusify = require('reusify')\nvar fib = require('reusify/benchmarks/fib')\nvar instance = reusify(MyObject)\n\n// get an object from the cache,\n// or creates a new one when cache is empty\nvar obj = instance.get()\n\n// set the state\nobj.num = 100\nobj.func()\n\n// reset the state.\n// if the state contains any external object\n// do not use delete operator (it is slow)\n// prefer set them to null\nobj.num = 0\n\n// store an object in the cache\ninstance.release(obj)\n\nfunction MyObject () {\n  // you need to define this property\n  // so V8 can compile MyObject into an\n  // hidden class\n  this.next = null\n  this.num = 0\n\n  var that = this\n\n  // this function is never reallocated,\n  // so it can be optimized by V8\n  this.func = function () {\n    if (null) {\n      // do nothing\n    } else {\n      // calculates fibonacci\n      fib(that.num)\n    }\n  }\n}\n```\n\nThe above example was intended for synchronous code, let's see async:\n```js\nvar reusify = require('reusify')\nvar instance = reusify(MyObject)\n\nfor (var i = 0; i < 100; i++) {\n  getData(i, console.log)\n}\n\nfunction getData (value, cb) {\n  var obj = instance.get()\n\n  obj.value = value\n  obj.cb = cb\n  obj.run()\n}\n\nfunction MyObject () {\n  this.next = null\n  this.value = null\n\n  var that = this\n\n  this.run = function () {\n    asyncOperation(that.value, that.handle)\n  }\n\n  this.handle = function (err, result) {\n    that.cb(err, result)\n    that.value = null\n    that.cb = null\n    instance.release(that)\n  }\n}\n```\n\nAlso note how in the above examples, the code, that consumes an istance of `MyObject`,\nreset the state to initial condition, just before storing it in the cache.\nThat's needed so that every subsequent request for an instance from the cache,\ncould get a clean instance.\n\n## Why\n\nIt is faster because V8 doesn't have to collect all the functions you\ncreate. On a short-lived benchmark, it is as fast as creating the\nnested function, but on a longer time frame it creates less\npressure on the garbage collector.\n\n## Other examples\nIf you want to see some complex example, checkout [middie](https://github.com/fastify/middie) and [steed](https://github.com/mcollina/steed).\n\n## Acknowledgements\n\nThanks to [Trevor Norris](https://github.com/trevnorris) for\ngetting me down the rabbit hole of performance, and thanks to [Mathias\nBuss](http://github.com/mafintosh) for suggesting me to share this\ntrick.\n\n## License\n\nMIT\n\n[npm-badge]: https://badge.fury.io/js/reusify.svg\n[npm-url]: https://badge.fury.io/js/reusify\n[travis-badge]: https://api.travis-ci.org/mcollina/reusify.svg\n[travis-url]: https://travis-ci.org/mcollina/reusify\n[coveralls-badge]: https://coveralls.io/repos/mcollina/reusify/badge.svg?branch=master&service=github\n[coveralls-url]:  https://coveralls.io/github/mcollina/reusify?branch=master"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 583639}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2943401}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 11054207}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 25622264}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 42616033}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 48504059}], "dependentsCount": 18, "starsCount": 4}, "github": {"starsCount": 85, "forksCount": 9, "subscribersCount": 3, "issues": {"count": 10, "openCount": 0, "distribution": {"3600": 2, "10800": 2, "32400": 3, "97200": 1, "291600": 2, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mcollina", "commitsCount": 13}, {"username": "AdrieanKhisbe", "commitsCount": 3}, {"username": "brunoscopelliti", "commitsCount": 3}, {"username": "delvedor", "commitsCount": 3}, {"username": "arliang", "commitsCount": 1}, {"username": "cirpo", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3633, "testsSize": 1440}, "badges": [{"urls": {"original": "https://api.travis-ci.org/mcollina/reusify.svg", "service": "https://api.travis-ci.org/mcollina/reusify.svg", "shields": "https://img.shields.io/travis/mcollina/reusify.svg", "content": "https://img.shields.io/travis/mcollina/reusify.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/mcollina/reusify/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/mcollina/reusify/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/mcollina/reusify/master.svg", "content": "https://img.shields.io/coveralls/mcollina/reusify/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["standard"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 107, "downloadsCount": 8540754.666666666, "downloadsAcceleration": 84863.40995053272, "dependentsCount": 18}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.7958478316794988, "detail": {"quality": 0.9748454508337377, "popularity": 0.4383302923999203, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-09T06:30:45.940Z", "collected": {"metadata": {"name": "rimraf", "scope": "unscoped", "version": "3.0.2", "description": "A deep deletion module for node (like `rm -rf`)", "date": "2020-02-09T06:18:37.504Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/rimraf.git"}, "links": {"npm": "https://www.npmjs.com/package/rimraf", "homepage": "https://github.com/isaacs/rimraf#readme", "repository": "https://github.com/isaacs/rimraf", "bugs": "https://github.com/isaacs/rimraf/issues"}, "license": "ISC", "dependencies": {"glob": "^7.1.3"}, "devDependencies": {"mkdirp": "^0.5.1", "tap": "^12.1.1"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![Build Status](https://travis-ci.org/isaacs/rimraf.svg?branch=master)](https://travis-ci.org/isaacs/rimraf) [![Dependency Status](https://david-dm.org/isaacs/rimraf.svg)](https://david-dm.org/isaacs/rimraf) [![devDependency Status](https://david-dm.org/isaacs/rimraf/dev-status.svg)](https://david-dm.org/isaacs/rimraf#info=devDependencies)\n\nThe [UNIX command](http://en.wikipedia.org/wiki/Rm_(Unix)) `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, [opts], callback)`\n\nThe first parameter will be interpreted as a globbing pattern for files. If you\nwant to disable globbing you can do so with `opts.disableGlob` (defaults to\n`false`). This might be handy, for instance, if you have filenames that contain\nglobbing wildcard characters.\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* Windows: `EBUSY` and `ENOTEMPTY` - rimraf will back off a maximum of\n  `opts.maxBusyTries` times before giving up, adding 100ms of wait\n  between each attempt.  The default `maxBusyTries` is 3.\n* `ENOENT` - If the file doesn't exist, rimraf will return\n  successfully, since your desired outcome is already the case.\n* `EMFILE` - Since `readdir` requires opening a file descriptor, it's\n  possible to hit `EMFILE` if too many file descriptors are in use.\n  In the sync case, there's nothing to be done for this.  But in the\n  async case, rimraf will gradually back off with timeouts up to\n  `opts.emfileWait` ms, which defaults to 1000.\n\n## options\n\n* unlink, chmod, stat, lstat, rmdir, readdir,\n  unlinkSync, chmodSync, statSync, lstatSync, rmdirSync, readdirSync\n\n    In order to use a custom file system library, you can override\n    specific fs functions on the options object.\n\n    If any of these functions are present on the options object, then\n    the supplied function will be used instead of the default fs\n    method.\n\n    Sync methods are only relevant for `rimraf.sync()`, of course.\n\n    For example:\n\n    ```javascript\n    var myCustomFS = require('some-custom-fs')\n\n    rimraf('some-thing', myCustomFS, callback)\n    ```\n\n* maxBusyTries\n\n    If an `EBUSY`, `ENOTEMPTY`, or `EPERM` error code is encountered\n    on Windows systems, then rimraf will retry with a linear backoff\n    wait of 100ms longer on each try.  The default maxBusyTries is 3.\n\n    Only relevant for async usage.\n\n* emfileWait\n\n    If an `EMFILE` error is encountered, then rimraf will retry\n    repeatedly with a linear backoff of 1ms longer on each try, until\n    the timeout counter hits this max.  The default limit is 1000.\n\n    If you repeatedly encounter `EMFILE` errors, then consider using\n    [graceful-fs](http://npm.im/graceful-fs) in your program.\n\n    Only relevant for async usage.\n\n* glob\n\n    Set to `false` to disable [glob](http://npm.im/glob) pattern\n    matching.\n\n    Set to an object to pass options to the glob module.  The default\n    glob options are `{ nosort: true, silent: true }`.\n\n    Glob version 6 is used in this module.\n\n    Relevant for both sync and async usage.\n\n* disableGlob\n\n    Set to any non-falsey value to disable globbing entirely.\n    (Equivalent to setting `glob: false`.)\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that's not so good.  Use\nthe async API.  It's better.\n\n## CLI\n\nIf installed with `npm install rimraf -g` it can be used as a global\ncommand `rimraf <path> [<path> ...]` which is useful for cross platform support.\n\n## mkdirp\n\nIf you need to create a directory recursively, check out\n[mkdirp](https://github.com/substack/node-mkdirp)."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1287838}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 26307060}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 105174209}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 281257049}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 524352587}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 871561494}], "dependentsCount": 8658, "starsCount": 320}, "github": {"starsCount": 3592, "forksCount": 202, "subscribersCount": 42, "issues": {"count": 209, "openCount": 51, "distribution": {"3600": 17, "10800": 21, "32400": 11, "97200": 19, "291600": 18, "874800": 8, "2624400": 6, "7873200": 21, "23619600": 31, "70858800": 27, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 154}, {"username": "PeterDaveHello", "commitsCount": 3}, {"username": "yosefd", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "Tidyzq", "commitsCount": 1}, {"username": "aslushnikov", "commitsCount": 1}, {"username": "bcoe", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "cowboy", "commitsCount": 1}, {"username": "jkozera", "commitsCount": 1}, {"username": "josiasmontag", "commitsCount": 1}, {"username": "marr", "commitsCount": 1}, {"username": "mmalecki", "commitsCount": 1}, {"username": "paulmillr", "commitsCount": 1}, {"username": "quetzalcoatl", "commitsCount": 1}, {"username": "ritch", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "tomByrer", "commitsCount": 1}, {"username": "wvl", "commitsCount": 1}, {"username": "zerok", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 6}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 16}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3600, "testsSize": 10271, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/rimraf.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/rimraf.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/rimraf/master.svg", "content": "https://img.shields.io/travis/isaacs/rimraf/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf.svg", "service": "https://david-dm.org/isaacs/rimraf.svg", "shields": "https://img.shields.io/david/isaacs/rimraf.svg", "content": "https://img.shields.io/david/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "service": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "shields": "https://img.shields.io/david/dev/isaacs/rimraf.svg", "content": "https://img.shields.io/david/dev/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "coverage": 0.73}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.9595, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4178, "downloadsCount": 93752349.66666667, "downloadsAcceleration": 410799.3688165905, "dependentsCount": 8658}, "maintenance": {"releasesFrequency": 0.9772260273972603, "commitsFrequency": 0.7556506849315068, "openIssues": 0.9266347687400319, "issuesDistribution": 0}}, "score": {"final": 0.8214105199359351, "detail": {"quality": 0.9764601739303014, "popularity": 0.8435044969005582, "maintenance": 0.6664168395475694}}}
{"analyzedAt": "2020-03-01T16:47:18.900Z", "collected": {"metadata": {"name": "run-async", "scope": "unscoped", "version": "2.4.0", "description": "Utility method to run function either synchronously or asynchronously using the common `this.async()` style.", "keywords": ["flow", "flow-control", "async"], "date": "2020-02-26T10:06:22.816Z", "author": {"name": "Simon Boudrias", "email": "admin@simonboudrias.com", "username": "sboudrias"}, "publisher": {"username": "sboudrias", "email": "admin@simonboudrias.com"}, "maintainers": [{"username": "sboudrias", "email": "admin@simonboudrias.com"}], "repository": {"type": "git", "url": "git+https://github.com/SBoudrias/run-async.git"}, "links": {"npm": "https://www.npmjs.com/package/run-async", "homepage": "https://github.com/SBoudrias/run-async#readme", "repository": "https://github.com/SBoudrias/run-async", "bugs": "https://github.com/SBoudrias/run-async/issues"}, "license": "MIT", "dependencies": {"is-promise": "^2.1.0"}, "devDependencies": {"mocha": "^7.1.0"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Run Async\n=========\n\n[![npm](https://badge.fury.io/js/run-async.svg)](http://badge.fury.io/js/run-async) [![tests](https://travis-ci.org/SBoudrias/run-async.svg?branch=master)](http://travis-ci.org/SBoudrias/run-async) [![dependencies](https://david-dm.org/SBoudrias/run-async.svg?theme=shields.io)](https://david-dm.org/SBoudrias/run-async)\n\nUtility method to run a function either synchronously or asynchronously using a series of common patterns. This is useful for library author accepting sync or async functions as parameter. `runAsync` will always run them as an async method, and normalize the multiple signature.\n\nInstallation\n=========\n\n```bash\nnpm install --save run-async\n```\n\nUsage\n=========\n\nHere's a simple example print the function results and three options a user can provide a function.\n\n```js\nvar runAsync = require('run-async');\n\nvar printAfter = function (func) {\n  var cb = function (err, returnValue) {\n    console.log(returnValue);\n  };\n  runAsync(func, cb)(/* arguments for func */);\n};\n```\n\n#### Using `this.async`\n```js\nprintAfter(function () {\n  var done = this.async();\n\n  setTimeout(function () {\n    done(null, 'done running with callback');\n  }, 10);\n});\n```\n\n#### Returning a promise\n```js\nprintAfter(function () {\n  return new Promise(function (resolve, reject) {\n    resolve('done running with promises');\n  });\n});\n```\n\n#### Synchronous function\n```js\nprintAfter(function () {\n  return 'done running sync function';\n});\n```\n\n### runAsync.cb\n\n`runAsync.cb` supports all the function types that `runAsync` does and additionally a traditional **callback as the last argument** signature:\n\n```js\nvar runAsync = require('run-async');\n\n// IMPORTANT: The wrapped function must have a fixed number of parameters.\nrunAsync.cb(function(a, b, cb) {\n  cb(null, a + b);\n}, function(err, result) {\n  console.log(result)\n})(1, 2)\n```\n\nIf your version of node support Promises natively (node >= 0.12), `runAsync` will return a promise. Example: `runAsync(func)(arg1, arg2).then(cb)`\n\nLicence\n========\n\nCopyright (c) 2014 Simon Boudrias (twitter: @vaxilart)  \nLicensed under the MIT license."}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 604612}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 11029351}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 42552917}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 112029160}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 217420302}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 401333228}], "dependentsCount": 97, "starsCount": 2}, "github": {"starsCount": 13, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 28, "openCount": 2, "distribution": {"3600": 6, "10800": 3, "32400": 4, "97200": 5, "291600": 1, "874800": 4, "2624400": 2, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "SBoudrias", "commitsCount": 17}, {"username": "jamestalmage", "commitsCount": 7}, {"username": "greenkeeper[bot]", "commitsCount": 1}, {"username": "mshima", "commitsCount": 1}, {"username": "ruyadorno", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2112, "testsSize": 4803}, "badges": [{"urls": {"original": "https://travis-ci.org/SBoudrias/run-async.svg?branch=master", "service": "https://api.travis-ci.org/SBoudrias/run-async.svg?branch=master", "shields": "https://img.shields.io/travis/SBoudrias/run-async/master.svg", "content": "https://img.shields.io/travis/SBoudrias/run-async/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/SBoudrias/run-async.svg?theme=shields.io", "service": "https://david-dm.org/SBoudrias/run-async.svg", "shields": "https://img.shields.io/david/SBoudrias/run-async.svg", "content": "https://img.shields.io/david/SBoudrias/run-async.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 30, "downloadsCount": 37343053.333333336, "downloadsAcceleration": 106808.73812785384, "dependentsCount": 97}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8185968641750452, "detail": {"quality": 0.9647859797513708, "popularity": 0.511951101764439, "maintenance": 0.9999376703773724}}}
{"analyzedAt": "2020-03-01T19:15:30.941Z", "collected": {"metadata": {"name": "run-parallel", "scope": "unscoped", "version": "1.1.9", "description": "Run an array of functions in parallel", "keywords": ["parallel", "async", "function", "callback", "asynchronous", "run", "array", "run parallel"], "date": "2018-04-26T01:10:54.542Z", "author": {"name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "http://feross.org/", "username": "feross"}, "publisher": {"username": "feross", "email": "feross@feross.org"}, "maintainers": [{"username": "feross", "email": "feross@feross.org"}], "repository": {"type": "git", "url": "git://github.com/feross/run-parallel.git"}, "links": {"npm": "https://www.npmjs.com/package/run-parallel", "homepage": "https://github.com/feross/run-parallel", "repository": "https://github.com/feross/run-parallel", "bugs": "https://github.com/feross/run-parallel/issues"}, "license": "MIT", "devDependencies": {"airtap": "0.0.4", "standard": "*", "tape": "^4.0.0"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# run-parallel [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/run-parallel/master.svg\n[travis-url]: https://travis-ci.org/feross/run-parallel\n[npm-image]: https://img.shields.io/npm/v/run-parallel.svg\n[npm-url]: https://npmjs.org/package/run-parallel\n[downloads-image]: https://img.shields.io/npm/dm/run-parallel.svg\n[downloads-url]: https://npmjs.org/package/run-parallel\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n### Run an array of functions in parallel\n\n![parallel](https://raw.githubusercontent.com/feross/run-parallel/master/img.png) [![Sauce Test Status](https://saucelabs.com/browser-matrix/run-parallel.svg)](https://saucelabs.com/u/run-parallel)\n\n### install\n\n```\nnpm install run-parallel\n```\n\n### usage\n\n#### parallel(tasks, [callback])\n\nRun the `tasks` array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its callback, the main\n`callback` is immediately called with the value of the error. Once the `tasks` have\ncompleted, the results are passed to the final `callback` as an array.\n\nIt is also possible to use an object instead of an array. Each property will be run as a\nfunction and the results will be passed to the final `callback` as an object instead of\nan array. This can be a more readable way of handling the results.\n\n##### arguments\n\n- `tasks` - An array or object containing functions to run. Each function is passed a\n`callback(err, result)` which it must call on completion with an error `err` (which can\nbe `null`) and an optional `result` value.\n- `callback(err, results)` - An optional callback to run once all the functions have\ncompleted. This function gets a results array (or object) containing all the result\narguments passed to the task callbacks.\n\n##### example\n\n```js\nvar parallel = require('run-parallel')\n\nparallel([\n  function (callback) {\n    setTimeout(function () {\n      callback(null, 'one')\n    }, 200)\n  },\n  function (callback) {\n    setTimeout(function () {\n      callback(null, 'two')\n    }, 100)\n  }\n],\n// optional callback\nfunction (err, results) {\n  // the results array will equal ['one','two'] even though\n  // the second function had a shorter timeout.\n})\n```\n\nThis module is basically equavalent to\n[`async.parallel`](https://github.com/caolan/async#paralleltasks-callback), but it's\nhandy to just have the one function you need instead of the kitchen sink. Modularity!\nEspecially handy if you're serving to the browser and need to reduce your javascript\nbundle size.\n\nWorks great in the browser with [browserify](http://browserify.org/)!\n\n### see also\n\n- [run-auto](https://github.com/feross/run-auto)\n- [run-parallel-limit](https://github.com/feross/run-parallel-limit)\n- [run-series](https://github.com/feross/run-series)\n- [run-waterfall](https://github.com/feross/run-waterfall)\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org)."}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 151583}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 3063331}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 11643227}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 28708233}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 48774757}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 61517674}], "dependentsCount": 209, "starsCount": 18}, "github": {"starsCount": 266, "forksCount": 19, "subscribersCount": 9, "issues": {"count": 21, "openCount": 2, "distribution": {"3600": 5, "10800": 1, "32400": 2, "97200": 3, "291600": 0, "874800": 2, "2624400": 4, "7873200": 3, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 62}, {"username": "ArtskydJ", "commitsCount": 3}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "kriskowal", "commitsCount": 1}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3157, "testsSize": 4469, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/feross/run-parallel/master.svg", "service": "https://api.travis-ci.org/feross/run-parallel.svg?branch=master", "shields": "https://img.shields.io/travis/feross/run-parallel/master.svg", "content": "https://img.shields.io/travis/feross/run-parallel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/run-parallel.svg", "shields": "https://img.shields.io/npm/v/run-parallel.svg", "content": "https://img.shields.io/npm/v/run-parallel.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/run-parallel.svg", "shields": "https://img.shields.io/npm/dm/run-parallel.svg", "content": "https://img.shields.io/npm/dm/run-parallel.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 317, "downloadsCount": 9569411, "downloadsAcceleration": 80498.82342085235, "dependentsCount": 209}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9720463821892393}}, "score": {"final": 0.8226534968927539, "detail": {"quality": 0.9679780173703354, "popularity": 0.5208052355660879, "maintenance": 0.9999378835243504}}}
{"analyzedAt": "2020-03-02T16:42:15.383Z", "collected": {"metadata": {"name": "rxjs", "scope": "unscoped", "version": "6.5.4", "description": "Reactive Extensions for modern JavaScript", "keywords": ["Rx", "RxJS", "ReactiveX", "ReactiveExtensions", "Streams", "Observables", "Observable", "Stream", "ES6", "ES2015"], "date": "2019-12-27T16:32:10.787Z", "author": {"name": "Ben Lesh", "email": "ben@benlesh.com", "username": "blesh"}, "publisher": {"username": "blesh", "email": "ben@benlesh.com"}, "maintainers": [{"username": "blesh", "email": "ben@benlesh.com"}], "contributors": [{"name": "Ben Lesh", "email": "ben@benlesh.com"}, {"name": "Paul Taylor", "email": "paul.e.taylor@me.com"}, {"name": "Jeff Cross", "email": "crossj@google.com"}, {"name": "Matthew Podwysocki", "email": "matthewp@microsoft.com"}, {"name": "OJ Kwon", "email": "kwon.ohjoong@gmail.com"}, {"name": "Andre Staltz", "email": "andre@staltz.com"}], "repository": {"type": "git", "url": "git+https://github.com/reactivex/rxjs.git"}, "links": {"npm": "https://www.npmjs.com/package/rxjs", "homepage": "https://github.com/ReactiveX/RxJS", "repository": "https://github.com/reactivex/rxjs", "bugs": "https://github.com/ReactiveX/RxJS/issues"}, "license": "Apache-2.0", "dependencies": {"tslib": "^1.9.0"}, "devDependencies": {"@angular-devkit/build-optimizer": "0.4.6", "@angular-devkit/schematics": "^0.5.4", "@types/chai": "4.1.2", "@types/lodash": "4.14.102", "@types/mocha": "2.2.48", "@types/node": "9.4.5", "@types/sinon": "4.1.3", "@types/sinon-chai": "2.7.29", "@types/source-map": "^0.5.2", "babel-polyfill": "6.26.0", "benchmark": "2.1.0", "benchpress": "2.0.0-beta.1", "chai": "4.1.2", "check-side-effects": "0.0.20", "color": "3.0.0", "colors": "1.1.2", "commitizen": "2.9.6", "coveralls": "3.0.0", "cross-env": "5.1.3", "cz-conventional-changelog": "1.2.0", "danger": "1.1.0", "dependency-cruiser": "2.13.0", "doctoc": "1.3.0", "dtslint": "0.6.1", "escape-string-regexp": "1.0.5", "esdoc": "0.4.7", "eslint": "4.17.0", "eslint-plugin-jasmine": "^2.10.1", "fs-extra": "5.0.0", "get-folder-size": "1.0.1", "glob": "7.1.2", "gm": "1.23.1", "google-closure-compiler-js": "20170218.0.0", "gzip-size": "4.1.0", "http-server": "0.11.1", "husky": "0.14.3", "klaw-sync": "3.0.2", "lint-staged": "7.1.1", "lodash": "4.17.5", "markdown-doctest": "0.9.1", "minimist": "1.2.0", "mkdirp": "0.5.1", "mocha": "5.0.0", "mocha-in-sauce": "0.0.1", "npm-run-all": "4.1.2", "nyc": "11.4.1", "opn-cli": "3.1.0", "platform": "1.3.5", "promise": "8.0.1", "protractor": "3.1.1", "rollup": "0.66.6", "rollup-plugin-alias": "1.4.0", "rollup-plugin-inject": "2.0.0", "rollup-plugin-node-resolve": "2.0.0", "rx": "latest", "rxjs": "^5.5.7", "shx": "0.2.2", "sinon": "4.3.0", "sinon-chai": "2.14.0", "source-map-support": "0.5.3", "symbol-observable": "1.0.1", "systemjs": "^0.21.0", "ts-node": "6.1.0", "tsconfig-paths": "3.2.0", "tslint": "5.9.1", "tslint-etc": "1.2.6", "tslint-no-toplevel-property-access": "0.0.2", "tslint-no-unused-expression-chai": "0.0.3", "typescript": "^3.0.1", "validate-commit-msg": "2.14.0", "webpack": "1.13.1", "xmlhttprequest": "1.8.0"}, "releases": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 2}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 3}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 7}, {"from": "2018-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 47}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<img src=\"doc/asset/Rx_Logo_S.png\" alt=\"RxJS Logo\" width=\"86\" height=\"86\"> RxJS: Reactive Extensions For JavaScript\n======================================\n\n\n[![CircleCI](https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg?style=svg)](https://circleci.com/gh/ReactiveX/rxjs/tree/6.x)\n[![npm version](https://badge.fury.io/js/%40reactivex%2Frxjs.svg)](http://badge.fury.io/js/%40reactivex%2Frxjs)\n[![Join the chat at https://gitter.im/Reactive-Extensions/RxJS](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Reactive-Extensions/RxJS?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# RxJS 6 Stable\n\n### MIGRATION AND RELEASE INFORMATION:\n\nFind out how to update to v6, **automatically update your TypeScript code**, and more!\n\n- [Current home is MIGRATION.md](./docs_app/content/guide/v6/migration.md)\n\n### FOR V 5.X PLEASE GO TO [THE 5.0 BRANCH](https://github.com/ReactiveX/rxjs/tree/5.x)\n\nReactive Extensions Library for JavaScript. This is a rewrite of [Reactive-Extensions/RxJS](https://github.com/Reactive-Extensions/RxJS) and is the latest production-ready version of RxJS. This rewrite is meant to have better performance, better modularity, better debuggable call stacks, while staying mostly backwards compatible, with some breaking changes that reduce the API surface.\n\n[Apache 2.0 License](LICENSE.txt)\n\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [Contribution Guidelines](CONTRIBUTING.md)\n- [Maintainer Guidelines](doc/maintainer-guidelines.md)\n- [Creating Operators](doc/operator-creation.md)\n- [API Documentation (WIP)](https://rxjs.dev/)\n\n## Versions In This Repository\n\n- [master](https://github.com/ReactiveX/rxjs/commits/master) - This is all of the current, unreleased work, which is against v6 of RxJS right now\n- [stable](https://github.com/ReactiveX/rxjs/commits/stable) - This is the branch for the latest version you'd get if you do `npm install rxjs`\n\n## Important\n\nBy contributing or commenting on issues in this repository, whether you've read them or not, you're agreeing to the [Contributor Code of Conduct](CODE_OF_CONDUCT.md). Much like traffic laws, ignorance doesn't grant you immunity.\n\n## Installation and Usage\n\n### ES6 via npm\n\n```sh\nnpm install rxjs\n```\n\nIt's recommended to pull in the Observable creation methods you need directly from `'rxjs'` as shown below with `range`. And you can pull in any operator you need from one spot, under `'rxjs/operators'`.\n\n```js\nimport { range } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nrange(1, 200).pipe(\n  filter(x => x % 2 === 1),\n  map(x => x + x)\n).subscribe(x => console.log(x));\n```\n\nHere, we're using the built-in `pipe` method on Observables to combine operators. See [pipeable operators](https://github.com/ReactiveX/rxjs/blob/master/doc/pipeable-operators.md) for more information.\n\n### CommonJS via npm\n\nTo install this library for CommonJS (CJS) usage, use the following command:\n\n```sh\nnpm install rxjs\n```\n\n(Note: destructuring available in Node 8+)\n\n```js\nconst { range } = require('rxjs');\nconst { map, filter } = require('rxjs/operators');\n\nrange(1, 200).pipe(\n  filter(x => x % 2 === 1),\n  map(x => x + x)\n).subscribe(x => console.log(x));\n```\n\n### CDN\n\nFor CDN, you can use [unpkg](https://unpkg.com/):\n\nhttps://unpkg.com/rxjs/bundles/rxjs.umd.min.js\n\nThe global namespace for rxjs is `rxjs`:\n\n```js\nconst { range } = rxjs;\nconst { map, filter } = rxjs.operators;\n\nrange(1, 200).pipe(\n  filter(x => x % 2 === 1),\n  map(x => x + x)\n).subscribe(x => console.log(x));\n```\n\n## Goals\n\n- Smaller overall bundles sizes\n- Provide better performance than preceding versions of RxJS\n- To model/follow the [Observable Spec Proposal](https://github.com/zenparsing/es-observable) to the observable\n- Provide more modular file structure in a variety of formats\n- Provide more debuggable call stacks than preceding versions of RxJS\n\n## Building/Testing\n\n- `npm run build_all` - builds everything\n- `npm test` - runs tests\n- `npm run test_no_cache` - run test with `ts-node` set to false\n\n## Performance Tests\n\nRun `npm run build_perf` or `npm run perf` to run the performance tests with `protractor`.\n\nRun `npm run perf_micro [operator]` to run micro performance test benchmarking operator.\n\n## Adding documentation\nWe appreciate all contributions to the documentation of any type. All of the information needed to get the docs app up and running locally as well as how to contribute can be found in the [documentation directory](./docs_app).\n\n## Generating PNG marble diagrams\n\nThe script `npm run tests2png` requires some native packages installed locally: `imagemagick`, `graphicsmagick`, and `ghostscript`.\n\nFor Mac OS X with [Homebrew](http://brew.sh/):\n\n- `brew install imagemagick`\n- `brew install graphicsmagick`\n- `brew install ghostscript`\n- You may need to install the Ghostscript fonts manually:\n  - Download the tarball from the [gs-fonts project](https://sourceforge.net/projects/gs-fonts)\n  - `mkdir -p /usr/local/share/ghostscript && tar zxvf /path/to/ghostscript-fonts.tar.gz -C /usr/local/share/ghostscript`\n\nFor Debian Linux:\n\n- `sudo add-apt-repository ppa:dhor/myway`\n- `apt-get install imagemagick`\n- `apt-get install graphicsmagick`\n- `apt-get install ghostscript`\n\nFor Windows and other Operating Systems, check the download instructions here:\n\n- http://imagemagick.org\n- http://www.graphicsmagick.org\n- http://www.ghostscript.com/"}, "npm": {"downloads": [{"from": "2020-03-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 798216}, {"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 17119306}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 68761195}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 181930989}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 348093055}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 601199398}], "dependentsCount": 13085, "starsCount": 102}, "github": {"homepage": "https://rxjs.dev", "starsCount": 21225, "forksCount": 2211, "subscribersCount": 482, "issues": {"count": 5321, "openCount": 393, "distribution": {"3600": 664, "10800": 320, "32400": 360, "97200": 607, "291600": 581, "874800": 780, "2624400": 621, "7873200": 488, "23619600": 429, "70858800": 399, "212576400": 72}, "isDisabled": false}, "contributors": [{"username": "benlesh", "commitsCount": 1103}, {"username": "kwonoj", "commitsCount": 446}, {"username": "staltz", "commitsCount": 311}, {"username": "jasonaden", "commitsCount": 119}, {"username": "cartant", "commitsCount": 118}, {"username": "trxcllnt", "commitsCount": 78}, {"username": "timdeschryver", "commitsCount": 71}, {"username": "luisgabriel", "commitsCount": 65}, {"username": "saneyuki", "commitsCount": 58}, {"username": "mpodlasin", "commitsCount": 44}, {"username": "david-driscoll", "commitsCount": 41}, {"username": "dkosasih", "commitsCount": 39}, {"username": "JWO719", "commitsCount": 35}, {"username": "jeffbcross", "commitsCount": 34}, {"username": "jayphelps", "commitsCount": 33}, {"username": "natmegs", "commitsCount": 28}, {"username": "pertrai1", "commitsCount": 27}, {"username": "justinwoo", "commitsCount": 23}, {"username": "dzhavat", "commitsCount": 18}, {"username": "martinsik", "commitsCount": 18}, {"username": "tanem", "commitsCount": 16}, {"username": "robwormald", "commitsCount": 15}, {"username": "IgorMinar", "commitsCount": 13}, {"username": "adrianomelo", "commitsCount": 13}, {"username": "jinroh", "commitsCount": 13}, {"username": "SangKa", "commitsCount": 12}, {"username": "rall", "commitsCount": 9}, {"username": "BioPhoton", "commitsCount": 8}, {"username": "darthtrevino", "commitsCount": 8}, {"username": "figueredo", "commitsCount": 8}, {"username": "gkalpak", "commitsCount": 8}, {"username": "Widdershin", "commitsCount": 7}, {"username": "feloy", "commitsCount": 7}, {"username": "imcotton", "commitsCount": 7}, {"username": "moniuch", "commitsCount": 7}, {"username": "Brooooooklyn", "commitsCount": 6}, {"username": "peaBerberian", "commitsCount": 6}, {"username": "robstoll", "commitsCount": 6}, {"username": "ajcrites", "commitsCount": 5}, {"username": "alexeagle", "commitsCount": 5}, {"username": "bmeurer", "commitsCount": 5}, {"username": "kolodny", "commitsCount": 5}, {"username": "mtaran-google", "commitsCount": 5}, {"username": "rob3c", "commitsCount": 5}, {"username": "waseemahmad31", "commitsCount": 5}, {"username": "alan-agius4", "commitsCount": 4}, {"username": "bafolts", "commitsCount": 4}, {"username": "bbonnet", "commitsCount": 4}, {"username": "edbzn", "commitsCount": 4}, {"username": "felixfbecker", "commitsCount": 4}, {"username": "luillyfe", "commitsCount": 4}, {"username": "masaeedu", "commitsCount": 4}, {"username": "ngfelixl", "commitsCount": 4}, {"username": "oscarlorentzon", "commitsCount": 4}, {"username": "rgbkrk", "commitsCount": 4}, {"username": "vsavkin", "commitsCount": 4}, {"username": "xp44mm", "commitsCount": 4}, {"username": "PDavid", "commitsCount": 3}, {"username": "PatrickJS", "commitsCount": 3}, {"username": "Xapuu", "commitsCount": 3}, {"username": "alex-wilmer", "commitsCount": 3}, {"username": "bowenni", "commitsCount": 3}, {"username": "chrisprice", "commitsCount": 3}, {"username": "christianalfoni", "commitsCount": 3}, {"username": "claudiordgz", "commitsCount": 3}, {"username": "gluck", "commitsCount": 3}, {"username": "jakovljevic-mladen", "commitsCount": 3}, {"username": "ladyleet", "commitsCount": 3}, {"username": "mattpodwysocki", "commitsCount": 3}, {"username": "mattyao1984", "commitsCount": 3}, {"username": "mprobst", "commitsCount": 3}, {"username": "nathan-lapinski", "commitsCount": 3}, {"username": "nikagar4", "commitsCount": 3}, {"username": "oboukli", "commitsCount": 3}, {"username": "rarmatei", "commitsCount": 3}, {"username": "sarbbottam", "commitsCount": 3}, {"username": "Daschyppoo", "commitsCount": 2}, {"username": "Eddie-CooRo", "commitsCount": 2}, {"username": "Spetastian", "commitsCount": 2}, {"username": "ZackDeRose", "commitsCount": 2}, {"username": "abraham", "commitsCount": 2}, {"username": "arpadvas", "commitsCount": 2}, {"username": "claasahl", "commitsCount": 2}, {"username": "evertbouw", "commitsCount": 2}, {"username": "filipesilva", "commitsCount": 2}, {"username": "githubxiaowen", "commitsCount": 2}, {"username": "gregmagolan", "commitsCount": 2}, {"username": "jonahbron", "commitsCount": 2}, {"username": "jsonberry", "commitsCount": 2}, {"username": "manekinekko", "commitsCount": 2}, {"username": "mazulatas", "commitsCount": 2}, {"username": "reod", "commitsCount": 2}, {"username": "shairez", "commitsCount": 2}, {"username": "sulco", "commitsCount": 2}, {"username": "thorn0", "commitsCount": 2}, {"username": "tomwhite007", "commitsCount": 2}, {"username": "wardbell", "commitsCount": 2}, {"username": "willheslam", "commitsCount": 2}, {"username": "ravinsinghd", "commitsCount": 1}], "commits": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 12}, {"from": "2019-12-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 63}, {"from": "2019-09-04T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 148}, {"from": "2019-03-03T00:00:00.000Z", "to": "2020-03-02T00:00:00.000Z", "count": 284}], "statuses": [{"context": "ci/circleci: typescriptLatestSupported", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: dtslint", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: build", "state": "success"}]}, "source": {"files": {"readmeSize": 3714, "testsSize": 2258551, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg?style=svg", "service": "https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg", "shields": "https://img.shields.io/circleci/project/github/ReactiveX/rxjs/6.x.svg", "content": "https://img.shields.io/circleci/project/github/ReactiveX/rxjs/6.x.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "6.x"}}}], "linters": ["eslint", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 24119, "downloadsCount": 60643663, "downloadsAcceleration": 232911.71554414008, "dependentsCount": 13085}, "maintenance": {"releasesFrequency": 0.8999143835616439, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4345221412080539}}, "score": {"final": 0.9518086181448906, "detail": {"quality": 0.9647581114327594, "popularity": 0.9184025521508521, "maintenance": 0.9741151184636132}}}
{"analyzedAt": "2020-02-09T12:28:41.400Z", "collected": {"metadata": {"name": "safer-buffer", "scope": "unscoped", "version": "2.1.2", "description": "Modern Buffer API polyfill without footguns", "date": "2018-04-08T10:42:42.130Z", "author": {"name": "Nikita Skovoroda", "email": "chalkerx@gmail.com", "url": "https://github.com/ChALkeR", "username": "chalker"}, "publisher": {"username": "chalker", "email": "chalkerx@gmail.com"}, "maintainers": [{"username": "chalker", "email": "chalkerx@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/ChALkeR/safer-buffer.git"}, "links": {"npm": "https://www.npmjs.com/package/safer-buffer", "homepage": "https://github.com/ChALkeR/safer-buffer#readme", "repository": "https://github.com/ChALkeR/safer-buffer", "bugs": "https://github.com/ChALkeR/safer-buffer/issues"}, "license": "MIT", "devDependencies": {"standard": "^11.0.1", "tape": "^4.9.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# safer-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![javascript style guide][standard-image]][standard-url] [![Security Responsible Disclosure][secuirty-image]][secuirty-url]\n\n[travis-image]: https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master\n[travis-url]: https://travis-ci.org/ChALkeR/safer-buffer\n[npm-image]: https://img.shields.io/npm/v/safer-buffer.svg\n[npm-url]: https://npmjs.org/package/safer-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n[secuirty-image]: https://img.shields.io/badge/Security-Responsible%20Disclosure-green.svg\n[secuirty-url]: https://github.com/nodejs/security-wg/blob/master/processes/responsible_disclosure_template.md\n\nModern Buffer API polyfill without footguns, working on Node.js from 0.8 to current.\n\n## How to use?\n\nFirst, port all `Buffer()` and `new Buffer()` calls to `Buffer.alloc()` and `Buffer.from()` API.\n\nThen, to achieve compatibility with outdated Node.js versions (`<4.5.0` and 5.x `<5.9.0`), use\n`const Buffer = require('safer-buffer').Buffer` in all files where you make calls to the new\nBuffer API. _Use `var` instead of `const` if you need that for your Node.js version range support._\n\nAlso, see the\n[porting Buffer](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md) guide.\n\n## Do I need it?\n\nHopefully, not \u2014 dropping support for outdated Node.js versions should be fine nowdays, and that\nis the recommended path forward. You _do_ need to port to the `Buffer.alloc()` and `Buffer.from()`\nthough.\n\nSee the [porting guide](https://github.com/ChALkeR/safer-buffer/blob/master/Porting-Buffer.md)\nfor a better description.\n\n## Why not [safe-buffer](https://npmjs.com/safe-buffer)?\n\n_In short: while `safe-buffer` serves as a polyfill for the new API, it allows old API usage and\nitself contains footguns._\n\n`safe-buffer` could be used safely to get the new API while still keeping support for older\nNode.js versions (like this module), but while analyzing ecosystem usage of the old Buffer API\nI found out that `safe-buffer` is itself causing problems in some cases.\n\nFor example, consider the following snippet:\n\n```console\n$ cat example.unsafe.js\nconsole.log(Buffer(20))\n$ ./node-v6.13.0-linux-x64/bin/node example.unsafe.js\n<Buffer 0a 00 00 00 00 00 00 00 28 13 de 02 00 00 00 00 05 00 00 00>\n$ standard example.unsafe.js\nstandard: Use JavaScript Standard Style (https://standardjs.com)\n  /home/chalker/repo/safer-buffer/example.unsafe.js:2:13: 'Buffer()' was deprecated since v6. Use 'Buffer.alloc()' or 'Buffer.from()' (use 'https://www.npmjs.com/package/safe-buffer' for '<4.5.0') instead.\n```\n\nThis is allocates and writes to console an uninitialized chunk of memory.\n[standard](https://www.npmjs.com/package/standard) linter (among others) catch that and warn people\nto avoid using unsafe API.\n\nLet's now throw in `safe-buffer`!\n\n```console\n$ cat example.safe-buffer.js\nconst Buffer = require('safe-buffer').Buffer\nconsole.log(Buffer(20))\n$ standard example.safe-buffer.js\n$ ./node-v6.13.0-linux-x64/bin/node example.safe-buffer.js\n<Buffer 08 00 00 00 00 00 00 00 28 58 01 82 fe 7f 00 00 00 00 00 00>\n```\n\nSee the problem? Adding in `safe-buffer` _magically removes the lint warning_, but the behavior\nremains identi\u0441al to what we had before, and when launched on Node.js 6.x LTS \u2014 this dumps out\nchunks of uninitialized memory.\n_And this code will still emit runtime warnings on Node.js 10.x and above._\n\nThat was done by design. I first considered changing `safe-buffer`, prohibiting old API usage or\nemitting warnings on it, but that significantly diverges from `safe-buffer` design. After some\ndiscussion, it was decided to move my approach into a separate package, and _this is that separate\npackage_.\n\nThis footgun is not imaginary \u2014 I observed top-downloaded packages doing that kind of thing,\n\u00abfixing\u00bb the lint warning by blindly including `safe-buffer` without any actual changes.\n\nAlso in some cases, even if the API _was_ migrated to use of safe Buffer API \u2014 a random pull request\ncan bring unsafe Buffer API usage back to the codebase by adding new calls \u2014 and that could go\nunnoticed even if you have a linter prohibiting that (becase of the reason stated above), and even\npass CI. _I also observed that being done in popular packages._\n\nSome examples:\n * [webdriverio](https://github.com/webdriverio/webdriverio/commit/05cbd3167c12e4930f09ef7cf93b127ba4effae4#diff-124380949022817b90b622871837d56cR31)\n   (a module with 548 759 downloads/month),\n * [websocket-stream](https://github.com/maxogden/websocket-stream/commit/c9312bd24d08271687d76da0fe3c83493871cf61)\n   (218 288 d/m, fix in [maxogden/websocket-stream#142](https://github.com/maxogden/websocket-stream/pull/142)),\n * [node-serialport](https://github.com/node-serialport/node-serialport/commit/e8d9d2b16c664224920ce1c895199b1ce2def48c)\n   (113 138 d/m, fix in [node-serialport/node-serialport#1510](https://github.com/node-serialport/node-serialport/pull/1510)),\n * [karma](https://github.com/karma-runner/karma/commit/3d94b8cf18c695104ca195334dc75ff054c74eec)\n   (3 973 193 d/m, fix in [karma-runner/karma#2947](https://github.com/karma-runner/karma/pull/2947)),\n * [spdy-transport](https://github.com/spdy-http2/spdy-transport/commit/5375ac33f4a62a4f65bcfc2827447d42a5dbe8b1)\n   (5 970 727 d/m, fix in [spdy-http2/spdy-transport#53](https://github.com/spdy-http2/spdy-transport/pull/53)).\n * And there are a lot more over the ecosystem.\n\nI filed a PR at\n[mysticatea/eslint-plugin-node#110](https://github.com/mysticatea/eslint-plugin-node/pull/110) to\npartially fix that (for cases when that lint rule is used), but it is a semver-major change for\nlinter rules and presets, so it would take significant time for that to reach actual setups.\n_It also hasn't been released yet (2018-03-20)._\n\nAlso, `safer-buffer` discourages the usage of `.allocUnsafe()`, which is often done by a mistake.\nIt still supports it with an explicit concern barier, by placing it under\n`require('safer-buffer/dangereous')`.\n\n## But isn't throwing bad?\n\nNot really. It's an error that could be noticed and fixed early, instead of causing havoc later like\nunguarded `new Buffer()` calls that end up receiving user input can do.\n\nThis package affects only the files where `var Buffer = require('safer-buffer').Buffer` was done, so\nit is really simple to keep track of things and make sure that you don't mix old API usage with that.\nAlso, CI should hint anything that you might have missed.\n\nNew commits, if tested, won't land new usage of unsafe Buffer API this way.\n_Node.js 10.x also deals with that by printing a runtime depecation warning._\n\n### Would it affect third-party modules?\n\nNo, unless you explicitly do an awful thing like monkey-patching or overriding the built-in `Buffer`.\nDon't do that.\n\n### But I don't want throwing\u2026\n\nThat is also fine!\n\nAlso, it could be better in some cases when you don't comprehensive enough test coverage.\n\nIn that case \u2014 just don't override `Buffer` and use\n`var SaferBuffer = require('safer-buffer').Buffer` instead.\n\nThat way, everything using `Buffer` natively would still work, but there would be two drawbacks:\n\n* `Buffer.from`/`Buffer.alloc` won't be polyfilled \u2014 use `SaferBuffer.from` and\n  `SaferBuffer.alloc` instead.\n* You are still open to accidentally using the insecure deprecated API \u2014 use a linter to catch that.\n\nNote that using a linter to catch accidential `Buffer` constructor usage in this case is strongly\nrecommended. `Buffer` is not overriden in this usecase, so linters won't get confused.\n\n## \u00abWithout footguns\u00bb?\n\nWell, it is still possible to do _some_ things with `Buffer` API, e.g. accessing `.buffer` property\non older versions and duping things from there. You shouldn't do that in your code, probabably.\n\nThe intention is to remove the most significant footguns that affect lots of packages in the\necosystem, and to do it in the proper way.\n\nAlso, this package doesn't protect against security issues affecting some Node.js versions, so for\nusage in your own production code, it is still recommended to update to a Node.js version\n[supported by upstream](https://github.com/nodejs/release#release-schedule)."}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 951307}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 14811258}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 60885180}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 170735119}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 335303174}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 621781073}], "dependentsCount": 67, "starsCount": 0}, "github": {"starsCount": 17, "forksCount": 6, "subscribersCount": 2, "issues": {"count": 7, "openCount": 2, "distribution": {"3600": 2, "10800": 0, "32400": 0, "97200": 1, "291600": 1, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "ChALkeR", "commitsCount": 43}, {"username": "addaleax", "commitsCount": 2}, {"username": "Trott", "commitsCount": 1}, {"username": "jon-simpkins", "commitsCount": 1}, {"username": "joyeecheung", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 8261, "testsSize": 15735}, "badges": [{"urls": {"original": "https://travis-ci.org/ChALkeR/safer-buffer.svg?branch=master", "service": "https://api.travis-ci.org/ChALkeR/safer-buffer.svg?branch=master", "shields": "https://img.shields.io/travis/ChALkeR/safer-buffer/master.svg", "content": "https://img.shields.io/travis/ChALkeR/safer-buffer/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/safer-buffer.svg", "shields": "https://img.shields.io/npm/v/safer-buffer.svg", "content": "https://img.shields.io/npm/v/safer-buffer.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 30, "downloadsCount": 56911706.333333336, "downloadsAcceleration": 121320.45825722982, "dependentsCount": 67}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8204031569289132, "detail": {"quality": 0.9647859797513708, "popularity": 0.5171926860613854, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-26T09:25:37.677Z", "collected": {"metadata": {"name": "safe-regex", "scope": "unscoped", "version": "2.1.1", "description": "detect possibly catastrophic, exponential-time regular expressions", "keywords": ["catastrophic", "exponential", "regex", "safe", "sandbox"], "date": "2019-10-21T19:45:01.945Z", "author": {"name": "James C.", "email": "davisjam@vt.edu", "url": "Jamie", "username": "davisjam"}, "publisher": {"username": "davisjam", "email": "davisjam@vt.edu"}, "maintainers": [{"username": "davisjam", "email": "davisjam@vt.edu"}], "repository": {"type": "git", "url": "git://github.com/davisjam/safe-regex.git"}, "links": {"npm": "https://www.npmjs.com/package/safe-regex", "homepage": "https://github.com/davisjam/safe-regex", "repository": "https://github.com/davisjam/safe-regex", "bugs": "https://github.com/davisjam/safe-regex/issues"}, "license": "MIT", "dependencies": {"regexp-tree": "~0.1.1"}, "devDependencies": {"jest": "^24.9.0"}, "releases": [{"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 3}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 3}, {"from": "2018-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# safe-regex\n\nDetect potentially\n[catastrophic](http://regular-expressions.mobi/catastrophic.html)\n[exponential-time](http://perlgeek.de/blog-en/perl-tips/in-search-of-an-exponetial-regexp.html)\nregular expressions by limiting the\n[star height](https://en.wikipedia.org/wiki/Star_height) to 1.\n\nWARNING: This module has both false positives and false negatives.\nUse [vuln-regex-detector](https://github.com/davisjam/vuln-regex-detector) for improved accuracy.\n\n[![Build Status](https://travis-ci.org/davisjam/safe-regex.svg?branch=master)](https://travis-ci.org/davisjam/safe-regex)\n\n## Example\n\nSuppose you have a script named `safe.js`:\n\n``` js\nvar safe = require('safe-regex');\nvar regex = process.argv.slice(2).join(' ');\nconsole.log(safe(regex));\n```\n\nThis is its behavior:\n\n```\n$ node safe.js '(x+x+)+y'\nfalse\n$ node safe.js '(beep|boop)*'\ntrue\n$ node safe.js '(a+){10}'\nfalse\n$ node safe.js '\\blocation\\s*:[^:\\n]+\\b(Oakland|San Francisco)\\b'\ntrue\n```\n\n## Methods\n\n``` js\nconst safe = require('safe-regex')\n```\n\n### const ok = safe(re, opts={})\n\nReturn a boolean `ok` whether or not the regex `re` is safe and not possibly\ncatastrophic.\n\n`re` can be a `RegExp` object or just a string.\n\nIf the `re` is a string and is an invalid regex, returns `false`.\n\n* `opts.limit` - maximum number of allowed repetitions in the entire regex.\nDefault: `25`.\n\n## Install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install safe-regex\n```\n\n## Resources\n\n### What should I do if my project has a super-linear regex?\n\n1. Confirm that it is *reachable* by untrusted input.\n2. If it is, you can consider whether you can prevent worst-case behavior by trimming the input, revising the regex, or replacing the regex with another algorithm like string functions. For examples, see Table 5 in [this article](http://people.cs.vt.edu/davisjam/downloads/publications/DavisCoghlanServantLee-EcosystemREDOS-ESECFSE18.pdf).\n3. If none of those solutions looks feasible, you might also consider changing regex engines. The [RE2 bindings](https://www.npmjs.com/package/re2) might work, though test carefully to confirm there are no [semantic portability problems](https://medium.com/@davisjam/why-arent-regexes-a-lingua-franca-esecfse19-a36348df3a2?source=friends_link&sk=d21be7f8f723e2080dc993385c6973d1).\n\n### Further reading\n\nThe following documents may be edifying:\n\n- [Research brief on the extent of super-linear regexes in practice](https://medium.com/@davisjam/introduction-987fdc4c7b0?source=friends_link&sk=ceefa4a4ca9617e08ab782c3b1580aea)\n- [Research brief on the variability of super-linear regex behavior across programming languages](https://medium.com/@davisjam/why-arent-regexes-a-lingua-franca-esecfse19-a36348df3a2?source=friends_link&sk=d21be7f8f723e2080dc993385c6973d1)\n- [Comparing regex matching algorithms](https://swtch.com/~rsc/regexp/regexp1.html)\n\n## Project policies\n\n### Versioning\n\nThis project follows [Semantic Versioning 2.0 (semver)](https://semver.org/).\n\nHere are the project-specific meanings of MAJOR, MINOR, and PATCH updates:\n\n- MAJOR: \"Incompatible\" API changes were introduced. There are two types in this module:\n  - Changes that modify the interface\n  - Changes that cause any regexes to be marked as unsafe that were formerly marked as safe\n- MINOR: Functionality was added in a backwards-compatible manner. There are two types in this module:\n  - Refactoring the analyses but not changing their results\n  - Modifying the analyses to reduce false positives, without affecting negatives (false or true)\n- PATCH: I don't anticipate using PATCH for this module\n\n### License\n\n[MIT](https://github.com/davisjam/safe-regex/blob/master/LICENSE)"}, "npm": {"downloads": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 1975394}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 10543589}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 45152893}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 115891472}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 230768675}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 432082204}], "dependentsCount": 82, "starsCount": 20}, "github": {"forkOf": "substack/safe-regex", "starsCount": 39, "forksCount": 3, "subscribersCount": 3, "issues": {"count": 44, "openCount": 6, "distribution": {"3600": 24, "10800": 1, "32400": 1, "97200": 1, "291600": 0, "874800": 2, "2624400": 1, "7873200": 1, "23619600": 6, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "davisjam", "commitsCount": 23}, {"username": "substack", "commitsCount": 16}, {"username": "sverweij", "commitsCount": 4}, {"username": "johnjbarton", "commitsCount": 2}, {"username": "Hypercubed", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}], "commits": [{"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 16}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 18}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3658, "testsSize": 3838, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/davisjam/safe-regex.svg?branch=master", "service": "https://api.travis-ci.org/davisjam/safe-regex.svg?branch=master", "shields": "https://img.shields.io/travis/davisjam/safe-regex/master.svg", "content": "https://img.shields.io/travis/davisjam/safe-regex/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 71, "downloadsCount": 38630490.666666664, "downloadsAcceleration": 104892.72680745815, "dependentsCount": 82}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8140569386856528, "detail": {"quality": 0.9377660342578539, "popularity": 0.5221878470827122, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T13:37:52.613Z", "collected": {"metadata": {"name": "seedrandom", "scope": "unscoped", "version": "3.0.5", "description": "Seeded random number generator for Javascript.", "keywords": ["seed", "random", "crypto"], "date": "2019-09-17T10:37:28.111Z", "author": {"name": "David Bau"}, "publisher": {"username": "davidbau", "email": "david.bau@gmail.com"}, "maintainers": [{"username": "davidbau", "email": "david.bau@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/davidbau/seedrandom.git"}, "links": {"npm": "https://www.npmjs.com/package/seedrandom", "homepage": "http://davidbau.com/archives/2010/01/30/random_seeds_coded_hints_and_quintillions.html", "repository": "https://github.com/davidbau/seedrandom", "bugs": "https://github.com/davidbau/seedrandom/issues"}, "license": "MIT", "devDependencies": {"blanket": "latest", "coveralls": "latest", "grunt": "latest", "grunt-browserify": "latest", "grunt-release": "github:davidbau/grunt-release", "grunt-cli": "latest", "grunt-contrib-connect": "latest", "grunt-contrib-copy": "latest", "grunt-contrib-qunit": "latest", "grunt-contrib-uglify": "latest", "grunt-mocha-nyc": "latest", "mocha": "latest", "nyc": "latest", "proxyquire": "latest", "qunit": "latest", "requirejs": "latest"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "seedrandom.js\n=============\n[![Build Status](https://travis-ci.org/davidbau/seedrandom.svg?branch=master)](https://travis-ci.org/davidbau/seedrandom)\n[![NPM version](https://badge.fury.io/js/seedrandom.svg)](http://badge.fury.io/js/seedrandom)\n[![Bower version](https://badge.fury.io/bo/seedrandom.svg)](http://badge.fury.io/bo/seedrandom)\n\nSeeded random number generator for JavaScript.\n\nVersion 3.0.5\n\nAuthor: David Bau\n\nDate: 2019-09-14\n\nCan be used as a plain script, a Node.js module or an AMD module.\n\n\nScript tag usage\n----------------\n\n```html\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js\">\n</script>\n```\n\n```js\n// Make a predictable pseudorandom number generator.\nvar myrng = new Math.seedrandom('hello.');\nconsole.log(myrng());                // Always 0.9282578795792454\nconsole.log(myrng());                // Always 0.3752569768646784\n\n// Use \"quick\" to get only 32 bits of randomness in a float.\nconsole.log(myrng.quick());          // Always 0.7316977467853576\n\n// Use \"int32\" to get a 32 bit (signed) integer\nconsole.log(myrng.int32());          // Always 1966374204\n\n// Calling seedrandom with no arguments creates an ARC4-based PRNG\n// that is autoseeded using the current time, dom state, and other\n// accumulated local entropy.\nvar prng = new Math.seedrandom();\nconsole.log(prng());                // Reasonably unpredictable.\n\n// Seeds using the given explicit seed mixed with accumulated entropy.\nprng = new Math.seedrandom('added entropy.', { entropy: true });\nconsole.log(prng());                // As unpredictable as added entropy.\n\n// Warning: if you call Math.seedrandom without `new`, it replaces\n// Math.random with the predictable new Math.seedrandom(...), as follows:\nMath.seedrandom('hello.');\nconsole.log(Math.random());          // Always 0.9282578795792454\nconsole.log(Math.random());          // Always 0.3752569768646784\n\n```\n\n**Note**: calling `Math.seedrandom('constant')` without `new` will make\n`Math.random()` predictable globally, which is intended to be useful for\nderandomizing code for testing, but should not be done in a production library.\nIf you need a local seeded PRNG, use `myrng = new Math.seedrandom('seed')`\ninstead.  For example, [cryptico](https://www.npmjs.com/package/cryptico),\nan RSA encryption package, [uses the wrong form](\nhttps://github.com/wwwtyro/cryptico/blob/9291ece6/api.js#L264),\nand thus secretly makes `Math.random()` perfectly predictable.\nThe cryptico library (and any other library that does this)\nshould not be trusted in a security-sensitive application.\n\n\nOther Fast PRNG Algorithms\n--------------------------\n\nThe package includes some other fast PRNGs.  To use Johannes Baag\u00f8e's\nextremely fast Alea PRNG:\n\n\n```html\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/lib/alea.min.js\">\n</script>\n```\n\n```js\n// Use alea for Johannes Baag\u00f8e's clever and fast floating-point RNG.\nvar arng = new alea('hello.');\n\n// By default provides 32 bits of randomness in a float.\nconsole.log(arng());               // Always 0.4783254903741181\n\n// Use \"double\" to get 56 bits of randomness.\nconsole.log(arng.double());        // Always 0.8297006866124559\n\n// Use \"int32\" to get a 32 bit (signed) integer.\nconsole.log(arng.int32());         // Always 1076136327\n```\n\nBesides alea, there are several other faster PRNGs available.\nNote that none of these fast PRNGs provide autoseeding: you\nneed to provide your own seed (or use the default autoseeded\nseedrandom to make a seed).\n\n|PRNG name  | Time vs native | Period      | Author               |\n|-----------|----------------|-------------|----------------------|\n|`alea`     |  1.95 ns, 0.9x | ~2^116      | Baag\u00f8e               |\n|`xor128`   |  2.04 ns, 0.9x | 2^128-1     | Marsaglia            |\n|`tychei`   |  2.32 ns, 1.1x | ~2^127      | Neves/Araujo (ChaCha)|\n|`xorwow`   |  2.40 ns, 1.1x | 2^192-2^32  | Marsaglia            |\n|`xor4096`  |  2.40 ns, 1.1x | 2^4096-2^32 | Brent (xorgens)      |\n|`xorshift7`|  2.64 ns, 1.3x | 2^256-1     | Panneton/L'ecuyer    |\n|`quick`    |  3.80 ns, 1.8x | ~2^1600     | Bau (ARC4)           |\n\n(Timings were done on node v0.12.2 on a single-core Google Compute Engine\ninstance.  `quick` is just the 32-bit version of the RC4-based PRNG\noriginally packaged with seedrandom.)\n\n\nCJS / Node.js usage\n-------------------\n\n```\nnpm install seedrandom\n```\n\n```js\n// Local PRNG: does not affect Math.random.\nvar seedrandom = require('seedrandom');\nvar rng = seedrandom('hello.');\nconsole.log(rng());                  // Always 0.9282578795792454\n\n// Global PRNG: set Math.random.\nseedrandom('hello.', { global: true });\nconsole.log(Math.random());          // Always 0.9282578795792454\n\n// Autoseeded ARC4-based PRNG.\nrng = seedrandom();\nconsole.log(rng());                  // Reasonably unpredictable.\n\n// Mixing accumulated entropy.\nrng = seedrandom('added entropy.', { entropy: true });\nconsole.log(rng());                  // As unpredictable as added entropy.\n\n// Using alternate algorithms, as listed above.\nvar rng2 = seedrandom.xor4096('hello.')\nconsole.log(rng2());\n```\n\nStarting in version 3, when using via require('seedrandom'), the global\n`Math.seedrandom` is no longer available.\n\n\nRequire.js usage\n----------------\n\nSimilar to Node.js usage:\n\n```\nbower install seedrandom\n```\n\n```\nrequire(['seedrandom'], function(seedrandom) {\n  var rng = seedrandom('hello.');\n  console.log(rng());                  // Always 0.9282578795792454\n});\n```\n\n\nNetwork seeding\n---------------\n\n```html\n<script src=//cdnjs.cloudflare.com/ajax/libs/seedrandom/3.0.5/seedrandom.min.js>\n</script>\n<!-- Seeds using urandom bits from a server. -->\n<script src=//jsonlib.appspot.com/urandom?callback=Math.seedrandom>\n</script>\n\n<!-- Seeds mixing in random.org bits -->\n<script>\n(function(x, u, s){\n  try {\n    // Make a synchronous request to random.org.\n    x.open('GET', u, false);\n    x.send();\n    s = unescape(x.response.trim().replace(/^|\\s/g, '%'));\n  } finally {\n    // Seed with the response, or autoseed on failure.\n    Math.seedrandom(s, !!s);\n  }\n})(new XMLHttpRequest, 'https://www.random.org/integers/' +\n  '?num=256&min=0&max=255&col=1&base=16&format=plain&rnd=new');\n</script>\n```\n\nReseeding using user input\n--------------------------\n\n```js\nvar seed = Math.seedrandom();        // Use prng with an automatic seed.\ndocument.write(Math.random());       // Pretty much unpredictable x.\n\nvar rng = new Math.seedrandom(seed); // A new prng with the same seed.\ndocument.write(rng());               // Repeat the 'unpredictable' x.\n\nfunction reseed(event, count) {      // Define a custom entropy collector.\n  var t = [];\n  function w(e) {\n    t.push([e.pageX, e.pageY, +new Date]);\n    if (t.length < count) { return; }\n    document.removeEventListener(event, w);\n    Math.seedrandom(t, { entropy: true });\n  }\n  document.addEventListener(event, w);\n}\nreseed('mousemove', 100);            // Reseed after 100 mouse moves.\n```\n\nThe \"pass\" option can be used to get both the prng and the seed.\nThe following returns both an autoseeded prng and the seed as an object,\nwithout mutating Math.random:\n\n```js\nvar obj = Math.seedrandom(null, { pass: function(prng, seed) {\n  return { random: prng, seed: seed };\n}});\n```\n\n\nSaving and Restoring PRNG state\n-------------------------------\n\n```js\nvar seedrandom = Math.seedrandom;\nvar saveable = seedrandom(\"secret-seed\", {state: true});\nfor (var j = 0; j < 1e5; ++j) saveable();\nvar saved = saveable.state();\nvar replica = seedrandom(\"\", {state: saved});\nassert(replica() == saveable());\n```\n\nIn normal use the prng is opaque and its internal state cannot be accessed.\nHowever, if the \"state\" option is specified, the prng gets a state() method\nthat returns a plain object the can be used to reconstruct a prng later in\nthe same state (by passing that saved object back as the state option).\n\n\nVersion notes\n-------------\n\nThe random number sequence is the same as version 1.0 for string seeds.\n\n* Version 2.0 changed the sequence for non-string seeds.\n* Version 2.1 speeds seeding and uses window.crypto to autoseed if present.\n* Version 2.2 alters non-crypto autoseeding to sweep up entropy from plugins.\n* Version 2.3 adds support for \"new\", module loading, and a null seed arg.\n* Version 2.3.1 adds a build environment, module packaging, and tests.\n* Version 2.3.4 fixes bugs on IE8, and switches to MIT license.\n* Version 2.3.6 adds a readable options object argument.\n* Version 2.3.10 adds support for node.js crypto (contributed by ctd1500).\n* Version 2.3.11 adds an option to load and save internal state.\n* Version 2.4.0 adds implementations of several other fast PRNGs.\n* Version 2.4.2 adds an implementation of Baagoe's very fast Alea PRNG.\n* Version 2.4.3 ignores nodejs crypto when under browserify.\n* Version 2.4.4 avoids strict mode problem with global this reference.\n* Version 3.0.1 removes Math.seedrandom for require('seedrandom') users.\n* Version 3.0.3 updates package.json for CDN entrypoints.\n* Version 3.0.5 removes eval to avoid triggering content-security policy.\n\nThe standard ARC4 key scheduler cycles short keys, which means that\nseedrandom('ab') is equivalent to seedrandom('abab') and 'ababab'.\nTherefore it is a good idea to add a terminator to avoid trivial\nequivalences on short string seeds, e.g., Math.seedrandom(str + '\\0').\nStarting with version 2.0, a terminator is added automatically for\nnon-string seeds, so seeding with the number 111 is the same as seeding\nwith '111\\0'.\n\nWhen seedrandom() is called with zero args or a null seed, it uses a\nseed drawn from the browser crypto object if present.  If there is no\ncrypto support, seedrandom() uses the current time, the native rng,\nand a walk of several DOM objects to collect a few bits of entropy.\n\nEach time the one- or two-argument forms of seedrandom are called,\nentropy from the passed seed is accumulated in a pool to help generate\nfuture seeds for the zero- and two-argument forms of seedrandom.\n\nOn speed - This javascript implementation of Math.random() is several\ntimes slower than the built-in Math.random() because it is not native\ncode, but that is typically fast enough.  Some details (timings on\nChrome 25 on a 2010 vintage macbook):\n\n* seeded Math.random()          - avg less than 0.0002 milliseconds per call\n* seedrandom('explicit.')       - avg less than 0.2 milliseconds per call\n* seedrandom('explicit.', true) - avg less than 0.2 milliseconds per call\n* seedrandom() with crypto      - avg less than 0.2 milliseconds per call\n\nAutoseeding without crypto is somewhat slow, about 20-30 milliseconds on\na 2012 windows 7 1.5ghz i5 laptop, as seen on Firefox 19, IE 10, and Opera.\nSeeded rng calls themselves are fast across these browsers, with slowest\nnumbers on Opera at about 0.0005 ms per seeded Math.random().\n\n\nLICENSE (MIT)\n-------------\n\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 9777}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 209144}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 884320}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2385255}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4687899}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8760050}], "dependentsCount": 284, "starsCount": 10}, "github": {"starsCount": 1237, "forksCount": 127, "subscribersCount": 36, "issues": {"count": 66, "openCount": 2, "distribution": {"3600": 2, "10800": 1, "32400": 1, "97200": 11, "291600": 5, "874800": 3, "2624400": 17, "7873200": 14, "23619600": 8, "70858800": 1, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "davidbau", "commitsCount": 128}, {"username": "TimothyGu", "commitsCount": 6}, {"username": "jagger27", "commitsCount": 2}, {"username": "mreinstein", "commitsCount": 2}, {"username": "ZJONSSON", "commitsCount": 1}, {"username": "automata", "commitsCount": 1}, {"username": "bluelovers", "commitsCount": 1}, {"username": "dave-5", "commitsCount": 1}, {"username": "jared-stilwell", "commitsCount": 1}, {"username": "louh", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 23}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 11854, "testsSize": 52846, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/davidbau/seedrandom.svg?branch=master", "service": "https://api.travis-ci.org/davidbau/seedrandom.svg?branch=master", "shields": "https://img.shields.io/travis/davidbau/seedrandom/master.svg", "content": "https://img.shields.io/travis/davidbau/seedrandom/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "coverage": 0.94}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.991, "health": 1, "branding": 0.55}, "popularity": {"communityInterest": 1421, "downloadsCount": 795085, "downloadsAcceleration": 1880.235673515981, "dependentsCount": 284}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7843964984687776, "detail": {"quality": 0.9710455075345773, "popularity": 0.4089184693687344, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-11T21:55:41.560Z", "collected": {"metadata": {"name": "semver", "scope": "unscoped", "version": "7.1.3", "description": "The semantic version parser used by npm.", "date": "2020-02-11T21:54:05.273Z", "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "adam_baldwin", "email": "evilpacket@gmail.com"}, {"username": "ahmadnassri", "email": "ahmad@ahmadnassri.com"}, {"username": "claudiahdz", "email": "cghr1990@gmail.com"}, {"username": "darcyclarke", "email": "darcy@darcyclarke.me"}, {"username": "isaacs", "email": "i@izs.me"}, {"username": "mikemimik", "email": "mike@mikecorp.ca"}, {"username": "ruyadorno", "email": "ruyadorno@hotmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/npm/node-semver.git"}, "links": {"npm": "https://www.npmjs.com/package/semver", "homepage": "https://github.com/npm/node-semver#readme", "repository": "https://github.com/npm/node-semver", "bugs": "https://github.com/npm/node-semver/issues"}, "license": "ISC", "devDependencies": {"tap": "^14.10.2"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 13}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "semver(1) -- The semantic versioner for npm\n===========================================\n\n## Install\n\n```bash\nnpm install semver\n````\n\n## Usage\n\nAs a node module:\n\n```js\nconst semver = require('semver')\n\nsemver.valid('1.2.3') // '1.2.3'\nsemver.valid('a.b.c') // null\nsemver.clean('  =v1.2.3   ') // '1.2.3'\nsemver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\nsemver.gt('1.2.3', '9.8.7') // false\nsemver.lt('1.2.3', '9.8.7') // true\nsemver.minVersion('>=1.0.0') // '1.0.0'\nsemver.valid(semver.coerce('v2')) // '2.0.0'\nsemver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'\n```\n\nYou can also just load the module for the function that you care about, if\nyou'd like to minimize your footprint.\n\n```js\n// load the whole API at once in a single object\nconst semver = require('semver')\n\n// or just load the bits you need\n// all of them listed here, just pick and choose what you want\n\n// classes\nconst SemVer = require('semver/classes/semver')\nconst Comparator = require('semver/classes/comparator')\nconst Range = require('semver/classes/range')\n\n// functions for working with versions\nconst semverParse = require('semver/functions/parse')\nconst semverValid = require('semver/functions/valid')\nconst semverClean = require('semver/functions/clean')\nconst semverInc = require('semver/functions/inc')\nconst semverDiff = require('semver/functions/diff')\nconst semverMajor = require('semver/functions/major')\nconst semverMinor = require('semver/functions/minor')\nconst semverPatch = require('semver/functions/patch')\nconst semverPrerelease = require('semver/functions/prerelease')\nconst semverCompare = require('semver/functions/compare')\nconst semverRcompare = require('semver/functions/rcompare')\nconst semverCompareLoose = require('semver/functions/compare-loose')\nconst semverCompareBuild = require('semver/functions/compare-build')\nconst semverSort = require('semver/functions/sort')\nconst semverRsort = require('semver/functions/rsort')\n\n// low-level comparators between versions\nconst semverGt = require('semver/functions/gt')\nconst semverLt = require('semver/functions/lt')\nconst semverEq = require('semver/functions/eq')\nconst semverNeq = require('semver/functions/neq')\nconst semverGte = require('semver/functions/gte')\nconst semverLte = require('semver/functions/lte')\nconst semverCmp = require('semver/functions/cmp')\nconst semverCoerce = require('semver/functions/coerce')\n\n// working with ranges\nconst semverSatisfies = require('semver/functions/satisfies')\nconst semverMaxSatisfying = require('semver/ranges/max-satisfying')\nconst semverMinSatisfying = require('semver/ranges/min-satisfying')\nconst semverToComparators = require('semver/ranges/to-comparators')\nconst semverMinVersion = require('semver/ranges/min-version')\nconst semverValidRange = require('semver/ranges/valid')\nconst semverOutside = require('semver/ranges/outside')\nconst semverGtr = require('semver/ranges/gtr')\nconst semverLtr = require('semver/ranges/ltr')\nconst semverIntersects = require('semver/ranges/intersects')\n```\n\nAs a command-line utility:\n\n```\n$ semver -h\n\nA JavaScript implementation of the https://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\n--rtl\n        Coerce version strings right to left\n\n--ltr\n        Coerce version strings left to right (default)\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.\n```\n\n## Versions\n\nA \"version\" is described by the `v2.0.0` specification found at\n<https://semver.org/>.\n\nA leading `\"=\"` or `\"v\"` character is stripped off and ignored.\n\n## Ranges\n\nA `version range` is a set of `comparators` which specify versions\nthat satisfy the range.\n\nA `comparator` is composed of an `operator` and a `version`.  The set\nof primitive `operators` is:\n\n* `<` Less than\n* `<=` Less than or equal to\n* `>` Greater than\n* `>=` Greater than or equal to\n* `=` Equal.  If no operator is specified, then equality is assumed,\n  so this operator is optional, but MAY be included.\n\nFor example, the comparator `>=1.2.7` would match the versions\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\nor `1.1.0`.\n\nComparators can be joined by whitespace to form a `comparator set`,\nwhich is satisfied by the **intersection** of all of the comparators\nit includes.\n\nA range is composed of one or more comparator sets, joined by `||`.  A\nversion matches a range if and only if every comparator in at least\none of the `||`-separated comparator sets is satisfied by the version.\n\nFor example, the range `>=1.2.7 <1.3.0` would match the versions\n`1.2.7`, `1.2.8`, and `1.2.99`, but not the versions `1.2.6`, `1.3.0`,\nor `1.1.0`.\n\nThe range `1.2.7 || >=1.2.9 <2.0.0` would match the versions `1.2.7`,\n`1.2.9`, and `1.4.6`, but not the versions `1.2.8` or `2.0.0`.\n\n### Prerelease Tags\n\nIf a version has a prerelease tag (for example, `1.2.3-alpha.3`) then\nit will only be allowed to satisfy comparator sets if at least one\ncomparator with the same `[major, minor, patch]` tuple also has a\nprerelease tag.\n\nFor example, the range `>1.2.3-alpha.3` would be allowed to match the\nversion `1.2.3-alpha.7`, but it would *not* be satisfied by\n`3.4.5-alpha.9`, even though `3.4.5-alpha.9` is technically \"greater\nthan\" `1.2.3-alpha.3` according to the SemVer sort rules.  The version\nrange only accepts prerelease tags on the `1.2.3` version.  The\nversion `3.4.5` *would* satisfy the range, because it does not have a\nprerelease flag, and `3.4.5` is greater than `1.2.3-alpha.7`.\n\nThe purpose for this behavior is twofold.  First, prerelease versions\nfrequently are updated very quickly, and contain many breaking changes\nthat are (by the author's design) not yet fit for public consumption.\nTherefore, by default, they are excluded from range matching\nsemantics.\n\nSecond, a user who has opted into using a prerelease version has\nclearly indicated the intent to use *that specific* set of\nalpha/beta/rc versions.  By including a prerelease tag in the range,\nthe user is indicating that they are aware of the risk.  However, it\nis still not appropriate to assume that they have opted into taking a\nsimilar risk on the *next* set of prerelease versions.\n\nNote that this behavior can be suppressed (treating all prerelease\nversions as if they were normal versions, for the purpose of range\nmatching) by setting the `includePrerelease` flag on the options\nobject to any\n[functions](https://github.com/npm/node-semver#functions) that do\nrange matching.\n\n#### Prerelease Identifiers\n\nThe method `.inc` takes an additional `identifier` string argument that\nwill append the value of the string as a prerelease identifier:\n\n```javascript\nsemver.inc('1.2.3', 'prerelease', 'beta')\n// '1.2.4-beta.0'\n```\n\ncommand-line example:\n\n```bash\n$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n```\n\nWhich then can be used to increment further:\n\n```bash\n$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n```\n\n### Advanced Range Syntax\n\nAdvanced range syntax desugars to primitive comparators in\ndeterministic ways.\n\nAdvanced ranges may be combined in the same way as primitive\ncomparators using white space or `||`.\n\n#### Hyphen Ranges `X.Y.Z - A.B.C`\n\nSpecifies an inclusive set.\n\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\n\nIf a partial version is provided as the first version in the inclusive\nrange, then the missing pieces are replaced with zeroes.\n\n* `1.2 - 2.3.4` := `>=1.2.0 <=2.3.4`\n\nIf a partial version is provided as the second version in the\ninclusive range, then all versions that start with the supplied parts\nof the tuple are accepted, but nothing that would be greater than the\nprovided tuple parts.\n\n* `1.2.3 - 2.3` := `>=1.2.3 <2.4.0`\n* `1.2.3 - 2` := `>=1.2.3 <3.0.0`\n\n#### X-Ranges `1.2.x` `1.X` `1.2.*` `*`\n\nAny of `X`, `x`, or `*` may be used to \"stand in\" for one of the\nnumeric values in the `[major, minor, patch]` tuple.\n\n* `*` := `>=0.0.0` (Any version satisfies)\n* `1.x` := `>=1.0.0 <2.0.0` (Matching major version)\n* `1.2.x` := `>=1.2.0 <1.3.0` (Matching major and minor versions)\n\nA partial version range is treated as an X-Range, so the special\ncharacter is in fact optional.\n\n* `\"\"` (empty string) := `*` := `>=0.0.0`\n* `1` := `1.x.x` := `>=1.0.0 <2.0.0`\n* `1.2` := `1.2.x` := `>=1.2.0 <1.3.0`\n\n#### Tilde Ranges `~1.2.3` `~1.2` `~1`\n\nAllows patch-level changes if a minor version is specified on the\ncomparator.  Allows minor-level changes if not.\n\n* `~1.2.3` := `>=1.2.3 <1.(2+1).0` := `>=1.2.3 <1.3.0`\n* `~1.2` := `>=1.2.0 <1.(2+1).0` := `>=1.2.0 <1.3.0` (Same as `1.2.x`)\n* `~1` := `>=1.0.0 <(1+1).0.0` := `>=1.0.0 <2.0.0` (Same as `1.x`)\n* `~0.2.3` := `>=0.2.3 <0.(2+1).0` := `>=0.2.3 <0.3.0`\n* `~0.2` := `>=0.2.0 <0.(2+1).0` := `>=0.2.0 <0.3.0` (Same as `0.2.x`)\n* `~0` := `>=0.0.0 <(0+1).0.0` := `>=0.0.0 <1.0.0` (Same as `0.x`)\n* `~1.2.3-beta.2` := `>=1.2.3-beta.2 <1.3.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n\n#### Caret Ranges `^1.2.3` `^0.2.5` `^0.0.4`\n\nAllows changes that do not modify the left-most non-zero element in the\n`[major, minor, patch]` tuple.  In other words, this allows patch and\nminor updates for versions `1.0.0` and above, patch updates for\nversions `0.X >=0.1.0`, and *no* updates for versions `0.0.X`.\n\nMany authors treat a `0.x` version as if the `x` were the major\n\"breaking-change\" indicator.\n\nCaret ranges are ideal when an author may make breaking changes\nbetween `0.2.4` and `0.3.0` releases, which is a common practice.\nHowever, it presumes that there will *not* be breaking changes between\n`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be\nadditive (but non-breaking), according to commonly observed practices.\n\n* `^1.2.3` := `>=1.2.3 <2.0.0`\n* `^0.2.3` := `>=0.2.3 <0.3.0`\n* `^0.0.3` := `>=0.0.3 <0.0.4`\n* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4`  Note that prereleases in the\n  `0.0.3` version *only* will be allowed, if they are greater than or\n  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.\n\nWhen parsing caret ranges, a missing `patch` value desugars to the\nnumber `0`, but will allow flexibility within that value, even if the\nmajor and minor versions are both `0`.\n\n* `^1.2.x` := `>=1.2.0 <2.0.0`\n* `^0.0.x` := `>=0.0.0 <0.1.0`\n* `^0.0` := `>=0.0.0 <0.1.0`\n\nA missing `minor` and `patch` values will desugar to zero, but also\nallow flexibility within those values, even if the major version is\nzero.\n\n* `^1.x` := `>=1.0.0 <2.0.0`\n* `^0.x` := `>=0.0.0 <1.0.0`\n\n### Range Grammar\n\nPutting all this together, here is a Backus-Naur grammar for ranges,\nfor the benefit of parser authors:\n\n```bnf\nrange-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n```\n\n## Functions\n\nAll methods and classes take a final `options` object argument.  All\noptions in this object are `false` by default.  The options supported\nare:\n\n- `loose`  Be more forgiving about not-quite-valid semver strings.\n  (Any resulting output will always be 100% strict compliant, of\n  course.)  For backwards compatibility reasons, if the `options`\n  argument is a boolean value instead of an object, it is interpreted\n  to be the `loose` param.\n- `includePrerelease`  Set to suppress the [default\n  behavior](https://github.com/npm/node-semver#prerelease-tags) of\n  excluding prerelease tagged versions from ranges unless they are\n  explicitly opted into.\n\nStrict-mode Comparators and Ranges will be strict about the SemVer\nstrings that they parse.\n\n* `valid(v)`: Return the parsed version, or null if it's not valid.\n* `inc(v, release)`: Return the version incremented by the release\n  type (`major`,   `premajor`, `minor`, `preminor`, `patch`,\n  `prepatch`, or `prerelease`), or null if it's not valid\n  * `premajor` in one call will bump the version up to the next major\n    version and down to a prerelease of that major version.\n    `preminor`, and `prepatch` work the same way.\n  * If called from a non-prerelease version, the `prerelease` will work the\n    same as `prepatch`. It increments the patch version, then makes a\n    prerelease. If the input version is already a prerelease it simply\n    increments it.\n* `prerelease(v)`: Returns an array of prerelease components, or null\n  if none exist. Example: `prerelease('1.2.3-alpha.1') -> ['alpha', 1]`\n* `major(v)`: Return the major version number.\n* `minor(v)`: Return the minor version number.\n* `patch(v)`: Return the patch version number.\n* `intersects(r1, r2, loose)`: Return true if the two supplied ranges\n  or comparators intersect.\n* `parse(v)`: Attempt to parse a string as a semantic version, returning either\n  a `SemVer` object or `null`.\n\n### Comparison\n\n* `gt(v1, v2)`: `v1 > v2`\n* `gte(v1, v2)`: `v1 >= v2`\n* `lt(v1, v2)`: `v1 < v2`\n* `lte(v1, v2)`: `v1 <= v2`\n* `eq(v1, v2)`: `v1 == v2` This is true if they're logically equivalent,\n  even if they're not the exact same string.  You already know how to\n  compare strings.\n* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.\n* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it'll call\n  the corresponding function above.  `\"===\"` and `\"!==\"` do simple\n  string comparison, but are included for completeness.  Throws if an\n  invalid comparison string is provided.\n* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `rcompare(v1, v2)`: The reverse of compare.  Sorts an array of versions\n  in descending order when passed to `Array.sort()`.\n* `compareBuild(v1, v2)`: The same as `compare` but considers `build` when two versions\n  are equal.  Sorts in ascending order if passed to `Array.sort()`.\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `diff(v1, v2)`: Returns difference between two versions by the release type\n  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),\n  or null if the versions are the same.\n\n### Comparators\n\n* `intersects(comparator)`: Return true if the comparators intersect\n\n### Ranges\n\n* `validRange(range)`: Return the valid range or null if it's not valid\n* `satisfies(version, range)`: Return true if the version satisfies the\n  range.\n* `maxSatisfying(versions, range)`: Return the highest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `minSatisfying(versions, range)`: Return the lowest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `minVersion(range)`: Return the lowest version that can possibly match\n  the given range.\n* `gtr(version, range)`: Return `true` if version is greater than all the\n  versions possible in the range.\n* `ltr(version, range)`: Return `true` if version is less than all the\n  versions possible in the range.\n* `outside(version, range, hilo)`: Return true if the version is outside\n  the bounds of the range in either the high or low direction.  The\n  `hilo` argument must be either the string `'>'` or `'<'`.  (This is\n  the function called by `gtr` and `ltr`.)\n* `intersects(range)`: Return true if any of the ranges comparators intersect\n\nNote that, since ranges may be non-contiguous, a version might not be\ngreater than a range, less than a range, *or* satisfy a range!  For\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\nuntil `2.0.0`, so the version `1.2.10` would not be greater than the\nrange (because `2.0.1` satisfies, which is higher), nor less than the\nrange (since `1.2.8` satisfies, which is lower), and it also does not\nsatisfy the range.\n\nIf you want to know if a version satisfies or does not satisfy a\nrange, use the `satisfies(version, range)` function.\n\n### Coercion\n\n* `coerce(version, options)`: Coerces a string to semver if possible\n\nThis aims to provide a very forgiving translation of a non-semver string to\nsemver. It looks for the first digit in a string, and consumes all\nremaining characters which satisfy at least a partial semver (e.g., `1`,\n`1.2`, `1.2.3`) up to the max permitted length (256 characters).  Longer\nversions are simply truncated (`4.6.3.9.2-alpha2` becomes `4.6.3`).  All\nsurrounding text is simply ignored (`v3.4 replaces v3.3.1` becomes\n`3.4.0`).  Only text which lacks digits will fail coercion (`version one`\nis not valid).  The maximum  length for any semver component considered for\ncoercion is 16 characters; longer components will be ignored\n(`10000000000000000.4.7.4` becomes `4.7.4`).  The maximum value for any\nsemver component is `Number.MAX_SAFE_INTEGER || (2**53 - 1)`; higher value\ncomponents are invalid (`9999999999999999.4.7.4` is likely invalid).\n\nIf the `options.rtl` flag is set, then `coerce` will return the right-most\ncoercible tuple that does not share an ending index with a longer coercible\ntuple.  For example, `1.2.3.4` will return `2.3.4` in rtl mode, not\n`4.0.0`.  `1.2.3/4` will return `4.0.0`, because the `4` is not a part of\nany other overlapping SemVer tuple.\n\n### Clean\n\n* `clean(version)`: Clean a string to be a valid semver if possible\n\nThis will return a cleaned and trimmed semver version. If the provided\nversion is not valid a null will be returned. This does not work for\nranges.\n\nex.\n* `s.clean(' = v 2.1.5foo')`: `null`\n* `s.clean(' = v 2.1.5foo', { loose: true })`: `'2.1.5-foo'`\n* `s.clean(' = v 2.1.5-foo')`: `null`\n* `s.clean(' = v 2.1.5-foo', { loose: true })`: `'2.1.5-foo'`\n* `s.clean('=v2.1.5')`: `'2.1.5'`\n* `s.clean('  =v2.1.5')`: `2.1.5`\n* `s.clean('      2.1.5   ')`: `'2.1.5'`\n* `s.clean('~1.0.0')`: `null`\n\n## Exported Modules\n\n<!--\nTODO: Make sure that all of these items are documented (classes aren't,\neg), and then pull the module name into the documentation for that specific\nthing.\n-->\n\nYou may pull in just the part of this semver utility that you need, if you\nare sensitive to packing and tree-shaking concerns.  The main\n`require('semver')` export uses getter functions to lazily load the parts\nof the API that are used.\n\nThe following modules are available:\n\n* `require('semver')`\n* `require('semver/classes')`\n* `require('semver/classes/comparator')`\n* `require('semver/classes/range')`\n* `require('semver/classes/semver')`\n* `require('semver/functions/clean')`\n* `require('semver/functions/cmp')`\n* `require('semver/functions/coerce')`\n* `require('semver/functions/compare')`\n* `require('semver/functions/compare-build')`\n* `require('semver/functions/compare-loose')`\n* `require('semver/functions/diff')`\n* `require('semver/functions/eq')`\n* `require('semver/functions/gt')`\n* `require('semver/functions/gte')`\n* `require('semver/functions/inc')`\n* `require('semver/functions/lt')`\n* `require('semver/functions/lte')`\n* `require('semver/functions/major')`\n* `require('semver/functions/minor')`\n* `require('semver/functions/neq')`\n* `require('semver/functions/parse')`\n* `require('semver/functions/patch')`\n* `require('semver/functions/prerelease')`\n* `require('semver/functions/rcompare')`\n* `require('semver/functions/rsort')`\n* `require('semver/functions/satisfies')`\n* `require('semver/functions/sort')`\n* `require('semver/functions/valid')`\n* `require('semver/ranges/gtr')`\n* `require('semver/ranges/intersects')`\n* `require('semver/ranges/ltr')`\n* `require('semver/ranges/max-satisfying')`\n* `require('semver/ranges/min-satisfying')`\n* `require('semver/ranges/min-version')`\n* `require('semver/ranges/outside')`\n* `require('semver/ranges/to-comparators')`\n* `require('semver/ranges/valid')`"}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 8852138}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 49407054}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 197137432}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 512624991}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1000376315}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1708027533}], "dependentsCount": 10128, "starsCount": 176}, "github": {"starsCount": 3140, "forksCount": 322, "subscribersCount": 89, "issues": {"count": 307, "openCount": 34, "distribution": {"3600": 33, "10800": 18, "32400": 29, "97200": 24, "291600": 17, "874800": 22, "2624400": 25, "7873200": 40, "23619600": 40, "70858800": 41, "212576400": 18}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 233}, {"username": "pjohnmeyer", "commitsCount": 9}, {"username": "othiym23", "commitsCount": 6}, {"username": "AsaAyers", "commitsCount": 5}, {"username": "rtfpessoa", "commitsCount": 5}, {"username": "agnoster", "commitsCount": 4}, {"username": "adamreeve", "commitsCount": 3}, {"username": "alanshaw", "commitsCount": 3}, {"username": "joeledwards", "commitsCount": 3}, {"username": "max-b", "commitsCount": 3}, {"username": "Hypercubed", "commitsCount": 2}, {"username": "ahmadnassri", "commitsCount": 2}, {"username": "bzoz", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 2}, {"username": "cvrebert", "commitsCount": 2}, {"username": "luk-", "commitsCount": 2}, {"username": "protyposis", "commitsCount": 2}, {"username": "Asthetic", "commitsCount": 1}, {"username": "C45tr0", "commitsCount": 1}, {"username": "Flarna", "commitsCount": 1}, {"username": "XhmikosR", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "arikon", "commitsCount": 1}, {"username": "asnowfix", "commitsCount": 1}, {"username": "bcoe", "commitsCount": 1}, {"username": "brodybits", "commitsCount": 1}, {"username": "bromanko", "commitsCount": 1}, {"username": "chellmuth", "commitsCount": 1}, {"username": "davidchambers", "commitsCount": 1}, {"username": "dodev", "commitsCount": 1}, {"username": "eddiemonge", "commitsCount": 1}, {"username": "edef1c", "commitsCount": 1}, {"username": "ekmartin", "commitsCount": 1}, {"username": "fjakobs", "commitsCount": 1}, {"username": "hoobdeebla", "commitsCount": 1}, {"username": "ixalon", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jiyinyiyong", "commitsCount": 1}, {"username": "kevinawoo", "commitsCount": 1}, {"username": "kuatsure", "commitsCount": 1}, {"username": "lm1", "commitsCount": 1}, {"username": "mal", "commitsCount": 1}, {"username": "megawac", "commitsCount": 1}, {"username": "motet-a", "commitsCount": 1}, {"username": "nexdrew", "commitsCount": 1}, {"username": "repeatingbeats", "commitsCount": 1}, {"username": "seriema", "commitsCount": 1}, {"username": "sethkinast", "commitsCount": 1}, {"username": "stabbylambda", "commitsCount": 1}, {"username": "stephenharris", "commitsCount": 1}, {"username": "steveklabnik", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "vyclone", "commitsCount": 1}, {"username": "wraithgar", "commitsCount": 1}, {"username": "zkat", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 2}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 23}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 25}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 58}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 21295, "testsSize": 95551, "hasChangelog": true}, "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.825, "health": 1, "branding": 0}, "popularity": {"communityInterest": 3783, "downloadsCount": 170874997, "downloadsAcceleration": 692459.738108828, "dependentsCount": 10128}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8614212328767124, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7887797654565701, "detail": {"quality": 0.8598291506088229, "popularity": 0.8500303082214035, "maintenance": 0.6666297497040916}}}
{"analyzedAt": "2020-02-14T15:17:35.533Z", "collected": {"metadata": {"name": "set-value", "scope": "unscoped", "version": "3.0.1", "description": "Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.", "keywords": ["bury", "deep-get-set", "deep-object", "deep-property", "deep-set", "deep-set-in", "deephas", "dot-prop", "dot2val", "es5-dot-prop", "get", "getsetdeep", "has", "hasown", "key", "keys", "lodash.set", "nested", "notation", "object", "object-path", "object-path-set", "object-set", "prop", "properties", "property", "props", "set", "set-deep", "set-deep-prop", "set-nested-prop", "setvalue", "value", "values"], "date": "2019-06-19T18:08:54.141Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}, {"name": "Vadim Demedes", "url": "https://vadimdemedes.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/set-value.git"}, "links": {"npm": "https://www.npmjs.com/package/set-value", "homepage": "https://github.com/jonschlinkert/set-value", "repository": "https://github.com/jonschlinkert/set-value", "bugs": "https://github.com/jonschlinkert/set-value/issues"}, "license": "MIT", "dependencies": {"is-plain-object": "^2.0.4"}, "devDependencies": {"benchmarked": "^2.0.0", "deep-object": "^1.0.0", "deep-property": "^1.1.0", "deep-set": "^1.0.1", "deephas": "^1.0.5", "dot-prop": "^4.2.0", "dot2val": "^1.2.2", "es5-dot-prop": "^4.1.1", "gulp-format-md": "^2.0.0", "lodash.set": "^4.3.2", "minimist": "^1.2.0", "mocha": "^3.5.3", "object-path-set": "^1.0.0", "object-set": "^1.0.1", "split-string": "^5.0.4", "write": "^1.0.3"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2599753}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 13591160}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 56805741}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 151241519}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 318156794}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 688541428}], "dependentsCount": 191, "starsCount": 6}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 161, "forksCount": 16, "subscribersCount": 6, "issues": {"count": 19, "openCount": 3, "distribution": {"3600": 4, "10800": 0, "32400": 1, "97200": 2, "291600": 1, "874800": 1, "2624400": 0, "7873200": 3, "23619600": 5, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 69}, {"username": "mbelsky", "commitsCount": 2}, {"username": "vadimdemedes", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 6159}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"is-plain-object": {"required": "^2.0.4", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.85, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 193, "downloadsCount": 50413839.666666664, "downloadsAcceleration": -27941.82450532727, "dependentsCount": 191}, "maintenance": {"releasesFrequency": 0.19726027397260276, "commitsFrequency": 0.03452054794520548, "openIssues": 1, "issuesDistribution": 0.26642709994683683}}, "score": {"final": 0.613777045930815, "detail": {"quality": 0.7989562506472714, "popularity": 0.44384116574315846, "maintenance": 0.6249878935043659}}}
{"analyzedAt": "2020-02-23T10:35:23.482Z", "collected": {"metadata": {"name": "shebang-command", "scope": "unscoped", "version": "2.0.0", "description": "Get the command from a shebang", "keywords": ["cmd", "command", "parse", "shebang"], "date": "2019-09-06T14:53:25.901Z", "author": {"name": "Kevin M\u00e5rtensson", "email": "kevinmartensson@gmail.com", "url": "github.com/kevva", "username": "kevva"}, "publisher": {"username": "kevva", "email": "kevinmartensson@gmail.com"}, "maintainers": [{"username": "kevva", "email": "kevinmartensson@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/kevva/shebang-command.git"}, "links": {"npm": "https://www.npmjs.com/package/shebang-command", "homepage": "https://github.com/kevva/shebang-command#readme", "repository": "https://github.com/kevva/shebang-command", "bugs": "https://github.com/kevva/shebang-command/issues"}, "license": "MIT", "dependencies": {"shebang-regex": "^3.0.0"}, "devDependencies": {"ava": "^2.3.0", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# shebang-command [![Build Status](https://travis-ci.org/kevva/shebang-command.svg?branch=master)](https://travis-ci.org/kevva/shebang-command)\n\n> Get the command from a shebang\n\n\n## Install\n\n```\n$ npm install shebang-command\n```\n\n\n## Usage\n\n```js\nconst shebangCommand = require('shebang-command');\n\nshebangCommand('#!/usr/bin/env node');\n//=> 'node'\n\nshebangCommand('#!/bin/bash');\n//=> 'bash'\n```\n\n\n## API\n\n### shebangCommand(string)\n\n#### string\n\nType: `string`\n\nString containing a shebang."}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 780286}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 15490628}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 62896398}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 160545339}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 293752349}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 505444481}], "dependentsCount": 68, "starsCount": 1}, "github": {"starsCount": 16, "forksCount": 3, "subscribersCount": 2, "issues": {"count": 4, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 1, "2624400": 1, "7873200": 1, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kevva", "commitsCount": 9}, {"username": "architectcodes", "commitsCount": 2}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 495, "testsSize": 443}, "badges": [{"urls": {"original": "https://travis-ci.org/kevva/shebang-command.svg?branch=master", "service": "https://api.travis-ci.org/kevva/shebang-command.svg?branch=master", "shields": "https://img.shields.io/travis/kevva/shebang-command/master.svg", "content": "https://img.shields.io/travis/kevva/shebang-command/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 24, "downloadsCount": 53515113, "downloadsAcceleration": 239736.3236111112, "dependentsCount": 68}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8188663584645559, "detail": {"quality": 0.9547045235275585, "popularity": 0.5214103413626888, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-09T06:37:36.052Z", "collected": {"metadata": {"name": "shebang-regex", "scope": "unscoped", "version": "3.0.0", "description": "Regular expression for matching a shebang line", "keywords": ["regex", "regexp", "shebang", "match", "test", "line"], "date": "2019-04-27T10:46:19.256Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/shebang-regex.git"}, "links": {"npm": "https://www.npmjs.com/package/shebang-regex", "homepage": "https://github.com/sindresorhus/shebang-regex#readme", "repository": "https://github.com/sindresorhus/shebang-regex", "bugs": "https://github.com/sindresorhus/shebang-regex/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# shebang-regex [![Build Status](https://travis-ci.org/sindresorhus/shebang-regex.svg?branch=master)](https://travis-ci.org/sindresorhus/shebang-regex)\n\n> Regular expression for matching a [shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)) line\n\n\n## Install\n\n```\n$ npm install shebang-regex\n```\n\n\n## Usage\n\n```js\nconst shebangRegex = require('shebang-regex');\n\nconst string = '#!/usr/bin/env node\\nconsole.log(\"unicorns\");';\n\nshebangRegex.test(string);\n//=> true\n\nshebangRegex.exec(string)[0];\n//=> '#!/usr/bin/env node'\n\nshebangRegex.exec(string)[1];\n//=> '/usr/bin/env node'\n```\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 752563}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 14863733}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 58478724}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 153806073}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 281254546}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 497190518}], "dependentsCount": 78, "starsCount": 1}, "github": {"starsCount": 29, "forksCount": 2, "subscribersCount": 7, "issues": {"count": 6, "openCount": 0, "distribution": {"3600": 3, "10800": 0, "32400": 1, "97200": 1, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 9}, {"username": "BendingBender", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 1}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 649, "testsSize": 229}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/shebang-regex.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/shebang-regex.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/shebang-regex/master.svg", "content": "https://img.shields.io/travis/sindresorhus/shebang-regex/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.5934999999999999, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 42, "downloadsCount": 51268691, "downloadsAcceleration": 196871.11251902592, "dependentsCount": 78}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8106315763931633, "detail": {"quality": 0.9179467689680422, "popularity": 0.529389039352581, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-10T13:04:54.173Z", "collected": {"metadata": {"name": "signal-exit", "scope": "unscoped", "version": "3.0.2", "description": "when you want to fire an event no matter how a process exits.", "keywords": ["signal", "exit"], "date": "2016-12-04T03:21:02.792Z", "author": {"name": "Ben Coe", "email": "ben@npmjs.com", "username": "bcoe"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}, {"username": "bcoe", "email": "ben@npmjs.com"}], "repository": {"type": "git", "url": "git+https://github.com/tapjs/signal-exit.git"}, "links": {"npm": "https://www.npmjs.com/package/signal-exit", "homepage": "https://github.com/tapjs/signal-exit", "repository": "https://github.com/tapjs/signal-exit", "bugs": "https://github.com/tapjs/signal-exit/issues"}, "license": "ISC", "devDependencies": {"chai": "^3.5.0", "coveralls": "^2.11.10", "nyc": "^8.1.0", "standard": "^7.1.2", "standard-version": "^2.3.0", "tap": "^8.0.1"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# signal-exit\n\n[![Build Status](https://travis-ci.org/tapjs/signal-exit.png)](https://travis-ci.org/tapjs/signal-exit)\n[![Coverage](https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master)](https://coveralls.io/r/tapjs/signal-exit?branch=master)\n[![NPM version](https://img.shields.io/npm/v/signal-exit.svg)](https://www.npmjs.com/package/signal-exit)\n[![Windows Tests](https://img.shields.io/appveyor/ci/bcoe/signal-exit/master.svg?label=Windows%20Tests)](https://ci.appveyor.com/project/bcoe/signal-exit)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nWhen you want to fire an event no matter how a process exits:\n\n* reaching the end of execution.\n* explicitly having `process.exit(code)` called.\n* having `process.kill(pid, sig)` called.\n* receiving a fatal signal from outside the process\n\nUse `signal-exit`.\n\n```js\nvar onExit = require('signal-exit')\n\nonExit(function (code, signal) {\n  console.log('process exited!')\n})\n```\n\n## API\n\n`var remove = onExit(function (code, signal) {}, options)`\n\nThe return value of the function is a function that will remove the\nhandler.\n\nNote that the function *only* fires for signals if the signal would\ncause the proces to exit.  That is, there are no other listeners, and\nit is a fatal signal.\n\n## Options\n\n* `alwaysLast`: Run this handler after any other signal or exit\n  handlers.  This causes `process.emit` to be monkeypatched."}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 675251}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 12734445}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 50522063}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 141361243}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 278323125}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 524526825}], "dependentsCount": 248, "starsCount": 8}, "github": {"starsCount": 116, "forksCount": 16, "subscribersCount": 10, "issues": {"count": 55, "openCount": 8, "distribution": {"3600": 10, "10800": 2, "32400": 5, "97200": 5, "291600": 9, "874800": 2, "2624400": 8, "7873200": 3, "23619600": 5, "70858800": 2, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 14}, {"username": "greenkeeperio-bot", "commitsCount": 6}, {"username": "bcoe", "commitsCount": 2}, {"username": "addaleax", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "parshap", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1497, "testsSize": 38208, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/tapjs/signal-exit.png", "service": "https://api.travis-ci.org/tapjs/signal-exit.svg", "shields": "https://img.shields.io/travis/tapjs/signal-exit.svg", "content": "https://img.shields.io/travis/tapjs/signal-exit.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master", "service": "https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/tapjs/signal-exit/master.svg", "content": "https://img.shields.io/coveralls/tapjs/signal-exit/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/signal-exit.svg", "shields": "https://img.shields.io/npm/v/signal-exit.svg", "content": "https://img.shields.io/npm/v/signal-exit.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/bcoe/signal-exit/master.svg?label=Windows%20Tests", "service": "https://ci.appveyor.com/api/projects/status/bcoe/signal-exit/branch/master", "shields": "https://img.shields.io/appveyor/ci/bcoe/signal-exit/master.svg", "content": "https://img.shields.io/appveyor/ci/bcoe/signal-exit/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["standard"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.994, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 157, "downloadsCount": 47120414.333333336, "downloadsAcceleration": 89047.19023972604, "dependentsCount": 248}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8493140065023392, "detail": {"quality": 0.9987070559246098, "popularity": 0.5706871651303115, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-14T12:28:46.711Z", "collected": {"metadata": {"name": "slash", "scope": "unscoped", "version": "3.0.0", "description": "Convert Windows backslash paths to slash paths", "keywords": ["path", "seperator", "slash", "backslash", "windows", "convert"], "date": "2019-04-28T04:26:00.409Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/slash.git"}, "links": {"npm": "https://www.npmjs.com/package/slash", "homepage": "https://github.com/sindresorhus/slash#readme", "repository": "https://github.com/sindresorhus/slash", "bugs": "https://github.com/sindresorhus/slash/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 2}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# slash [![Build Status](https://travis-ci.org/sindresorhus/slash.svg?branch=master)](https://travis-ci.org/sindresorhus/slash)\n\n> Convert Windows backslash paths to slash paths: `foo\\\\bar` \u2794 `foo/bar`\n\n[Forward-slash paths can be used in Windows](http://superuser.com/a/176395/6877) as long as they're not extended-length paths and don't contain any non-ascii characters.\n\nThis was created since the `path` methods in Node.js outputs `\\\\` paths on Windows.\n\n\n## Install\n\n```\n$ npm install slash\n```\n\n\n## Usage\n\n```js\nconst path = require('path');\nconst slash = require('slash');\n\nconst string = path.join('foo', 'bar');\n// Unix    => foo/bar\n// Windows => foo\\\\bar\n\nslash(string);\n// Unix    => foo/bar\n// Windows => foo/bar\n```\n\n\n## API\n\n### slash(path)\n\nType: `string`\n\nAccepts a Windows backslash path and returns a path with forward slashes.\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 3566599}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 18749605}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 78031823}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 198740491}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 381353750}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 640756597}], "dependentsCount": 823, "starsCount": 13}, "github": {"starsCount": 144, "forksCount": 13, "subscribersCount": 9, "issues": {"count": 10, "openCount": 0, "distribution": {"3600": 6, "10800": 0, "32400": 1, "97200": 0, "291600": 2, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 19}, {"username": "BendingBender", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "paulmillr", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 912, "testsSize": 448}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/slash.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/slash.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/slash/master.svg", "content": "https://img.shields.io/travis/sindresorhus/slash/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 183, "downloadsCount": 66246830.333333336, "downloadsAcceleration": 302174.41476407915, "dependentsCount": 823}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8601140005647381, "detail": {"quality": 0.9547045235275585, "popularity": 0.6392607473632093, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-16T17:06:26.995Z", "collected": {"metadata": {"name": "slice-ansi", "scope": "unscoped", "version": "4.0.0", "description": "Slice a string with ANSI escape codes", "keywords": ["slice", "string", "ansi", "styles", "color", "colour", "colors", "terminal", "console", "cli", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2020-02-16T17:06:07.255Z", "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/slice-ansi.git"}, "links": {"npm": "https://www.npmjs.com/package/slice-ansi", "homepage": "https://github.com/chalk/slice-ansi#readme", "repository": "https://github.com/chalk/slice-ansi", "bugs": "https://github.com/chalk/slice-ansi/issues"}, "license": "MIT", "dependencies": {"ansi-styles": "^4.0.0", "astral-regex": "^2.0.0", "is-fullwidth-code-point": "^3.0.0"}, "devDependencies": {"ava": "^2.1.0", "chalk": "^3.0.0", "random-item": "^3.0.0", "strip-ansi": "^6.0.0", "xo": "^0.26.1"}, "releases": [{"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 1}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 1}, {"from": "2018-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# slice-ansi [![Build Status](https://travis-ci.org/chalk/slice-ansi.svg?branch=master)](https://travis-ci.org/chalk/slice-ansi) [![XO: Linted](https://img.shields.io/badge/xo-linted-blue.svg)](https://github.com/xojs/xo)\n\n> Slice a string with [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles)\n\n## Install\n\n```\n$ npm install slice-ansi\n```\n\n## Usage\n\n```js\nconst chalk = require('chalk');\nconst sliceAnsi = require('slice-ansi');\n\nconst string = 'The quick brown ' + chalk.red('fox jumped over ') +\n\t'the lazy ' + chalk.green('dog and then ran away with the unicorn.');\n\nconsole.log(sliceAnsi(string, 20, 30));\n```\n\n## API\n\n### sliceAnsi(string, beginSlice, endSlice?)\n\n#### string\n\nType: `string`\n\nString with ANSI escape codes. Like one styled by [`chalk`](https://github.com/chalk/chalk).\n\n#### beginSlice\n\nType: `number`\n\nZero-based index at which to begin the slice.\n\n#### endSlice\n\nType: `number`\n\nZero-based index at which to end the slice.\n\n## Related\n\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [cli-truncate](https://github.com/sindresorhus/cli-truncate) - Truncate a string to a specific width in the terminal\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-slice_ansi?utm_source=npm-slice-ansi&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 543583}, {"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 12331293}, {"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 48876641}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 131731009}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 256820591}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 468687341}], "dependentsCount": 58, "starsCount": 1}, "github": {"starsCount": 35, "forksCount": 12, "subscribersCount": 8, "issues": {"count": 30, "openCount": 0, "distribution": {"3600": 4, "10800": 2, "32400": 1, "97200": 4, "291600": 1, "874800": 2, "2624400": 1, "7873200": 1, "23619600": 9, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 25}, {"username": "kevva", "commitsCount": 8}, {"username": "TiagoDanin", "commitsCount": 1}, {"username": "emgee3", "commitsCount": 1}, {"username": "kjirou", "commitsCount": 1}, {"username": "piranna", "commitsCount": 1}, {"username": "schani", "commitsCount": 1}, {"username": "slammayjammay", "commitsCount": 1}, {"username": "vadimdemedes", "commitsCount": 1}], "commits": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2020-01-17T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 0}, {"from": "2019-08-20T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 4}, {"from": "2019-02-16T00:00:00.000Z", "to": "2020-02-16T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 1835, "testsSize": 4274}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/slice-ansi.svg?branch=master", "service": "https://api.travis-ci.org/chalk/slice-ansi.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/slice-ansi/master.svg", "content": "https://img.shields.io/travis/chalk/slice-ansi/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 65, "downloadsCount": 43910336.333333336, "downloadsAcceleration": 121963.1535197869, "dependentsCount": 58}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8107209702275183, "detail": {"quality": 0.9301896585895763, "popularity": 0.5191505449179947, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-09T00:41:15.561Z", "collected": {"metadata": {"name": "snapdragon", "scope": "unscoped", "version": "0.12.0", "description": "Easy-to-use plugin system for creating powerful, fast and versatile parsers and compilers, with built-in source-map support.", "keywords": ["lexer", "snapdragon"], "date": "2018-04-18T17:21:12.939Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Daniel Tschinder", "url": "https://github.com/danez"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/here-be/snapdragon.git"}, "links": {"npm": "https://www.npmjs.com/package/snapdragon", "homepage": "https://github.com/here-be/snapdragon", "repository": "https://github.com/here-be/snapdragon", "bugs": "https://github.com/here-be/snapdragon/issues"}, "license": "MIT", "dependencies": {"component-emitter": "^1.2.1", "define-property": "^2.0.2", "extend-shallow": "^3.0.2", "get-value": "^2.0.6", "isobject": "^3.0.0", "map-cache": "^0.2.2", "snapdragon-node": "^1.0.6", "snapdragon-util": "^4.0.0", "source-map": "^0.5.6", "source-map-resolve": "^0.5.0", "use": "^3.1.0"}, "devDependencies": {"mocha": "^3.2.0", "snapdragon-capture-set": "^1.0.1", "snapdragon-capture": "^0.2.0", "gulp": "^3.9.1", "gulp-istanbul": "^1.1.1", "gulp-eslint": "^3.0.1", "gulp-mocha": "^3.0.1", "gulp-unused": "^0.2.1", "gulp-format-md": "^0.1.11", "verb-generate-readme": "^0.6.0"}, "releases": [{"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2018-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# snapdragon [![NPM version](https://img.shields.io/npm/v/snapdragon.svg?style=flat)](https://www.npmjs.com/package/snapdragon) [![NPM monthly downloads](https://img.shields.io/npm/dm/snapdragon.svg?style=flat)](https://npmjs.org/package/snapdragon) [![NPM total downloads](https://img.shields.io/npm/dt/snapdragon.svg?style=flat)](https://npmjs.org/package/snapdragon) [![Linux Build Status](https://img.shields.io/travis/here-be/snapdragon.svg?style=flat&label=Travis)](https://travis-ci.org/here-be/snapdragon)\n\n> Easy-to-use plugin system for creating powerful, fast and versatile parsers and compilers, with built-in source-map support.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [Quickstart example](#quickstart-example)\n- [Parsing](#parsing)\n- [Compiling](#compiling)\n- [All together](#all-together)\n- [API](#api)\n  * [Parse](#parse)\n  * [Compile](#compile)\n- [Snapdragon in the wild](#snapdragon-in-the-wild)\n- [History](#history)\n  * [v0.9.0](#v090)\n  * [v0.5.0](#v050)\n- [About](#about)\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save snapdragon\n```\n\nCreated by [jonschlinkert](https://github.com/jonschlinkert) and [doowb](https://github.com/doowb).\n\n**Features**\n\n* Bootstrap your own parser, get sourcemap support for free\n* All parsing and compiling is handled by simple, reusable middleware functions\n* Inspired by the parsers in [pug](https://pugjs.org/) and [css](https://github.com/reworkcss/css).\n\n## Quickstart example\n\nAll of the examples in this document assume the following two lines of setup code exist first:\n\n```js\nvar Snapdragon = require('snapdragon');\nvar snapdragon = new Snapdragon();\n```\n\n**Parse a string**\n\n```js\nvar ast = snapdragon.parser\n  // parser handlers (essentially middleware)\n  // used for parsing substrings to create tokens\n  .set('foo', function () {})\n  .set('bar', function () {})\n  .parse('some string', options);\n```\n\n**Compile an AST returned from `.parse()`**\n\n```js\nvar result = snapdragon.compiler\n  // compiler handlers (essentially middleware), \n  // called on a node when the `node.type` matches\n  // the name of the handler\n  .set('foo', function () {})\n  .set('bar', function () {})\n  // pass the `ast` from the parse method\n  .compile(ast)\n\n// the compiled string\nconsole.log(result.output);\n```\n\nSee the [examples](./examples/).\n\n## Parsing\n\n**Parser handlers**\n\nParser handlers are middleware functions responsible for matching substrings to create tokens:\n\n**Example handler**\n\n```js\nvar ast = snapdragon.parser\n  .set('dot', function() {\n    var pos = this.position();\n    var m = this.match(/^\\./);\n    if (!m) return;\n    return pos({\n      // the \"type\" will be used by the compiler later on,\n      // we'll go over this in the compiler docs\n      type: 'dot',\n      // \"val\" is the string captured by \".match\",\n      // in this case that would be '.'\n      val: m[0]\n    });\n  })\n  .parse('.'[, options])\n```\n\n_As a side node, it's not scrictly required to set the `type` on the token, since the parser will add it to the token if it's undefined, based on the name of the handler. But it's good practice since tokens aren't always returned._\n\n**Example token**\n\nAnd the resulting tokens look something like this:\n\n```js\n{ \n  type: 'dot',\n  val: '.' \n}\n```\n\n**Position**\n\nNext, `pos()` is called on the token as it's returned, which patches the token with the `position` of the string that was captured:\n\n```js\n{ type: 'dot',\n  val: '.',\n  position:\n   { start: { lineno: 1, column: 1 },\n     end: { lineno: 1, column: 2 } }}\n```\n\n**Life as an AST node**\n\nWhen the token is returned, the parser pushes it onto the `nodes` array of the \"previous\" node (since we're in a tree, the \"previous\" node might be literally the last node that was created, or it might be the \"parent\" node inside a nested context, like when parsing brackets or something with an open or close), at which point the token begins its life as an AST node.\n\n**Wrapping up**\n\nIn the parser calls all handlers and cannot find a match for a substring, an error is thrown.\n\nAssuming the parser finished parsing the entire string, an AST is returned.\n\n## Compiling\n\nThe compiler's job is to take the AST created by the [parser](#parsing) and convert it to a new string. It does this by iterating over each node on the AST and calling a function on the node based on its `type`.\n\nThis function is called a \"handler\".\n\n**Compiler handlers**\n\nHandlers are _named_ middleware functions that are called on a node when `node.type` matches the name of a registered handler.\n\n```js\nvar result = snapdragon.compiler\n  .set('dot', function (node) {\n    console.log(node.val)\n    //=> '.'\n    return this.emit(node.val);\n  })\n```\n\nIf `node.type` does not match a registered handler, an error is thrown.\n\n**Source maps**\n\nIf you want source map support, make sure to emit the entire node as the second argument as well (this allows the compiler to get the `node.position`).\n\n```js\nvar res = snapdragon.compiler\n  .set('dot', function (node) {\n    return this.emit(node.val, node);\n  })\n```\n\n## All together\n\nThis is a very basic example, but it shows how to parse a dot, then compile it as an escaped dot.\n\n```js\nvar Snapdragon = require('..');\nvar snapdragon = new Snapdragon();\n\nvar ast = snapdragon.parser\n  .set('dot', function () {\n    var pos = this.position();\n    var m = this.match(/^\\./);\n    if (!m) return;\n    return pos({\n      type: 'dot',\n      val: m[0]\n    })\n  })\n  .parse('.')\n\nvar result = snapdragon.compiler\n  .set('dot', function (node) {\n    return this.emit('\\\\' + node.val);\n  })\n  .compile(ast)\n\nconsole.log(result.output);\n//=> '\\.'\n```\n\n## API\n\n### [Parser](lib/parser.js#L27)\n\nCreate a new `Parser` with the given `input` and `options`.\n\n**Params**\n\n* `input` **{String}**\n* `options` **{Object}**\n\n**Example**\n\n```js\nvar Snapdragon = require('snapdragon');\nvar Parser = Snapdragon.Parser;\nvar parser = new Parser();\n```\n\n### [.error](lib/parser.js#L97)\n\nThrow a formatted error message with details including the cursor position.\n\n**Params**\n\n* `msg` **{String}**: Message to use in the Error.\n* `node` **{Object}**\n* `returns` **{undefined}**\n\n**Example**\n\n```js\nparser.set('foo', function(node) {\n  if (node.val !== 'foo') {\n    throw this.error('expected node.val to be \"foo\"', node);\n  }\n});\n```\n\n### [.define](lib/parser.js#L115)\n\nDefine a non-enumberable property on the `Parser` instance. This is useful in plugins, for exposing methods inside handlers.\n\n**Params**\n\n* `key` **{String}**: propery name\n* `val` **{any}**: property value\n* `returns` **{Object}**: Returns the Parser instance for chaining.\n\n**Example**\n\n```js\nparser.define('foo', 'bar');\n```\n\n### [.node](lib/parser.js#L133)\n\nCreate a new [Node](#node) with the given `val` and `type`.\n\n**Params**\n\n* `val` **{Object}**\n* `type` **{String}**\n* `returns` **{Object}**: returns the [Node](#node) instance.\n\n**Example**\n\n```js\nparser.node('/', 'slash');\n```\n\n### [.position](lib/parser.js#L155)\n\nMark position and patch `node.position`.\n\n* `returns` **{Function}**: Returns a function that takes a `node`\n\n**Example**\n\n```js\nparser.set('foo', function(node) {\n  var pos = this.position();\n  var match = this.match(/foo/);\n  if (match) {\n    // call `pos` with the node\n    return pos(this.node(match[0]));\n  }\n});\n```\n\n### [.set](lib/parser.js#L187)\n\nAdd parser `type` with the given visitor `fn`.\n\n**Params**\n\n* `type` **{String}**\n* `fn` **{Function}**\n\n**Example**\n\n```js\n parser.set('all', function() {\n   var match = this.match(/^./);\n   if (match) {\n     return this.node(match[0]);\n   }\n });\n```\n\n### [.get](lib/parser.js#L206)\n\nGet parser `type`.\n\n**Params**\n\n* `type` **{String}**\n\n**Example**\n\n```js\nvar fn = parser.get('slash');\n```\n\n### [.push](lib/parser.js#L229)\n\nPush a node onto the stack for the given `type`.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Object}** `token`\n\n**Example**\n\n```js\nparser.set('all', function() {\n  var match = this.match(/^./);\n  if (match) {\n    var node = this.node(match[0]);\n    this.push(node);\n    return node;\n  }\n});\n```\n\n### [.pop](lib/parser.js#L261)\n\nPop a token off of the stack of the given `type`.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Object}**: Returns a token\n\n**Example**\n\n```js\nparser.set('close', function() {\n  var match = this.match(/^\\}/);\n  if (match) {\n    var node = this.node({\n      type: 'close',\n      val: match[0]\n    });\n\n    this.pop(node.type);\n    return node;\n  }\n});\n```\n\n### [.isInside](lib/parser.js#L294)\n\nReturn true if inside a \"set\" of the given `type`. Sets are created manually by adding a type to `parser.sets`. A node is \"inside\" a set when an `*.open` node for the given `type` was previously pushed onto the set. The type is removed from the set by popping it off when the `*.close` node for the given type is reached.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nparser.set('close', function() {\n  var pos = this.position();\n  var m = this.match(/^\\}/);\n  if (!m) return;\n  if (!this.isInside('bracket')) {\n    throw new Error('missing opening bracket');\n  }\n});\n```\n\n### [.isType](lib/parser.js#L324)\n\nReturn true if `node` is the given `type`.\n\n**Params**\n\n* `node` **{Object}**\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nparser.isType(node, 'brace');\n```\n\n### [.prev](lib/parser.js#L340)\n\nGet the previous AST node from the `parser.stack` (when inside a nested context) or `parser.nodes`.\n\n* `returns` **{Object}**\n\n**Example**\n\n```js\nvar prev = this.prev();\n```\n\n### [.prev](lib/parser.js#L394)\n\nMatch `regex`, return captures, and update the cursor position by `match[0]` length.\n\n**Params**\n\n* `regex` **{RegExp}**\n* `returns` **{Object}**\n\n**Example**\n\n```js\n// make sure to use the starting regex boundary: \"^\"\nvar match = this.match(/^\\./);\n```\n\n**Params**\n\n* `input` **{String}**\n* `returns` **{Object}**: Returns an AST with `ast.nodes`\n\n**Example**\n\n```js\nvar ast = parser.parse('foo/bar');\n```\n\n### [Compiler](lib/compiler.js#L24)\n\nCreate a new `Compiler` with the given `options`.\n\n**Params**\n\n* `options` **{Object}**\n* `state` **{Object}**: Optionally pass a \"state\" object to use inside visitor functions.\n\n**Example**\n\n```js\nvar Snapdragon = require('snapdragon');\nvar Compiler = Snapdragon.Compiler;\nvar compiler = new Compiler();\n```\n\n### [.error](lib/compiler.js#L67)\n\nThrow a formatted error message with details including the cursor position.\n\n**Params**\n\n* `msg` **{String}**: Message to use in the Error.\n* `node` **{Object}**\n* `returns` **{undefined}**\n\n**Example**\n\n```js\ncompiler.set('foo', function(node) {\n  if (node.val !== 'foo') {\n    throw this.error('expected node.val to be \"foo\"', node);\n  }\n});\n```\n\n### [.emit](lib/compiler.js#L86)\n\nConcat the given string to `compiler.output`.\n\n**Params**\n\n* `string` **{String}**\n* `node` **{Object}**: Optionally pass the node to use for position if source maps are enabled.\n* `returns` **{String}**: returns the string\n\n**Example**\n\n```js\ncompiler.set('foo', function(node) {\n  this.emit(node.val, node);\n});\n```\n\n### [.noop](lib/compiler.js#L104)\n\nEmit an empty string to effectively \"skip\" the string for the given `node`, but still emit the position and node type.\n\n**Params**\n\n* **{Object}**: node\n\n**Example**\n\n```js\n// example: do nothing for beginning-of-string\nsnapdragon.compiler.set('bos', compiler.noop);\n```\n\n### [.define](lib/compiler.js#L124)\n\nDefine a non-enumberable property on the `Compiler` instance. This is useful in plugins, for exposing methods inside handlers.\n\n**Params**\n\n* `key` **{String}**: propery name\n* `val` **{any}**: property value\n* `returns` **{Object}**: Returns the Compiler instance for chaining.\n\n**Example**\n\n```js\ncompiler.define('customMethod', function() {\n  // do stuff\n});\n```\n\n### [.set](lib/compiler.js#L152)\n\nAdd a compiler `fn` for the given `type`. Compilers are called when the `.compile` method encounters a node of the given type to generate the output string.\n\n**Params**\n\n* `type` **{String}**\n* `fn` **{Function}**\n\n**Example**\n\n```js\ncompiler\n  .set('comma', function(node) {\n    this.emit(',');\n  })\n  .set('dot', function(node) {\n    this.emit('.');\n  })\n  .set('slash', function(node) {\n    this.emit('/');\n  });\n```\n\n### [.get](lib/compiler.js#L168)\n\nGet the compiler of the given `type`.\n\n**Params**\n\n* `type` **{String}**\n\n**Example**\n\n```js\nvar fn = compiler.get('slash');\n```\n\n### [.visit](lib/compiler.js#L188)\n\nVisit `node` using the registered compiler function associated with the `node.type`.\n\n**Params**\n\n* `node` **{Object}**\n* `returns` **{Object}**: returns the node\n\n**Example**\n\n```js\ncompiler\n  .set('i', function(node) {\n    this.visit(node);\n  })\n```\n\n### [.mapVisit](lib/compiler.js#L226)\n\nIterate over `node.nodes`, calling [visit](#visit) on each node.\n\n**Params**\n\n* `node` **{Object}**\n* `returns` **{Object}**: returns the node\n\n**Example**\n\n```js\ncompiler\n  .set('i', function(node) {\n    utils.mapVisit(node);\n  })\n```\n\n### [.compile](lib/compiler.js#L250)\n\nCompile the given `AST` and return a string. Iterates over `ast.nodes` with [mapVisit](#mapVisit).\n\n**Params**\n\n* `ast` **{Object}**\n* `options` **{Object}**: Compiler options\n* `returns` **{Object}**: returns the node\n\n**Example**\n\n```js\nvar ast = parser.parse('foo');\nvar str = compiler.compile(ast);\n```\n\n## Snapdragon in the wild\n\nA few of the libraries that use snapdragon:\n\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support\u2026 [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [breakdance](https://www.npmjs.com/package/breakdance): Breakdance is a node.js library for converting HTML to markdown. Highly pluggable, flexible and easy\u2026 [more](http://breakdance.io) | [homepage](http://breakdance.io \"Breakdance is a node.js library for converting HTML to markdown. Highly pluggable, flexible and easy to use. It's time for your markup to get down.\")\n* [expand-brackets](https://www.npmjs.com/package/expand-brackets): Expand POSIX bracket expressions (character classes) in glob patterns. | [homepage](https://github.com/jonschlinkert/expand-brackets \"Expand POSIX bracket expressions (character classes) in glob patterns.\")\n* [extglob](https://www.npmjs.com/package/extglob): Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob\u2026 [more](https://github.com/micromatch/extglob) | [homepage](https://github.com/micromatch/extglob \"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n* [nanomatch](https://www.npmjs.com/package/nanomatch): Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash\u2026 [more](https://github.com/micromatch/nanomatch) | [homepage](https://github.com/micromatch/nanomatch \"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\")\n\n## History\n\n### v0.9.0\n\n**Breaking changes!**\n\nIn an attempt to make snapdragon lighter, more versatile, and more pluggable, some major changes were made in this release.\n\n* `parser.capture` was externalized to [snapdragon-capture](https://github.com/jonschlinkert/snapdragon-capture)\n* `parser.capturePair` was externalized to [snapdragon-capture-set](https://github.com/jonschlinkert/snapdragon-capture-set)\n* Nodes are now an instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n\n### v0.5.0\n\n**Breaking changes!**\n\nSubstantial breaking changes were made in v0.5.0! Most of these changes are part of a larger refactor that will be finished in 0.6.0, including the introduction of a `Lexer` class.\n\n* Renderer was renamed to `Compiler`\n* the `.render` method was renamed to `.compile`\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nA few of the libraries that use snapdragon:\n\n* [snapdragon-capture-set](https://www.npmjs.com/package/snapdragon-capture-set): Plugin that adds a `.captureSet()` method to snapdragon, for matching and capturing substrings that have\u2026 [more](https://github.com/jonschlinkert/snapdragon-capture-set) | [homepage](https://github.com/jonschlinkert/snapdragon-capture-set \"Plugin that adds a `.captureSet()` method to snapdragon, for matching and capturing substrings that have an `open` and `close`, like braces, brackets, etc\")\n* [snapdragon-capture](https://www.npmjs.com/package/snapdragon-capture): Snapdragon plugin that adds a capture method to the parser instance. | [homepage](https://github.com/jonschlinkert/snapdragon-capture \"Snapdragon plugin that adds a capture method to the parser instance.\")\n* [snapdragon-node](https://www.npmjs.com/package/snapdragon-node): Snapdragon utility for creating a new AST node in custom code, such as plugins. | [homepage](https://github.com/jonschlinkert/snapdragon-node \"Snapdragon utility for creating a new AST node in custom code, such as plugins.\")\n* [snapdragon-util](https://www.npmjs.com/package/snapdragon-util): Utilities for the snapdragon parser/compiler. | [homepage](https://github.com/here-be/snapdragon-util \"Utilities for the snapdragon parser/compiler.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 156 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 3 | [doowb](https://github.com/doowb) |\n| 2 | [danez](https://github.com/danez) |\n| 1 | [EdwardBetts](https://github.com/EdwardBetts) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on March 20, 2018._"}, "npm": {"downloads": [{"from": "2020-02-08T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 472736}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 10053190}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 40786893}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 112251286}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 222933982}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 417248078}], "dependentsCount": 47, "starsCount": 2}, "github": {"homepage": "https://github.com/here-be", "starsCount": 161, "forksCount": 11, "subscribersCount": 6, "issues": {"count": 23, "openCount": 8, "distribution": {"3600": 1, "10800": 2, "32400": 1, "97200": 3, "291600": 0, "874800": 1, "2624400": 3, "7873200": 1, "23619600": 2, "70858800": 7, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 155}, {"username": "danez", "commitsCount": 5}, {"username": "doowb", "commitsCount": 3}, {"username": "EdwardBetts", "commitsCount": 1}], "commits": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2020-01-10T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-08-13T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}, {"from": "2019-02-09T00:00:00.000Z", "to": "2020-02-09T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 19632, "testsSize": 21261}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/snapdragon.svg?style=flat", "shields": "https://img.shields.io/npm/v/snapdragon.svg", "content": "https://img.shields.io/npm/v/snapdragon.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/snapdragon.svg?style=flat", "shields": "https://img.shields.io/npm/dm/snapdragon.svg", "content": "https://img.shields.io/npm/dm/snapdragon.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/snapdragon.svg?style=flat", "shields": "https://img.shields.io/npm/dt/snapdragon.svg", "content": "https://img.shields.io/npm/dt/snapdragon.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/here-be/snapdragon.svg?label=Travis", "service": "https://api.travis-ci.org/here-be/snapdragon.svg", "shields": "https://img.shields.io/travis/here-be/snapdragon.svg", "content": "https://img.shields.io/travis/here-be/snapdragon.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "get-value": {"required": "^2.0.6", "stable": "3.0.1", "latest": "3.0.1"}, "snapdragon-node": {"required": "^1.0.6", "stable": "3.0.0", "latest": "3.0.0"}, "snapdragon-util": {"required": "^4.0.0", "stable": "5.0.1", "latest": "5.0.1"}, "source-map": {"required": "^0.5.6", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 184, "downloadsCount": 37417095.333333336, "downloadsAcceleration": 77948.59596651449, "dependentsCount": 47}, "maintenance": {"releasesFrequency": 0.09863013698630138, "commitsFrequency": 0, "openIssues": 0.7536231884057971, "issuesDistribution": 0}}, "score": {"final": 0.5224801905655109, "detail": {"quality": 0.8227775525027178, "popularity": 0.5228013805576501, "maintenance": 0.26476126177005144}}}
{"analyzedAt": "2020-03-01T02:00:16.149Z", "collected": {"metadata": {"name": "snapdragon-node", "scope": "unscoped", "version": "3.0.0", "description": "Class for creating AST nodes.", "keywords": ["ast", "compile", "compiler", "convert", "node", "parse", "parser", "plugin", "render", "snapdragon", "snapdragonplugin", "token", "transform"], "date": "2018-11-24T09:18:16.600Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/here-be/snapdragon-node.git"}, "links": {"npm": "https://www.npmjs.com/package/snapdragon-node", "homepage": "https://github.com/here-be/snapdragon-node", "repository": "https://github.com/here-be/snapdragon-node", "bugs": "https://github.com/here-be/snapdragon-node/issues"}, "license": "MIT", "devDependencies": {"define-property": "^2.0.2", "gulp-format-md": "^2.0.0", "mocha": "^5.2.0", "nyc": "^13.1.0", "snapdragon": "^0.12.0"}, "releases": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2018-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# snapdragon-node [![NPM version](https://img.shields.io/npm/v/snapdragon-node.svg?style=flat)](https://www.npmjs.com/package/snapdragon-node) [![NPM monthly downloads](https://img.shields.io/npm/dm/snapdragon-node.svg?style=flat)](https://npmjs.org/package/snapdragon-node) [![NPM total downloads](https://img.shields.io/npm/dt/snapdragon-node.svg?style=flat)](https://npmjs.org/package/snapdragon-node) [![Linux Build Status](https://img.shields.io/travis/here-be/snapdragon-node.svg?style=flat&label=Travis)](https://travis-ci.org/here-be/snapdragon-node)\n\n> Class for creating AST nodes.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save snapdragon-node\n```\n\n## Usage\n\n```js\nconst Node = require('snapdragon-node');\n// either pass on object with \"type\" and (optional) \"val\"\nconst node1 = new Node({type: 'star', val: '*'});\n// or pass \"val\" (first) and \"type\" (second) as string\nconst node2 = new Node('*', 'star');\n// both result in => Node { type: 'star', val: '*' }\n```\n\n## Snapdragon usage\n\nWith [snapdragon](https://github.com/here-be/snapdragon) v0.9.0 and higher, it's recommended that you use `this.node()` to create a new `Node` inside parser handlers (instead of doing `new Node()`).\n\n### Snapdragon ^1.0.0\n\nExample usage inside a [snapdragon](https://github.com/here-be/snapdragon) parser handler function.\n\n```js\nconst Node = require('snapdragon-node');\nconst Token = require('snapdragon-token');\n\n// create a new AST node\nconst node = new Node({ type: 'star', value: '*' });\n\n// convert a Lexer Token into an AST Node\nconst token = new Token({ type: 'star', value: '*' });\nconst node = new Node(token);\n```\n\n## Node objects\n\nAST Nodes are represented as `Node` objects that implement the following interface:\n\n```js\ninterface Node {\n  type: string;\n  value: string | undefined\n  nodes: array | undefined\n}\n```\n\n* `type` **{string}** - A string representing the node variant type. This property is often used for classifying the purpose or nature of the node, so that parsers or compilers can determine what to do with it.\n* `value` **{string|undefined}** (optional) - In general, value should only be a string when `node.nodes` is undefined. This is not reinforced, but is considered good practice. Use a different property name to store arbitrary strings on the node when `node.nodes` is an array.\n* `nodes` **{array|undefined}** (optional) - array of child nodes\n\nA number of useful methods and non-enumerable properties are also exposed for adding, finding and removing child nodes, etc.\n\nContinue reading the API documentation for more details.\n\n## Node API\n\n### [Node](index.js#L20)\n\nCreate a new AST `Node` with the given `type` and `value`, or an object to initialize with.\n\n**Params**\n\n* `type` **{object|string}**: Either an object to initialize with, or a string to be used as the `node.type`.\n* `value` **{string|boolean}**: If the first argument is a string, the second argument may be a string value to set on `node.value`.\n* `clone` **{boolean}**: When an object is passed as the first argument, pass true as the last argument to deep clone values before assigning them to the new node.\n* `returns` **{Object}**: node instance\n\n**Example**\n\n```js\nconsole.log(new Node({ type: 'star', value: '*' }));\nconsole.log(new Node('star', '*'));\n// both result in => Node { type: 'star', value: '*' }\n```\n\n### [.clone](index.js#L50)\n\nReturn a clone of the node. Values that are arrays or plain objects are deeply cloned.\n\n* `returns` **{Object}**: returns a clone of the node\n\n**Example**\n\n```js\nconst node = new Node({type: 'star', value: '*'});\nconsle.log(node.clone() !== node);\n//=> true\n```\n\n### [.stringify](index.js#L68)\n\nReturn a string created from `node.value` and/or recursively visiting over `node.nodes`.\n\n* `returns` **{String}**\n\n**Example**\n\n```js\nconst node = new Node({type: 'star', value: '*'});\nconsle.log(node.stringify());\n//=> '*'\n```\n\n### [.push](index.js#L88)\n\nPush a child node onto the `node.nodes` array.\n\n**Params**\n\n* `node` **{Object}**\n* `returns` **{Number}**: Returns the length of `node.nodes`, like `Array.push`\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nfoo.push(bar);\n```\n\n### [.unshift](index.js#L117)\n\nUnshift a child node onto `node.nodes`, and set `node` as the parent on `child.parent`.\n\n**Params**\n\n* `node` **{Object}**\n* `returns` **{Number}**: Returns the length of `node.nodes`\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nfoo.unshift(bar);\n```\n\n### [.pop](index.js#L151)\n\nPop a node from `node.nodes`.\n\n* `returns` **{Number}**: Returns the popped `node`\n\n**Example**\n\n```js\nconst node = new Node({type: 'foo'});\nnode.push(new Node({type: 'a'}));\nnode.push(new Node({type: 'b'}));\nnode.push(new Node({type: 'c'}));\nnode.push(new Node({type: 'd'}));\nconsole.log(node.nodes.length);\n//=> 4\nnode.pop();\nconsole.log(node.nodes.length);\n//=> 3\n```\n\n### [.shift](index.js#L178)\n\nShift a node from `node.nodes`.\n\n* `returns` **{Object}**: Returns the shifted `node`\n\n**Example**\n\n```js\nconst node = new Node({type: 'foo'});\nnode.push(new Node({type: 'a'}));\nnode.push(new Node({type: 'b'}));\nnode.push(new Node({type: 'c'}));\nnode.push(new Node({type: 'd'}));\nconsole.log(node.nodes.length);\n//=> 4\nnode.shift();\nconsole.log(node.nodes.length);\n//=> 3\n```\n\n### [.remove](index.js#L197)\n\nRemove `node` from `node.nodes`.\n\n**Params**\n\n* `node` **{Object}**\n* `returns` **{Object}**: Returns the removed node.\n\n**Example**\n\n```js\nnode.remove(childNode);\n```\n\n### [.find](index.js#L228)\n\nGet the first child node from `node.nodes` that matches the given `type`. If `type` is a number, the child node at that index is returned.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Object}**: Returns a child node or undefined.\n\n**Example**\n\n```js\nconst child = node.find(1); //<= index of the node to get\nconst child = node.find('foo'); //<= node.type of a child node\nconst child = node.find(/^(foo|bar)$/); //<= regex to match node.type\nconst child = node.find(['foo', 'bar']); //<= array of node.type(s)\n```\n\n### [.has](index.js#L259)\n\nReturns true if `node.nodes` array contains the given `node`.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\ncosole.log(foo.has(bar)); // false\nfoo.push(bar);\ncosole.log(foo.has(bar)); // true\n```\n\n### [.hasType](index.js#L284)\n\nReturn true if the `node.nodes` has the given `type`.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nfoo.push(bar);\n\ncosole.log(foo.hasType('qux'));          // false\ncosole.log(foo.hasType(/^(qux|bar)$/));  // true\ncosole.log(foo.hasType(['qux', 'bar'])); // true\n```\n\n### [.isType](index.js#L303)\n\nReturn true if the node is the given `type`.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst node = new Node({type: 'bar'});\ncosole.log(node.isType('foo'));          // false\ncosole.log(node.isType(/^(foo|bar)$/));  // true\ncosole.log(node.isType(['foo', 'bar'])); // true\n```\n\n### [.isEmpty](index.js#L323)\n\nReturns true if `node.value` is an empty string, or `node.nodes` does not contain any non-empty text nodes.\n\n**Params**\n\n* `fn` **{Function}**: (optional) Filter function that is called on `node` and/or child nodes. `isEmpty` will return false immediately when the filter function returns false on any nodes.\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst node = new Node({type: 'text'});\nnode.isEmpty(); //=> true\nnode.value = 'foo';\nnode.isEmpty(); //=> false\n```\n\n### [.isInside](index.js#L342)\n\nReturns true if the node has an ancestor node of the given `type`\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst box = new Node({type: 'box'});\nconst marble = new Node({type: 'marble'});\nbox.push(marble);\nmarble.isInside('box'); //=> true\n```\n\n### [.siblings](index.js#L365)\n\nGet the siblings array, or `null` if it doesn't exist.\n\n* `returns` **{Array}**\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nconst baz = new Node({type: 'baz'});\nfoo.push(bar);\nfoo.push(baz);\n\nconsole.log(bar.siblings.length) // 2\nconsole.log(baz.siblings.length) // 2\n```\n\n### [.index](index.js#L393)\n\nCalculate the node's current index on `node.parent.nodes`, or `-1` if the node does not have a parent, or is not on `node.parent.nodes`.\n\n* `returns` **{Number}**\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nconst baz = new Node({type: 'baz'});\nconst qux = new Node({type: 'qux'});\nfoo.push(bar);\nfoo.push(baz);\nfoo.unshift(qux);\n\nconsole.log(bar.index) // 1\nconsole.log(baz.index) // 2\nconsole.log(qux.index) // 0\n```\n\n### [.prev](index.js#L424)\n\nGet the previous node from the [siblings](#siblings) array or `null`.\n\n* `returns` **{Object}**\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nconst baz = new Node({type: 'baz'});\nfoo.push(bar);\nfoo.push(baz);\n\nconsole.log(baz.prev.type) // 'bar'\n```\n\n### [.next](index.js#L453)\n\nGet the next element from the [siblings](#siblings) array, or `null` if a next node does not exist.\n\n* `returns` **{Object}**\n\n**Example**\n\n```js\nconst parent = new Node({type: 'root'});\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nconst baz = new Node({type: 'baz'});\nparent.push(foo);\nparent.push(bar);\nparent.push(baz);\n\nconsole.log(foo.next.type) // 'bar'\nconsole.log(bar.next.type) // 'baz'\n```\n\n### [.first](index.js#L480)\n\nGet the first child node from `node.nodes`.\n\n* `returns` **{Object}**: The first node, or undefiend\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nconst baz = new Node({type: 'baz'});\nconst qux = new Node({type: 'qux'});\nfoo.push(bar);\nfoo.push(baz);\nfoo.push(qux);\n\nconsole.log(foo.first.type) // 'bar'\n```\n\n### [.last](index.js#L504)\n\nGet the last child node from `node.nodes`.\n\n* `returns` **{Object}**: The last node, or undefiend\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\nconst baz = new Node({type: 'baz'});\nconst qux = new Node({type: 'qux'});\nfoo.push(bar);\nfoo.push(baz);\nfoo.push(qux);\n\nconsole.log(foo.last.type) // 'qux'\n```\n\n### [.depth](index.js#L525)\n\nGet the `node.depth`. The root node has a depth of 0. Add 1 to child nodes for each level of nesting.\n\n* `returns` **{Object}**: The last node, or undefiend\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nfoo.push(bar);\n\nconsole.log(foo.depth) // 1\nconsole.log(bar.depth) // 2\n```\n\n### [Node#isNode](index.js#L545)\n\nStatic method that returns true if the given value is a node.\n\n**Params**\n\n* `node` **{Object}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst Node = require('snapdragon-node');\nconst node = new Node({type: 'foo'});\nconsole.log(Node.isNode(node)); //=> true\nconsole.log(Node.isNode({})); //=> false\n```\n\n### Non-enumerable properties\n\n* `node.isNode` **{boolean}** - this value is set to `true` when a node is created. This can be useful in situationas as a fast alternative to using `instanceof Node` if you [need to determine](#nodeisnode) if a value is a `node` object.\n* `node.size` **{number}** - the number of child nodes that have been pushed or unshifted onto `node.nodes` using the node's API. This is useful for determining if nodes were added to `node.nodes` without using `node.push()` or `node.unshift()` (for example: `if (node.nodes && node.size !== node.nodes.length)`)\n* `node.parent` **{object}** (instance of Node)\n\n## Release history\n\nSee [the changelog](changelog.md).\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [breakdance](https://www.npmjs.com/package/breakdance): Breakdance is a node.js library for converting HTML to markdown. Highly pluggable, flexible and easy\u2026 [more](http://breakdance.io) | [homepage](http://breakdance.io \"Breakdance is a node.js library for converting HTML to markdown. Highly pluggable, flexible and easy to use. It's time for your markup to get down.\")\n* [snapdragon-capture](https://www.npmjs.com/package/snapdragon-capture): Snapdragon plugin that adds a capture method to the parser instance. | [homepage](https://github.com/jonschlinkert/snapdragon-capture \"Snapdragon plugin that adds a capture method to the parser instance.\")\n* [snapdragon-cheerio](https://www.npmjs.com/package/snapdragon-cheerio): Snapdragon plugin for converting a cheerio AST to a snapdragon AST. | [homepage](https://github.com/jonschlinkert/snapdragon-cheerio \"Snapdragon plugin for converting a cheerio AST to a snapdragon AST.\")\n* [snapdragon-util](https://www.npmjs.com/package/snapdragon-util): Utilities for the snapdragon parser/compiler. | [homepage](https://github.com/here-be/snapdragon-util \"Utilities for the snapdragon parser/compiler.\")\n* [snapdragon](https://www.npmjs.com/package/snapdragon): Easy-to-use plugin system for creating powerful, fast and versatile parsers and compilers, with built-in source-map\u2026 [more](https://github.com/here-be/snapdragon) | [homepage](https://github.com/here-be/snapdragon \"Easy-to-use plugin system for creating powerful, fast and versatile parsers and compilers, with built-in source-map support.\")\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on November 24, 2018._"}, "npm": {"downloads": [{"from": "2020-02-29T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 510541}, {"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 10448349}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 43450118}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 117317502}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 231591133}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 431778148}], "dependentsCount": 51, "starsCount": 0}, "github": {"starsCount": 18, "forksCount": 2, "subscribersCount": 2, "issues": {"count": 3, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 3, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 40}], "commits": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2020-01-31T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-12-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-09-03T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}, {"from": "2019-03-02T00:00:00.000Z", "to": "2020-03-01T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 15061, "testsSize": 13626, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/snapdragon-node.svg?style=flat", "shields": "https://img.shields.io/npm/v/snapdragon-node.svg", "content": "https://img.shields.io/npm/v/snapdragon-node.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/snapdragon-node.svg?style=flat", "shields": "https://img.shields.io/npm/dm/snapdragon-node.svg", "content": "https://img.shields.io/npm/dm/snapdragon-node.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/snapdragon-node.svg?style=flat", "shields": "https://img.shields.io/npm/dt/snapdragon-node.svg", "content": "https://img.shields.io/npm/dt/snapdragon-node.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/here-be/snapdragon-node.svg?label=Travis", "service": "https://api.travis-ci.org/here-be/snapdragon-node.svg", "shields": "https://img.shields.io/travis/here-be/snapdragon-node.svg", "content": "https://img.shields.io/travis/here-be/snapdragon-node.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 23, "downloadsCount": 39105834, "downloadsAcceleration": 92261.75298706244, "dependentsCount": 51}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8054723782742149, "detail": {"quality": 0.9434447250549063, "popularity": 0.4927930823668449, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-14T05:16:48.320Z", "collected": {"metadata": {"name": "snapdragon-util", "scope": "unscoped", "version": "5.0.1", "description": "Utilities for the snapdragon parser/compiler.", "keywords": ["capture", "compile", "compiler", "convert", "match", "parse", "parser", "plugin", "render", "snapdragon", "snapdragonplugin", "transform", "util"], "date": "2018-01-11T09:04:26.184Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Rouven We\u00dfling", "url": "www.rouvenwessling.de"}], "repository": {"type": "git", "url": "git+https://github.com/here-be/snapdragon-util.git"}, "links": {"npm": "https://www.npmjs.com/package/snapdragon-util", "homepage": "https://github.com/here-be/snapdragon-util", "repository": "https://github.com/here-be/snapdragon-util", "bugs": "https://github.com/here-be/snapdragon-util/issues"}, "license": "MIT", "dependencies": {"kind-of": "^6.0.2"}, "devDependencies": {"define-property": "^2.0.0", "gulp": "^3.9.1", "gulp-eslint": "^4.0.1", "gulp-format-md": "^1.0.0", "gulp-istanbul": "^1.1.3", "gulp-mocha": "^5.0.0", "isobject": "^3.0.1", "mocha": "^3.5.3", "snapdragon": "^0.11.0"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# snapdragon-util [![NPM version](https://img.shields.io/npm/v/snapdragon-util.svg?style=flat)](https://www.npmjs.com/package/snapdragon-util) [![NPM monthly downloads](https://img.shields.io/npm/dm/snapdragon-util.svg?style=flat)](https://npmjs.org/package/snapdragon-util) [![NPM total downloads](https://img.shields.io/npm/dt/snapdragon-util.svg?style=flat)](https://npmjs.org/package/snapdragon-util) [![Linux Build Status](https://img.shields.io/travis/here-be/snapdragon-util.svg?style=flat&label=Travis)](https://travis-ci.org/here-be/snapdragon-util)\n\n> Utilities for the snapdragon parser/compiler.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save snapdragon-util\n```\n\n## Usage\n\n```js\nvar util = require('snapdragon-util');\n```\n\n## API\n\n### [.isNode](index.js#L20)\n\nReturns true if the given value is a node.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar node = new Node({type: 'foo'});\nconsole.log(utils.isNode(node)); //=> true\nconsole.log(utils.isNode({})); //=> false\n```\n\n### [.noop](index.js#L36)\n\nEmit an empty string for the given `node`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{undefined}**\n\n**Example**\n\n```js\n// do nothing for beginning-of-string\nsnapdragon.compiler.set('bos', utils.noop);\n```\n\n### [.value](index.js#L54)\n\nReturns `node.value` or `node.val`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{String}**: returns\n\n**Example**\n\n```js\nconst star = new Node({type: 'star', value: '*'});\nconst slash = new Node({type: 'slash', val: '/'});\nconsole.log(utils.value(star)) //=> '*'\nconsole.log(utils.value(slash)) //=> '/'\n```\n\n### [.identity](index.js#L72)\n\nAppend `node.value` to `compiler.output`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{undefined}**\n\n**Example**\n\n```js\nsnapdragon.compiler.set('text', utils.identity);\n```\n\n### [.append](index.js#L95)\n\nPreviously named `.emit`, this method appends the given `value` to `compiler.output` for the given node. Useful when you know what value should be appended advance, regardless of the actual value of `node.value`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Function}**: Returns a compiler middleware function.\n\n**Example**\n\n```js\nsnapdragon.compiler\n  .set('i', function(node) {\n    this.mapVisit(node);\n  })\n  .set('i.open', utils.append('<i>'))\n  .set('i.close', utils.append('</i>'))\n```\n\n### [.toNoop](index.js#L118)\n\nUsed in compiler middleware, this onverts an AST node into an empty `text` node and deletes `node.nodes` if it exists. The advantage of this method is that, as opposed to completely removing the node, indices will not need to be re-calculated in sibling nodes, and nothing is appended to the output.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `nodes` **{Array}**: Optionally pass a new `nodes` value, to replace the existing `node.nodes` array.\n\n**Example**\n\n```js\nutils.toNoop(node);\n// convert `node.nodes` to the given value instead of deleting it\nutils.toNoop(node, []);\n```\n\n### [.visit](index.js#L147)\n\nVisit `node` with the given `fn`. The built-in `.visit` method in snapdragon automatically calls registered compilers, this allows you to pass a visitor function.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `fn` **{Function}**\n* `returns` **{Object}**: returns the node after recursively visiting all child nodes.\n\n**Example**\n\n```js\nsnapdragon.compiler.set('i', function(node) {\n  utils.visit(node, function(childNode) {\n    // do stuff with \"childNode\"\n    return childNode;\n  });\n});\n```\n\n### [.mapVisit](index.js#L174)\n\nMap [visit](#visit) the given `fn` over `node.nodes`. This is called by [visit](#visit), use this method if you do not want `fn` to be called on the first node.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `options` **{Object}**\n* `fn` **{Function}**\n* `returns` **{Object}**: returns the node\n\n**Example**\n\n```js\nsnapdragon.compiler.set('i', function(node) {\n  utils.mapVisit(node, function(childNode) {\n    // do stuff with \"childNode\"\n    return childNode;\n  });\n});\n```\n\n### [.addOpen](index.js#L213)\n\nUnshift an `*.open` node onto `node.nodes`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `Node` **{Function}**: (required) Node constructor function from [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node).\n* `filter` **{Function}**: Optionaly specify a filter function to exclude the node.\n* `returns` **{Object}**: Returns the created opening node.\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nsnapdragon.parser.set('brace', function(node) {\n  var match = this.match(/^{/);\n  if (match) {\n    var parent = new Node({type: 'brace'});\n    utils.addOpen(parent, Node);\n    console.log(parent.nodes[0]):\n    // { type: 'brace.open', value: '' };\n\n    // push the parent \"brace\" node onto the stack\n    this.push(parent);\n\n    // return the parent node, so it's also added to the AST\n    return brace;\n  }\n});\n```\n\n### [.addClose](index.js#L263)\n\nPush a `*.close` node onto `node.nodes`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `Node` **{Function}**: (required) Node constructor function from [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node).\n* `filter` **{Function}**: Optionaly specify a filter function to exclude the node.\n* `returns` **{Object}**: Returns the created closing node.\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nsnapdragon.parser.set('brace', function(node) {\n  var match = this.match(/^}/);\n  if (match) {\n    var parent = this.parent();\n    if (parent.type !== 'brace') {\n      throw new Error('missing opening: ' + '}');\n    }\n\n    utils.addClose(parent, Node);\n    console.log(parent.nodes[parent.nodes.length - 1]):\n    // { type: 'brace.close', value: '' };\n\n    // no need to return a node, since the parent\n    // was already added to the AST\n    return;\n  }\n});\n```\n\n### [.wrapNodes](index.js#L293)\n\nWraps the given `node` with `*.open` and `*.close` nodes.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `Node` **{Function}**: (required) Node constructor function from [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node).\n* `filter` **{Function}**: Optionaly specify a filter function to exclude the node.\n* `returns` **{Object}**: Returns the node\n\n### [.pushNode](index.js#L318)\n\nPush the given `node` onto `parent.nodes`, and set `parent` as `node.parent.\n\n**Params**\n\n* `parent` **{Object}**\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Object}**: Returns the child node\n\n**Example**\n\n```js\nvar parent = new Node({type: 'foo'});\nvar node = new Node({type: 'bar'});\nutils.pushNode(parent, node);\nconsole.log(parent.nodes[0].type) // 'bar'\nconsole.log(node.parent.type) // 'foo'\n```\n\n### [.unshiftNode](index.js#L348)\n\nUnshift `node` onto `parent.nodes`, and set `parent` as `node.parent.\n\n**Params**\n\n* `parent` **{Object}**\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{undefined}**\n\n**Example**\n\n```js\nvar parent = new Node({type: 'foo'});\nvar node = new Node({type: 'bar'});\nutils.unshiftNode(parent, node);\nconsole.log(parent.nodes[0].type) // 'bar'\nconsole.log(node.parent.type) // 'foo'\n```\n\n### [.popNode](index.js#L381)\n\nPop the last `node` off of `parent.nodes`. The advantage of using this method is that it checks for `node.nodes` and works with any version of `snapdragon-node`.\n\n**Params**\n\n* `parent` **{Object}**\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Number|Undefined}**: Returns the length of `node.nodes` or undefined.\n\n**Example**\n\n```js\nvar parent = new Node({type: 'foo'});\nutils.pushNode(parent, new Node({type: 'foo'}));\nutils.pushNode(parent, new Node({type: 'bar'}));\nutils.pushNode(parent, new Node({type: 'baz'}));\nconsole.log(parent.nodes.length); //=> 3\nutils.popNode(parent);\nconsole.log(parent.nodes.length); //=> 2\n```\n\n### [.shiftNode](index.js#L409)\n\nShift the first `node` off of `parent.nodes`. The advantage of using this method is that it checks for `node.nodes` and works with any version of `snapdragon-node`.\n\n**Params**\n\n* `parent` **{Object}**\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Number|Undefined}**: Returns the length of `node.nodes` or undefined.\n\n**Example**\n\n```js\nvar parent = new Node({type: 'foo'});\nutils.pushNode(parent, new Node({type: 'foo'}));\nutils.pushNode(parent, new Node({type: 'bar'}));\nutils.pushNode(parent, new Node({type: 'baz'}));\nconsole.log(parent.nodes.length); //=> 3\nutils.shiftNode(parent);\nconsole.log(parent.nodes.length); //=> 2\n```\n\n### [.removeNode](index.js#L436)\n\nRemove the specified `node` from `parent.nodes`.\n\n**Params**\n\n* `parent` **{Object}**\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Object|undefined}**: Returns the removed node, if successful, or undefined if it does not exist on `parent.nodes`.\n\n**Example**\n\n```js\nvar parent = new Node({type: 'abc'});\nvar foo = new Node({type: 'foo'});\nutils.pushNode(parent, foo);\nutils.pushNode(parent, new Node({type: 'bar'}));\nutils.pushNode(parent, new Node({type: 'baz'}));\nconsole.log(parent.nodes.length); //=> 3\nutils.removeNode(parent, foo);\nconsole.log(parent.nodes.length); //=> 2\n```\n\n### [.isType](index.js#L467)\n\nReturns true if `node.type` matches the given `type`. Throws a `TypeError` if `node` is not an instance of `Node`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar node = new Node({type: 'foo'});\nconsole.log(utils.isType(node, 'foo')); // false\nconsole.log(utils.isType(node, 'bar')); // true\n```\n\n### [.hasType](index.js#L509)\n\nReturns true if the given `node` has the given `type` in `node.nodes`. Throws a `TypeError` if `node` is not an instance of `Node`.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar node = new Node({\n  type: 'foo',\n  nodes: [\n    new Node({type: 'bar'}),\n    new Node({type: 'baz'})\n  ]\n});\nconsole.log(utils.hasType(node, 'xyz')); // false\nconsole.log(utils.hasType(node, 'baz')); // true\n```\n\n### [.firstOfType](index.js#L542)\n\nReturns the first node from `node.nodes` of the given `type`\n\n**Params**\n\n* `nodes` **{Array}**\n* `type` **{String}**\n* `returns` **{Object|undefined}**: Returns the first matching node or undefined.\n\n**Example**\n\n```js\nvar node = new Node({\n  type: 'foo',\n  nodes: [\n    new Node({type: 'text', value: 'abc'}),\n    new Node({type: 'text', value: 'xyz'})\n  ]\n});\n\nvar textNode = utils.firstOfType(node.nodes, 'text');\nconsole.log(textNode.value);\n//=> 'abc'\n```\n\n### [.findNode](index.js#L578)\n\nReturns the node at the specified index, or the first node of the given `type` from `node.nodes`.\n\n**Params**\n\n* `nodes` **{Array}**\n* `type` **{String|Number}**: Node type or index.\n* `returns` **{Object}**: Returns a node or undefined.\n\n**Example**\n\n```js\nvar node = new Node({\n  type: 'foo',\n  nodes: [\n    new Node({type: 'text', value: 'abc'}),\n    new Node({type: 'text', value: 'xyz'})\n  ]\n});\n\nvar nodeOne = utils.findNode(node.nodes, 'text');\nconsole.log(nodeOne.value);\n//=> 'abc'\n\nvar nodeTwo = utils.findNode(node.nodes, 1);\nconsole.log(nodeTwo.value);\n//=> 'xyz'\n```\n\n### [.isOpen](index.js#L602)\n\nReturns true if the given node is an \"*.open\" node.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar brace = new Node({type: 'brace'});\nvar open = new Node({type: 'brace.open'});\nvar close = new Node({type: 'brace.close'});\n\nconsole.log(utils.isOpen(brace)); // false\nconsole.log(utils.isOpen(open)); // true\nconsole.log(utils.isOpen(close)); // false\n```\n\n### [.isClose](index.js#L631)\n\nReturns true if the given node is a \"*.close\" node.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar brace = new Node({type: 'brace'});\nvar open = new Node({type: 'brace.open'});\nvar close = new Node({type: 'brace.close'});\n\nconsole.log(utils.isClose(brace)); // false\nconsole.log(utils.isClose(open)); // false\nconsole.log(utils.isClose(close)); // true\n```\n\n### [.isBlock](index.js#L662)\n\nReturns true if the given node is an \"*.open\" node.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar brace = new Node({type: 'brace'});\nvar open = new Node({type: 'brace.open', value: '{'});\nvar inner = new Node({type: 'text', value: 'a,b,c'});\nvar close = new Node({type: 'brace.close', value: '}'});\nbrace.push(open);\nbrace.push(inner);\nbrace.push(close);\n\nconsole.log(utils.isBlock(brace)); // true\n```\n\n### [.hasNode](index.js#L691)\n\nReturns true if `parent.nodes` has the given `node`.\n\n**Params**\n\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nconst foo = new Node({type: 'foo'});\nconst bar = new Node({type: 'bar'});\ncosole.log(util.hasNode(foo, bar)); // false\nfoo.push(bar);\ncosole.log(util.hasNode(foo, bar)); // true\n```\n\n### [.hasOpen](index.js#L723)\n\nReturns true if `node.nodes` **has** an `.open` node\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar brace = new Node({\n  type: 'brace',\n  nodes: []\n});\n\nvar open = new Node({type: 'brace.open'});\nconsole.log(utils.hasOpen(brace)); // false\n\nbrace.pushNode(open);\nconsole.log(utils.hasOpen(brace)); // true\n```\n\n### [.hasClose](index.js#L754)\n\nReturns true if `node.nodes` **has** a `.close` node\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar brace = new Node({\n  type: 'brace',\n  nodes: []\n});\n\nvar close = new Node({type: 'brace.close'});\nconsole.log(utils.hasClose(brace)); // false\n\nbrace.pushNode(close);\nconsole.log(utils.hasClose(brace)); // true\n```\n\n### [.hasOpenAndClose](index.js#L789)\n\nReturns true if `node.nodes` has both `.open` and `.close` nodes\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar Node = require('snapdragon-node');\nvar brace = new Node({\n  type: 'brace',\n  nodes: []\n});\n\nvar open = new Node({type: 'brace.open'});\nvar close = new Node({type: 'brace.close'});\nconsole.log(utils.hasOpen(brace)); // false\nconsole.log(utils.hasClose(brace)); // false\n\nbrace.pushNode(open);\nbrace.pushNode(close);\nconsole.log(utils.hasOpen(brace)); // true\nconsole.log(utils.hasClose(brace)); // true\n```\n\n### [.addType](index.js#L811)\n\nPush the given `node` onto the `state.inside` array for the given type. This array is used as a specialized \"stack\" for only the given `node.type`.\n\n**Params**\n\n* `state` **{Object}**: The `compiler.state` object or custom state object.\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Array}**: Returns the `state.inside` stack for the given type.\n\n**Example**\n\n```js\nvar state = { inside: {}};\nvar node = new Node({type: 'brace'});\nutils.addType(state, node);\nconsole.log(state.inside);\n//=> { brace: [{type: 'brace'}] }\n```\n\n### [.removeType](index.js#L851)\n\nRemove the given `node` from the `state.inside` array for the given type. This array is used as a specialized \"stack\" for only the given `node.type`.\n\n**Params**\n\n* `state` **{Object}**: The `compiler.state` object or custom state object.\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `returns` **{Array}**: Returns the `state.inside` stack for the given type.\n\n**Example**\n\n```js\nvar state = { inside: {}};\nvar node = new Node({type: 'brace'});\nutils.addType(state, node);\nconsole.log(state.inside);\n//=> { brace: [{type: 'brace'}] }\nutils.removeType(state, node);\n//=> { brace: [] }\n```\n\n### [.isEmpty](index.js#L880)\n\nReturns true if `node.value` is an empty string, or `node.nodes` does not contain any non-empty text nodes.\n\n**Params**\n\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `fn` **{Function}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar node = new Node({type: 'text'});\nutils.isEmpty(node); //=> true\nnode.value = 'foo';\nutils.isEmpty(node); //=> false\n```\n\n### [.isInsideType](index.js#L922)\n\nReturns true if the `state.inside` stack for the given type exists and has one or more nodes on it.\n\n**Params**\n\n* `state` **{Object}**\n* `type` **{String}**\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar state = { inside: {}};\nvar node = new Node({type: 'brace'});\nconsole.log(utils.isInsideType(state, 'brace')); //=> false\nutils.addType(state, node);\nconsole.log(utils.isInsideType(state, 'brace')); //=> true\nutils.removeType(state, node);\nconsole.log(utils.isInsideType(state, 'brace')); //=> false\n```\n\n### [.isInside](index.js#L956)\n\nReturns true if `node` is either a child or grand-child of the given `type`, or `state.inside[type]` is a non-empty array.\n\n**Params**\n\n* `state` **{Object}**: Either the `compiler.state` object, if it exists, or a user-supplied state object.\n* `node` **{Object}**: Instance of [snapdragon-node](https://github.com/jonschlinkert/snapdragon-node)\n* `type` **{String}**: The `node.type` to check for.\n* `returns` **{Boolean}**\n\n**Example**\n\n```js\nvar state = { inside: {}};\nvar node = new Node({type: 'brace'});\nvar open = new Node({type: 'brace.open'});\nconsole.log(utils.isInside(state, open, 'brace')); //=> false\nutils.pushNode(node, open);\nconsole.log(utils.isInside(state, open, 'brace')); //=> true\n```\n\n### [.last](index.js#L1004)\n\nGet the last `n` element from the given `array`. Used for getting\na node from `node.nodes.`\n\n**Params**\n\n* `array` **{Array}**\n* `n` **{Number}**\n* `returns` **{undefined}**\n\n### [.arrayify](index.js#L1028)\n\nCast the given `value` to an array.\n\n**Params**\n\n* `value` **{any}**\n* `returns` **{Array}**\n\n**Example**\n\n```js\nconsole.log(utils.arrayify(''));\n//=> []\nconsole.log(utils.arrayify('foo'));\n//=> ['foo']\nconsole.log(utils.arrayify(['foo']));\n//=> ['foo']\n```\n\n### [.stringify](index.js#L1047)\n\nConvert the given `value` to a string by joining with `,`. Useful\nfor creating a cheerio/CSS/DOM-style selector from a list of strings.\n\n**Params**\n\n* `value` **{any}**\n* `returns` **{Array}**\n\n### [.trim](index.js#L1060)\n\nEnsure that the given value is a string and call `.trim()` on it,\nor return an empty string.\n\n**Params**\n\n* `str` **{String}**\n* `returns` **{String}**\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [snapdragon-node](https://www.npmjs.com/package/snapdragon-node): Snapdragon utility for creating a new AST node in custom code, such as plugins. | [homepage](https://github.com/jonschlinkert/snapdragon-node \"Snapdragon utility for creating a new AST node in custom code, such as plugins.\")\n* [snapdragon-position](https://www.npmjs.com/package/snapdragon-position): Snapdragon util and plugin for patching the position on an AST node. | [homepage](https://github.com/here-be/snapdragon-position \"Snapdragon util and plugin for patching the position on an AST node.\")\n* [snapdragon-token](https://www.npmjs.com/package/snapdragon-token): Create a snapdragon token. Used by the snapdragon lexer, but can also be used by\u2026 [more](https://github.com/here-be/snapdragon-token) | [homepage](https://github.com/here-be/snapdragon-token \"Create a snapdragon token. Used by the snapdragon lexer, but can also be used by plugins.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 43 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [realityking](https://github.com/realityking) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on January 11, 2018._"}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1903133}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 10159411}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 42324198}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 110498894}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 221541693}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 413557555}], "dependentsCount": 46, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 1, "subscribersCount": 2, "issues": {"count": 2, "openCount": 0, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 49}, {"username": "realityking", "commitsCount": 2}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 23009, "testsSize": 41270, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/snapdragon-util.svg?style=flat", "shields": "https://img.shields.io/npm/v/snapdragon-util.svg", "content": "https://img.shields.io/npm/v/snapdragon-util.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/snapdragon-util.svg?style=flat", "shields": "https://img.shields.io/npm/dm/snapdragon-util.svg", "content": "https://img.shields.io/npm/dm/snapdragon-util.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/snapdragon-util.svg?style=flat", "shields": "https://img.shields.io/npm/dt/snapdragon-util.svg", "content": "https://img.shields.io/npm/dt/snapdragon-util.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/here-be/snapdragon-util.svg?label=Travis", "service": "https://api.travis-ci.org/here-be/snapdragon-util.svg", "shields": "https://img.shields.io/travis/here-be/snapdragon-util.svg", "content": "https://img.shields.io/travis/here-be/snapdragon-util.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 16, "downloadsCount": 36832964.666666664, "downloadsAcceleration": 93881.24720319634, "dependentsCount": 46}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8026086788924407, "detail": {"quality": 0.9434447250549063, "popularity": 0.48461108413320436, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-10T07:56:56.000Z", "collected": {"metadata": {"name": "source-map", "scope": "unscoped", "version": "0.7.3", "description": "Generates and consumes source maps", "date": "2018-05-16T17:29:49.200Z", "author": {"name": "Nick Fitzgerald", "email": "nfitzgerald@mozilla.com", "username": "mozilla-devtools"}, "publisher": {"username": "nickfitzgerald", "email": "fitzgen@gmail.com"}, "maintainers": [{"username": "glasserc", "email": "ethan.glasser.camp@gmail.com"}, {"username": "mozilla-npm", "email": "npm-owners@mozilla.com"}, {"username": "rehandalal", "email": "rehandalal@gmail.com"}, {"username": "mythmon", "email": "mythmon@gmail.com"}, {"username": "emceeaich", "email": "ech+npm@emmah.net"}, {"username": "mozilla-devtools", "email": "nfitzgerald@mozilla.com"}, {"username": "nickfitzgerald", "email": "fitzgen@gmail.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "ejpbruel", "email": "ejpbruel@gmail.com"}, {"username": "tromey", "email": "tom@tromey.com"}], "contributors": [{"name": "Tobias Koppers", "email": "tobias.koppers@googlemail.com"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Stephen Crane", "email": "scrane@mozilla.com"}, {"name": "Ryan Seddon", "email": "seddon.ryan@gmail.com"}, {"name": "Miles Elam", "email": "miles.elam@deem.com"}, {"name": "Mihai Bazon", "email": "mihai.bazon@gmail.com"}, {"name": "Michael Ficarra", "email": "github.public.email@michael.ficarra.me"}, {"name": "Todd Wolfson", "email": "todd@twolfson.com"}, {"name": "Alexander Solovyov", "email": "alexander@solovyov.net"}, {"name": "Felix Gnass", "email": "fgnass@gmail.com"}, {"name": "Conrad Irwin", "email": "conrad.irwin@gmail.com"}, {"name": "usrbincc", "email": "usrbincc@yahoo.com"}, {"name": "David Glasser", "email": "glasser@davidglasser.net"}, {"name": "Chase Douglas", "email": "chase@newrelic.com"}, {"name": "Evan Wallace", "email": "evan.exe@gmail.com"}, {"name": "Heather Arthur", "email": "fayearthur@gmail.com"}, {"name": "Hugh Kennedy", "email": "hughskennedy@gmail.com"}, {"name": "David Glasser", "email": "glasser@davidglasser.net"}, {"name": "Simon Lydell", "email": "simon.lydell@gmail.com"}, {"name": "Jmeas Smith", "email": "jellyes2@gmail.com"}, {"name": "Michael Z Goddard", "email": "mzgoddard@gmail.com"}, {"name": "azu", "email": "azu@users.noreply.github.com"}, {"name": "John Gozde", "email": "john@gozde.ca"}, {"name": "Adam Kirkton", "email": "akirkton@truefitinnovation.com"}, {"name": "Chris Montgomery", "email": "christopher.montgomery@dowjones.com"}, {"name": "J. Ryan Stinnett", "email": "jryans@gmail.com"}, {"name": "Jack Herrington", "email": "jherrington@walmartlabs.com"}, {"name": "Chris Truter", "email": "jeffpalentine@gmail.com"}, {"name": "Daniel Espeset", "email": "daniel@danielespeset.com"}, {"name": "Jamie Wong", "email": "jamie.lf.wong@gmail.com"}, {"name": "Eddy Bru\u00ebl", "email": "ejpbruel@mozilla.com"}, {"name": "Hawken Rives", "email": "hawkrives@gmail.com"}, {"name": "Gilad Peleg", "email": "giladp007@gmail.com"}, {"name": "djchie", "email": "djchie.dev@gmail.com"}, {"name": "Gary Ye", "email": "garysye@gmail.com"}, {"name": "Nicolas Laleve\u0301e", "email": "nicolas.lalevee@hibnet.org"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/mozilla/source-map.git"}, "links": {"npm": "https://www.npmjs.com/package/source-map", "homepage": "https://github.com/mozilla/source-map", "repository": "https://github.com/mozilla/source-map", "bugs": "https://github.com/mozilla/source-map/issues"}, "license": "BSD-3-Clause", "devDependencies": {"doctoc": "^0.15.0", "eslint": "^4.19.1", "live-server": "^1.2.0", "npm-run-all": "^4.1.2", "nyc": "^11.7.1", "watch": "^1.0.2", "webpack": "^3.10"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1981273}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 42087180}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 165202534}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 461714762}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 914345913}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 1733216957}], "dependentsCount": 1764, "starsCount": 34}, "github": {"starsCount": 2077, "forksCount": 279, "subscribersCount": 62, "issues": {"count": 413, "openCount": 66, "distribution": {"3600": 35, "10800": 27, "32400": 28, "97200": 54, "291600": 50, "874800": 52, "2624400": 31, "7873200": 30, "23619600": 35, "70858800": 41, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "fitzgen", "commitsCount": 284}, {"username": "sokra", "commitsCount": 23}, {"username": "ejpbruel", "commitsCount": 15}, {"username": "lydell", "commitsCount": 15}, {"username": "tromey", "commitsCount": 14}, {"username": "usrbincc", "commitsCount": 10}, {"username": "hildjj", "commitsCount": 8}, {"username": "loganfsmyth", "commitsCount": 7}, {"username": "hibnico", "commitsCount": 5}, {"username": "zertosh", "commitsCount": 5}, {"username": "GerHobbelt", "commitsCount": 4}, {"username": "dmurat", "commitsCount": 4}, {"username": "ryanseddon", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 3}, {"username": "crisptrutski", "commitsCount": 3}, {"username": "ds300", "commitsCount": 3}, {"username": "evanw", "commitsCount": 3}, {"username": "jgoz", "commitsCount": 3}, {"username": "michaelficarra", "commitsCount": 3}, {"username": "mishoo", "commitsCount": 3}, {"username": "rinon", "commitsCount": 3}, {"username": "AaronFriel", "commitsCount": 2}, {"username": "ashaffer", "commitsCount": 2}, {"username": "glasser", "commitsCount": 2}, {"username": "harthur", "commitsCount": 2}, {"username": "jherr", "commitsCount": 2}, {"username": "jryans", "commitsCount": 2}, {"username": "ochameau", "commitsCount": 2}, {"username": "roblourens", "commitsCount": 2}, {"username": "rtsao", "commitsCount": 2}, {"username": "samccone", "commitsCount": 2}, {"username": "twolfson", "commitsCount": 2}, {"username": "ConradIrwin", "commitsCount": 1}, {"username": "GianlucaGuarini", "commitsCount": 1}, {"username": "Lange", "commitsCount": 1}, {"username": "MikailBag", "commitsCount": 1}, {"username": "Mozilla-GitHub-Standards", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "azu", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "borriglione", "commitsCount": 1}, {"username": "brycecr", "commitsCount": 1}, {"username": "callumlocke", "commitsCount": 1}, {"username": "chmontgomery", "commitsCount": 1}, {"username": "danielmendel", "commitsCount": 1}, {"username": "djchie", "commitsCount": 1}, {"username": "duncanbeevers", "commitsCount": 1}, {"username": "fgnass", "commitsCount": 1}, {"username": "fictitious", "commitsCount": 1}, {"username": "fscherwi", "commitsCount": 1}, {"username": "garysye", "commitsCount": 1}, {"username": "hawkrives", "commitsCount": 1}, {"username": "hughsk", "commitsCount": 1}, {"username": "iamstolis", "commitsCount": 1}, {"username": "insfrag", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "jridgewell", "commitsCount": 1}, {"username": "kevinsawicki", "commitsCount": 1}, {"username": "kusold", "commitsCount": 1}, {"username": "lahmatiy", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "mjesun", "commitsCount": 1}, {"username": "mzgoddard", "commitsCount": 1}, {"username": "nicojs", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "piranha", "commitsCount": 1}, {"username": "redeyes2015", "commitsCount": 1}, {"username": "sprockow", "commitsCount": 1}, {"username": "timbell", "commitsCount": 1}, {"username": "wizawu", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 7}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 8}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 144932, "hasChangelog": true}, "linters": ["eslint"], "coverage": 0.89}}, "evaluation": {"quality": {"carefulness": 0.31, "tests": 0.9835, "health": 1, "branding": 0}, "popularity": {"communityInterest": 2524, "downloadsCount": 153904920.66666666, "downloadsAcceleration": 272342.8583904109, "dependentsCount": 1764}, "maintenance": {"releasesFrequency": 0.11095890410958906, "commitsFrequency": 0.4595547945205479, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6406759052317103, "detail": {"quality": 0.7362557468314237, "popularity": 0.7599074336146685, "maintenance": 0.4395187983347121}}}
{"analyzedAt": "2020-02-21T14:49:08.785Z", "collected": {"metadata": {"name": "source-map-resolve", "scope": "unscoped", "version": "0.5.3", "description": "Resolve the source map and/or sources for a generated file.", "keywords": ["source map", "sourcemap", "source", "map", "sourceMappingURL", "resolve", "resolver", "locate", "locator", "find", "finder"], "date": "2019-12-28T19:36:35.020Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/lydell/source-map-resolve.git"}, "links": {"npm": "https://www.npmjs.com/package/source-map-resolve", "homepage": "https://github.com/lydell/source-map-resolve#readme", "repository": "https://github.com/lydell/source-map-resolve", "bugs": "https://github.com/lydell/source-map-resolve/issues"}, "license": "MIT", "dependencies": {"atob": "^2.1.2", "decode-uri-component": "^0.2.0", "resolve-url": "^0.2.1", "source-map-url": "^0.4.0", "urix": "^0.1.0"}, "devDependencies": {"Base64": "1.1.0", "jshint": "2.10.3", "setimmediate": "1.0.5", "simple-asyncify": "1.0.0", "tape": "4.12.1"}, "releases": [{"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2}, {"from": "2018-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Overview [![Build Status](https://travis-ci.org/lydell/source-map-resolve.svg?branch=master)](https://travis-ci.org/lydell/source-map-resolve)\n========\n\nResolve the source map and/or sources for a generated file.\n\n```js\nvar sourceMapResolve = require(\"source-map-resolve\")\nvar sourceMap        = require(\"source-map\")\n\nvar code = [\n  \"!function(){...}();\",\n  \"/*# sourceMappingURL=foo.js.map */\"\n].join(\"\\n\")\n\nsourceMapResolve.resolveSourceMap(code, \"/js/foo.js\", fs.readFile, function(error, result) {\n  if (error) {\n    return notifyFailure(error)\n  }\n  result\n  // {\n  //   map: {file: \"foo.js\", mappings: \"...\", sources: [\"/coffee/foo.coffee\"], names: []},\n  //   url: \"/js/foo.js.map\",\n  //   sourcesRelativeTo: \"/js/foo.js.map\",\n  //   sourceMappingURL: \"foo.js.map\"\n  // }\n\n  sourceMapResolve.resolveSources(result.map, result.sourcesRelativeTo, fs.readFile, function(error, result) {\n    if (error) {\n      return notifyFailure(error)\n    }\n    result\n    // {\n    //   sourcesResolved: [\"/coffee/foo.coffee\"],\n    //   sourcesContent: [\"<contents of /coffee/foo.coffee>\"]\n    // }\n  })\n})\n\nsourceMapResolve.resolve(code, \"/js/foo.js\", fs.readFile, function(error, result) {\n  if (error) {\n    return notifyFailure(error)\n  }\n  result\n  // {\n  //   map: {file: \"foo.js\", mappings: \"...\", sources: [\"/coffee/foo.coffee\"], names: []},\n  //   url: \"/js/foo.js.map\",\n  //   sourcesRelativeTo: \"/js/foo.js.map\",\n  //   sourceMappingURL: \"foo.js.map\",\n  //   sourcesResolved: [\"/coffee/foo.coffee\"],\n  //   sourcesContent: [\"<contents of /coffee/foo.coffee>\"]\n  // }\n  result.map.sourcesContent = result.sourcesContent\n  var map = new sourceMap.sourceMapConsumer(result.map)\n  map.sourceContentFor(\"/coffee/foo.coffee\")\n  // \"<contents of /coffee/foo.coffee>\"\n})\n```\n\n\nInstallation\n============\n\n- `npm install source-map-resolve`\n- `bower install source-map-resolve`\n- `component install lydell/source-map-resolve`\n\nWorks with CommonJS, AMD and browser globals, through UMD.\n\nNote: This module requires `setImmediate` and `atob`.\nUse polyfills if needed, such as:\n\n- <https://github.com/NobleJS/setImmediate>\n- <https://github.com/davidchambers/Base64.js>\n\n\nUsage\n=====\n\n### `sourceMapResolve.resolveSourceMap(code, codeUrl, read, callback)` ###\n\n- `code` is a string of code that may or may not contain a sourceMappingURL\n  comment. Such a comment is used to resolve the source map.\n- `codeUrl` is the url to the file containing `code`. If the sourceMappingURL\n  is relative, it is resolved against `codeUrl`.\n- `read(url, callback)` is a function that reads `url` and responds using\n  `callback(error, content)`. In Node.js you might want to use `fs.readFile`,\n  while in the browser you might want to use an asynchronus `XMLHttpRequest`.\n- `callback(error, result)` is a function that is invoked with either an error\n  or `null` and the result.\n\nThe result is an object with the following properties:\n\n- `map`: The source map for `code`, as an object (not a string).\n- `url`: The url to the source map. If the source map came from a data uri,\n  this property is `null`, since then there is no url to it.\n- `sourcesRelativeTo`: The url that the sources of the source map are relative\n  to. Since the sources are relative to the source map, and the url to the\n  source map is provided as the `url` property, this property might seem\n  superfluos. However, remember that the `url` property can be `null` if the\n  source map came from a data uri. If so, the sources are relative to the file\n  containing the data uri\u2014`codeUrl`. This property will be identical to the\n  `url` property or `codeUrl`, whichever is appropriate. This way you can\n  conveniently resolve the sources without having to think about where the\n  source map came from.\n- `sourceMappingURL`: The url of the sourceMappingURL comment in `code`.\n\nIf `code` contains no sourceMappingURL, the result is `null`.\n\n### `sourceMapResolve.resolveSources(map, mapUrl, read, [options], callback)` ###\n\n- `map` is a source map, as an object (not a string).\n- `mapUrl` is the url to the file containing `map`. Relative sources in the\n  source map, if any, are resolved against `mapUrl`.\n- `read(url, callback)` is a function that reads `url` and responds using\n  `callback(error, content)`. In Node.js you might want to use `fs.readFile`,\n  while in the browser you might want to use an asynchronus `XMLHttpRequest`.\n- `options` is an optional object with any of the following properties:\n  - `sourceRoot`: Override the `sourceRoot` property of the source map, which\n    might only be relevant when resolving sources in the browser. This lets you\n    bypass it when using the module outside of a browser, if needed. Pass a\n    string to replace the `sourceRoot` property with, or `false` to ignore it.\n    Defaults to `undefined`.\n- `callback(error, result)` is a function that is invoked with either an error\n  or `null` and the result.\n\nThe result is an object with the following properties:\n\n- `sourcesResolved`: The same as `map.sources`, except all the sources are\n  fully resolved.\n- `sourcesContent`: An array with the contents of all sources in `map.sources`,\n  in the same order as `map.sources`. If getting the contents of a source fails,\n  an error object is put into the array instead.\n\n### `sourceMapResolve.resolve(code, codeUrl, read, [options], callback)` ###\n\nThe arguments are identical to `sourceMapResolve.resolveSourceMap`, except that\nyou may also provide the same `options` as in `sourceMapResolve.resolveSources`.\n\nThis is a convenience method that first resolves the source map and then its\nsources. You could also do this by first calling\n`sourceMapResolve.resolveSourceMap` and then `sourceMapResolve.resolveSources`.\n\nThe result is identical to `sourceMapResolve.resolveSourceMap`, with the\nproperties from `sourceMapResolve.resolveSources` merged into it.\n\nThere is one extra feature available, though. If `code` is `null`, `codeUrl` is\ntreated as a url to the source map instead of to `code`, and will be read. This\nis handy if you _sometimes_ get the source map url from the `SourceMap: <url>`\nheader (see the [Notes] section). In this case, the `sourceMappingURL` property\nof the result is `null`.\n\n\n[Notes]: #notes\n\n### `sourceMapResolve.*Sync()` ###\n\nThere are also sync versions of the three previous functions. They are identical\nto the async versions, except:\n\n- They expect a sync reading function. In Node.js you might want to use\n  `fs.readFileSync`, while in the browser you might want to use a synchronus\n  `XMLHttpRequest`.\n- They throw errors and return the result instead of using a callback.\n\n`sourceMapResolve.resolveSourcesSync` also accepts `null` as the `read`\nparameter. The result is the same as when passing a function as the `read\nparameter`, except that the `sourcesContent` property of the result will be an\nempty array. In other words, the sources aren\u2019t read. You only get the\n`sourcesResolved` property. (This only supported in the synchronus version, since\nthere is no point doing it asynchronusly.)\n\n### `sourceMapResolve.parseMapToJSON(string, [data])` ###\n\nThe spec says that if a source map (as a string) starts with `)]}'`, it should\nbe stripped off. This is to prevent XSSI attacks. This function does that and\nreturns the result of `JSON.parse`ing what\u2019s left.\n\nIf this function throws `error`, `error.sourceMapData === data`.\n\n### Errors\n\nAll errors passed to callbacks or thrown by this module have a `sourceMapData`\nproperty that contain as much as possible of the intended result of the function\nup until the error occurred.\n\nNote that while the `map` property of result objects always is an object,\n`error.sourceMapData.map` will be a string if parsing that string fails.\n\n\nNote\n====\n\nThis module resolves the source map for a given generated file by looking for a\nsourceMappingURL comment. The spec defines yet a way to provide the URL to the\nsource map: By sending the `SourceMap: <url>` header along with the generated\nfile. Since this module doesn\u2019t retrive the generated code for you (instead\n_you_ give the generated code to the module), it\u2019s up to you to look for such a\nheader when you retrieve the file (should the need arise).\n\n\nDevelopment\n===========\n\nTests\n-----\n\nFirst off, run `npm install` to install testing modules and browser polyfills.\n\n`npm test` lints the code and runs the test suite in Node.js.\n\nx-package.json5\n---------------\n\npackage.json, component.json and bower.json are all generated from\nx-package.json5 by using [`xpkg`]. Only edit x-package.json5, and remember to\nrun `xpkg` before commiting!\n\n[`xpkg`]: https://github.com/kof/node-xpkg\n\nGenerating the browser version\n------------------------------\n\nsource-map-resolve.js is generated from source-map-resolve-node.js and\nsource-map-resolve-template.js. Only edit the two latter files, _not_\nsource-map-resolve.js! To generate it, run `npm run build`.\n\n\nLicense\n=======\n\n[MIT](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 2310270}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 11989751}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 51069809}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 126840971}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 245464819}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 454357308}], "dependentsCount": 79, "starsCount": 4}, "github": {"starsCount": 34, "forksCount": 4, "subscribersCount": 1, "issues": {"count": 15, "openCount": 2, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 6, "291600": 3, "874800": 1, "2624400": 2, "7873200": 0, "23619600": 1, "70858800": 1, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 57}, {"username": "fresheneesz", "commitsCount": 1}], "commits": [{"from": "2020-02-14T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2020-01-22T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}, {"from": "2019-08-25T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}, {"from": "2019-02-21T00:00:00.000Z", "to": "2020-02-21T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 8911, "testsSize": 49935, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/lydell/source-map-resolve.svg?branch=master", "service": "https://api.travis-ci.org/lydell/source-map-resolve.svg?branch=master", "shields": "https://img.shields.io/travis/lydell/source-map-resolve/master.svg", "content": "https://img.shields.io/travis/lydell/source-map-resolve/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 45, "downloadsCount": 42280323.666666664, "downloadsAcceleration": 144097.83015601215, "dependentsCount": 79}, "maintenance": {"releasesFrequency": 0.5428082191780822, "commitsFrequency": 0.3840410958904109, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6743195494456322, "detail": {"quality": 0.8826411257509669, "popularity": 0.5214131478595153, "maintenance": 0.6486645999128907}}}
{"analyzedAt": "2020-02-11T12:17:50.971Z", "collected": {"metadata": {"name": "source-map-support", "scope": "unscoped", "version": "0.5.16", "description": "Fixes stack traces for files with source maps", "date": "2019-10-29T22:58:32.200Z", "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "evanw", "email": "evan.exe@gmail.com"}, {"username": "julien-f", "email": "julien.fontanet@isonoe.net"}, {"username": "linusu", "email": "linus@folkdatorn.se"}], "repository": {"type": "git", "url": "git+https://github.com/evanw/node-source-map-support.git"}, "links": {"npm": "https://www.npmjs.com/package/source-map-support", "homepage": "https://github.com/evanw/node-source-map-support#readme", "repository": "https://github.com/evanw/node-source-map-support", "bugs": "https://github.com/evanw/node-source-map-support/issues"}, "license": "MIT", "dependencies": {"buffer-from": "^1.0.0", "source-map": "^0.6.0"}, "devDependencies": {"browserify": "^4.2.3", "coffeescript": "^1.12.7", "http-server": "^0.11.1", "mocha": "^3.5.3", "webpack": "^1.15.0"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 4}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 7}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 14}], "hasTestScript": true, "readme": "# Source Map Support\n[![Build Status](https://travis-ci.org/evanw/node-source-map-support.svg?branch=master)](https://travis-ci.org/evanw/node-source-map-support)\n\nThis module provides source map support for stack traces in node via the [V8 stack trace API](https://github.com/v8/v8/wiki/Stack-Trace-API). It uses the [source-map](https://github.com/mozilla/source-map) module to replace the paths and line numbers of source-mapped files with their original paths and line numbers. The output mimics node's stack trace format with the goal of making every compile-to-JS language more of a first-class citizen. Source maps are completely general (not specific to any one language) so you can use source maps with multiple compile-to-JS languages in the same node process.\n\n## Installation and Usage\n\n#### Node support\n\n```\n$ npm install source-map-support\n```\n\nSource maps can be generated using libraries such as [source-map-index-generator](https://github.com/twolfson/source-map-index-generator). Once you have a valid source map, place a source mapping comment somewhere in the file (usually done automatically or with an option by your transpiler):\n\n```\n//# sourceMappingURL=path/to/source.map\n```\n\nIf multiple sourceMappingURL comments exist in one file, the last sourceMappingURL comment will be\nrespected (e.g. if a file mentions the comment in code, or went through multiple transpilers).\nThe path should either be absolute or relative to the compiled file.\n\nFrom here you have two options.\n\n##### CLI Usage\n\n```bash\nnode -r source-map-support/register compiled.js\n```\n\n##### Programmatic Usage\n\nPut the following line at the top of the compiled file.\n\n```js\nrequire('source-map-support').install();\n```\n\nIt is also possible to install the source map support directly by\nrequiring the `register` module which can be handy with ES6:\n\n```js\nimport 'source-map-support/register'\n\n// Instead of:\nimport sourceMapSupport from 'source-map-support'\nsourceMapSupport.install()\n```\nNote: if you're using babel-register, it includes source-map-support already.\n\nIt is also very useful with Mocha:\n\n```\n$ mocha --require source-map-support/register tests/\n```\n\n#### Browser support\n\nThis library also works in Chrome. While the DevTools console already supports source maps, the V8 engine doesn't and `Error.prototype.stack` will be incorrect without this library. Everything will just work if you deploy your source files using [browserify](http://browserify.org/). Just make sure to pass the `--debug` flag to the browserify command so your source maps are included in the bundled code.\n\nThis library also works if you use another build process or just include the source files directly. In this case, include the file `browser-source-map-support.js` in your page and call `sourceMapSupport.install()`. It contains the whole library already bundled for the browser using browserify.\n\n```html\n<script src=\"browser-source-map-support.js\"></script>\n<script>sourceMapSupport.install();</script>\n```\n\nThis library also works if you use AMD (Asynchronous Module Definition), which is used in tools like [RequireJS](http://requirejs.org/). Just list `browser-source-map-support` as a dependency:\n\n```html\n<script>\n  define(['browser-source-map-support'], function(sourceMapSupport) {\n    sourceMapSupport.install();\n  });\n</script>\n```\n\n## Options\n\nThis module installs two things: a change to the `stack` property on `Error` objects and a handler for uncaught exceptions that mimics node's default exception handler (the handler can be seen in the demos below). You may want to disable the handler if you have your own uncaught exception handler. This can be done by passing an argument to the installer:\n\n```js\nrequire('source-map-support').install({\n  handleUncaughtExceptions: false\n});\n```\n\nThis module loads source maps from the filesystem by default. You can provide alternate loading behavior through a callback as shown below. For example, [Meteor](https://github.com/meteor) keeps all source maps cached in memory to avoid disk access.\n\n```js\nrequire('source-map-support').install({\n  retrieveSourceMap: function(source) {\n    if (source === 'compiled.js') {\n      return {\n        url: 'original.js',\n        map: fs.readFileSync('compiled.js.map', 'utf8')\n      };\n    }\n    return null;\n  }\n});\n```\n\nThe module will by default assume a browser environment if XMLHttpRequest and window are defined. If either of these do not exist it will instead assume a node environment.\nIn some rare cases, e.g. when running a browser emulation and where both variables are also set, you can explictly specify the environment to be either 'browser' or 'node'.\n\n```js\nrequire('source-map-support').install({\n  environment: 'node'\n});\n```\n\nTo support files with inline source maps, the `hookRequire` options can be specified, which will monitor all source files for inline source maps.\n\n\n```js\nrequire('source-map-support').install({\n  hookRequire: true\n});\n```\n\nThis monkey patches the `require` module loading chain, so is not enabled by default and is not recommended for any sort of production usage.\n\n## Demos\n\n#### Basic Demo\n\noriginal.js:\n\n```js\nthrow new Error('test'); // This is the original code\n```\n\ncompiled.js:\n\n```js\nrequire('source-map-support').install();\n\nthrow new Error('test'); // This is the compiled code\n// The next line defines the sourceMapping.\n//# sourceMappingURL=compiled.js.map\n```\n\ncompiled.js.map:\n\n```json\n{\n  \"version\": 3,\n  \"file\": \"compiled.js\",\n  \"sources\": [\"original.js\"],\n  \"names\": [],\n  \"mappings\": \";;AAAA,MAAM,IAAI\"\n}\n```\n\nRun compiled.js using node (notice how the stack trace uses original.js instead of compiled.js):\n\n```\n$ node compiled.js\n\noriginal.js:1\nthrow new Error('test'); // This is the original code\n      ^\nError: test\n    at Object.<anonymous> (original.js:1:7)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\n#### TypeScript Demo\n\ndemo.ts:\n\n```typescript\ndeclare function require(name: string);\nrequire('source-map-support').install();\nclass Foo {\n  constructor() { this.bar(); }\n  bar() { throw new Error('this is a demo'); }\n}\nnew Foo();\n```\n\nCompile and run the file using the TypeScript compiler from the terminal:\n\n```\n$ npm install source-map-support typescript\n$ node_modules/typescript/bin/tsc -sourcemap demo.ts\n$ node demo.js\n\ndemo.ts:5\n  bar() { throw new Error('this is a demo'); }\n                ^\nError: this is a demo\n    at Foo.bar (demo.ts:5:17)\n    at new Foo (demo.ts:4:24)\n    at Object.<anonymous> (demo.ts:7:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\nThere is also the option to use `-r source-map-support/register` with typescript, without the need add the `require('source-map-support').install()` in the code base:\n\n```\n$ npm install source-map-support typescript\n$ node_modules/typescript/bin/tsc  -sourcemap demo.ts\n$ node -r source-map-support/register demo.js\n\ndemo.ts:5\n  bar() { throw new Error('this is a demo'); }\n                ^\nError: this is a demo\n    at Foo.bar (demo.ts:5:17)\n    at new Foo (demo.ts:4:24)\n    at Object.<anonymous> (demo.ts:7:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\n#### CoffeeScript Demo\n\ndemo.coffee:\n\n```coffee\nrequire('source-map-support').install()\nfoo = ->\n  bar = -> throw new Error 'this is a demo'\n  bar()\nfoo()\n```\n\nCompile and run the file using the CoffeeScript compiler from the terminal:\n\n```sh\n$ npm install source-map-support coffeescript\n$ node_modules/.bin/coffee --map --compile demo.coffee\n$ node demo.js\n\ndemo.coffee:3\n  bar = -> throw new Error 'this is a demo'\n                     ^\nError: this is a demo\n    at bar (demo.coffee:3:22)\n    at foo (demo.coffee:4:3)\n    at Object.<anonymous> (demo.coffee:5:1)\n    at Object.<anonymous> (demo.coffee:1:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n```\n\n## Tests\n\nThis repo contains both automated tests for node and manual tests for the browser. The automated tests can be run using mocha (type `mocha` in the root directory). To run the manual tests:\n\n* Build the tests using `build.js`\n* Launch the HTTP server (`npm run serve-tests`) and visit\n  * http://127.0.0.1:1336/amd-test\n  * http://127.0.0.1:1336/browser-test\n  * http://127.0.0.1:1336/browserify-test - **Currently not working** due to a bug with browserify (see [pull request #66](https://github.com/evanw/node-source-map-support/pull/66) for details).\n* For `header-test`, run `server.js` inside that directory and visit http://127.0.0.1:1337/\n\n## License\n\nThis code is available under the [MIT license](http://opensource.org/licenses/MIT)."}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 3103317}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 17261359}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 69454591}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 188780954}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 375732147}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 714286962}], "dependentsCount": 2572, "starsCount": 30}, "github": {"starsCount": 1555, "forksCount": 204, "subscribersCount": 19, "issues": {"count": 266, "openCount": 88, "distribution": {"3600": 21, "10800": 8, "32400": 14, "97200": 22, "291600": 25, "874800": 16, "2624400": 21, "7873200": 19, "23619600": 33, "70858800": 28, "212576400": 59}, "isDisabled": false}, "contributors": [{"username": "LinusU", "commitsCount": 73}, {"username": "evanw", "commitsCount": 49}, {"username": "julien-f", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 11}, {"username": "tomhughes", "commitsCount": 4}, {"username": "fresheneesz", "commitsCount": 3}, {"username": "isaacs", "commitsCount": 3}, {"username": "kriszyp", "commitsCount": 3}, {"username": "ScottWeinstein", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "ardeois", "commitsCount": 2}, {"username": "glasser", "commitsCount": 2}, {"username": "joeyespo", "commitsCount": 2}, {"username": "legraphista", "commitsCount": 2}, {"username": "mprobst", "commitsCount": 2}, {"username": "seanpoulter", "commitsCount": 2}, {"username": "timoxley", "commitsCount": 2}, {"username": "6utt3rfly", "commitsCount": 1}, {"username": "Alorel", "commitsCount": 1}, {"username": "ArtemGovorov", "commitsCount": 1}, {"username": "Hilzu", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "LoicPoullain", "commitsCount": 1}, {"username": "Merott", "commitsCount": 1}, {"username": "Yogu", "commitsCount": 1}, {"username": "apechimp", "commitsCount": 1}, {"username": "ashaffer", "commitsCount": 1}, {"username": "benjamn", "commitsCount": 1}, {"username": "bpmccurdy", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "dbushong", "commitsCount": 1}, {"username": "dirkluijk", "commitsCount": 1}, {"username": "floridoo", "commitsCount": 1}, {"username": "gfx", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "gurdiga", "commitsCount": 1}, {"username": "jdude", "commitsCount": 1}, {"username": "jhen0409", "commitsCount": 1}, {"username": "jlfwong", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "josecolella", "commitsCount": 1}, {"username": "joshma", "commitsCount": 1}, {"username": "jpillora", "commitsCount": 1}, {"username": "ldesplat", "commitsCount": 1}, {"username": "marcominetti", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "mgroenhoff", "commitsCount": 1}, {"username": "michaelficarra", "commitsCount": 1}, {"username": "mohd-akram", "commitsCount": 1}, {"username": "moonpyk", "commitsCount": 1}, {"username": "nickewansmith", "commitsCount": 1}, {"username": "niieani", "commitsCount": 1}, {"username": "pspeter3", "commitsCount": 1}, {"username": "raine", "commitsCount": 1}, {"username": "segphault", "commitsCount": 1}, {"username": "tisba", "commitsCount": 1}, {"username": "tugend", "commitsCount": 1}, {"username": "uiteoi", "commitsCount": 1}, {"username": "zeekay", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 11}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 22}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 9459, "testsSize": 20354, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/evanw/node-source-map-support.svg?branch=master", "service": "https://api.travis-ci.org/evanw/node-source-map-support.svg?branch=master", "shields": "https://img.shields.io/travis/evanw/node-source-map-support/master.svg", "content": "https://img.shields.io/travis/evanw/node-source-map-support/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "outdatedDependencies": {"source-map": {"required": "^0.6.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 1867, "downloadsCount": 62926984.666666664, "downloadsAcceleration": 122163.17208904104, "dependentsCount": 2572}, "maintenance": {"releasesFrequency": 0.8544520547945206, "commitsFrequency": 0.7093321917808219, "openIssues": 0.7819548872180452, "issuesDistribution": 0}}, "score": {"final": 0.7437901416164969, "detail": {"quality": 0.8350967100142782, "popularity": 0.7436693084949644, "maintenance": 0.6656482018256459}}}
{"analyzedAt": "2020-02-27T09:47:54.825Z", "collected": {"metadata": {"name": "source-map-url", "scope": "unscoped", "version": "0.4.0", "description": "Tools for working with sourceMappingURL comments.", "keywords": ["source map", "sourceMappingURL", "comment", "annotation"], "date": "2015-11-12T21:03:24.856Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/lydell/source-map-url.git"}, "links": {"npm": "https://www.npmjs.com/package/source-map-url", "homepage": "https://github.com/lydell/source-map-url#readme", "repository": "https://github.com/lydell/source-map-url", "bugs": "https://github.com/lydell/source-map-url/issues"}, "license": "MIT", "devDependencies": {"mocha": "~1.17.1", "expect.js": "~0.3.1", "jshint": "~2.4.3"}, "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "Overview [![Build Status](https://travis-ci.org/lydell/source-map-url.png?branch=master)](https://travis-ci.org/lydell/source-map-url)\n========\n\n[![browser support](https://ci.testling.com/lydell/source-map-url.png)](https://ci.testling.com/lydell/source-map-url)\n\nTools for working with sourceMappingURL comments.\n\n```js\nvar sourceMappingURL = require(\"source-map-url\")\n\nvar code = [\n  \"!function(){...}();\",\n  \"/*# sourceMappingURL=foo.js.map */\"\n].join(\"\\n\")\n\nsourceMappingURL.existsIn(code)\n// true\n\nsourceMappingURL.getFrom(code)\n// foo.js.map\n\ncode = sourceMappingURL.insertBefore(code, \"// License: MIT\\n\")\n// !function(){...}();\n// // License: MIT\n// /*# sourceMappingURL=foo.js.map */\n\ncode = sourceMappingURL.removeFrom(code)\n// !function(){...}();\n// // License: MIT\n\nsourceMappingURL.existsIn(code)\n// false\n\nsourceMappingURL.getFrom(code)\n// null\n\ncode += \"//# sourceMappingURL=/other/file.js.map\"\n// !function(){...}();\n// // License: MIT\n// //# sourceMappingURL=/other/file.js.map\n```\n\n\nInstallation\n============\n\n- `npm install source-map-url`\n- `bower install source-map-url`\n- `component install lydell/source-map-url`\n\nWorks with CommonJS, AMD and browser globals, through UMD.\n\n\nUsage\n=====\n\n### `sourceMappingURL.getFrom(code)` ###\n\nReturns the url of the sourceMappingURL comment in `code`. Returns `null` if\nthere is no such comment.\n\n### `sourceMappingURL.existsIn(code)` ###\n\nReturns `true` if there is a sourceMappingURL comment in `code`, or `false`\notherwise.\n\n### `sourceMappingURL.removeFrom(code)` ###\n\nRemoves the sourceMappingURL comment in `code`. Does nothing if there is no\nsuch comment. Returns the updated `code`.\n\n### `sourceMappingURL.insertBefore(code, string)` ###\n\nInserts `string` before the sourceMappingURL comment in `code`. Appends\n`string` to `code` if there is no such comment.\n\nLets you append something to a file without worrying about burying the\nsourceMappingURL comment (by keeping it at the end of the file).\n\n### `sourceMappingURL.regex` ###\n\nThe regex that is used to match sourceMappingURL comments. It matches both `//`\nand `/**/` comments, thus supporting both JavaScript and CSS.\n\n\nTests\n=====\n\nStart by running `npm test`, which lints the code and runs the test suite in Node.js.\n\nTo run the tests in a browser, run `testling` (`npm install -g testling`) or `testling -u`.\n\n\nLicense\n=======\n\n[The X11 (\u201cMIT\u201d) License](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2064009}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 10691763}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 45315477}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 115673865}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 230236371}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 436143659}], "dependentsCount": 120, "starsCount": 0}, "github": {"starsCount": 26, "forksCount": 6, "subscribersCount": 1, "issues": {"count": 4, "openCount": 1, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 0, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 27}, {"username": "Synzvato", "commitsCount": 1}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2395, "testsSize": 9244, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/lydell/source-map-url.png?branch=master", "service": "https://api.travis-ci.org/lydell/source-map-url.svg?branch=master", "shields": "https://img.shields.io/travis/lydell/source-map-url/master.svg", "content": "https://img.shields.io/travis/lydell/source-map-url/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 35, "downloadsCount": 38557955, "downloadsAcceleration": 99944.64537671226, "dependentsCount": 120}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.9166666666666667, "issuesDistribution": 0}}, "score": {"final": 0.5049124011262003, "detail": {"quality": 0.8826411257509669, "popularity": 0.5194090384954915, "maintenance": 0.16664828550710922}}}
{"analyzedAt": "2020-02-13T09:20:12.241Z", "collected": {"metadata": {"name": "split-string", "scope": "unscoped", "version": "6.1.0", "description": "Easy way to split a string on a given character unless it's quoted or escaped.", "keywords": ["character", "escape", "split", "string"], "date": "2019-04-22T23:03:41.133Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/split-string.git"}, "links": {"npm": "https://www.npmjs.com/package/split-string", "homepage": "https://github.com/jonschlinkert/split-string", "repository": "https://github.com/jonschlinkert/split-string", "bugs": "https://github.com/jonschlinkert/split-string/issues"}, "license": "MIT", "devDependencies": {"dtslint": "^0.7.0", "gulp-format-md": "^1.0.0", "mocha": "^5.2.0", "nyc": "^12.0.2"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# split-string [![NPM version](https://img.shields.io/npm/v/split-string.svg?style=flat)](https://www.npmjs.com/package/split-string) [![NPM monthly downloads](https://img.shields.io/npm/dm/split-string.svg?style=flat)](https://npmjs.org/package/split-string) [![NPM total downloads](https://img.shields.io/npm/dt/split-string.svg?style=flat)](https://npmjs.org/package/split-string) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/split-string.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/split-string)\n\n> Easy way to split a string on a given character unless it's quoted or escaped.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save split-string\n```\n\n## Usage\n\n```js\nconst split = require('split-string');\n\nconsole.log(split('a.b.c'));\n//=> ['a', 'b', 'c']\n\n// respects escaped characters\nconsole.log(split('a.b.c\\\\.d'));\n//=> ['a', 'b', 'c.d']\n\n// respects double-quoted strings\nconsole.log(split('a.\"b.c.d\".e'));\n//=> ['a', '\"b.c.d\"', 'e']\n```\n\n## Options\n\n### options.quotes\n\n**Type**: `Array|Boolean`\n\n**Default**: `[]`\n\n**Description**\n\nTell split-string not to split inside any of the quote characters specified on the quotes option. Each character signifies both the \"opening\" and \"closing\" character to use.\n\n```js\n// default behavior\nconsole.log(split('a.b.\"c.d.e.f.g\".h.i'));\n//=> [ 'a', 'b', '\"c', 'd', 'e', 'f', 'g\"', 'h', 'i' ]\n\n// with quotes\nconsole.log(split('a.b.\"c.d.e.f.g\".h.i', { quotes: ['\"'] }));\n//=> [ 'a', 'b', '\"c.d.e.f.g\"', 'h', 'i' ]\n\n// escaped quotes will be ignored\nconsole.log(split('a.b.\\\\\"c.d.\"e.f.g\".h.i', { quotes: ['\"'] }));\n//=> [ 'a', 'b', '\"c', 'd', '\"e.f.g\"', 'h', 'i' ]\n\n// example of how to exclude non-escaped quotes from the result\nlet keep = (value, state) => {\n  return value !== '\\\\' && (value !== '\"' || state.prev() === '\\\\');\n};\nconsole.log(split('a.b.\\\\\"c.d.\"e.f.g\".h.i', { quotes: ['\"'], keep }));\n//=> [ 'a', 'b', '\"c', 'd', 'e.f.g', 'h', 'i' ]\n```\n\n## Options\n\n### options.brackets\n\n**Type**: `Object|Boolean`\n\n**Default**: `{}`\n\n**Description**\n\nBy default, no special significance is given to bracket-like characters (such as square brackets, curly braces, angle brackets, and so on).\n\n```js\n// default behavior\nconsole.log(split('a.{b.c}.{d.e}'));\n//=> [ 'a', '{b', 'c}', '{d', 'e}' ]\n```\n\nWhen `options.brackets` is `true`, the following brackets types are supported:\n\n```js\n{\n  '<': '>',\n  '(': ')',\n  '[': ']',\n  '{': '}'\n}\n```\n\nFor example:\n\n```js\nconsole.log(split('a.{b.c}.{d.e}', { brackets: true }));\n//=> [ 'a', '{b.c}', '{d.e}' ]\n```\n\nAlternatively, an object of brackets may be passed, where each key is the _opening bracket_ and each value is the corresponding _closing bracket_. Note that the key and value **must be different characters**. If you want to use the same character for both open and close, use the [quotes option](#optionsquotes).\n\n**Examples**\n\n```js\n// no bracket support by default\nconsole.log(split('a.{b.c}.[d.e].f'));\n//=> [ 'a', '{b', 'c}', '[d', 'e]', 'f' ]\n\n// tell split-string not to split inside curly braces\nconsole.log(split('a.{b.c}.[d.e].f', { brackets: { '{': '}' }}));\n//=> [ 'a', '{b.c}', '[d', 'e]', 'f' ]\n\n// tell split-string not to split inside any of these types: \"<>{}[]()\"\nconsole.log(split('a.{b.c}.[d.e].f', { brackets: true }));\n//=> [ 'a', '{b.c}', '[d.e]', 'f' ]\n\n// ...nested brackets are also supported\nconsole.log(split('a.{b.{c.d}.e}.f', { brackets: true }));\n//=> [ 'a', '{b.{c.d}.e}', 'f' ]\n\n// tell split-string not to split inside the given custom types\nconsole.log(split('\u00aba.b\u00bb.\u27e8c.d\u27e9.[e.f]', { brackets: { '\u00ab': '\u00bb', '\u27e8': '\u27e9' } }));\n//=> [ '\u00aba.b\u00bb', '\u27e8c.d\u27e9', '[e', 'f]' ]\n```\n\n### options.keep\n\n**Type**: `function`\n\n**Default**: Function that returns true if the character is not `\\\\`.\n\nFunction that returns true when a character should be retained in the result.\n\n**Example**\n\n```js\nconsole.log(split('a.b\\\\.c')); //=> ['a', 'b.c']\n\n// keep all characters\nconsole.log(split('a.b.\\\\c', { keep: () => true })); //=> ['a', 'b\\.c']\n```\n\n### options.separator\n\n**Type**: `string`\n\n**Default**: `.`\n\nThe character to split on.\n\n**Example**\n\n```js\nconsole.log(split('a.b,c', { separator: ',' })); //=> ['a.b', 'c']\n```\n\n## Split function\n\nOptionally pass a function as the last argument to tell split-string whether or not to split when the specified separator is encountered.\n\n**Example**\n\n```js\n// only split on \".\" when the \"previous\" character is \"a\"\nconsole.log(split('a.b.c.a.d.e', state => state.prev() === 'a'));\n//=> [ 'a', 'b.c.a', 'd.e' ]\n```\n\nThe `state` object exposes the following properties:\n\n* `input` - (String) The un-modified, user-defined input string\n* `separator` - (String) the specified separator to split on.\n* `index` - (Number) The current cursor position\n* `value` - (String) The character at the current index\n* `bos` - (Function) Returns true if position is at the beginning-of-string\n* `eos` - (Function) Returns true if position is at the end-of-string\n* `prev` - (Function) Returns the previously scanned character\n* `next` - (Function) Returns the next character after the current position\n* `block` - (Object) The \"current\" AST node.\n* `stack` - (Array) AST nodes\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [deromanize](https://www.npmjs.com/package/deromanize): Convert roman numerals to arabic numbers (useful for books, outlines, documentation, slide decks, etc) | [homepage](https://github.com/jonschlinkert/deromanize \"Convert roman numerals to arabic numbers (useful for books, outlines, documentation, slide decks, etc)\")\n* [randomatic](https://www.npmjs.com/package/randomatic): Generate randomized strings of a specified length using simple character sequences. The original generate-password. | [homepage](https://github.com/jonschlinkert/randomatic \"Generate randomized strings of a specified length using simple character sequences. The original generate-password.\")\n* [repeat-string](https://www.npmjs.com/package/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string. | [homepage](https://github.com/jonschlinkert/repeat-string \"Repeat the given string n times. Fastest implementation for repeating a string.\")\n* [romanize](https://www.npmjs.com/package/romanize): Convert numbers to roman numerals (useful for books, outlines, documentation, slide decks, etc) | [homepage](https://github.com/jonschlinkert/romanize \"Convert numbers to roman numerals (useful for books, outlines, documentation, slide decks, etc)\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 56 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 12 | [doowb](https://github.com/doowb) |  \n| 6  | [Ovyerus](https://github.com/Ovyerus) |  \n| 1  | [silverwind](https://github.com/silverwind) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 22, 2019._"}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2025146}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 10586511}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 44056694}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 114797039}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 229238558}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 429817949}], "dependentsCount": 75, "starsCount": 0}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 34, "forksCount": 9, "subscribersCount": 2, "issues": {"count": 18, "openCount": 6, "distribution": {"3600": 2, "10800": 0, "32400": 3, "97200": 4, "291600": 1, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 6, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 53}, {"username": "doowb", "commitsCount": 12}, {"username": "Ovyerus", "commitsCount": 5}, {"username": "silverwind", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 8371, "testsSize": 8971, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/split-string.svg?style=flat", "shields": "https://img.shields.io/npm/v/split-string.svg", "content": "https://img.shields.io/npm/v/split-string.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/split-string.svg?style=flat", "shields": "https://img.shields.io/npm/dm/split-string.svg", "content": "https://img.shields.io/npm/dm/split-string.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/split-string.svg?style=flat", "shields": "https://img.shields.io/npm/dt/split-string.svg", "content": "https://img.shields.io/npm/dt/split-string.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/split-string.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/split-string.svg", "shields": "https://img.shields.io/travis/jonschlinkert/split-string.svg", "content": "https://img.shields.io/travis/jonschlinkert/split-string.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 49, "downloadsCount": 38265679.666666664, "downloadsAcceleration": 96734.29181887361, "dependentsCount": 75}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8229941748027672, "detail": {"quality": 0.9791932954197882, "popularity": 0.51224646655661, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-05T06:48:29.778Z", "collected": {"metadata": {"name": "sprintf-js", "scope": "unscoped", "version": "1.1.2", "description": "JavaScript sprintf implementation", "date": "2018-12-09T14:05:44.561Z", "author": {"name": "Alexandru M\u0103r\u0103\u0219teanu", "email": "hello@alexei.ro", "username": "alexei"}, "publisher": {"username": "alexei", "email": "hello@alexei.ro"}, "maintainers": [{"username": "alexei", "email": "hello@alexei.ro"}], "repository": {"type": "git", "url": "git+https://github.com/alexei/sprintf.js.git"}, "links": {"npm": "https://www.npmjs.com/package/sprintf-js", "homepage": "https://github.com/alexei/sprintf.js#readme", "repository": "https://github.com/alexei/sprintf.js", "bugs": "https://github.com/alexei/sprintf.js/issues"}, "license": "BSD-3-Clause", "devDependencies": {"benchmark": "^2.1.4", "eslint": "^5.10.0", "gulp": "^3.9.1", "gulp-benchmark": "^1.1.1", "gulp-eslint": "^5.0.0", "gulp-header": "^2.0.5", "gulp-mocha": "^6.0.0", "gulp-rename": "^1.4.0", "gulp-sourcemaps": "^2.6.4", "gulp-uglify": "^3.0.1", "mocha": "^5.2.0"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "# sprintf-js\n\n[![Build Status][travisci-image]][travisci-url] [![NPM Version][npm-image]][npm-url] [![Dependency Status][dependencies-image]][dependencies-url] [![devDependency Status][dev-dependencies-image]][dev-dependencies-url]\n\n[travisci-image]: https://travis-ci.org/alexei/sprintf.js.svg?branch=master\n[travisci-url]: https://travis-ci.org/alexei/sprintf.js\n\n[npm-image]: https://badge.fury.io/js/sprintf-js.svg\n[npm-url]: https://badge.fury.io/js/sprintf-js\n\n[dependencies-image]: https://david-dm.org/alexei/sprintf.js.svg\n[dependencies-url]: https://david-dm.org/alexei/sprintf.js\n\n[dev-dependencies-image]: https://david-dm.org/alexei/sprintf.js/dev-status.svg\n[dev-dependencies-url]: https://david-dm.org/alexei/sprintf.js#info=devDependencies\n\n**sprintf-js** is a complete open source JavaScript `sprintf` implementation for the **browser** and **Node.js**.\n\n**Note: as of v1.1.1 you might need some polyfills for older environments. See [Support](#support) section below.**\n\n## Usage\n\n    var sprintf = require('sprintf-js').sprintf,\n        vsprintf = require('sprintf-js').vsprintf\n\n    sprintf('%2$s %3$s a %1$s', 'cracker', 'Polly', 'wants')\n    vsprintf('The first 4 letters of the english alphabet are: %s, %s, %s and %s', ['a', 'b', 'c', 'd'])\n\n## Installation\n\n### NPM\n\n    npm install sprintf-js\n\n### Bower\n\n    bower install sprintf\n\n## API\n\n### `sprintf`\n\nReturns a formatted string:\n\n    string sprintf(string format, mixed arg1?, mixed arg2?, ...)\n\n### `vsprintf`\n\nSame as `sprintf` except it takes an array of arguments, rather than a variable number of arguments:\n\n    string vsprintf(string format, array arguments?)\n\n## Format specification\n\nThe placeholders in the format string are marked by `%` and are followed by one or more of these elements, in this order:\n\n* An optional number followed by a `$` sign that selects which argument index to use for the value. If not specified, arguments will be placed in the same order as the placeholders in the input string.\n* An optional `+` sign that forces to preceed the result with a plus or minus sign on numeric values. By default, only the `-` sign is used on negative numbers.\n* An optional padding specifier that says what character to use for padding (if specified). Possible values are `0` or any other character precedeed by a `'` (single quote). The default is to pad with *spaces*.\n* An optional `-` sign, that causes `sprintf` to left-align the result of this placeholder. The default is to right-align the result.\n* An optional number, that says how many characters the result should have. If the value to be returned is shorter than this number, the result will be padded. When used with the `j` (JSON) type specifier, the padding length specifies the tab size used for indentation.\n* An optional precision modifier, consisting of a `.` (dot) followed by a number, that says how many digits should be displayed for floating point numbers. When used with the `g` type specifier, it specifies the number of significant digits. When used on a string, it causes the result to be truncated.\n* A type specifier that can be any of:\n    * `%` \u2014 yields a literal `%` character\n    * `b` \u2014 yields an integer as a binary number\n    * `c` \u2014 yields an integer as the character with that ASCII value\n    * `d` or `i` \u2014 yields an integer as a signed decimal number\n    * `e` \u2014 yields a float using scientific notation\n    * `u` \u2014 yields an integer as an unsigned decimal number\n    * `f` \u2014 yields a float as is; see notes on precision above\n    * `g` \u2014 yields a float as is; see notes on precision above\n    * `o` \u2014 yields an integer as an octal number\n    * `s` \u2014 yields a string as is\n    * `t` \u2014 yields `true` or `false`\n    * `T` \u2014 yields the type of the argument<sup><a href=\"#fn-1\" name=\"fn-ref-1\">1</a></sup>\n    * `v` \u2014 yields the primitive value of the specified argument\n    * `x` \u2014 yields an integer as a hexadecimal number (lower-case)\n    * `X` \u2014 yields an integer as a hexadecimal number (upper-case)\n    * `j` \u2014 yields a JavaScript object or array as a JSON encoded string\n\n## Features\n\n### Argument swapping\n\nYou can also swap the arguments. That is, the order of the placeholders doesn't have to match the order of the arguments. You can do that by simply indicating in the format string which arguments the placeholders refer to:\n\n    sprintf('%2$s %3$s a %1$s', 'cracker', 'Polly', 'wants')\n\nAnd, of course, you can repeat the placeholders without having to increase the number of arguments.\n\n### Named arguments\n\nFormat strings may contain replacement fields rather than positional placeholders. Instead of referring to a certain argument, you can now refer to a certain key within an object. Replacement fields are surrounded by rounded parentheses - `(` and `)` - and begin with a keyword that refers to a key:\n\n    var user = {\n        name: 'Dolly',\n    }\n    sprintf('Hello %(name)s', user) // Hello Dolly\n\nKeywords in replacement fields can be optionally followed by any number of keywords or indexes:\n\n    var users = [\n        {name: 'Dolly'},\n        {name: 'Molly'},\n        {name: 'Polly'},\n    ]\n    sprintf('Hello %(users[0].name)s, %(users[1].name)s and %(users[2].name)s', {users: users}) // Hello Dolly, Molly and Polly\n\nNote: mixing positional and named placeholders is not (yet) supported\n\n### Computed values\n\nYou can pass in a function as a dynamic value and it will be invoked (with no arguments) in order to compute the value on the fly.\n\n    sprintf('Current date and time: %s', function() { return new Date().toString() })\n\n### AngularJS\n\nYou can use `sprintf` and `vsprintf` (also aliased as `fmt` and `vfmt` respectively) in your AngularJS projects. See `demo/`.\n\n## Support\n\n### Node.js\n\n`sprintf-js` runs in all active Node versions (4.x+).\n\n### Browser\n\n`sprintf-js` should work in all modern browsers. As of v1.1.1, you might need polyfills for the following:\n\n - `String.prototype.repeat()` (any IE)\n - `Array.isArray()` (IE < 9)\n - `Object.create()` (IE < 9)\n\nYMMV\n\n## License\n\n**sprintf-js** is licensed under the terms of the 3-clause BSD license.\n\n## Notes\n\n<small><sup><a href=\"#fn-ref-1\" name=\"fn-1\">1</a></sup> `sprintf` doesn't use the `typeof` operator. As such, the value `null` is a `null`, an array is an `array` (not an `object`), a date value is a `date` etc.</small>"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2834996}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 15351907}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 64802568}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 165824399}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 326514883}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 606067412}], "dependentsCount": 884, "starsCount": 39}, "github": {"starsCount": 1854, "forksCount": 273, "subscribersCount": 58, "issues": {"count": 186, "openCount": 40, "distribution": {"3600": 44, "10800": 4, "32400": 2, "97200": 9, "291600": 6, "874800": 9, "2624400": 15, "7873200": 15, "23619600": 22, "70858800": 28, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "alexei", "commitsCount": 143}, {"username": "litmit", "commitsCount": 9}, {"username": "nazar-pc", "commitsCount": 8}, {"username": "rebeccapeltz", "commitsCount": 3}, {"username": "MeriemKhelifi", "commitsCount": 2}, {"username": "andrasq", "commitsCount": 2}, {"username": "arose", "commitsCount": 2}, {"username": "fredludlow", "commitsCount": 2}, {"username": "msimerson", "commitsCount": 2}, {"username": "RABEHAJA-STEVENS", "commitsCount": 1}, {"username": "alograg", "commitsCount": 1}, {"username": "beck", "commitsCount": 1}, {"username": "daurnimator", "commitsCount": 1}, {"username": "giann", "commitsCount": 1}, {"username": "johnnyshields", "commitsCount": 1}, {"username": "marob", "commitsCount": 1}, {"username": "mrvisser", "commitsCount": 1}, {"username": "oliversalzburg", "commitsCount": 1}, {"username": "ppollono", "commitsCount": 1}, {"username": "stingstrom", "commitsCount": 1}, {"username": "wodka", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6341, "testsSize": 7854, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/alexei/sprintf.js.svg?branch=master", "service": "https://api.travis-ci.org/alexei/sprintf.js.svg?branch=master", "shields": "https://img.shields.io/travis/alexei/sprintf.js/master.svg", "content": "https://img.shields.io/travis/alexei/sprintf.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/alexei/sprintf.js.svg", "service": "https://david-dm.org/alexei/sprintf.js.svg", "shields": "https://img.shields.io/david/alexei/sprintf.js.svg", "content": "https://img.shields.io/david/alexei/sprintf.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/alexei/sprintf.js/dev-status.svg", "service": "https://david-dm.org/alexei/sprintf.js/dev-status.svg", "shields": "https://img.shields.io/david/dev/alexei/sprintf.js.svg", "content": "https://img.shields.io/david/dev/alexei/sprintf.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 2245, "downloadsCount": 55274799.666666664, "downloadsAcceleration": 163284.96154870628, "dependentsCount": 884}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0, "openIssues": 0.974910394265233, "issuesDistribution": 0}}, "score": {"final": 0.6082707522312714, "detail": {"quality": 0.9780316052755362, "popularity": 0.7080323769177373, "maintenance": 0.19157125350686438}}}
{"analyzedAt": "2020-02-10T02:08:23.741Z", "collected": {"metadata": {"name": "static-extend", "scope": "unscoped", "version": "0.1.2", "description": "Adds a static `extend` method to a class, to simplify inheritance. Extends the static properties, prototype properties, and descriptors from a `Parent` constructor onto `Child` constructors.", "keywords": ["class", "ctor", "descriptor", "extend", "extends", "inherit", "inheritance", "merge", "method", "prop", "properties", "property", "prototype"], "date": "2016-06-09T18:45:37.095Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/static-extend.git"}, "links": {"npm": "https://www.npmjs.com/package/static-extend", "homepage": "https://github.com/jonschlinkert/static-extend", "repository": "https://github.com/jonschlinkert/static-extend", "bugs": "https://github.com/jonschlinkert/static-extend/issues"}, "license": "MIT", "dependencies": {"define-property": "^0.2.5", "object-copy": "^0.1.0"}, "devDependencies": {"gulp-format-md": "^0.1.9", "mocha": "^2.5.3"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# static-extend [![NPM version](https://img.shields.io/npm/v/static-extend.svg?style=flat)](https://www.npmjs.com/package/static-extend) [![NPM downloads](https://img.shields.io/npm/dm/static-extend.svg?style=flat)](https://npmjs.org/package/static-extend) [![Build Status](https://img.shields.io/travis/jonschlinkert/static-extend.svg?style=flat)](https://travis-ci.org/jonschlinkert/static-extend)\n\nAdds a static `extend` method to a class, to simplify inheritance. Extends the static properties, prototype properties, and descriptors from a `Parent` constructor onto `Child` constructors.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install static-extend --save\n```\n\n## Usage\n\n```js\nvar extend = require('static-extend');\n```\n\n## API\n\n### [extend](index.js#L47)\n\nReturns a function for extending the static properties, prototype properties, and descriptors from the `Parent` constructor onto `Child` constructors.\n\n**Params**\n\n* `Parent` **{Function}**: Parent ctor\n* `extendFn` **{Function}**: Optional extend function for handling any necessary custom merging. Useful when updating methods that require a specific prototype.\n* `Child` **{Function}**: Child ctor\n* `proto` **{Object}**: Optionally pass additional prototype properties to inherit.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nvar extend = require('static-extend');\nParent.extend = extend(Parent);\n\n// optionally pass a custom merge function as the second arg\nParent.extend = extend(Parent, function(Child) {\n  Child.prototype.mixin = function(key, val) {\n    Child.prototype[key] = val;\n  };\n});\n\n// extend \"child\" constructors\nParent.extend(Child);\n\n// optionally define prototype methods as the second arg\nParent.extend(Child, {\n  foo: function() {},\n  bar: function() {}\n});\n```\n\n## Contributing\n\nThis document was generated by [verb-readme-generator](https://github.com/verbose/verb-readme-generator) (a [verb](https://github.com/verbose/verb) generator), please don't edit directly. Any changes to the readme must be made in [.verb.md](.verb.md). See [Building Docs](#building-docs).\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new). Or visit the [verb-readme-generator](https://github.com/verbose/verb-readme-generator) project to submit bug reports or pull requests for the readme layout template.\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-readme-generator && verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright \u00a9 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/static-extend/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on June 09, 2016._"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 468863}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 9903871}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 39027971}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 109022752}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 217081342}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 407164761}], "dependentsCount": 43, "starsCount": 0}, "github": {"starsCount": 9, "forksCount": 0, "subscribersCount": 2, "issues": {"count": 2, "openCount": 1, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 10}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3060, "testsSize": 4131}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/static-extend.svg?style=flat", "shields": "https://img.shields.io/npm/v/static-extend.svg", "content": "https://img.shields.io/npm/v/static-extend.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/static-extend.svg?style=flat", "shields": "https://img.shields.io/npm/dm/static-extend.svg", "content": "https://img.shields.io/npm/dm/static-extend.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/static-extend.svg?style=flat", "service": "https://api.travis-ci.org/jonschlinkert/static-extend.svg", "shields": "https://img.shields.io/travis/jonschlinkert/static-extend.svg", "content": "https://img.shields.io/travis/jonschlinkert/static-extend.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"define-property": {"required": "^0.2.5", "stable": "2.0.2", "latest": "2.0.2"}, "object-copy": {"required": "^0.1.0", "stable": "1.0.0", "latest": "1.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.6, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 12, "downloadsCount": 36340917.333333336, "downloadsAcceleration": 68975.00898021314, "dependentsCount": 43}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.5, "issuesDistribution": 0}}, "score": {"final": 0.4562874514567557, "detail": {"quality": 0.7858672919935841, "popularity": 0.473938672448997, "maintenance": 0.15613922429009008}}}
{"analyzedAt": "2020-02-25T07:38:33.113Z", "collected": {"metadata": {"name": "string-width", "scope": "unscoped", "version": "4.2.0", "description": "Get the visual width of a string - the number of columns required to display it", "keywords": ["string", "character", "unicode", "width", "visual", "column", "columns", "fullwidth", "full-width", "full", "ansi", "escape", "codes", "cli", "command-line", "terminal", "console", "cjk", "chinese", "japanese", "korean", "fixed-width"], "date": "2019-11-11T16:06:36.863Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/string-width.git"}, "links": {"npm": "https://www.npmjs.com/package/string-width", "homepage": "https://github.com/sindresorhus/string-width#readme", "repository": "https://github.com/sindresorhus/string-width", "bugs": "https://github.com/sindresorhus/string-width/issues"}, "license": "MIT", "dependencies": {"emoji-regex": "^8.0.0", "is-fullwidth-code-point": "^3.0.0", "strip-ansi": "^6.0.0"}, "devDependencies": {"ava": "^1.4.1", "tsd": "^0.7.1", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 2}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 5}, {"from": "2018-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# string-width [![Build Status](https://travis-ci.org/sindresorhus/string-width.svg?branch=master)](https://travis-ci.org/sindresorhus/string-width)\n\n> Get the visual width of a string - the number of columns required to display it\n\nSome Unicode characters are [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) and use double the normal width. [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) are stripped and doesn't affect the width.\n\nUseful to be able to measure the actual width of command-line output.\n\n\n## Install\n\n```\n$ npm install string-width\n```\n\n\n## Usage\n\n```js\nconst stringWidth = require('string-width');\n\nstringWidth('a');\n//=> 1\n\nstringWidth('\u53e4');\n//=> 2\n\nstringWidth('\\u001B[1m\u53e4\\u001B[22m');\n//=> 2\n```\n\n\n## Related\n\n- [string-width-cli](https://github.com/sindresorhus/string-width-cli) - CLI for this module\n- [string-length](https://github.com/sindresorhus/string-length) - Get the real length of a string\n- [widest-line](https://github.com/sindresorhus/widest-line) - Get the visual width of the widest line in a string\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-string-width?utm_source=npm-string-width&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-24T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 6946441}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 40622102}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 166392725}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 433648221}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 823613722}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 1420502841}], "dependentsCount": 374, "starsCount": 4}, "github": {"starsCount": 178, "forksCount": 16, "subscribersCount": 9, "issues": {"count": 24, "openCount": 3, "distribution": {"3600": 3, "10800": 1, "32400": 2, "97200": 6, "291600": 0, "874800": 1, "2624400": 0, "7873200": 3, "23619600": 3, "70858800": 1, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 27}, {"username": "BendingBender", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 2}, {"username": "LitoMore", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "tonytonyjan", "commitsCount": 1}], "commits": [{"from": "2020-02-18T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-11-27T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 0}, {"from": "2019-08-29T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 2}, {"from": "2019-02-25T00:00:00.000Z", "to": "2020-02-25T00:00:00.000Z", "count": 12}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1530, "testsSize": 1282}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/string-width.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/string-width.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/string-width/master.svg", "content": "https://img.shields.io/travis/sindresorhus/string-width/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 214, "downloadsCount": 144549407, "downloadsAcceleration": 584619.6861491629, "dependentsCount": 374}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8556140477874709, "detail": {"quality": 0.9547045235275585, "popularity": 0.6264037394281602, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-22T19:28:16.335Z", "collected": {"metadata": {"name": "strip-ansi", "scope": "unscoped", "version": "6.0.0", "description": "Strip ANSI escape codes from a string", "keywords": ["strip", "trim", "remove", "ansi", "styles", "color", "colour", "colors", "terminal", "console", "string", "tty", "escape", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2019-11-09T06:20:36.658Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/strip-ansi.git"}, "links": {"npm": "https://www.npmjs.com/package/strip-ansi", "homepage": "https://github.com/chalk/strip-ansi#readme", "repository": "https://github.com/chalk/strip-ansi", "bugs": "https://github.com/chalk/strip-ansi/issues"}, "license": "MIT", "dependencies": {"ansi-regex": "^5.0.0"}, "devDependencies": {"ava": "^2.4.0", "tsd": "^0.10.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 4}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) from a string\n\n\n## Install\n\n```\n$ npm install strip-ansi\n```\n\n\n## Usage\n\n```js\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n\nstripAnsi('\\u001B]8;;https://github.com\\u0007Click\\u001B]8;;\\u0007');\n//=> 'Click'\n```\n\n\n## strip-ansi for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of strip-ansi and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-strip-ansi?utm_source=npm-strip-ansi&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Streaming version of this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)"}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 7445562}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 44053179}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 186147036}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 475977111}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 900925874}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1607140568}], "dependentsCount": 1654, "starsCount": 13}, "github": {"starsCount": 233, "forksCount": 22, "subscribersCount": 10, "issues": {"count": 33, "openCount": 0, "distribution": {"3600": 18, "10800": 3, "32400": 3, "97200": 3, "291600": 2, "874800": 1, "2624400": 0, "7873200": 2, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 41}, {"username": "LitoMore", "commitsCount": 2}, {"username": "jbnicolai", "commitsCount": 2}, {"username": "kevva", "commitsCount": 2}, {"username": "rmg", "commitsCount": 2}, {"username": "BendingBender", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "fgimian", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 3}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1599, "testsSize": 632}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/strip-ansi.svg?branch=master", "service": "https://api.travis-ci.org/chalk/strip-ansi.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/strip-ansi/master.svg", "content": "https://img.shields.io/travis/chalk/strip-ansi/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 286, "downloadsCount": 158659037, "downloadsAcceleration": 600948.814193303, "dependentsCount": 1654}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8778944295565065, "detail": {"quality": 0.9547045235275585, "popularity": 0.6900127954538107, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-02-24T23:45:45.057Z", "collected": {"metadata": {"name": "strip-json-comments", "scope": "unscoped", "version": "3.0.1", "description": "Strip comments from JSON. Lets you use comments in your JSON files!", "keywords": ["json", "strip", "comments", "remove", "delete", "trim", "multiline", "parse", "config", "configuration", "settings", "util", "env", "environment"], "date": "2019-04-30T17:11:19.115Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/strip-json-comments.git"}, "links": {"npm": "https://www.npmjs.com/package/strip-json-comments", "homepage": "https://github.com/sindresorhus/strip-json-comments#readme", "repository": "https://github.com/sindresorhus/strip-json-comments", "bugs": "https://github.com/sindresorhus/strip-json-comments/issues"}, "license": "MIT", "devDependencies": {"ava": "^1.4.1", "matcha": "^0.7.0", "tsd": "^0.7.2", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3}, {"from": "2018-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# strip-json-comments [![Build Status](https://travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master)](https://travis-ci.org/sindresorhus/strip-json-comments)\n\n> Strip comments from JSON. Lets you use comments in your JSON files!\n\nThis is now possible:\n\n```js\n{\n\t// Rainbows\n\t\"unicorn\": /* \u2764 */ \"cake\"\n}\n```\n\nIt will replace single-line comments `//` and multi-line comments `/**/` with whitespace. This allows JSON error positions to remain as close as possible to the original source.\n\nAlso available as a [Gulp](https://github.com/sindresorhus/gulp-strip-json-comments)/[Grunt](https://github.com/sindresorhus/grunt-strip-json-comments)/[Broccoli](https://github.com/sindresorhus/broccoli-strip-json-comments) plugin.\n\n\n## Install\n\n```\n$ npm install strip-json-comments\n```\n\n\n## Usage\n\n```js\nconst json = `{\n\t// Rainbows\n\t\"unicorn\": /* \u2764 */ \"cake\"\n}`;\n\nJSON.parse(stripJsonComments(json));\n//=> {unicorn: 'cake'}\n```\n\n\n## API\n\n### stripJsonComments(jsonString, [options])\n\n#### jsonString\n\nType: `string`\n\nAccepts a string with JSON and returns a string without comments.\n\n#### options\n\nType: `object`\n\n##### whitespace\n\nType: `boolean`<br>\nDefault: `true`\n\nReplace comments with whitespace instead of stripping them entirely.\n\n\n## Benchmark\n\n```\n$ npm run bench\n```\n\n\n## Related\n\n- [strip-json-comments-cli](https://github.com/sindresorhus/strip-json-comments-cli) - CLI for this module\n- [strip-css-comments](https://github.com/sindresorhus/strip-css-comments) - Strip comments from CSS\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-02-23T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 778569}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 15926077}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 64092456}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 173792157}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 334394297}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 579754331}], "dependentsCount": 674, "starsCount": 24}, "github": {"starsCount": 446, "forksCount": 33, "subscribersCount": 12, "issues": {"count": 41, "openCount": 0, "distribution": {"3600": 10, "10800": 5, "32400": 2, "97200": 4, "291600": 1, "874800": 4, "2624400": 4, "7873200": 1, "23619600": 7, "70858800": 0, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 37}, {"username": "lydell", "commitsCount": 2}, {"username": "BendingBender", "commitsCount": 1}, {"username": "C0ldF0x", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "blakeembrey", "commitsCount": 1}, {"username": "chrisregnier", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "novacrazy", "commitsCount": 1}, {"username": "sebmck", "commitsCount": 1}, {"username": "slauyama", "commitsCount": 1}, {"username": "whitneyit", "commitsCount": 1}], "commits": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-11-26T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-08-28T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 0}, {"from": "2019-02-24T00:00:00.000Z", "to": "2020-02-24T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1570, "testsSize": 3150}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/strip-json-comments/master.svg", "content": "https://img.shields.io/travis/sindresorhus/strip-json-comments/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 527, "downloadsCount": 57930719, "downloadsAcceleration": 204356.30854261795, "dependentsCount": 674}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8647791590355521, "detail": {"quality": 0.9547045235275585, "popularity": 0.652589771565535, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T02:51:45.701Z", "collected": {"metadata": {"name": "supports-color", "scope": "unscoped", "version": "7.1.0", "description": "Detect whether a terminal supports color", "keywords": ["color", "colour", "colors", "terminal", "console", "cli", "ansi", "styles", "tty", "rgb", "256", "shell", "xterm", "command-line", "support", "supports", "capability", "detect", "truecolor", "16m"], "date": "2019-09-27T04:07:02.795Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/supports-color.git"}, "links": {"npm": "https://www.npmjs.com/package/supports-color", "homepage": "https://github.com/chalk/supports-color#readme", "repository": "https://github.com/chalk/supports-color", "bugs": "https://github.com/chalk/supports-color/issues"}, "license": "MIT", "dependencies": {"has-flag": "^4.0.0"}, "devDependencies": {"ava": "^1.4.1", "import-fresh": "^3.0.0", "xo": "^0.24.0"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 3}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install supports-color\n```\n\n\n## Usage\n\n```js\nconst supportsColor = require('supports-color');\n\nif (supportsColor.stdout) {\n\tconsole.log('Terminal stdout supports color');\n}\n\nif (supportsColor.stdout.has256) {\n\tconsole.log('Terminal stdout supports 256 colors');\n}\n\nif (supportsColor.stderr.has16m) {\n\tconsole.log('Terminal stderr supports 16 million colors (truecolor)');\n}\n```\n\n\n## API\n\nReturns an `Object` with a `stdout` and `stderr` property for testing either streams. Each property is an `Object`, or `false` if color is not supported.\n\nThe `stdout`/`stderr` objects specifies a level of support for color through a `.level` property and a corresponding flag:\n\n- `.level = 1` and `.hasBasic = true`: Basic color support (16 colors)\n- `.level = 2` and `.has256 = true`: 256 color support\n- `.level = 3` and `.has16m = true`: Truecolor support (16 million colors)\n\n\n## Info\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nFor situations where using `--color` is not possible, use the environment variable `FORCE_COLOR=1` (level 1), `FORCE_COLOR=2` (level 2), or `FORCE_COLOR=3` (level 3) to forcefully enable color, or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-supports-color?utm_source=npm-supports-color&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2436592}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 49579926}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 202994017}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 534123059}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1040788830}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 1951365447}], "dependentsCount": 607, "starsCount": 17}, "github": {"starsCount": 199, "forksCount": 52, "subscribersCount": 14, "issues": {"count": 107, "openCount": 6, "distribution": {"3600": 21, "10800": 4, "32400": 8, "97200": 17, "291600": 5, "874800": 6, "2624400": 11, "7873200": 14, "23619600": 12, "70858800": 7, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 87}, {"username": "Qix-", "commitsCount": 18}, {"username": "gucong3000", "commitsCount": 3}, {"username": "aaronabramov", "commitsCount": 2}, {"username": "Alhadis", "commitsCount": 1}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "KayLeung", "commitsCount": 1}, {"username": "TooTallNate", "commitsCount": 1}, {"username": "adalinesimonian", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "arthurvr", "commitsCount": 1}, {"username": "chrispat", "commitsCount": 1}, {"username": "deecewan", "commitsCount": 1}, {"username": "jaens", "commitsCount": 1}, {"username": "jbnicolai", "commitsCount": 1}, {"username": "kamioftea", "commitsCount": 1}, {"username": "maxleiko", "commitsCount": 1}, {"username": "plroebuck", "commitsCount": 1}, {"username": "qix", "commitsCount": 1}, {"username": "rbergman", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "stroncium", "commitsCount": 1}, {"username": "sunesimonsen", "commitsCount": 1}, {"username": "vadimdemedes", "commitsCount": 1}, {"username": "wuweiweiwu", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 2}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "Tidelift", "state": "success"}]}, "source": {"files": {"readmeSize": 2294, "testsSize": 10024}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/supports-color.svg?branch=master", "service": "https://api.travis-ci.org/chalk/supports-color.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/supports-color/master.svg", "content": "https://img.shields.io/travis/chalk/supports-color/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 307, "downloadsCount": 178041019.66666666, "downloadsAcceleration": 464053.4979452058, "dependentsCount": 607}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8647530537311151, "detail": {"quality": 0.9547045235275585, "popularity": 0.6525151849814294, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-02-23T17:59:35.265Z", "collected": {"metadata": {"name": "table", "scope": "unscoped", "version": "5.4.6", "description": "Formats data into a string table.", "keywords": ["ascii", "text", "table", "align", "ansi"], "date": "2019-08-15T15:10:25.635Z", "author": {"name": "Gajus Kuizinas", "email": "gajus@gajus.com", "url": "http://gajus.com", "username": "gajus"}, "publisher": {"username": "gajus", "email": "gajus@gajus.com"}, "maintainers": [{"username": "gajus", "email": "gajus@gajus.com"}], "repository": {"type": "git", "url": "git+https://github.com/gajus/table.git"}, "links": {"npm": "https://www.npmjs.com/package/table", "homepage": "https://github.com/gajus/table#readme", "repository": "https://github.com/gajus/table", "bugs": "https://github.com/gajus/table/issues"}, "license": "BSD-3-Clause", "dependencies": {"ajv": "^6.10.2", "lodash": "^4.17.14", "slice-ansi": "^2.1.0", "string-width": "^3.0.0"}, "devDependencies": {"@babel/cli": "^7.5.0", "@babel/core": "^7.5.4", "@babel/node": "^7.5.0", "@babel/plugin-transform-flow-strip-types": "^7.4.4", "@babel/preset-env": "^7.5.4", "@babel/register": "^7.4.4", "ajv-cli": "^3.0.0", "ajv-keywords": "^3.4.1", "babel-plugin-istanbul": "^5.1.4", "babel-plugin-lodash": "^3.3.4", "babel-plugin-transform-export-default-name": "^2.0.4", "chai": "^4.2.0", "chalk": "^2.4.2", "coveralls": "^3.0.5", "eslint": "^5.13.0", "eslint-config-canonical": "^16.1.0", "flow-bin": "^0.102.0", "flow-copy-source": "^2.0.7", "gitdown": "^3.1.1", "husky": "^3.0.0", "mocha": "^6.1.4", "nyc": "^14.1.1", "semantic-release": "^15.13.18", "sinon": "^7.3.2"}, "releases": [{"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 12}, {"from": "2018-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 22}], "hasTestScript": true, "readme": "<a name=\"table\"></a>\n# Table\n\n[![GitSpo Mentions](https://gitspo.com/badges/mentions/gajus/table?style=flat-square)](https://gitspo.com/mentions/gajus/table)\n[![Travis build status](http://img.shields.io/travis/gajus/table/master.svg?style=flat-square)](https://travis-ci.org/gajus/table)\n[![Coveralls](https://img.shields.io/coveralls/gajus/table.svg?style=flat-square)](https://coveralls.io/github/gajus/table)\n[![NPM version](http://img.shields.io/npm/v/table.svg?style=flat-square)](https://www.npmjs.org/package/table)\n[![Canonical Code Style](https://img.shields.io/badge/code%20style-canonical-blue.svg?style=flat-square)](https://github.com/gajus/canonical)\n[![Twitter Follow](https://img.shields.io/twitter/follow/kuizinas.svg?style=social&label=Follow)](https://twitter.com/kuizinas)\n\n* [Table](#table)\n    * [Features](#table-features)\n    * [Install](#table-install)\n    * [Usage](#table-usage)\n        * [Cell Content Alignment](#table-usage-cell-content-alignment)\n        * [Column Width](#table-usage-column-width)\n        * [Custom Border](#table-usage-custom-border)\n        * [Draw Horizontal Line](#table-usage-draw-horizontal-line)\n        * [Single Line Mode](#table-usage-single-line-mode)\n        * [Padding Cell Content](#table-usage-padding-cell-content)\n        * [Predefined Border Templates](#table-usage-predefined-border-templates)\n        * [Streaming](#table-usage-streaming)\n        * [Text Truncation](#table-usage-text-truncation)\n        * [Text Wrapping](#table-usage-text-wrapping)\n\n\nProduces a string that represents array data in a text table.\n\n![Demo of table displaying a list of missions to the Moon.](./.README/demo.png)\n\n<a name=\"table-features\"></a>\n## Features\n\n* Works with strings containing [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) characters.\n* Works with strings containing [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n* Configurable border characters.\n* Configurable content alignment per column.\n* Configurable content padding per column.\n* Configurable column width.\n* Text wrapping.\n\n<a name=\"table-install\"></a>\n## Install\n\n```bash\nnpm install table\n\n```\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/gajus)\n[![Become a Patron](https://c5.patreon.com/external/logo/become_a_patron_button.png)](https://www.patreon.com/gajus)\n\n<a name=\"table-usage\"></a>\n## Usage\n\nTable data is described using an array (rows) of array (cells).\n\n```js\nimport {\n  table\n} from 'table';\n\n// Using commonjs?\n// const {table} = require('table');\n\nlet data,\n    output;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\n/**\n * @typedef {string} table~cell\n */\n\n/**\n * @typedef {table~cell[]} table~row\n */\n\n/**\n * @typedef {Object} table~columns\n * @property {string} alignment Cell content alignment (enum: left, center, right) (default: left).\n * @property {number} width Column width (default: auto).\n * @property {number} truncate Number of characters are which the content will be truncated (default: Infinity).\n * @property {number} paddingLeft Cell content padding width left (default: 1).\n * @property {number} paddingRight Cell content padding width right (default: 1).\n */\n\n/**\n * @typedef {Object} table~border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * Used to dynamically tell table whether to draw a line separating rows or not.\n * The default behavior is to always return true.\n *\n * @typedef {function} drawHorizontalLine\n * @param {number} index\n * @param {number} size\n * @return {boolean}\n */\n\n/**\n * @typedef {Object} table~config\n * @property {table~border} border\n * @property {table~columns[]} columns Column specific configuration.\n * @property {table~columns} columnDefault Default values for all columns. Column specific settings overwrite the default values.\n * @property {table~drawHorizontalLine} drawHorizontalLine\n */\n\n/**\n * Generates a text table.\n *\n * @param {table~row[]} rows\n * @param {table~config} config\n * @return {String}\n */\noutput = table(data);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2557\n\u2551 0A \u2502 0B \u2502 0C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 1A \u2502 1B \u2502 1C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 2A \u2502 2B \u2502 2C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u255d\n\n```\n\n\n<a name=\"table-usage-cell-content-alignment\"></a>\n### Cell Content Alignment\n\n`{string} config.columns[{number}].alignment` property controls content horizontal alignment within a cell.\n\nValid values are: \"left\", \"right\" and \"center\".\n\n```js\nlet config,\n  data,\n  output;\n\ndata = [\n  ['0A', '0B', '0C'],\n  ['1A', '1B', '1C'],\n  ['2A', '2B', '2C']\n];\n\nconfig = {\n  columns: {\n    0: {\n      alignment: 'left',\n      width: 10\n    },\n    1: {\n      alignment: 'center',\n      width: 10\n    },\n    2: {\n      alignment: 'right',\n      width: 10\n    }\n  }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 0A         \u2502     0B     \u2502         0C \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n\u2551 1A         \u2502     1B     \u2502         1C \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n\u2551 2A         \u2502     2B     \u2502         2C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n```\n\n<a name=\"table-usage-column-width\"></a>\n### Column Width\n\n`{number} config.columns[{number}].width` property restricts column width to a fixed width.\n\n```js\nlet data,\n  output,\n  options;\n\ndata = [\n  ['0A', '0B', '0C'],\n  ['1A', '1B', '1C'],\n  ['2A', '2B', '2C']\n];\n\noptions = {\n  columns: {\n    1: {\n      width: 10\n    }\n  }\n};\n\noutput = table(data, options);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2557\n\u2551 0A \u2502 0B         \u2502 0C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 1A \u2502 1B         \u2502 1C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 2A \u2502 2B         \u2502 2C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u255d\n```\n\n<a name=\"table-usage-custom-border\"></a>\n### Custom Border\n\n`{object} config.border` property describes characters used to draw the table border.\n\n```js\nlet config,\n  data,\n  output;\n\ndata = [\n  ['0A', '0B', '0C'],\n  ['1A', '1B', '1C'],\n  ['2A', '2B', '2C']\n];\n\nconfig = {\n  border: {\n    topBody: `\u2500`,\n    topJoin: `\u252c`,\n    topLeft: `\u250c`,\n    topRight: `\u2510`,\n\n    bottomBody: `\u2500`,\n    bottomJoin: `\u2534`,\n    bottomLeft: `\u2514`,\n    bottomRight: `\u2518`,\n\n    bodyLeft: `\u2502`,\n    bodyRight: `\u2502`,\n    bodyJoin: `\u2502`,\n\n    joinBody: `\u2500`,\n    joinLeft: `\u251c`,\n    joinRight: `\u2524`,\n    joinJoin: `\u253c`\n  }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510\n\u2502 0A \u2502 0B \u2502 0C \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u2502 1A \u2502 1B \u2502 1C \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u2502 2A \u2502 2B \u2502 2C \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\n```\n\n<a name=\"table-usage-draw-horizontal-line\"></a>\n### Draw Horizontal Line\n\n`{function} config.drawHorizontalLine` property is a function that is called for every non-content row in the table. The result of the function `{boolean}` determines whether a row is drawn.\n\n```js\nlet data,\n  output,\n  options;\n\ndata = [\n  ['0A', '0B', '0C'],\n  ['1A', '1B', '1C'],\n  ['2A', '2B', '2C'],\n  ['3A', '3B', '3C'],\n  ['4A', '4B', '4C']\n];\n\noptions = {\n  /**\n    * @typedef {function} drawHorizontalLine\n    * @param {number} index\n    * @param {number} size\n    * @return {boolean}\n    */\n  drawHorizontalLine: (index, size) => {\n    return index === 0 || index === 1 || index === size - 1 || index === size;\n  }\n};\n\noutput = table(data, options);\n\nconsole.log(output);\n\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2557\n\u2551 0A \u2502 0B \u2502 0C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 1A \u2502 1B \u2502 1C \u2551\n\u2551 2A \u2502 2B \u2502 2C \u2551\n\u2551 3A \u2502 3B \u2502 3C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 4A \u2502 4B \u2502 4C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u255d\n\n```\n\n<a name=\"table-usage-single-line-mode\"></a>\n### Single Line Mode\n\nHorizontal lines inside the table are not drawn.\n\n```js\nimport {\n  table,\n  getBorderCharacters\n} from 'table';\n\nconst data = [\n  ['-rw-r--r--', '1', 'pandorym', 'staff', '1529', 'May 23 11:25', 'LICENSE'],\n  ['-rw-r--r--', '1', 'pandorym', 'staff', '16327', 'May 23 11:58', 'README.md'],\n  ['drwxr-xr-x', '76', 'pandorym', 'staff', '2432', 'May 23 12:02', 'dist'],\n  ['drwxr-xr-x', '634', 'pandorym', 'staff', '20288', 'May 23 11:54', 'node_modules'],\n  ['-rw-r--r--', '1,', 'pandorym', 'staff', '525688', 'May 23 11:52', 'package-lock.json'],\n  ['-rw-r--r--@', '1', 'pandorym', 'staff', '2440', 'May 23 11:25', 'package.json'],\n  ['drwxr-xr-x', '27', 'pandorym', 'staff', '864', 'May 23 11:25', 'src'],\n  ['drwxr-xr-x', '20', 'pandorym', 'staff', '640', 'May 23 11:25', 'test'],\n];\n\nconst config = {\n  singleLine: true\n};\n\nconst output = table(data, config);\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 -rw-r--r--  \u2502 1   \u2502 pandorym \u2502 staff \u2502 1529   \u2502 May 23 11:25 \u2502 LICENSE           \u2551\n\u2551 -rw-r--r--  \u2502 1   \u2502 pandorym \u2502 staff \u2502 16327  \u2502 May 23 11:58 \u2502 README.md         \u2551\n\u2551 drwxr-xr-x  \u2502 76  \u2502 pandorym \u2502 staff \u2502 2432   \u2502 May 23 12:02 \u2502 dist              \u2551\n\u2551 drwxr-xr-x  \u2502 634 \u2502 pandorym \u2502 staff \u2502 20288  \u2502 May 23 11:54 \u2502 node_modules      \u2551\n\u2551 -rw-r--r--  \u2502 1,  \u2502 pandorym \u2502 staff \u2502 525688 \u2502 May 23 11:52 \u2502 package-lock.json \u2551\n\u2551 -rw-r--r--@ \u2502 1   \u2502 pandorym \u2502 staff \u2502 2440   \u2502 May 23 11:25 \u2502 package.json      \u2551\n\u2551 drwxr-xr-x  \u2502 27  \u2502 pandorym \u2502 staff \u2502 864    \u2502 May 23 11:25 \u2502 src               \u2551\n\u2551 drwxr-xr-x  \u2502 20  \u2502 pandorym \u2502 staff \u2502 640    \u2502 May 23 11:25 \u2502 test              \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n```\n\n<a name=\"table-usage-padding-cell-content\"></a>\n### Padding Cell Content\n\n`{number} config.columns[{number}].paddingLeft` and `{number} config.columns[{number}].paddingRight` properties control content padding within a cell. Property value represents a number of whitespaces used to pad the content.\n\n```js\nlet config,\n  data,\n  output;\n\ndata = [\n  ['0A', 'AABBCC', '0C'],\n  ['1A', '1B', '1C'],\n  ['2A', '2B', '2C']\n];\n\nconfig = {\n  columns: {\n    0: {\n      paddingLeft: 3\n    },\n    1: {\n      width: 2,\n      paddingRight: 3\n    }\n  }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2557\n\u2551   0A \u2502 AA   \u2502 0C \u2551\n\u2551      \u2502 BB   \u2502    \u2551\n\u2551      \u2502 CC   \u2502    \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551   1A \u2502 1B   \u2502 1C \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551   2A \u2502 2B   \u2502 2C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u255d\n```\n\n<a name=\"table-usage-predefined-border-templates\"></a>\n### Predefined Border Templates\n\nYou can load one of the predefined border templates using `getBorderCharacters` function.\n\n```js\nimport {\n  table,\n  getBorderCharacters\n} from 'table';\n\nlet config,\n  data;\n\ndata = [\n  ['0A', '0B', '0C'],\n  ['1A', '1B', '1C'],\n  ['2A', '2B', '2C']\n];\n\nconfig = {\n  border: getBorderCharacters(`name of the template`)\n};\n\ntable(data, config);\n```\n\n```\n# honeywell\n\n\u2554\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2557\n\u2551 0A \u2502 0B \u2502 0C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 1A \u2502 1B \u2502 1C \u2551\n\u255f\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2562\n\u2551 2A \u2502 2B \u2502 2C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u255d\n\n# norc\n\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510\n\u2502 0A \u2502 0B \u2502 0C \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u2502 1A \u2502 1B \u2502 1C \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u2502 2A \u2502 2B \u2502 2C \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\n\n# ramac (ASCII; for use in terminals that do not support Unicode characters)\n\n+----+----+----+\n| 0A | 0B | 0C |\n|----|----|----|\n| 1A | 1B | 1C |\n|----|----|----|\n| 2A | 2B | 2C |\n+----+----+----+\n\n# void (no borders; see \"bordless table\" section of the documentation)\n\n 0A  0B  0C\n\n 1A  1B  1C\n\n 2A  2B  2C\n\n```\n\nRaise [an issue](https://github.com/gajus/table/issues) if you'd like to contribute a new border template.\n\n<a name=\"table-usage-predefined-border-templates-borderless-table\"></a>\n#### Borderless Table\n\nSimply using \"void\" border character template creates a table with a lot of unnecessary spacing.\n\nTo create a more plesant to the eye table, reset the padding and remove the joining rows, e.g.\n\n```js\nlet output;\n\noutput = table(data, {\n    border: getBorderCharacters(`void`),\n    columnDefault: {\n        paddingLeft: 0,\n        paddingRight: 1\n    },\n    drawHorizontalLine: () => {\n        return false\n    }\n});\n\nconsole.log(output);\n```\n\n```\n0A 0B 0C\n1A 1B 1C\n2A 2B 2C\n```\n\n<a name=\"table-usage-streaming\"></a>\n### Streaming\n\n`table` package exports `createStream` function used to draw a table and append rows.\n\n`createStream` requires `{number} columnDefault.width` and `{number} columnCount` configuration properties.\n\n```js\nimport {\n  createStream\n} from 'table';\n\nlet config,\n  stream;\n\nconfig = {\n  columnDefault: {\n    width: 50\n  },\n  columnCount: 1\n};\n\nstream = createStream(config);\n\nsetInterval(() => {\n  stream.write([new Date()]);\n}, 500);\n```\n\n![Streaming current date.](./.README/streaming.gif)\n\n`table` package uses ANSI escape codes to overwrite the output of the last line when a new row is printed.\n\nThe underlying implementation is explained in this [Stack Overflow answer](http://stackoverflow.com/a/32938658/368691).\n\nStreaming supports all of the configuration properties and functionality of a static table (such as auto text wrapping, alignment and padding), e.g.\n\n```js\nimport {\n  createStream\n} from 'table';\n\nimport _ from 'lodash';\n\nlet config,\n  stream,\n  i;\n\nconfig = {\n  columnDefault: {\n    width: 50\n  },\n  columnCount: 3,\n  columns: {\n    0: {\n      width: 10,\n      alignment: 'right'\n    },\n    1: {\n      alignment: 'center',\n    },\n    2: {\n      width: 10\n    }\n  }\n};\n\nstream = createStream(config);\n\ni = 0;\n\nsetInterval(() => {\n  let random;\n\n  random = _.sample('abcdefghijklmnopqrstuvwxyz', _.random(1, 30)).join('');\n\n  stream.write([i++, new Date(), random]);\n}, 500);\n```\n\n![Streaming random data.](./.README/streaming-random.gif)\n\n<a name=\"table-usage-text-truncation\"></a>\n### Text Truncation\n\nTo handle a content that overflows the container width, `table` package implements [text wrapping](#table-usage-text-wrapping). However, sometimes you may want to truncate content that is too long to be displayed in the table.\n\n`{number} config.columns[{number}].truncate` property (default: `Infinity`) truncates the text at the specified length.\n\n```js\nlet config,\n  data,\n  output;\n\ndata = [\n  ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n  columns: {\n    0: {\n      width: 20,\n      truncate: 100\n    }\n  }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 Lorem ipsum dolor si \u2551\n\u2551 t amet, consectetur  \u2551\n\u2551 adipiscing elit. Pha \u2551\n\u2551 sellus pulvinar nibh \u2551\n\u2551 sed mauris conva...  \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n```\n\n<a name=\"table-usage-text-wrapping\"></a>\n### Text Wrapping\n\n`table` package implements auto text wrapping, i.e. text that has width greater than the container width will be separated into multiple lines, e.g.\n\n```js\nlet config,\n  data,\n  output;\n\ndata = [\n    ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n  columns: {\n    0: {\n      width: 20\n    }\n  }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 Lorem ipsum dolor si \u2551\n\u2551 t amet, consectetur  \u2551\n\u2551 adipiscing elit. Pha \u2551\n\u2551 sellus pulvinar nibh \u2551\n\u2551 sed mauris convallis \u2551\n\u2551 dapibus. Nunc venena \u2551\n\u2551 tis tempus nulla sit \u2551\n\u2551 amet viverra.        \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n```\n\nWhen `wrapWord` is `true` the text is broken at the nearest space or one of the special characters (\"-\", \"_\", \"\\\", \"/\", \".\", \",\", \";\"), e.g.\n\n```js\nlet config,\n  data,\n  output;\n\ndata = [\n  ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n  columns: {\n    0: {\n      width: 20,\n      wrapWord: true\n    }\n  }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 Lorem ipsum dolor    \u2551\n\u2551 sit amet,            \u2551\n\u2551 consectetur          \u2551\n\u2551 adipiscing elit.     \u2551\n\u2551 Phasellus pulvinar   \u2551\n\u2551 nibh sed mauris      \u2551\n\u2551 convallis dapibus.   \u2551\n\u2551 Nunc venenatis       \u2551\n\u2551 tempus nulla sit     \u2551\n\u2551 amet viverra.        \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n\n```"}, "npm": {"downloads": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 433494}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 9462650}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 38603296}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 103917954}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 207573670}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 397518565}], "dependentsCount": 452, "starsCount": 22}, "github": {"starsCount": 426, "forksCount": 53, "subscribersCount": 10, "issues": {"count": 108, "openCount": 23, "distribution": {"3600": 19, "10800": 9, "32400": 18, "97200": 16, "291600": 3, "874800": 2, "2624400": 8, "7873200": 3, "23619600": 8, "70858800": 8, "212576400": 14}, "isDisabled": false}, "contributors": [{"username": "gajus", "commitsCount": 158}, {"username": "realityking", "commitsCount": 8}, {"username": "epoberezkin", "commitsCount": 2}, {"username": "raffis", "commitsCount": 2}, {"username": "rix0rrr", "commitsCount": 2}, {"username": "MarkHerhold", "commitsCount": 1}, {"username": "MrCheater", "commitsCount": 1}, {"username": "Pandorym", "commitsCount": 1}, {"username": "Shuunen", "commitsCount": 1}, {"username": "danilvalov", "commitsCount": 1}, {"username": "fracmak", "commitsCount": 1}, {"username": "men232", "commitsCount": 1}, {"username": "tahmidsadik112", "commitsCount": 1}, {"username": "viddo", "commitsCount": 1}], "commits": [{"from": "2020-02-16T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2020-01-24T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-11-25T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-08-27T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 0}, {"from": "2019-02-23T00:00:00.000Z", "to": "2020-02-23T00:00:00.000Z", "count": 21}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 18654, "testsSize": 49651, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "http://img.shields.io/travis/gajus/table/master.svg?style=flat-square", "service": "https://api.travis-ci.org/gajus/table.svg?branch=master", "shields": "https://img.shields.io/travis/gajus/table/master.svg", "content": "https://img.shields.io/travis/gajus/table/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/gajus/table.svg?style=flat-square", "service": "https://coveralls.io/repos/gajus/table/badge.svg", "shields": "https://img.shields.io/coveralls/gajus/table.svg", "content": "https://img.shields.io/coveralls/gajus/table.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "http://img.shields.io/npm/v/table.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/table.svg", "content": "https://img.shields.io/npm/v/table.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.73, "outdatedDependencies": {"string-width": {"required": "^3.0.0", "stable": "4.2.0", "latest": "4.2.0"}, "slice-ansi": {"required": "^2.1.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9595, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 525, "downloadsCount": 34639318, "downloadsAcceleration": 65444.917770167405, "dependentsCount": 452}, "maintenance": {"releasesFrequency": 0.6815068493150686, "commitsFrequency": 0.24164383561643835, "openIssues": 0.9783950617283951, "issuesDistribution": 0}}, "score": {"final": 0.7119761852715253, "detail": {"quality": 0.9212963500507928, "popularity": 0.6056777812576135, "maintenance": 0.6388573051889221}}}
{"analyzedAt": "2020-02-29T17:13:17.483Z", "collected": {"metadata": {"name": "text-table", "scope": "unscoped", "version": "0.2.0", "description": "borderless text tables with alignment", "keywords": ["text", "table", "align", "ascii", "rows", "tabular"], "date": "2013-10-05T03:51:26.868Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net", "username": "substack"}, "publisher": {"username": "substack", "email": "mail@substack.net"}, "maintainers": [{"username": "substack", "email": "mail@substack.net"}], "repository": {"type": "git", "url": "git://github.com/substack/text-table.git"}, "links": {"npm": "https://www.npmjs.com/package/text-table", "homepage": "https://github.com/substack/text-table", "repository": "https://github.com/substack/text-table", "bugs": "https://github.com/substack/text-table/issues"}, "license": "MIT", "devDependencies": {"tap": "~0.4.0", "tape": "~1.0.2", "cli-color": "~0.2.3"}, "releases": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2018-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# text-table\n\ngenerate borderless text table strings suitable for printing to stdout\n\n[![build status](https://secure.travis-ci.org/substack/text-table.png)](http://travis-ci.org/substack/text-table)\n\n# example\n\n## default align\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'master', '0123456789abcdef' ],\n    [ 'staging', 'fedcba9876543210' ]\n]);\nconsole.log(t);\n```\n\n```\nmaster   0123456789abcdef\nstaging  fedcba9876543210\n```\n\n## left-right align\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'beep', '1024' ],\n    [ 'boop', '33450' ],\n    [ 'foo', '1006' ],\n    [ 'bar', '45' ]\n], { align: [ 'l', 'r' ] });\nconsole.log(t);\n```\n\n```\nbeep   1024\nboop  33450\nfoo    1006\nbar      45\n```\n\n## dotted align\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'beep', '1024' ],\n    [ 'boop', '334.212' ],\n    [ 'foo', '1006' ],\n    [ 'bar', '45.6' ],\n    [ 'baz', '123.' ]\n], { align: [ 'l', '.' ] });\nconsole.log(t);\n```\n\n```\nbeep  1024\nboop   334.212\nfoo   1006\nbar     45.6\nbaz    123.\n```\n\n## centered\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'beep', '1024', 'xyz' ],\n    [ 'boop', '3388450', 'tuv' ],\n    [ 'foo', '10106', 'qrstuv' ],\n    [ 'bar', '45', 'lmno' ]\n], { align: [ 'l', 'c', 'l' ] });\nconsole.log(t);\n```\n\n```\nbeep    1024   xyz\nboop  3388450  tuv\nfoo    10106   qrstuv\nbar      45    lmno\n```\n\n# methods\n\n``` js\nvar table = require('text-table')\n```\n\n## var s = table(rows, opts={})\n\nReturn a formatted table string `s` from an array of `rows` and some options\n`opts`.\n\n`rows` should be an array of arrays containing strings, numbers, or other\nprintable values.\n\noptions can be:\n\n* `opts.hsep` - separator to use between columns, default `'  '`\n* `opts.align` - array of alignment types for each column, default `['l','l',...]`\n\nalignment types are:\n\n* `'l'` - left\n* `'r'` - right\n* `'c'` - center\n* `'.'` - decimal\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install text-table\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 1398931}, {"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 8185022}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 34071212}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 87106910}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 169900596}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 315829186}], "dependentsCount": 646, "starsCount": 19}, "github": {"starsCount": 227, "forksCount": 16, "subscribersCount": 5, "issues": {"count": 17, "openCount": 13, "distribution": {"3600": 0, "10800": 0, "32400": 2, "97200": 1, "291600": 1, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 3, "212576400": 10}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 24}, {"username": "hash-bang", "commitsCount": 1}], "commits": [{"from": "2020-02-22T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-09-02T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2020-02-29T00:00:00.000Z", "count": 0}], "statuses": [{"context": "default", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3006}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/text-table.png", "service": "https://api.travis-ci.org/substack/text-table.svg", "shields": "https://img.shields.io/travis/substack/text-table.svg", "content": "https://img.shields.io/travis/substack/text-table.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.165, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 269, "downloadsCount": 29035636.666666668, "downloadsAcceleration": 87257.09611872147, "dependentsCount": 646}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 0.23529411764705888, "issuesDistribution": 0}}, "score": {"final": 0.4634572854971317, "detail": {"quality": 0.7185954954499589, "popularity": 0.5997950088296746, "maintenance": 0.1084296679193085}}}
{"analyzedAt": "2020-02-06T05:23:06.995Z", "collected": {"metadata": {"name": "through", "scope": "unscoped", "version": "2.3.8", "description": "simplified stream construction", "keywords": ["stream", "streams", "user-streams", "pipe"], "date": "2015-07-03T13:38:39.650Z", "author": {"name": "Dominic Tarr", "email": "dominic.tarr@gmail.com", "url": "dominictarr.com"}, "publisher": {"username": "dominictarr", "email": "dominic.tarr@gmail.com"}, "maintainers": [{"username": "nopersonsmodules", "email": "nopersonsmodules@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/dominictarr/through.git"}, "links": {"npm": "https://www.npmjs.com/package/through", "homepage": "https://github.com/dominictarr/through", "repository": "https://github.com/dominictarr/through", "bugs": "https://github.com/dominictarr/through/issues"}, "license": "MIT", "devDependencies": {"stream-spec": "~0.3.5", "tape": "~2.3.2", "from": "~0.1.3"}, "releases": [{"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2018-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "#through\n\n[![build status](https://secure.travis-ci.org/dominictarr/through.png)](http://travis-ci.org/dominictarr/through)\n[![testling badge](https://ci.testling.com/dominictarr/through.png)](https://ci.testling.com/dominictarr/through)\n\nEasy way to create a `Stream` that is both `readable` and `writable`. \n\n* Pass in optional `write` and `end` methods.\n* `through` takes care of pause/resume logic if you use `this.queue(data)` instead of `this.emit('data', data)`.\n* Use `this.pause()` and `this.resume()` to manage flow.\n* Check `this.paused` to see current flow state. (`write` always returns `!this.paused`).\n\nThis function is the basis for most of the synchronous streams in \n[event-stream](http://github.com/dominictarr/event-stream).\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.queue(data) //data *must* not be null\n  },\n  function end () { //optional\n    this.queue(null)\n  })\n```\n\nOr, can also be used _without_ buffering on pause, use `this.emit('data', data)`,\nand this.emit('end')\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.emit('data', data)\n    //this.pause() \n  },\n  function end () { //optional\n    this.emit('end')\n  })\n```\n\n## Extended Options\n\nYou will probably not need these 99% of the time.\n\n### autoDestroy=false\n\nBy default, `through` emits close when the writable\nand readable side of the stream has ended.\nIf that is not desired, set `autoDestroy=false`.\n\n``` js\nvar through = require('through')\n\n//like this\nvar ts = through(write, end, {autoDestroy: false})\n//or like this\nvar ts = through(write, end)\nts.autoDestroy = false\n```\n\n## License\n\nMIT / Apache2"}, "npm": {"downloads": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 1984364}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 10696927}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 45033800}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 119500759}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 234762782}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 439492514}], "dependentsCount": 1969, "starsCount": 102}, "github": {"starsCount": 669, "forksCount": 60, "subscribersCount": 9, "issues": {"count": 50, "openCount": 14, "distribution": {"3600": 10, "10800": 4, "32400": 5, "97200": 5, "291600": 2, "874800": 4, "2624400": 2, "7873200": 0, "23619600": 1, "70858800": 5, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "dominictarr", "commitsCount": 77}, {"username": "defunctzombie", "commitsCount": 2}, {"username": "KyleAMathews", "commitsCount": 1}, {"username": "Raynos", "commitsCount": 1}, {"username": "coliff", "commitsCount": 1}, {"username": "dandv", "commitsCount": 1}, {"username": "isaacs", "commitsCount": 1}, {"username": "jarofghosts", "commitsCount": 1}, {"username": "jeffbski", "commitsCount": 1}, {"username": "juliangruber", "commitsCount": 1}], "commits": [{"from": "2020-01-30T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2020-01-07T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-08-10T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}, {"from": "2019-02-06T00:00:00.000Z", "to": "2020-02-06T00:00:00.000Z", "count": 0}], "statuses": [{"context": "dependency-ci", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1665, "testsSize": 5727}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/dominictarr/through.png", "service": "https://api.travis-ci.org/dominictarr/through.svg", "shields": "https://img.shields.io/travis/dominictarr/through.svg", "content": "https://img.shields.io/travis/dominictarr/through.json"}, "info": {"service": "travis", "type": "build"}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 850, "downloadsCount": 39833586.333333336, "downloadsAcceleration": 99296.54638508376, "dependentsCount": 1969}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8691562178743517, "detail": {"quality": 0.9262615076490556, "popularity": 0.6895081219931944, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-28T14:55:37.107Z", "collected": {"metadata": {"name": "tmp", "scope": "unscoped", "version": "0.1.0", "description": "Temporary file and directory creator", "keywords": ["temporary", "tmp", "temp", "tempdir", "tempfile", "tmpdir", "tmpfile"], "date": "2019-03-25T17:39:20.951Z", "author": {"name": "KARASZI Istv\u00e1n", "email": "github@spam.raszi.hu", "url": "http://raszi.hu/"}, "publisher": {"username": "raszi", "email": "npm@spam.raszi.hu"}, "maintainers": [{"username": "raszi", "email": "npm@spam.raszi.hu"}], "repository": {"type": "git", "url": "git+https://github.com/raszi/node-tmp.git"}, "links": {"npm": "https://www.npmjs.com/package/tmp", "homepage": "http://github.com/raszi/node-tmp", "repository": "https://github.com/raszi/node-tmp", "bugs": "http://github.com/raszi/node-tmp/issues"}, "license": "MIT", "dependencies": {"rimraf": "^2.6.3"}, "devDependencies": {"eslint": "^4.19.1", "eslint-plugin-mocha": "^5.0.0", "istanbul": "^0.4.5", "mocha": "^5.1.1"}, "releases": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}, {"from": "2018-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Tmp\n\nA simple temporary file and directory creator for [node.js.][1]\n\n[![Build Status](https://travis-ci.org/raszi/node-tmp.svg?branch=master)](https://travis-ci.org/raszi/node-tmp)\n[![Dependencies](https://david-dm.org/raszi/node-tmp.svg)](https://david-dm.org/raszi/node-tmp)\n[![npm version](https://badge.fury.io/js/tmp.svg)](https://badge.fury.io/js/tmp)\n[![API documented](https://img.shields.io/badge/API-documented-brightgreen.svg)](https://raszi.github.io/node-tmp/)\n[![Known Vulnerabilities](https://snyk.io/test/npm/tmp/badge.svg)](https://snyk.io/test/npm/tmp)\n\n## About\n\nThis is a [widely used library][2] to create temporary files and directories\nin a [node.js][1] environment.\n\nTmp offers both an asynchronous and a synchronous API. For all API calls, all\nthe parameters are optional. There also exists a promisified version of the\nAPI, see [tmp-promise][5].\n\nTmp uses crypto for determining random file names, or, when using templates,\na six letter random identifier. And just in case that you do not have that much\nentropy left on your system, Tmp will fall back to pseudo random numbers.\n\nYou can set whether you want to remove the temporary file on process exit or\nnot.\n\nIf you do not want to store your temporary directories and files in the\nstandard OS temporary directory, then you are free to override that as well.\n\n## An Important Note on Compatibility\n\n### Version 0.1.0\n\nSince version 0.1.0, all support for node versions < 0.10.0 has been dropped.\n\nMost importantly, any support for earlier versions of node-tmp was also dropped.\n\nIf you still require node versions < 0.10.0, then you must limit your node-tmp\ndependency to versions below 0.1.0.\n\n### Version 0.0.33\n\nSince version 0.0.33, all support for node versions < 0.8 has been dropped.\n\nIf you still require node version 0.8, then you must limit your node-tmp\ndependency to version 0.0.33.\n\nFor node versions < 0.8 you must limit your node-tmp dependency to\nversions < 0.0.33.\n\n### Node Versions < 8.12.0\n\nThe SIGINT handler will not work correctly with versions of NodeJS < 8.12.0.\n\n### Windows\n\nSignal handlers for SIGINT will not work. Pressing CTRL-C will leave behind\ntemporary files and directories.\n\n## How to install\n\n```bash\nnpm install tmp\n```\n\n## Usage\n\nPlease also check [API docs][4].\n\n### Asynchronous file creation\n\nSimple temporary file creation, the file will be closed and unlinked on process exit.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.file(function _tempFileCreated(err, path, fd, cleanupCallback) {\n  if (err) throw err;\n\n  console.log('File: ', path);\n  console.log('Filedescriptor: ', fd);\n  \n  // If we don't need the file anymore we could manually call the cleanupCallback\n  // But that is not necessary if we didn't pass the keep option because the library\n  // will clean after itself.\n  cleanupCallback();\n});\n```\n\n### Synchronous file creation\n\nA synchronous version of the above.\n\n```javascript\nvar tmp = require('tmp');\n\nvar tmpobj = tmp.fileSync();\nconsole.log('File: ', tmpobj.name);\nconsole.log('Filedescriptor: ', tmpobj.fd);\n  \n// If we don't need the file anymore we could manually call the removeCallback\n// But that is not necessary if we didn't pass the keep option because the library\n// will clean after itself.\ntmpobj.removeCallback();\n```\n\nNote that this might throw an exception if either the maximum limit of retries\nfor creating a temporary name fails, or, in case that you do not have the permission\nto write to the directory where the temporary file should be created in.\n\n### Asynchronous directory creation\n\nSimple temporary directory creation, it will be removed on process exit.\n\nIf the directory still contains items on process exit, then it won't be removed.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.dir(function _tempDirCreated(err, path, cleanupCallback) {\n  if (err) throw err;\n\n  console.log('Dir: ', path);\n  \n  // Manual cleanup\n  cleanupCallback();\n});\n```\n\nIf you want to cleanup the directory even when there are entries in it, then\nyou can pass the `unsafeCleanup` option when creating it.\n\n### Synchronous directory creation\n\nA synchronous version of the above.\n\n```javascript\nvar tmp = require('tmp');\n\nvar tmpobj = tmp.dirSync();\nconsole.log('Dir: ', tmpobj.name);\n// Manual cleanup\ntmpobj.removeCallback();\n```\n\nNote that this might throw an exception if either the maximum limit of retries\nfor creating a temporary name fails, or, in case that you do not have the permission\nto write to the directory where the temporary directory should be created in.\n\n### Asynchronous filename generation\n\nIt is possible with this library to generate a unique filename in the specified\ndirectory.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.tmpName(function _tempNameGenerated(err, path) {\n    if (err) throw err;\n\n    console.log('Created temporary filename: ', path);\n});\n```\n\n### Synchronous filename generation\n\nA synchronous version of the above.\n\n```javascript\nvar tmp = require('tmp');\n\nvar name = tmp.tmpNameSync();\nconsole.log('Created temporary filename: ', name);\n```\n\n## Advanced usage\n\n### Asynchronous file creation\n\nCreates a file with mode `0644`, prefix will be `prefix-` and postfix will be `.txt`.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.file({ mode: 0644, prefix: 'prefix-', postfix: '.txt' }, function _tempFileCreated(err, path, fd) {\n  if (err) throw err;\n\n  console.log('File: ', path);\n  console.log('Filedescriptor: ', fd);\n});\n```\n\n### Synchronous file creation\n\nA synchronous version of the above.\n\n```javascript\nvar tmp = require('tmp');\n\nvar tmpobj = tmp.fileSync({ mode: 0644, prefix: 'prefix-', postfix: '.txt' });\nconsole.log('File: ', tmpobj.name);\nconsole.log('Filedescriptor: ', tmpobj.fd);\n```\n\n### Controlling the Descriptor\n\nAs a side effect of creating a unique file `tmp` gets a file descriptor that is\nreturned to the user as the `fd` parameter.  The descriptor may be used by the\napplication and is closed when the `removeCallback` is invoked.\n\nIn some use cases the application does not need the descriptor, needs to close it\nwithout removing the file, or needs to remove the file without closing the\ndescriptor.  Two options control how the descriptor is managed:\n\n* `discardDescriptor` - if `true` causes `tmp` to close the descriptor after the file\n  is created.  In this case the `fd` parameter is undefined.\n* `detachDescriptor` - if `true` causes `tmp` to return the descriptor in the `fd`\n  parameter, but it is the application's responsibility to close it when it is no\n  longer needed.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.file({ discardDescriptor: true }, function _tempFileCreated(err, path, fd, cleanupCallback) {\n  if (err) throw err;\n  // fd will be undefined, allowing application to use fs.createReadStream(path)\n  // without holding an unused descriptor open.\n});\n```\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.file({ detachDescriptor: true }, function _tempFileCreated(err, path, fd, cleanupCallback) {\n  if (err) throw err;\n\n  cleanupCallback();\n  // Application can store data through fd here; the space used will automatically\n  // be reclaimed by the operating system when the descriptor is closed or program\n  // terminates.\n});\n```\n\n### Asynchronous directory creation\n\nCreates a directory with mode `0755`, prefix will be `myTmpDir_`.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.dir({ mode: 0750, prefix: 'myTmpDir_' }, function _tempDirCreated(err, path) {\n  if (err) throw err;\n\n  console.log('Dir: ', path);\n});\n```\n\n### Synchronous directory creation\n\nAgain, a synchronous version of the above.\n\n```javascript\nvar tmp = require('tmp');\n\nvar tmpobj = tmp.dirSync({ mode: 0750, prefix: 'myTmpDir_' });\nconsole.log('Dir: ', tmpobj.name);\n```\n\n### mkstemp like, asynchronously\n\nCreates a new temporary directory with mode `0700` and filename like `/tmp/tmp-nk2J1u`.\n\nIMPORTANT NOTE: template no longer accepts a path. Use the dir option instead if you\nrequire tmp to create your temporary filesystem object in a different place than the\ndefault `tmp.tmpdir`.\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.dir({ template: 'tmp-XXXXXX' }, function _tempDirCreated(err, path) {\n  if (err) throw err;\n\n  console.log('Dir: ', path);\n});\n```\n\n### mkstemp like, synchronously\n\nThis will behave similarly to the asynchronous version.\n\n```javascript\nvar tmp = require('tmp');\n\nvar tmpobj = tmp.dirSync({ template: 'tmp-XXXXXX' });\nconsole.log('Dir: ', tmpobj.name);\n```\n\n### Asynchronous filename generation\n\nUsing `tmpName()` you can create temporary file names asynchronously.\nThe function accepts all standard options, e.g. `prefix`, `postfix`, `dir`, and so on.\n\nYou can also leave out the options altogether and just call the function with a callback as first parameter.\n\n```javascript\nvar tmp = require('tmp');\n\nvar options = {};\n\ntmp.tmpName(options, function _tempNameGenerated(err, path) {\n    if (err) throw err;\n\n    console.log('Created temporary filename: ', path);\n});\n```\n\n### Synchronous filename generation\n\nThe `tmpNameSync()` function works similarly to `tmpName()`.\nAgain, you can leave out the options altogether and just invoke the function without any parameters.\n\n```javascript\nvar tmp = require('tmp');\nvar options = {};\nvar tmpname = tmp.tmpNameSync(options);\nconsole.log('Created temporary filename: ', tmpname);\n```\n\n## Graceful cleanup\n\nOne may want to cleanup the temporary files even when an uncaught exception\noccurs. To enforce this, you can call the `setGracefulCleanup()` method:\n\n```javascript\nvar tmp = require('tmp');\n\ntmp.setGracefulCleanup();\n```\n\n## Options\n\nAll options are optional :)\n\n  * `mode`: the file mode to create with, it fallbacks to `0600` on file creation and `0700` on directory creation\n  * `prefix`: the optional prefix, fallbacks to `tmp-` if not provided\n  * `postfix`: the optional postfix, fallbacks to `.tmp` on file creation\n  * `template`: [`mkstemp`][3] like filename template, no default\n  * `dir`: the optional temporary directory, fallbacks to system default (guesses from environment)\n  * `tries`: how many times should the function try to get a unique filename before giving up, default `3`\n  * `keep`: signals that the temporary file or directory should not be deleted on exit, default is `false`\n    * In order to clean up, you will have to call the provided `cleanupCallback` function manually.\n  * `unsafeCleanup`: recursively removes the created temporary directory, even when it's not empty. default is `false`\n\n[1]: http://nodejs.org/\n[2]: https://www.npmjs.com/browse/depended/tmp\n[3]: http://www.kernel.org/doc/man-pages/online/pages/man3/mkstemp.3.html\n[4]: https://raszi.github.io/node-tmp/\n[5]: https://github.com/benjamingr/tmp-promise"}, "npm": {"downloads": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 2973909}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 15537106}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 66099579}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 166659663}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 324359694}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 579709393}], "dependentsCount": 2282, "starsCount": 48}, "github": {"starsCount": 542, "forksCount": 81, "subscribersCount": 11, "issues": {"count": 246, "openCount": 24, "distribution": {"3600": 25, "10800": 7, "32400": 10, "97200": 18, "291600": 38, "874800": 32, "2624400": 33, "7873200": 29, "23619600": 28, "70858800": 21, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "raszi", "commitsCount": 187}, {"username": "silkentrance", "commitsCount": 47}, {"username": "binki", "commitsCount": 9}, {"username": "voltrevo", "commitsCount": 8}, {"username": "joscha", "commitsCount": 4}, {"username": "jnj16180340", "commitsCount": 3}, {"username": "Ari-H", "commitsCount": 2}, {"username": "foxel", "commitsCount": 2}, {"username": "mcollina", "commitsCount": 2}, {"username": "pabigot", "commitsCount": 2}, {"username": "wibblymat", "commitsCount": 2}, {"username": "JTKnox91", "commitsCount": 1}, {"username": "OlliV", "commitsCount": 1}, {"username": "ScottWeinstein", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "bmeck", "commitsCount": 1}, {"username": "gcampax", "commitsCount": 1}, {"username": "gutte", "commitsCount": 1}, {"username": "joliss", "commitsCount": 1}, {"username": "kerimdzhanov", "commitsCount": 1}, {"username": "lightsofapollo", "commitsCount": 1}, {"username": "madnight", "commitsCount": 1}, {"username": "matsev", "commitsCount": 1}, {"username": "oscar-broman", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "poppinlp", "commitsCount": 1}, {"username": "shime", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "vhain", "commitsCount": 1}, {"username": "whmountains", "commitsCount": 1}], "commits": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 0}, {"from": "2019-11-30T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 11}, {"from": "2019-09-01T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 12}, {"from": "2019-02-28T00:00:00.000Z", "to": "2020-02-28T00:00:00.000Z", "count": 14}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 10657, "testsSize": 54676}, "badges": [{"urls": {"original": "https://travis-ci.org/raszi/node-tmp.svg?branch=master", "service": "https://api.travis-ci.org/raszi/node-tmp.svg?branch=master", "shields": "https://img.shields.io/travis/raszi/node-tmp/master.svg", "content": "https://img.shields.io/travis/raszi/node-tmp/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/raszi/node-tmp.svg", "service": "https://david-dm.org/raszi/node-tmp.svg", "shields": "https://img.shields.io/david/raszi/node-tmp.svg", "content": "https://img.shields.io/david/raszi/node-tmp.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"], "outdatedDependencies": {"rimraf": {"required": "^2.6.3", "stable": "3.0.2", "latest": "3.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.85, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 713, "downloadsCount": 55553221, "downloadsAcceleration": 207206.9438356164, "dependentsCount": 2282}, "maintenance": {"releasesFrequency": 0.12328767123287673, "commitsFrequency": 0.7065068493150685, "openIssues": 1, "issuesDistribution": 0.25821490919099527}}, "score": {"final": 0.7505722712734987, "detail": {"quality": 0.8704650365922076, "popularity": 0.7096925742776268, "maintenance": 0.6886867408533346}}}
{"analyzedAt": "2020-02-01T09:47:33.736Z", "collected": {"metadata": {"name": "to-fast-properties", "scope": "unscoped", "version": "3.0.1", "description": "Force V8 to use fast properties for an object", "keywords": ["object", "properties", "props", "v8", "optimize", "fast", "convert", "mode"], "date": "2020-02-01T09:45:01.573Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/to-fast-properties.git"}, "links": {"npm": "https://www.npmjs.com/package/to-fast-properties", "homepage": "https://github.com/sindresorhus/to-fast-properties#readme", "repository": "https://github.com/sindresorhus/to-fast-properties", "bugs": "https://github.com/sindresorhus/to-fast-properties/issues"}, "license": "MIT", "devDependencies": {"ava": "0.0.4", "tsd": "^0.10.0"}, "releases": [{"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1}, {"from": "2018-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# to-fast-properties [![Build Status](https://travis-ci.org/sindresorhus/to-fast-properties.svg?branch=master)](https://travis-ci.org/sindresorhus/to-fast-properties)\n\n> Force V8 to use fast properties for an object\n\n[Read more.](https://stackoverflow.com/questions/24987896/)\n\nUse `%HasFastProperties(object)` and `--allow-natives-syntax` to check whether an object already has fast properties.\n\n## Install\n\n```\n$ npm install to-fast-properties\n```\n\n## Usage\n\n```js\nconst toFastProperties = require('to-fast-properties');\n\nconst object = {\n\tfoo: true,\n\tbar: true\n};\n\ndelete object.foo;\n// `object` now has slow properties\n\ntoFastProperties(object);\n// `object` now has fast properties\n```"}, "npm": {"downloads": [{"from": "2020-01-31T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 2415630}, {"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 14367845}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 59183236}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 164281429}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 323549871}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 597883059}], "dependentsCount": 89, "starsCount": 0}, "github": {"starsCount": 182, "forksCount": 12, "subscribersCount": 9, "issues": {"count": 13, "openCount": 0, "distribution": {"3600": 4, "10800": 0, "32400": 3, "97200": 2, "291600": 0, "874800": 2, "2624400": 1, "7873200": 1, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 18}, {"username": "benjamingr", "commitsCount": 3}, {"username": "eush77", "commitsCount": 2}, {"username": "Artoria2e5", "commitsCount": 1}, {"username": "jdalton", "commitsCount": 1}], "commits": [{"from": "2020-01-25T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 3}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 3}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 6}, {"from": "2019-08-05T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 6}, {"from": "2019-02-01T00:00:00.000Z", "to": "2020-02-01T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 690, "testsSize": 529}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/to-fast-properties.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/to-fast-properties.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/to-fast-properties/master.svg", "content": "https://img.shields.io/travis/sindresorhus/to-fast-properties/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 208, "downloadsCount": 54760476.333333336, "downloadsAcceleration": 123550.56512557087, "dependentsCount": 89}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8318443479481037, "detail": {"quality": 0.9547045235275585, "popularity": 0.5584411337155167, "maintenance": 0.9999388402554441}}}
{"analyzedAt": "2020-03-04T21:43:09.200Z", "collected": {"metadata": {"name": "to-object-path", "scope": "unscoped", "version": "0.3.0", "description": "Create an object path from a list or array of strings.", "keywords": ["dot", "nested", "notation", "object", "path", "stringify"], "date": "2016-01-31T16:59:38.115Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/to-object-path.git"}, "links": {"npm": "https://www.npmjs.com/package/to-object-path", "homepage": "https://github.com/jonschlinkert/to-object-path", "repository": "https://github.com/jonschlinkert/to-object-path", "bugs": "https://github.com/jonschlinkert/to-object-path/issues"}, "license": "MIT", "dependencies": {"kind-of": "^3.0.2"}, "devDependencies": {"base": "^0.6.7", "mocha": "*"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# to-object-path [![NPM version](https://badge.fury.io/js/to-object-path.svg)](http://badge.fury.io/js/to-object-path)\n\n> Create an object path from a list or array of strings.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i to-object-path --save\n```\n\n## Usage\n\n```js\nvar toPath = require('to-object-path');\n\ntoPath('foo', 'bar', 'baz');\ntoPath('foo', ['bar', 'baz']);\n//=> 'foo.bar.baz'\n```\n\nAlso supports passing an arguments object (without having to slice args):\n\n```js\nfunction foo()\n  return toPath(arguments);\n}\n\nfoo('foo', 'bar', 'baz');\nfoo('foo', ['bar', 'baz']);\n//=> 'foo.bar.baz'\n```\n\nVisit the [example](./example.js) to see how this could be used in an application.\n\n## Related projects\n\n* [get-value](https://www.npmjs.com/package/get-value): Use property paths (`  a.b.c`) to get a nested value from an object. | [homepage](https://github.com/jonschlinkert/get-value)\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using\u2026 [more](https://www.npmjs.com/package/has-value) | [homepage](https://github.com/jonschlinkert/has-value)\n* [omit-value](https://www.npmjs.com/package/omit-value): Omit properties from an object or deeply nested property of an object using object path\u2026 [more](https://www.npmjs.com/package/omit-value) | [homepage](https://github.com/jonschlinkert/omit-value)\n* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value)\n* [unset-value](https://www.npmjs.com/package/unset-value): Delete nested properties from an object using dot notation. | [homepage](https://github.com/jonschlinkert/unset-value)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/to-object-path/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright \u00a9 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on October 28, 2015._"}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 2024199}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 10729951}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 44813873}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 113984637}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 225419781}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 423055175}], "dependentsCount": 47, "starsCount": 0}, "github": {"starsCount": 13, "forksCount": 0, "subscribersCount": 3, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 1, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 9}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 2379, "testsSize": 1727}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"kind-of": {"required": "^3.0.2", "stable": "6.0.3", "latest": "6.0.3"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.6, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 17, "downloadsCount": 37994879, "downloadsAcceleration": 107004.33384703193, "dependentsCount": 47}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.45133720494032714, "detail": {"quality": 0.7395529912632426, "popularity": 0.4889656406514886, "maintenance": 0.16666666666666666}}}
{"analyzedAt": "2020-02-10T15:43:19.744Z", "collected": {"metadata": {"name": "to-regex", "scope": "unscoped", "version": "3.0.2", "description": "Generate a regex from a string or array of strings.", "keywords": ["match", "regex", "regular expression", "test", "to"], "date": "2018-02-24T08:29:32.189Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/to-regex.git"}, "links": {"npm": "https://www.npmjs.com/package/to-regex", "homepage": "https://github.com/jonschlinkert/to-regex", "repository": "https://github.com/jonschlinkert/to-regex", "bugs": "https://github.com/jonschlinkert/to-regex/issues"}, "license": "MIT", "dependencies": {"define-property": "^2.0.2", "extend-shallow": "^3.0.2", "regex-not": "^1.0.2", "safe-regex": "^1.1.0"}, "devDependencies": {"gulp-format-md": "^1.0.0", "mocha": "^3.5.3"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# to-regex [![NPM version](https://img.shields.io/npm/v/to-regex.svg?style=flat)](https://www.npmjs.com/package/to-regex) [![NPM monthly downloads](https://img.shields.io/npm/dm/to-regex.svg?style=flat)](https://npmjs.org/package/to-regex) [![NPM total downloads](https://img.shields.io/npm/dt/to-regex.svg?style=flat)](https://npmjs.org/package/to-regex) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/to-regex.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/to-regex)\n\n> Generate a regex from a string or array of strings.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n- [Install](#install)\n- [Usage](#usage)\n- [Options](#options)\n  * [options.contains](#optionscontains)\n  * [options.negate](#optionsnegate)\n  * [options.nocase](#optionsnocase)\n  * [options.flags](#optionsflags)\n  * [options.cache](#optionscache)\n  * [options.safe](#optionssafe)\n- [About](#about)\n  * [Related projects](#related-projects)\n  * [Author](#author)\n  * [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save to-regex\n```\n\n## Usage\n\n```js\nvar toRegex = require('to-regex');\n\nconsole.log(toRegex('foo'));\n//=> /^(?:foo)$/\n\nconsole.log(toRegex('foo', {negate: true}));\n//=> /^(?:(?:(?!^(?:foo)$).)*)$/\n\nconsole.log(toRegex('foo', {contains: true}));\n//=> /(?:foo)/\n\nconsole.log(toRegex(['foo', 'bar'], {negate: true}));\n//=> /^(?:(?:(?!^(?:(?:foo)|(?:bar))$).)*)$/\n\nconsole.log(toRegex(['foo', 'bar'], {negate: true, contains: true}));\n//=> /^(?:(?:(?!(?:(?:foo)|(?:bar))).)*)$/\n```\n\n## Options\n\n### options.contains\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\nGenerate a regex that will match any string that _contains_ the given pattern. By default, regex is strict will only return true for exact matches.\n\n```js\nvar toRegex = require('to-regex');\nconsole.log(toRegex('foo', {contains: true}));\n//=> /(?:foo)/\n```\n\n### options.negate\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\nCreate a regex that will match everything except the given pattern.\n\n```js\nvar toRegex = require('to-regex');\nconsole.log(toRegex('foo', {negate: true}));\n//=> /^(?:(?:(?!^(?:foo)$).)*)$/\n```\n\n### options.nocase\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\nAdds the `i` flag, to enable case-insensitive matching.\n\n```js\nvar toRegex = require('to-regex');\nconsole.log(toRegex('foo', {nocase: true}));\n//=> /^(?:foo)$/i\n```\n\nAlternatively you can pass the flags you want directly on [options.flags](#options.flags).\n\n### options.flags\n\n**Type**: `String`\n\n**Default**: `undefined`\n\nDefine the flags you want to use on the generated regex.\n\n```js\nvar toRegex = require('to-regex');\nconsole.log(toRegex('foo', {flags: 'gm'}));\n//=> /^(?:foo)$/gm\nconsole.log(toRegex('foo', {flags: 'gmi', nocase: true})); //<= handles redundancy\n//=> /^(?:foo)$/gmi\n```\n\n### options.cache\n\n**Type**: `Boolean`\n\n**Default**: `true`\n\nGenerated regex is cached based on the provided string and options. As a result, runtime compilation only happens once per pattern (as long as options are also the same), which can result in dramatic speed improvements.\n\nThis also helps with debugging, since adding options and pattern are added to the generated regex.\n\n**Disable caching**\n\n```js\ntoRegex('foo', {cache: false});\n```\n\n### options.safe\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\nCheck the generated regular expression with [safe-regex](https://github.com/substack/safe-regex) and throw an error if the regex is potentially unsafe.\n\n**Examples**\n\n```js\nconsole.log(toRegex('(x+x+)+y'));\n//=> /^(?:(x+x+)+y)$/\n\n// The following would throw an error\ntoRegex('(x+x+)+y', {safe: true});\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [has-glob](https://www.npmjs.com/package/has-glob): Returns `true` if an array has a glob pattern. | [homepage](https://github.com/jonschlinkert/has-glob \"Returns `true` if an array has a glob pattern.\")\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern\u2026 [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [path-regex](https://www.npmjs.com/package/path-regex): Regular expression for matching the parts of a file path. | [homepage](https://github.com/regexps/path-regex \"Regular expression for matching the parts of a file path.\")\n* [to-regex-range](https://www.npmjs.com/package/to-regex-range): Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than\u2026 [more](https://github.com/micromatch/to-regex-range) | [homepage](https://github.com/micromatch/to-regex-range \"Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.\")\n\n### Author\n\n**Jon Schlinkert**\n\n* [linkedin/in/jonschlinkert](https://linkedin.com/in/jonschlinkert)\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on February 24, 2018._"}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 478650}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 10099309}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 39792242}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 111475869}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 222626314}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 419262743}], "dependentsCount": 54, "starsCount": 3}, "github": {"starsCount": 42, "forksCount": 3, "subscribersCount": 6, "issues": {"count": 3, "openCount": 1, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 21}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 6703, "testsSize": 9454}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/to-regex.svg?style=flat", "shields": "https://img.shields.io/npm/v/to-regex.svg", "content": "https://img.shields.io/npm/v/to-regex.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/to-regex.svg?style=flat", "shields": "https://img.shields.io/npm/dm/to-regex.svg", "content": "https://img.shields.io/npm/dm/to-regex.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/to-regex.svg?style=flat", "shields": "https://img.shields.io/npm/dt/to-regex.svg", "content": "https://img.shields.io/npm/dt/to-regex.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/to-regex.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/to-regex.svg", "shields": "https://img.shields.io/travis/jonschlinkert/to-regex.svg", "content": "https://img.shields.io/travis/jonschlinkert/to-regex.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"safe-regex": {"required": "^1.1.0", "stable": "2.1.1", "latest": "2.1.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 55, "downloadsCount": 37158623, "downloadsAcceleration": 66472.70589802135, "dependentsCount": 54}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8018015884210958, "detail": {"quality": 0.9238964264729319, "popularity": 0.4990935359919972, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-05T21:45:04.822Z", "collected": {"metadata": {"name": "to-regex-range", "scope": "unscoped", "version": "5.0.1", "description": "Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.", "keywords": ["bash", "date", "expand", "expansion", "expression", "glob", "match", "match date", "match number", "match numbers", "match year", "matches", "matching", "number", "numbers", "numerical", "range", "ranges", "regex", "regexp", "regular", "regular expression", "sequence"], "date": "2019-04-07T06:04:37.030Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Rouven We\u00dfling", "url": "www.rouvenwessling.de"}], "repository": {"type": "git", "url": "git+https://github.com/micromatch/to-regex-range.git"}, "links": {"npm": "https://www.npmjs.com/package/to-regex-range", "homepage": "https://github.com/micromatch/to-regex-range", "repository": "https://github.com/micromatch/to-regex-range", "bugs": "https://github.com/micromatch/to-regex-range/issues"}, "license": "MIT", "dependencies": {"is-number": "^7.0.0"}, "devDependencies": {"fill-range": "^6.0.0", "gulp-format-md": "^2.0.0", "mocha": "^6.0.2", "text-table": "^0.2.0", "time-diff": "^0.3.1"}, "releases": [{"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 3}, {"from": "2018-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# to-regex-range [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/to-regex-range.svg?style=flat)](https://www.npmjs.com/package/to-regex-range) [![NPM monthly downloads](https://img.shields.io/npm/dm/to-regex-range.svg?style=flat)](https://npmjs.org/package/to-regex-range) [![NPM total downloads](https://img.shields.io/npm/dt/to-regex-range.svg?style=flat)](https://npmjs.org/package/to-regex-range) [![Linux Build Status](https://img.shields.io/travis/micromatch/to-regex-range.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/to-regex-range)\n\n> Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save to-regex-range\n```\n\n<details>\n<summary><strong>What does this do?</strong></summary>\n\n<br>\n\nThis libary generates the `source` string to be passed to `new RegExp()` for matching a range of numbers.\n\n**Example**\n\n```js\nconst toRegexRange = require('to-regex-range');\nconst regex = new RegExp(toRegexRange('15', '95'));\n```\n\nA string is returned so that you can do whatever you need with it before passing it to `new RegExp()` (like adding `^` or `$` boundaries, defining flags, or combining it another string).\n\n<br>\n\n</details>\n\n<details>\n<summary><strong>Why use this library?</strong></summary>\n\n<br>\n\n### Convenience\n\nCreating regular expressions for matching numbers gets deceptively complicated pretty fast.\n\nFor example, let's say you need a validation regex for matching part of a user-id, postal code, social security number, tax id, etc:\n\n* regex for matching `1` => `/1/` (easy enough)\n* regex for matching `1` through `5` => `/[1-5]/` (not bad...)\n* regex for matching `1` or `5` => `/(1|5)/` (still easy...)\n* regex for matching `1` through `50` => `/([1-9]|[1-4][0-9]|50)/` (uh-oh...)\n* regex for matching `1` through `55` => `/([1-9]|[1-4][0-9]|5[0-5])/` (no prob, I can do this...)\n* regex for matching `1` through `555` => `/([1-9]|[1-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9]|55[0-5])/` (maybe not...)\n* regex for matching `0001` through `5555` => `/(0{3}[1-9]|0{2}[1-9][0-9]|0[1-9][0-9]{2}|[1-4][0-9]{3}|5[0-4][0-9]{2}|55[0-4][0-9]|555[0-5])/` (okay, I get the point!)\n\nThe numbers are contrived, but they're also really basic. In the real world you might need to generate a regex on-the-fly for validation.\n\n**Learn more**\n\nIf you're interested in learning more about [character classes](http://www.regular-expressions.info/charclass.html) and other regex features, I personally have always found [regular-expressions.info](http://www.regular-expressions.info/charclass.html) to be pretty useful.\n\n### Heavily tested\n\nAs of April 07, 2019, this library runs [>1m test assertions](./test/test.js) against generated regex-ranges to provide brute-force verification that results are correct.\n\nTests run in ~280ms on my MacBook Pro, 2.5 GHz Intel Core i7.\n\n### Optimized\n\nGenerated regular expressions are optimized:\n\n* duplicate sequences and character classes are reduced using quantifiers\n* smart enough to use `?` conditionals when number(s) or range(s) can be positive or negative\n* uses fragment caching to avoid processing the same exact string more than once\n\n<br>\n\n</details>\n\n## Usage\n\nAdd this library to your javascript application with the following line of code\n\n```js\nconst toRegexRange = require('to-regex-range');\n```\n\nThe main export is a function that takes two integers: the `min` value and `max` value (formatted as strings or numbers).\n\n```js\nconst source = toRegexRange('15', '95');\n//=> 1[5-9]|[2-8][0-9]|9[0-5]\n\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('14')); //=> false\nconsole.log(regex.test('50')); //=> true\nconsole.log(regex.test('94')); //=> true\nconsole.log(regex.test('96')); //=> false\n```\n\n## Options\n\n### options.capture\n\n**Type**: `boolean`\n\n**Deafault**: `undefined`\n\nWrap the returned value in parentheses when there is more than one regex condition. Useful when you're dynamically generating ranges.\n\n```js\nconsole.log(toRegexRange('-10', '10'));\n//=> -[1-9]|-?10|[0-9]\n\nconsole.log(toRegexRange('-10', '10', { capture: true }));\n//=> (-[1-9]|-?10|[0-9])\n```\n\n### options.shorthand\n\n**Type**: `boolean`\n\n**Deafault**: `undefined`\n\nUse the regex shorthand for `[0-9]`:\n\n```js\nconsole.log(toRegexRange('0', '999999'));\n//=> [0-9]|[1-9][0-9]{1,5}\n\nconsole.log(toRegexRange('0', '999999', { shorthand: true }));\n//=> \\d|[1-9]\\d{1,5}\n```\n\n### options.relaxZeros\n\n**Type**: `boolean`\n\n**Default**: `true`\n\nThis option relaxes matching for leading zeros when when ranges are zero-padded.\n\n```js\nconst source = toRegexRange('-0010', '0010');\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('-10')); //=> true\nconsole.log(regex.test('-010')); //=> true\nconsole.log(regex.test('-0010')); //=> true\nconsole.log(regex.test('10')); //=> true\nconsole.log(regex.test('010')); //=> true\nconsole.log(regex.test('0010')); //=> true\n```\n\nWhen `relaxZeros` is false, matching is strict:\n\n```js\nconst source = toRegexRange('-0010', '0010', { relaxZeros: false });\nconst regex = new RegExp(`^${source}$`);\nconsole.log(regex.test('-10')); //=> false\nconsole.log(regex.test('-010')); //=> false\nconsole.log(regex.test('-0010')); //=> true\nconsole.log(regex.test('10')); //=> false\nconsole.log(regex.test('010')); //=> false\nconsole.log(regex.test('0010')); //=> true\n```\n\n## Examples\n\n| **Range**                   | **Result**                                                                      | **Compile time** |\n| ---                         | ---                                                                             | ---              |\n| `toRegexRange(-10, 10)`     | `-[1-9]\\|-?10\\|[0-9]`                                                           | _132\u03bcs_          |\n| `toRegexRange(-100, -10)`   | `-1[0-9]\\|-[2-9][0-9]\\|-100`                                                    | _50\u03bcs_           |\n| `toRegexRange(-100, 100)`   | `-[1-9]\\|-?[1-9][0-9]\\|-?100\\|[0-9]`                                            | _42\u03bcs_           |\n| `toRegexRange(001, 100)`    | `0{0,2}[1-9]\\|0?[1-9][0-9]\\|100`                                                | _109\u03bcs_          |\n| `toRegexRange(001, 555)`    | `0{0,2}[1-9]\\|0?[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]`                | _51\u03bcs_           |\n| `toRegexRange(0010, 1000)`  | `0{0,2}1[0-9]\\|0{0,2}[2-9][0-9]\\|0?[1-9][0-9]{2}\\|1000`                         | _31\u03bcs_           |\n| `toRegexRange(1, 50)`       | `[1-9]\\|[1-4][0-9]\\|50`                                                         | _24\u03bcs_           |\n| `toRegexRange(1, 55)`       | `[1-9]\\|[1-4][0-9]\\|5[0-5]`                                                     | _23\u03bcs_           |\n| `toRegexRange(1, 555)`      | `[1-9]\\|[1-9][0-9]\\|[1-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]`                        | _30\u03bcs_           |\n| `toRegexRange(1, 5555)`     | `[1-9]\\|[1-9][0-9]{1,2}\\|[1-4][0-9]{3}\\|5[0-4][0-9]{2}\\|55[0-4][0-9]\\|555[0-5]` | _43\u03bcs_           |\n| `toRegexRange(111, 555)`    | `11[1-9]\\|1[2-9][0-9]\\|[2-4][0-9]{2}\\|5[0-4][0-9]\\|55[0-5]`                     | _38\u03bcs_           |\n| `toRegexRange(29, 51)`      | `29\\|[34][0-9]\\|5[01]`                                                          | _24\u03bcs_           |\n| `toRegexRange(31, 877)`     | `3[1-9]\\|[4-9][0-9]\\|[1-7][0-9]{2}\\|8[0-6][0-9]\\|87[0-7]`                       | _32\u03bcs_           |\n| `toRegexRange(5, 5)`        | `5`                                                                             | _8\u03bcs_            |\n| `toRegexRange(5, 6)`        | `5\\|6`                                                                          | _11\u03bcs_           |\n| `toRegexRange(1, 2)`        | `1\\|2`                                                                          | _6\u03bcs_            |\n| `toRegexRange(1, 5)`        | `[1-5]`                                                                         | _15\u03bcs_           |\n| `toRegexRange(1, 10)`       | `[1-9]\\|10`                                                                     | _22\u03bcs_           |\n| `toRegexRange(1, 100)`      | `[1-9]\\|[1-9][0-9]\\|100`                                                        | _25\u03bcs_           |\n| `toRegexRange(1, 1000)`     | `[1-9]\\|[1-9][0-9]{1,2}\\|1000`                                                  | _31\u03bcs_           |\n| `toRegexRange(1, 10000)`    | `[1-9]\\|[1-9][0-9]{1,3}\\|10000`                                                 | _34\u03bcs_           |\n| `toRegexRange(1, 100000)`   | `[1-9]\\|[1-9][0-9]{1,4}\\|100000`                                                | _36\u03bcs_           |\n| `toRegexRange(1, 1000000)`  | `[1-9]\\|[1-9][0-9]{1,5}\\|1000000`                                               | _42\u03bcs_           |\n| `toRegexRange(1, 10000000)` | `[1-9]\\|[1-9][0-9]{1,6}\\|10000000`                                              | _42\u03bcs_           |\n\n## Heads up!\n\n**Order of arguments**\n\nWhen the `min` is larger than the `max`, values will be flipped to create a valid range:\n\n```js\ntoRegexRange('51', '29');\n```\n\nIs effectively flipped to:\n\n```js\ntoRegexRange('29', '51');\n//=> 29|[3-4][0-9]|5[0-1]\n```\n\n**Steps / increments**\n\nThis library does not support steps (increments). A pr to add support would be welcome.\n\n## History\n\n### v2.0.0 - 2017-04-21\n\n**New features**\n\nAdds support for zero-padding!\n\n### v1.0.0\n\n**Optimizations**\n\nRepeating ranges are now grouped using quantifiers. rocessing time is roughly the same, but the generated regex is much smaller, which should result in faster matching.\n\n## Attribution\n\nInspired by the python library [range-regex](https://github.com/dimka665/range-regex).\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [expand-range](https://www.npmjs.com/package/expand-range): Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used\u2026 [more](https://github.com/jonschlinkert/expand-range) | [homepage](https://github.com/jonschlinkert/expand-range \"Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. Used by micromatch.\")\n* [fill-range](https://www.npmjs.com/package/fill-range): Fill in a range of numbers or letters, optionally passing an increment or `step` to\u2026 [more](https://github.com/jonschlinkert/fill-range) | [homepage](https://github.com/jonschlinkert/fill-range \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n* [repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element \"Create an array by repeating the given value n times.\")\n* [repeat-string](https://www.npmjs.com/package/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string. | [homepage](https://github.com/jonschlinkert/repeat-string \"Repeat the given string n times. Fastest implementation for repeating a string.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 63 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 3  | [doowb](https://github.com/doowb) |  \n| 2  | [realityking](https://github.com/realityking) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\nPlease consider supporting me on Patreon, or [start your own Patreon page](https://patreon.com/invite/bxpbvm)!\n\n<a href=\"https://www.patreon.com/jonschlinkert\">\n<img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" height=\"50\">\n</a>\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 07, 2019._"}, "npm": {"downloads": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 3041965}, {"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 15808363}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 64488432}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 165117914}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 309924329}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 516072430}], "dependentsCount": 48, "starsCount": 2}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 82, "forksCount": 6, "subscribersCount": 5, "issues": {"count": 11, "openCount": 4, "distribution": {"3600": 2, "10800": 0, "32400": 1, "97200": 0, "291600": 1, "874800": 0, "2624400": 1, "7873200": 2, "23619600": 2, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 69}, {"username": "doowb", "commitsCount": 3}, {"username": "realityking", "commitsCount": 2}], "commits": [{"from": "2020-01-29T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2020-01-06T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-08-09T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 0}, {"from": "2019-02-05T00:00:00.000Z", "to": "2020-02-05T00:00:00.000Z", "count": 7}]}, "source": {"files": {"readmeSize": 13585, "testsSize": 13744}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/to-regex-range.svg?style=flat", "shields": "https://img.shields.io/npm/v/to-regex-range.svg", "content": "https://img.shields.io/npm/v/to-regex-range.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/to-regex-range.svg?style=flat", "shields": "https://img.shields.io/npm/dm/to-regex-range.svg", "content": "https://img.shields.io/npm/dm/to-regex-range.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/to-regex-range.svg?style=flat", "shields": "https://img.shields.io/npm/dt/to-regex-range.svg", "content": "https://img.shields.io/npm/dt/to-regex-range.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/micromatch/to-regex-range.svg?label=Travis", "service": "https://api.travis-ci.org/micromatch/to-regex-range.svg", "shields": "https://img.shields.io/travis/micromatch/to-regex-range.svg", "content": "https://img.shields.io/travis/micromatch/to-regex-range.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 98, "downloadsCount": 55039304.666666664, "downloadsAcceleration": 260905.5226978691, "dependentsCount": 48}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8182012070647608, "detail": {"quality": 0.9333911371497057, "popularity": 0.5378112658223775, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-27T23:31:54.253Z", "collected": {"metadata": {"name": "tslib", "scope": "unscoped", "version": "1.11.1", "description": "Runtime library for TypeScript helper functions", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript", "tslib", "runtime"], "date": "2020-02-27T19:32:23.640Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript-bot", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "andrewbranch", "email": "andrew@wheream.io"}, {"username": "minestarks", "email": "mineyalc@microsoft.com"}, {"username": "rbuckton", "email": "rbuckton@chronicles.org"}, {"username": "sanders_n", "email": "ncsander@indiana.edu"}, {"username": "sheetalkamat", "email": "shkamat@microsoft.com"}, {"username": "typescript-bot", "email": "typescript@microsoft.com"}, {"username": "weswigham", "email": "wwigham@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/tslib.git"}, "links": {"npm": "https://www.npmjs.com/package/tslib", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/tslib", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "Apache-2.0", "releases": [{"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 1}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 2}, {"from": "2018-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 5}], "readme": "# tslib\r\n\r\nThis is a runtime library for [TypeScript](http://www.typescriptlang.org/) that contains all of the TypeScript helper functions.\r\n\r\nThis library is primarily used by the `--importHelpers` flag in TypeScript.\r\nWhen using `--importHelpers`, a module that uses helper functions like `__extends` and `__assign` in the following emitted file:\r\n\r\n```ts\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nexports.x = {};\r\nexports.y = __assign({}, exports.x);\r\n\r\n```\r\n\r\nwill instead be emitted as something like the following:\r\n\r\n```ts\r\nvar tslib_1 = require(\"tslib\");\r\nexports.x = {};\r\nexports.y = tslib_1.__assign({}, exports.x);\r\n```\r\n\r\nBecause this can avoid duplicate declarations of things like `__extends`, `__assign`, etc., this means delivering users smaller files on average, as well as less runtime overhead.\r\nFor optimized bundles with TypeScript, you should absolutely consider using `tslib` and `--importHelpers`.\r\n\r\n# Installing\r\n\r\nFor the latest stable version, run:\r\n\r\n## npm\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nnpm install --save tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nnpm install --save tslib@1.6.1\r\n```\r\n\r\n## yarn\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nyarn add tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nyarn add tslib@1.6.1\r\n```\r\n\r\n## bower\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nbower install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nbower install tslib@1.6.1\r\n```\r\n\r\n## JSPM\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\njspm install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\njspm install tslib@1.6.1\r\n```\r\n\r\n# Usage\r\n\r\nSet the `importHelpers` compiler option on the command line:\r\n\r\n```\r\ntsc --importHelpers file.ts\r\n```\r\n\r\nor in your tsconfig.json:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"importHelpers\": true\r\n    }\r\n}\r\n```\r\n\r\n#### For bower and JSPM users\r\n\r\nYou will need to add a `paths` mapping for `tslib`, e.g. For Bower users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"amd\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"bower_components/tslib/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFor JSPM users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"system\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"jspm_packages/npm/tslib@1.11.1/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Contribute\r\n\r\nThere are many ways to [contribute](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md) to TypeScript.\r\n\r\n* [Submit bugs](https://github.com/Microsoft/TypeScript/issues) and help us verify fixes as they are checked in.\r\n* Review the [source code changes](https://github.com/Microsoft/TypeScript/pulls).\r\n* Engage with other TypeScript users and developers on [StackOverflow](http://stackoverflow.com/questions/tagged/typescript).\r\n* Join the [#typescript](http://twitter.com/#!/search/realtime/%23typescript) discussion on Twitter.\r\n* [Contribute bug fixes](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\r\n* Read the language specification ([docx](http://go.microsoft.com/fwlink/?LinkId=267121), [pdf](http://go.microsoft.com/fwlink/?LinkId=267238)).\r\n\r\n# Documentation\r\n\r\n* [Quick tutorial](http://www.typescriptlang.org/Tutorial)\r\n* [Programming handbook](http://www.typescriptlang.org/Handbook)\r\n* [Language specification](https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md)\r\n* [Homepage](http://www.typescriptlang.org/)"}, "npm": {"downloads": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 3071751}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 15688401}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 60551516}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 150412106}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 294207373}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 513355037}], "dependentsCount": 26577, "starsCount": 9}, "github": {"starsCount": 540, "forksCount": 50, "subscribersCount": 82, "issues": {"count": 94, "openCount": 33, "distribution": {"3600": 10, "10800": 6, "32400": 4, "97200": 5, "291600": 10, "874800": 7, "2624400": 8, "7873200": 11, "23619600": 11, "70858800": 14, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "rbuckton", "commitsCount": 45}, {"username": "DanielRosenwasser", "commitsCount": 18}, {"username": "mhegazy", "commitsCount": 13}, {"username": "frankwallis", "commitsCount": 6}, {"username": "weswigham", "commitsCount": 4}, {"username": "Draccoz", "commitsCount": 3}, {"username": "sandersn", "commitsCount": 3}, {"username": "aluanhaddad", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "NicholasLYang", "commitsCount": 1}, {"username": "Saulzi", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "alan-agius4", "commitsCount": 1}, {"username": "billti", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "lolipop99", "commitsCount": 1}, {"username": "mgunter6", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "timbru31", "commitsCount": 1}], "commits": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 4}, {"from": "2020-01-28T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 8}, {"from": "2019-11-29T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 9}, {"from": "2019-08-31T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 10}, {"from": "2019-02-27T00:00:00.000Z", "to": "2020-02-27T00:00:00.000Z", "count": 19}]}, "source": {"files": {"readmeSize": 3693, "testsSize": 0, "hasNpmIgnore": true}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 701, "downloadsCount": 50137368.666666664, "downloadsAcceleration": 209991.23997336382, "dependentsCount": 26577}, "maintenance": {"releasesFrequency": 0.7838184931506849, "commitsFrequency": 0.8431164383561643, "openIssues": 0.74822695035461, "issuesDistribution": 0}}, "score": {"final": 0.6966610848024831, "detail": {"quality": 0.6206336686066596, "popularity": 0.7931820681067814, "maintenance": 0.6653064582374623}}}
{"analyzedAt": "2020-03-04T10:24:53.851Z", "collected": {"metadata": {"name": "type-check", "scope": "unscoped", "version": "0.3.2", "description": "type-check allows you to check the types of JavaScript values at runtime with a Haskell like type syntax.", "keywords": ["type", "check", "checking", "library"], "date": "2015-12-29T05:46:21.672Z", "author": {"name": "George Zahariev", "email": "z@georgezahariev.com", "username": "gkz"}, "publisher": {"username": "gkz", "email": "z@georgezahariev.com"}, "maintainers": [{"username": "gkz", "email": "z@georgezahariev.com"}], "repository": {"type": "git", "url": "git://github.com/gkz/type-check.git"}, "links": {"npm": "https://www.npmjs.com/package/type-check", "homepage": "https://github.com/gkz/type-check", "repository": "https://github.com/gkz/type-check", "bugs": "https://github.com/gkz/type-check/issues"}, "license": "MIT", "dependencies": {"prelude-ls": "~1.1.2"}, "devDependencies": {"livescript": "~1.4.0", "mocha": "~2.3.4", "istanbul": "~0.4.1", "browserify": "~12.0.1"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# type-check [![Build Status](https://travis-ci.org/gkz/type-check.png?branch=master)](https://travis-ci.org/gkz/type-check)\n\n<a name=\"type-check\" />\n\n`type-check` is a library which allows you to check the types of JavaScript values at runtime with a Haskell like type syntax. It is great for checking external input, for testing, or even for adding a bit of safety to your internal code. It is a major component of [levn](https://github.com/gkz/levn). MIT license. Version 0.3.2. Check out the [demo](http://gkz.github.io/type-check/).\n\nFor updates on `type-check`, [follow me on twitter](https://twitter.com/gkzahariev).\n\n    npm install type-check\n\n## Quick Examples\n\n```js\n// Basic types:\nvar typeCheck = require('type-check').typeCheck;\ntypeCheck('Number', 1);               // true\ntypeCheck('Number', 'str');           // false\ntypeCheck('Error', new Error);        // true\ntypeCheck('Undefined', undefined);    // true\n\n// Comment\ntypeCheck('count::Number', 1);        // true\n\n// One type OR another type:\ntypeCheck('Number | String', 2);      // true\ntypeCheck('Number | String', 'str');  // true\n\n// Wildcard, matches all types:\ntypeCheck('*', 2) // true\n\n// Array, all elements of a single type:\ntypeCheck('[Number]', [1, 2, 3]);                // true\ntypeCheck('[Number]', [1, 'str', 3]);            // false\n\n// Tuples, or fixed length arrays with elements of different types:\ntypeCheck('(String, Number)', ['str', 2]);       // true\ntypeCheck('(String, Number)', ['str']);          // false\ntypeCheck('(String, Number)', ['str', 2, 5]);    // false\n\n// Object properties:\ntypeCheck('{x: Number, y: Boolean}', {x: 2, y: false});             // true\ntypeCheck('{x: Number, y: Boolean}',       {x: 2});                 // false\ntypeCheck('{x: Number, y: Maybe Boolean}', {x: 2});                 // true\ntypeCheck('{x: Number, y: Boolean}',      {x: 2, y: false, z: 3});  // false\ntypeCheck('{x: Number, y: Boolean, ...}', {x: 2, y: false, z: 3});  // true\n\n// A particular type AND object properties:\ntypeCheck('RegExp{source: String, ...}', /re/i);          // true\ntypeCheck('RegExp{source: String, ...}', {source: 're'}); // false\n\n// Custom types:\nvar opt = {customTypes:\n  {Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; }}}};\ntypeCheck('Even', 2, opt); // true\n\n// Nested:\nvar type = '{a: (String, [Number], {y: Array, ...}), b: Error{message: String, ...}}'\ntypeCheck(type, {a: ['hi', [1, 2, 3], {y: [1, 'ms']}], b: new Error('oh no')}); // true\n```\n\nCheck out the [type syntax format](#syntax) and [guide](#guide).\n\n## Usage\n\n`require('type-check');` returns an object that exposes four properties. `VERSION` is the current version of the library as a string. `typeCheck`, `parseType`, and `parsedTypeCheck` are functions.\n\n```js\n// typeCheck(type, input, options);\ntypeCheck('Number', 2);               // true\n\n// parseType(type);\nvar parsedType = parseType('Number'); // object\n\n// parsedTypeCheck(parsedType, input, options);\nparsedTypeCheck(parsedType, 2);       // true\n```\n\n### typeCheck(type, input, options)\n\n`typeCheck` checks a JavaScript value `input` against `type` written in the [type format](#type-format) (and taking account the optional `options`) and returns whether the `input` matches the `type`.\n\n##### arguments\n* type - `String` - the type written in the [type format](#type-format) which to check against\n* input - `*` - any JavaScript value, which is to be checked against the type\n* options - `Maybe Object` - an optional parameter specifying additional options, currently the only available option is specifying [custom types](#custom-types)\n\n##### returns\n`Boolean` - whether the input matches the type\n\n##### example\n```js\ntypeCheck('Number', 2); // true\n```\n\n### parseType(type)\n\n`parseType` parses string `type` written in the [type format](#type-format) into an object representing the parsed type.\n\n##### arguments\n* type - `String` - the type written in the [type format](#type-format) which to parse\n\n##### returns\n`Object` - an object in the parsed type format representing the parsed type\n\n##### example\n```js\nparseType('Number'); // [{type: 'Number'}]\n```\n### parsedTypeCheck(parsedType, input, options)\n\n`parsedTypeCheck` checks a JavaScript value `input` against parsed `type` in the parsed type format (and taking account the optional `options`) and returns whether the `input` matches the `type`. Use this in conjunction with `parseType` if you are going to use a type more than once.\n\n##### arguments\n* type - `Object` - the type in the parsed type format which to check against\n* input - `*` - any JavaScript value, which is to be checked against the type\n* options - `Maybe Object` - an optional parameter specifying additional options, currently the only available option is specifying [custom types](#custom-types)\n\n##### returns\n`Boolean` - whether the input matches the type\n\n##### example\n```js\nparsedTypeCheck([{type: 'Number'}], 2); // true\nvar parsedType = parseType('String');\nparsedTypeCheck(parsedType, 'str');     // true\n```\n\n<a name=\"type-format\" />\n## Type Format\n\n### Syntax\n\nWhite space is ignored. The root node is a __Types__.\n\n* __Identifier__ = `[\\$\\w]+` - a group of any lower or upper case letters, numbers, underscores, or dollar signs - eg. `String`\n* __Type__ = an `Identifier`, an `Identifier` followed by a `Structure`, just a `Structure`, or a wildcard `*` - eg. `String`, `Object{x: Number}`, `{x: Number}`, `Array{0: String, 1: Boolean, length: Number}`, `*`\n* __Types__ = optionally a comment (an `Indentifier` followed by a `::`), optionally the identifier `Maybe`, one or more `Type`, separated by `|` - eg. `Number`, `String | Date`, `Maybe Number`, `Maybe Boolean | String`\n* __Structure__ = `Fields`, or a `Tuple`, or an `Array` - eg. `{x: Number}`, `(String, Number)`, `[Date]`\n* __Fields__ = a `{`, followed one or more `Field` separated by a comma `,` (trailing comma `,` is permitted), optionally an `...` (always preceded by a comma `,`), followed by a `}` - eg. `{x: Number, y: String}`, `{k: Function, ...}`\n* __Field__ = an `Identifier`, followed by a colon `:`, followed by `Types` - eg. `x: Date | String`, `y: Boolean`\n* __Tuple__ = a `(`, followed by one or more `Types` separated by a comma `,` (trailing comma `,` is permitted), followed by a `)` - eg `(Date)`, `(Number, Date)`\n* __Array__ = a `[` followed by exactly one `Types` followed by a `]` - eg. `[Boolean]`, `[Boolean | Null]`\n\n### Guide\n\n`type-check` uses `Object.toString` to find out the basic type of a value. Specifically,\n\n```js\n{}.toString.call(VALUE).slice(8, -1)\n{}.toString.call(true).slice(8, -1) // 'Boolean'\n```\nA basic type, eg. `Number`, uses this check. This is much more versatile than using `typeof` - for example, with `document`, `typeof` produces `'object'` which isn't that useful, and our technique produces `'HTMLDocument'`.\n\nYou may check for multiple types by separating types with a `|`. The checker proceeds from left to right, and passes if the value is any of the types - eg. `String | Boolean` first checks if the value is a string, and then if it is a boolean. If it is none of those, then it returns false.\n\nAdding a `Maybe` in front of a list of multiple types is the same as also checking for `Null` and `Undefined` - eg. `Maybe String` is equivalent to `Undefined | Null | String`.\n\nYou may add a comment to remind you of what the type is for by following an identifier with a `::` before a type (or multiple types). The comment is simply thrown out.\n\nThe wildcard `*` matches all types.\n\nThere are three types of structures for checking the contents of a value: 'fields', 'tuple', and 'array'.\n\nIf used by itself, a 'fields' structure will pass with any type of object as long as it is an instance of `Object` and the properties pass - this allows for duck typing - eg. `{x: Boolean}`.\n\nTo check if the properties pass, and the value is of a certain type, you can specify the type - eg. `Error{message: String}`.\n\nIf you want to make a field optional, you can simply use `Maybe` - eg. `{x: Boolean, y: Maybe String}` will still pass if `y` is undefined (or null).\n\nIf you don't care if the value has properties beyond what you have specified, you can use the 'etc' operator `...` - eg. `{x: Boolean, ...}` will match an object with an `x` property that is a boolean, and with zero or more other properties.\n\nFor an array, you must specify one or more types (separated by `|`) - it will pass for something of any length as long as each element passes the types provided - eg. `[Number]`, `[Number | String]`.\n\nA tuple checks for a fixed number of elements, each of a potentially different type. Each element is separated by a comma - eg. `(String, Number)`.\n\nAn array and tuple structure check that the value is of type `Array` by default, but if another type is specified, they will check for that instead - eg. `Int32Array[Number]`. You can use the wildcard `*` to search for any type at all.\n\nCheck out the [type precedence](https://github.com/zaboco/type-precedence) library for type-check.\n\n## Options\n\nOptions is an object. It is an optional parameter to the `typeCheck` and `parsedTypeCheck` functions. The only current option is `customTypes`.\n\n<a name=\"custom-types\" />\n### Custom Types\n\n__Example:__\n\n```js\nvar options = {\n  customTypes: {\n    Even: {\n      typeOf: 'Number',\n      validate: function(x) {\n        return x % 2 === 0;\n      }\n    }\n  }\n};\ntypeCheck('Even', 2, options); // true\ntypeCheck('Even', 3, options); // false\n```\n\n`customTypes` allows you to set up custom types for validation. The value of this is an object. The keys of the object are the types you will be matching. Each value of the object will be an object having a `typeOf` property - a string, and `validate` property - a function.\n\nThe `typeOf` property is the type the value should be, and `validate` is a function which should return true if the value is of that type. `validate` receives one parameter, which is the value that we are checking.\n\n## Technical About\n\n`type-check` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It also uses the [prelude.ls](http://preludels.com/) library."}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1902046}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 10176989}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 42167015}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 106711641}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 209103195}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 388912868}], "dependentsCount": 100, "starsCount": 10}, "github": {"homepage": "http://gkz.github.io/type-check/", "starsCount": 175, "forksCount": 8, "subscribersCount": 4, "issues": {"count": 11, "openCount": 10, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 1, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 2, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "gkz", "commitsCount": 21}, {"username": "EdwardBetts", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 10168, "testsSize": 14125}, "badges": [{"urls": {"original": "https://travis-ci.org/gkz/type-check.png?branch=master", "service": "https://api.travis-ci.org/gkz/type-check.svg?branch=master", "shields": "https://img.shields.io/travis/gkz/type-check/master.svg", "content": "https://img.shields.io/travis/gkz/type-check/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 199, "downloadsCount": 35570547, "downloadsAcceleration": 109055.54240867589, "dependentsCount": 100}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0.09090909090909094, "issuesDistribution": 0}}, "score": {"final": 0.44714315009004396, "detail": {"quality": 0.8088428503261701, "popularity": 0.5457962704181644, "maintenance": 0.03846171527381553}}}
{"analyzedAt": "2020-02-20T08:48:46.079Z", "collected": {"metadata": {"name": "type-fest", "scope": "unscoped", "version": "0.11.0", "description": "A collection of essential TypeScript types", "keywords": ["typescript", "ts", "types", "utility", "util", "utilities", "omit", "merge", "json"], "date": "2020-02-20T08:48:34.861Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/type-fest.git"}, "links": {"npm": "https://www.npmjs.com/package/type-fest", "homepage": "https://github.com/sindresorhus/type-fest#readme", "repository": "https://github.com/sindresorhus/type-fest", "bugs": "https://github.com/sindresorhus/type-fest/issues"}, "license": "(MIT OR CC0-1.0)", "devDependencies": {"@sindresorhus/tsconfig": "^0.7.0", "@typescript-eslint/eslint-plugin": "2.17.0", "@typescript-eslint/parser": "2.17.0", "eslint-config-xo-typescript": "^0.24.1", "tsd": "^0.7.3", "typescript": "3.7.5", "xo": "^0.25.3"}, "releases": [{"from": "2020-01-21T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 2}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 2}, {"from": "2019-08-24T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 4}, {"from": "2019-02-20T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 17}, {"from": "2018-02-20T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 17}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n\t<br>\n\t<br>\n\t<img src=\"media/logo.svg\" alt=\"type-fest\" height=\"300\">\n\t<br>\n\t<br>\n\t<b>A collection of essential TypeScript types</b>\n\t<br>\n\t<hr>\n</div>\n<br>\n<br>\n\n[![Build Status](https://travis-ci.com/sindresorhus/type-fest.svg?branch=master)](https://travis-ci.com/sindresorhus/type-fest)\n[![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4)\n<!-- Commented out until they actually show anything\n[![npm dependents](https://badgen.net/npm/dependents/type-fest)](https://www.npmjs.com/package/type-fest?activeTab=dependents) [![npm downloads](https://badgen.net/npm/dt/type-fest)](https://www.npmjs.com/package/type-fest)\n-->\n\nMany of the types here should have been built-in. You can help by suggesting some of them to the [TypeScript project](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\n\nEither add this package as a dependency or copy-paste the needed types. No credit required. \ud83d\udc4c\n\nPR welcome for additional commonly needed types and docs improvements. Read the [contributing guidelines](.github/contributing.md) first.\n\n## Install\n\n```\n$ npm install type-fest\n```\n\n*Requires TypeScript >=3.2*\n\n## Usage\n\n```ts\nimport {Except} from 'type-fest';\n\ntype Foo = {\n\tunicorn: string;\n\trainbow: boolean;\n};\n\ntype FooWithoutRainbow = Except<Foo, 'rainbow'>;\n//=> {unicorn: string}\n```\n\n## API\n\nClick the type names for complete docs.\n\n### Basic\n\n- [`Primitive`](source/basic.d.ts) - Matches any [primitive value](https://developer.mozilla.org/en-US/docs/Glossary/Primitive).\n- [`Class`](source/basic.d.ts) - Matches a [`class` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes).\n- [`TypedArray`](source/basic.d.ts) - Matches any [typed array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray), like `Uint8Array` or `Float64Array`.\n- [`JsonObject`](source/basic.d.ts) - Matches a JSON object.\n- [`JsonArray`](source/basic.d.ts) - Matches a JSON array.\n- [`JsonValue`](source/basic.d.ts) - Matches any valid JSON value.\n- [`ObservableLike`](source/basic.d.ts) - Matches a value that is like an [Observable](https://github.com/tc39/proposal-observable).\n\n### Utilities\n\n- [`Except`](source/except.d.ts) - Create a type from an object type without certain keys. This is a stricter version of [`Omit`](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-5.html#the-omit-helper-type).\n- [`Mutable`](source/mutable.d.ts) - Convert an object with `readonly` keys into a mutable object. The inverse of `Readonly<T>`.\n- [`Merge`](source/merge.d.ts) - Merge two types into a new type. Keys of the second type overrides keys of the first type.\n- [`MergeExclusive`](source/merge-exclusive.d.ts) - Create a type that has mutually exclusive keys.\n- [`RequireAtLeastOne`](source/require-at-least-one.d.ts) - Create a type that requires at least one of the given keys.\n- [`RequireExactlyOne`](source/require-exactly-one.d.ts) - Create a type that requires exactly a single key of the given keys and disallows more.\n- [`PartialDeep`](source/partial-deep.d.ts) - Create a deeply optional version of another type. Use [`Partial<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1401-L1406) if you only need one level deep.\n- [`ReadonlyDeep`](source/readonly-deep.d.ts) - Create a deeply immutable version of an `object`/`Map`/`Set`/`Array` type. Use [`Readonly<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1415-L1420) if you only need one level deep.\n- [`LiteralUnion`](source/literal-union.d.ts) - Create a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union. Workaround for [Microsoft/TypeScript#29729](https://github.com/Microsoft/TypeScript/issues/29729).\n- [`Promisable`](source/promisable.d.ts) - Create a type that represents either the value or the value wrapped in `PromiseLike`.\n- [`Opaque`](source/opaque.d.ts) - Create an [opaque type](https://codemix.com/opaque-types-in-javascript/).\n- [`SetOptional`](source/set-optional.d.ts) - Create a type that makes the given keys optional.\n- [`SetRequired`](source/set-required.d.ts) - Create a type that makes the given keys required.\n- [`PromiseValue`](source/promise-value.d.ts) - Returns the type that is wrapped inside a `Promise`.\n- [`AsyncReturnType`](source/async-return-type.d.ts) - Unwrap the return type of a function that returns a `Promise`.\n- [`ConditionalKeys`](source/conditional-keys.d.ts) - Extract keys from a shape where values extend the given `Condition` type.\n- [`ConditionalPick`](source/conditional-pick.d.ts) - Like `Pick` except it selects properties from a shape where the values extend the given `Condition` type.\n- [`ConditionalExcept`](source/conditional-except.d.ts) - Like `Omit` except it removes properties from a shape where the values extend the given `Condition` type.\n\n### Miscellaneous\n\n- [`PackageJson`](source/package-json.d.ts) - Type for [npm's `package.json` file](https://docs.npmjs.com/creating-a-package-json-file).\n- [`TsConfigJson`](source/tsconfig-json.d.ts) - Type for [TypeScript's `tsconfig.json` file](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) (TypeScript 3.7).\n\n## Declined types\n\n*If we decline a type addition, we will make sure to document the better solution here.*\n\n- [`Diff` and `Spread`](https://github.com/sindresorhus/type-fest/pull/7) - The PR author didn't provide any real-world use-cases and the PR went stale. If you think this type is useful, provide some real-world use-cases and we might reconsider.\n- [`Dictionary`](https://github.com/sindresorhus/type-fest/issues/33) - You only save a few characters (`Dictionary<number>` vs `Record<string, number>`) from [`Record`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1429-L1434), which is more flexible and well-known. Also, you shouldn't use an object as a dictionary. We have `Map` in JavaScript now.\n\n## Tips\n\n### Built-in types\n\nThere are many advanced types most users don't know about.\n\n- [`Partial<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1401-L1406) - Make all properties in `T` optional.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgHIHsAmEDC6QzADmyA3gLABQyycADnanALYQBcyAzmFKEQNxUaddFDAcQAV2YAjaIMoBfKlQQAbOJ05osEAIIMAQpOBrsUMkOR1eANziRkCfISKSoD4Pg4ZseAsTIALyW1DS0DEysHADkvvoMMQA0VsKi4sgAzAAMuVaKClY2wPaOknSYDrguADwA0sgQAB6QIJjaANYQAJ7oMDp+LsQAfAAUXd0cdUnI9mo+uv6uANp1ALoAlKHhyGAAFsCcAHTOAW4eYF4gyxNrwbNwago0ypRWp66jH8QcAApwYmAjxq8SWIy2FDCNDA3ToKFBQyIdR69wmfQG1TOhShyBgomQX3w3GQE2Q6IA8jIAFYQBBgI4TTiEs5bTQYsFInrLTbbHZOIlgZDlSqQABqj0kKBC3yINx6a2xfOQwH6o2FVXFaklwSCIUkbQghBAEEwENSfNOlykEGefNe5uhB2O6sgS3GPRmLogmslG1tLxUOKgEDA7hAuydtteryAA)\n\n\t```ts\n\tinterface NodeConfig {\n\t\t\tappName: string;\n\t\t\tport: number;\n\t}\n\n\tclass NodeAppBuilder {\n\t\t\tprivate configuration: NodeConfig = {\n\t\t\t\t\tappName: 'NodeApp',\n\t\t\t\t\tport: 3000\n\t\t\t};\n\n\t\t\tprivate updateConfig<Key extends keyof NodeConfig>(key: Key, value: NodeConfig[Key]) {\n\t\t\t\t\tthis.configuration[key] = value;\n\t\t\t}\n\n\t\t\tconfig(config: Partial<NodeConfig>) {\n\t\t\t\t\ttype NodeConfigKey = keyof NodeConfig;\n\n\t\t\t\t\tfor (const key of Object.keys(config) as NodeConfigKey[]) {\n\t\t\t\t\t\t\tconst updateValue = config[key];\n\n\t\t\t\t\t\t\tif (updateValue === undefined) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.updateConfig(key, updateValue);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t}\n\t}\n\n\t// `Partial<NodeConfig>`` allows us to provide only a part of the\n\t// NodeConfig interface.\n\tnew NodeAppBuilder().config({appName: 'ToDoApp'});\n\t```\n\t</details>\n\n- [`Required<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1408-L1413) - Make all properties in `T` required.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgGED21VQGJZwC2wA3gFCjXAzFJgA2A-AFzADOUckA5gNxUaIYjA4ckvGG07c+g6gF8KQkAgCuEFFDA5O6gEbEwUbLm2ESwABQIixACJIoSdgCUYAR3Vg4MACYAPGYuFvYAfACU5Ko0APRxwADKMBD+wFAAFuh2Vv7OSBlYGdmc8ABu8LHKsRyGxqY4oQT21pTCIHQMjOwA5DAAHgACxAAOjDAAdChYxL0ANLHUouKSMH0AEmAAhJhY6ozpAJ77GTCMjMCiV0ToSAb7UJPPC9WRgrEJwAAqR6MwSRQPFGUFocDgRHYxnEfGAowh-zgUCOwF6KwkUl6tXqJhCeEsxDaS1AXSYfUGI3GUxmc0WSneQA)\n\n\t```ts\n\tinterface ContactForm {\n\t\t\temail?: string;\n\t\t\tmessage?: string;\n\t}\n\n\tfunction submitContactForm(formData: Required<ContactForm>) {\n\t\t\t// Send the form data to the server.\n\t}\n\n\tsubmitContactForm({\n\t\t\temail: 'ex@mple.com',\n\t\t\tmessage: 'Hi! Could you tell me more about\u2026',\n\t});\n\n\t// TypeScript error: missing property 'message'\n\tsubmitContactForm({\n\t\t\temail: 'ex@mple.com',\n\t});\n\t```\n\t</details>\n\n- [`Readonly<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1415-L1420) - Make all properties in `T` readonly.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4UwOwVwW2AZA9gc3mAbmANsA3gKFCOAHkAzMgGkOJABEwAjKZa2kAUQCcvEu32AMQCGAF2FYBIAL4BufDRABLCKLBcywgMZgEKZOoDCiCGSXI8i4hGEwwALmABnUVxXJ57YFgzZHSVF8sT1BpBSItLGEnJz1kAy5LLy0TM2RHACUwYQATEywATwAeAITjU3MAPnkrCJMXLigtUT4AClxgGztKbyDgaX99I1TzAEokr1BRAAslJwA6FIqLAF48TtswHp9MHDla9hJGACswZvmyLjAwAC8wVpm5xZHkUZDaMKIwqyWXYCW0oN4sNlsA1h0ug5gAByACyBQAggAHJHQ7ZBIFoXbzBjMCz7OoQP5YIaJNYQMAAdziCVaALGNSIAHomcAACoFJFgADKWjcSNEwG4vC4ji0wggEEQguiTnMEGALWAV1yAFp8gVgEjeFyuKICvMrCTgVxnst5jtsGC4ljsPNhXxGaAWcAAOq6YRXYDCRg+RWIcA5JSC+kWdCepQ+v3RYCU3RInzRMCGwlpC19NYBW1Ye08R1AA)\n\n\t```ts\n\tenum LogLevel {\n\t\t\tOff,\n\t\t\tDebug,\n\t\t\tError,\n\t\t\tFatal\n\t};\n\n\tinterface LoggerConfig {\n\t\t\tname: string;\n\t\t\tlevel: LogLevel;\n\t}\n\n\tclass Logger {\n\t\t\tconfig: Readonly<LoggerConfig>;\n\n\t\t\tconstructor({name, level}: LoggerConfig) {\n\t\t\t\t\tthis.config = {name, level};\n\t\t\t\t\tObject.freeze(this.config);\n\t\t\t}\n\t}\n\n\tconst config: LoggerConfig = {\n\t\tname: 'MyApp',\n\t\tlevel: LogLevel.Debug\n\t};\n\n\tconst logger = new Logger(config);\n\n\t// TypeScript Error: cannot assign to read-only property.\n\tlogger.config.level = LogLevel.Error;\n\n\t// We are able to edit config variable as we please.\n\tconfig.level = LogLevel.Error;\n\t```\n\t</details>\n\n- [`Pick<T, K>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1422-L1427) - From `T`, pick a set of properties whose keys are in the union `K`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgEE5TCgNugN4BQoZwOUBAXMAM5RyQDmA3KeSFABYCuAtgCMISMHloMmENh04oA9tBjQJjFuzIBfYrOAB6PcADCcGElh1gEGAHcKATwAO6ebyjB5CTNlwFwSxFR0BX5HeToYABNgBDh5fm8cfBg6AHIKG3ldA2BHOOcfFNpUygJ0pAhokr4hETFUgDpswywkggAFUwA3MFtgAF5gQgowKhhVKTYKGuFRcXo1aVZgbTIoJ3RW3xhOmB6+wfbcAGsAHi3kgBpgEtGy4AAfG54BWfqAPnZm4AAlZUj4MAkMA8GAGB4vEgfMlLLw6CwPBA8PYRmMgZVgAC6CgmI4cIommQELwICh8RBgKZKvALh1ur0bHQABR5PYMui0Wk7em2ADaAF0AJS0AASABUALIAGQAogR+Mp3CROCAFBBwVC2ikBpj5CgBIqGjizLA5TAFdAmalImAuqlBRoVQh5HBgEy1eDWfs7J5cjzGYKhroVfpDEhHM4MV6GRR5NN0JrtnRg6BVirTFBeHAKYmYY6QNpdB73LmCJZBlSAXAubtvczeSmQMNSuMbmKNgBlHFgPEUNwusBIPAAQlS1xetTmxT0SDoESgdD0C4aACtHMwxytLrohawgA)\n\n\t```ts\n\tinterface Article {\n\t\t\ttitle: string;\n\t\t\tthumbnail: string;\n\t\t\tcontent: string;\n\t}\n\n\t// Creates new type out of the `Article` interface composed\n\t// from the Articles' two properties: `title` and `thumbnail`.\n\t// `ArticlePreview = {title: string; thumbnail: string}`\n\ttype ArticlePreview = Pick<Article, 'title' | 'thumbnail'>;\n\n\t// Render a list of articles using only title and description.\n\tfunction renderArticlePreviews(previews: ArticlePreview[]): HTMLElement {\n\t\t\tconst articles = document.createElement('div');\n\n\t\t\tfor (const preview of previews) {\n\t\t\t\t\t// Append preview to the articles.\n\t\t\t}\n\n\t\t\treturn articles;\n\t}\n\n\tconst articles = renderArticlePreviews([\n\t\t\t{\n\t\t\t\ttitle: 'TypeScript tutorial!',\n\t\t\t\tthumbnail: '/assets/ts.jpg'\n\t\t\t}\n\t]);\n\t```\n\t</details>\n\n- [`Record<K, T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1429-L1434) - Construct a type with a set of properties `K` of type `T`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/AQ4ejYAUHsGcCWAXBMB2dgwGbAKYC2ADgDYwCeeemCaWArgE7ADGMxAhmuQHQBQoYEnJE8wALKEARnkaxEKdMAC8wAOS0kstGuAAfdQBM8ANzxlRjXQbVaWACwC0JPB0NqA3HwGgIwAJJoWozYHCxixnAsjAhStADmwESMMJYo1Fi4HMCIaPEu+MRklHj8gpqyoeHAAKJFFFTAAN4+giDYCIxwSAByHAR4AFw5SDF5Xm2gJBzdfQPD3WPxE5PAlBxdAPLYNQAelgh4aOHDaPQEMowrIAC+3oJ+AMKMrlrAXFhSAFZ4LEhC9g4-0BmA4JBISXgiCkBQABpILrJ5MhUGhYcATGD6Bk4Hh-jNgABrPDkOBlXyQAAq9ngYmJpOAAHcEOCRjAXqwYODfoo6DhakUSph+Uh7GI4P0xER4Cj0OSQGwMP8tP1hgAlX7swwAHgRl2RvIANALSA08ABtAC6AD4VM1Wm0Kow0MMrYaHYJjGYLLJXZb3at1HYnC43Go-QHQDcvA6-JsmEJXARgCDgMYWAhjIYhDAU+YiMAAFIwex0ZmilMITCGF79TLAGRsAgJYAAZRwSEZGzEABFTOZUrJ5Yn+jwnWgeER6HB7AAKJrADpdXqS4ZqYultTG6azVfqHswPBbtauLY7fayQ7HIbAAAMwBuAEoYw9IBq2Ixs9h2eFMOQYPQObALQKJgggABeYhghCIpikkKRpOQRIknAsZUiIeCttECBEP8NSMCkjDDAARMGziuIYxHwYOjDCMBmDNnAuTxA6irdCOBB1Lh5Dqpqn66tISIykawBnOCtqqC0gbjqc9DgpGkxegOliyfJDrRkAA)\n\n\t```ts\n\t// Positions of employees in our company.\n\ttype MemberPosition = 'intern' | 'developer' | 'tech-lead';\n\n\t// Interface describing properties of a single employee.\n\tinterface Employee {\n\t\t\tfirstName: string;\n\t\t\tlastName: string;\n\t\t\tyearsOfExperience: number;\n\t}\n\n\t// Create an object that has all possible `MemberPosition` values set as keys.\n\t// Those keys will store a collection of Employees of the same position.\n\tconst team: Record<MemberPosition, Employee[]> = {\n\t\t\tintern: [],\n\t\t\tdeveloper: [],\n\t\t\t'tech-lead': [],\n\t};\n\n\t// Our team has decided to help John with his dream of becoming Software Developer.\n\tteam.intern.push({\n\t\tfirstName: 'John',\n\t\tlastName: 'Doe',\n\t\tyearsOfExperience: 0\n\t});\n\n\t// `Record` forces you to initialize all of the property keys.\n\t// TypeScript Error: \"tech-lead\" property is missing\n\tconst teamEmpty: Record<MemberPosition, null> = {\n\t\t\tintern: null,\n\t\t\tdeveloper: null,\n\t};\n\t```\n\t</details>\n\n- [`Exclude<T, U>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1436-L1439) - Exclude from `T` those types that are assignable to `U`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgMrQG7QMIHsQzADmyA3gFDLIAOuUYAXMiAK4A2byAPsgM5hRQJHqwC2AI2gBucgF9y5MAE9qKAEoQAjiwj8AEnBAATNtGQBeZAAooWphu26wAGmS3e93bRC8IASgsAPmRDJRlyAHoI5ABRAA8ENhYjFFYOZGVVZBgoXFFkAAM0zh5+QRBhZhYJaAKAOkjogEkQZAQ4X2QAdwALCFbaemRgXmQtFjhOMFwq9K6ULuB0lk6U+HYwZAxJnQaYFhAEMGB8ZCIIMAAFOjAANR2IK0HGWISklIAedCgsKDwCYgAbQA5M9gQBdVzFQJ+JhiSRQMiUYYwayZCC4VHPCzmSzAspCYEBWxgFhQAZwKC+FpgJ43VwARgADH4ZFQSWSBjcZPJyPtDsdTvxKWBvr8rD1DCZoJ5HPopaYoK4EPhCEQmGKcKriLCtrhgEYkVQVT5Nr4fmZLLZtMBbFZgT0wGBqES6ghbHBIJqoBKFdBWQpjfh+DQbhY2tqiHVsbjLMVkAB+ZAAZiZaeQTHOVxu9ySjxNaujNwDVHNvzqbBGkBAdPoAfkQA)\n\n\t```ts\n\tinterface ServerConfig {\n\t\tport: null | string | number;\n\t}\n\n\ttype RequestHandler = (request: Request, response: Response) => void;\n\n\t// Exclude `null` type from `null | string | number`.\n\t// In case the port is equal to `null`, we will use default value.\n\tfunction getPortValue(port: Exclude<ServerConfig['port'], null>): number {\n\t\tif (typeof port === 'string') {\n\t\t\treturn parseInt(port, 10);\n\t\t}\n\n\t\treturn port;\n\t}\n\n\tfunction startServer(handler: RequestHandler, config: ServerConfig): void {\n\t\tconst server = require('http').createServer(handler);\n\n\t\tconst port = config.port === null ? 3000 : getPortValue(config.port);\n\t\tserver.listen(port);\n\t}\n\t```\n\t</details>\n\n- [`Extract<T, U>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1441-L1444) - Extract from `T` those types that are assignable to `U`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/CYUwxgNghgTiAEAzArgOzAFwJYHtXzSwEdkQBJYACgEoAueVZAWwCMQYBuAKDDwGcM8MgBF4AXngBlAJ6scESgHIRi6ty5ZUGdoihgEABXZ888AN5d48ANoiAuvUat23K6ihMQ9ATE0BzV3goPy8GZjZOLgBfLi4Aejj4AEEICBwAdz54MAALKFQQ+BxEeAAHY1NgKAwoIKy0grr4DByEUpgccpgMaXgAaxBerCzi+B9-ZulygDouFHRsU1z8kKMYE1RhaqgAHkt4AHkWACt4EAAPbVRgLLWNgBp9gGlBs8uQa6yAUUuYPQwdgNpKM7nh7mMML4CgA+R5WABqUAgpDeVxuhxO1he0jsXGh8EoOBO9COx3BQPo2PBADckaR6IjkSA6PBqTgsMBzPsicdrEC7OJWXSQNwYvFEgAVTS9JLXODpeDpKBZFg4GCoWa8VACIJykAKiQWKy2YQOAioYikCg0OEMDyhRSy4DyxS24KhAAMjyi6gS8AAwjh5OD0iBFHAkJoEOksC1mnkMJq8gUQKDNttKPlnfrwYp3J5XfBHXqoKpfYkAOI4ansTxaeDADmoRSCCBYAbxhC6TDx6rwYHIRX5bScjA4bLJwoDmDwDkfbA9JMrVMVdM1TN69LgkTgwgkchUahqIA)\n\n\t```ts\n\tdeclare function uniqueId(): number;\n\n\tconst ID = Symbol('ID');\n\n\tinterface Person {\n\t\t[ID]: number;\n\t\tname: string;\n\t\tage: number;\n\t}\n\n\t// Allows changing the person data as long as the property key is of string type.\n\tfunction changePersonData<\n\t\tObj extends Person,\n\t\tKey extends Extract<keyof Person, string>,\n\t\tValue extends Obj[Key]\n\t> (obj: Obj, key: Key, value: Value): void {\n\t\tobj[key] = value;\n\t}\n\n\t// Tiny Andrew was born.\n\tconst andrew = {\n\t\t[ID]: uniqueId(),\n\t\tname: 'Andrew',\n\t\tage: 0,\n\t};\n\n\t// Cool, we're fine with that.\n\tchangePersonData(andrew, 'name', 'Pony');\n\n\t// Goverment didn't like the fact that you wanted to change your identity.\n\tchangePersonData(andrew, ID, uniqueId());\n\t```\n\t</details>\n\n- [`NonNullable<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1446-L1449) - Exclude `null` and `undefined` from `T`.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\tWorks with <code>strictNullChecks</code> set to <code>true</code>. (Read more <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html\">here</a>)\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/C4TwDgpgBACg9gJ2AOQK4FsBGEFQLxQDOwCAlgHYDmUAPlORtrnQwDasDcAUFwPQBU-WAEMkUOADMowqAGNWwwoSgATCBIqlgpOOSjAAFsOBRSy1IQgr9cKJlSlW1mZYQA3HFH68u8xcoBlHA8EACEHJ08Aby4oKDBUTFZSWXjEFEYcAEIALihkXTR2YSSIAB54JDQsHAA+blj4xOTUsHSACkMzPKD3HHDHNQQAGjSkPMqMmoQASh7g-oihqBi4uNIpdraxPAI2VhmVxrX9AzMAOm2ppnwoAA4ABifuE4BfKAhWSyOTuK7CS7pao3AhXF5rV48E4ICDAVAIPT-cGQyG+XTEIgLMJLTx7CAAdygvRCA0iCHaMwarhJOIQjUBSHaACJHk8mYdeLwxtdcVAAOSsh58+lXdr7Dlcq7A3n3J4PEUdADMcspUE53OluAIUGVTx46oAKuAIAFZGQwCYAKIIBCILjUxaDHAMnla+iodjcIA)\n\n\t```ts\n\ttype PortNumber = string | number | null;\n\n\t/** Part of a class definition that is used to build a server */\n\tclass ServerBuilder {\n\t\t\tportNumber!: NonNullable<PortNumber>;\n\n\t\t\tport(this: ServerBuilder, port: PortNumber): ServerBuilder {\n\t\t\t\t\tif (port == null) {\n\t\t\t\t\t\t\tthis.portNumber = 8000;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.portNumber = port;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t}\n\t}\n\n\tconst serverBuilder = new ServerBuilder();\n\n\tserverBuilder\n\t\t\t.port('8000')   // portNumber = '8000'\n\t\t\t.port(null)     // portNumber =  8000\n\t\t\t.port(3000);    // portNumber =  3000\n\n\t// TypeScript error\n\tserverBuilder.portNumber = null;\n\t```\n\t</details>\n\n- [`Parameters<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1451-L1454) - Obtain the parameters of a function type in a tuple.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/GYVwdgxgLglg9mABAZwBYmMANgUwBQxgAOIUAXIgIZgCeA2gLoCUFAbnDACaIDeAUIkQB6IYgCypSlBxUATrMo1ECsJzgBbLEoipqAc0J7EMKMgDkiHLnU4wp46pwAPHMgB0fAL58+oSLARECEosLAA5ABUYG2QAHgAxJGdpVWREPDdMylk9ZApqemZEAF4APipacrw-CApEgBogkKwAYThwckQwEHUAIxxZJl4BYVEImiIZKF0oZRwiWVdbeygJmThgOYgcGFYcbhqApCJsyhtpWXcR1cnEePBoeDAABVPzgbTixFeFd8uEsClADcIxGiygIFkSEOT3SmTc2VydQeRx+ZxwF2QQ34gkEwDgsnSuFmMBKiAADEDjIhYk1Qm0OlSYABqZnYka4xA1DJZHJYkGc7yCbyeRA+CAIZCzNAYbA4CIAdxg2zJwVCkWirjwMswuEaACYmCCgA)\n\n\t```ts\n\tfunction shuffle(input: any[]): void {\n\t\t// Mutate array randomly changing its' elements indexes.\n\t}\n\n\tfunction callNTimes<Fn extends (...args: any[]) => any> (func: Fn, callCount: number) {\n\t\t// Type that represents the type of the received function parameters.\n\t\ttype FunctionParameters = Parameters<Fn>;\n\n\t\treturn function (...args: FunctionParameters) {\n\t\t\tfor (let i = 0; i < callCount; i++) {\n\t\t\t\tfunc(...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst shuffleTwice = callNTimes(shuffle, 2);\n\t```\n\t</details>\n\n- [`ConstructorParameters<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1456-L1459) - Obtain the parameters of a constructor function type in a tuple.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/MYGwhgzhAECCBOAXAlqApgWQPYBM0mgG8AoaaFRENALmgkXmQDsBzAblOmCycTV4D8teo1YdO3JiICuwRFngAKClWENmLAJRFOZRAAtkEAHQq00ALzlklNBzIBfYk+KhIMAJJTEYJsDQAwmDA+mgAPAAq0GgAHnxMODCKTGgA7tCKxllg8CwQtL4AngDaALraFgB80EWa1SRkAA6MAG5gfNAB4FABPDJyCrQR9tDNyG0dwMGhtBhgjWEiGgA00F70vv4RhY3hEZXVVinpc42KmuJkkv3y8Bly8EPaDWTkhiZd7r3e8LK3llwGCMXGQWGhEOsfH5zJlsrl8p0+gw-goAAo5MAAW3BaHgEEilU0tEhmzQ212BJ0ry4SOg+kg+gBBiMximIGA0nAfAQLGk2N4EAAEgzYcYcnkLsRdDTvNEYkYUKwSdCme9WdM0MYwYhFPSIPpJdTkAAzDKxBUaZX+aAAQgsVmkCTQxuYaBw2ng4Ok8CYcotSu8pMur09iG9vuObxZnx6SN+AyUWTF8MN0CcZE4Ywm5jZHK5aB5fP4iCFIqT4oRRTKRLo6lYVNeAHpG50wOzOe1zHr9NLQ+HoABybsD4HOKXXRA1JCoKhBELmI5pNaB6Fz0KKBAodDYPAgSUTmqYsAALx4m5nC6nW9nGq14KtaEUA9gR9PvuNCjQ9BgACNvcwNBtAcLiAA)\n\n\t```ts\n\tclass ArticleModel {\n\t\ttitle: string;\n\t\tcontent?: string;\n\n\t\tconstructor(title: string) {\n\t\t\tthis.title = title;\n\t\t}\n\t}\n\n\tclass InstanceCache<T extends (new (...args: any[]) => any)> {\n\t\tprivate ClassConstructor: T;\n\t\tprivate cache: Map<string, InstanceType<T>> = new Map();\n\n\t\tconstructor (ctr: T) {\n\t\t\tthis.ClassConstructor = ctr;\n\t\t}\n\n\t\tgetInstance (...args: ConstructorParameters<T>): InstanceType<T> {\n\t\t\tconst hash = this.calculateArgumentsHash(...args);\n\n\t\t\tconst existingInstance = this.cache.get(hash);\n\t\t\tif (existingInstance !== undefined) {\n\t\t\t\treturn existingInstance;\n\t\t\t}\n\n\t\t\treturn new this.ClassConstructor(...args);\n\t\t}\n\n\t\tprivate calculateArgumentsHash(...args: any[]): string {\n\t\t\t// Calculate hash.\n\t\t\treturn 'hash';\n\t\t}\n\t}\n\n\tconst articleCache = new InstanceCache(ArticleModel);\n\tconst amazonArticle = articleCache.getInstance('Amazon forests burining!');\n\t```\n\t</details>\n\n- [`ReturnType<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1461-L1464) \u2013 Obtain the return type of a function type.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA)\n\n\t```ts\n\t/** Provides every element of the iterable `iter` into the `callback` function and stores the results in an array. */\n\tfunction mapIter<\n\t\t\tElem,\n\t\t\tFunc extends (elem: Elem) => any,\n\t\t\tRet extends ReturnType<Func>\n\t>(iter: Iterable<Elem>, callback: Func): Ret[] {\n\t\t\tconst mapped: Ret[] = [];\n\n\t\t\tfor (const elem of iter) {\n\t\t\t\t\tmapped.push(callback(elem));\n\t\t\t}\n\n\t\t\treturn mapped;\n\t}\n\n\tconst setObject: Set<string> = new Set();\n\tconst mapObject: Map<number, string> = new Map();\n\n\tmapIter(setObject, (value: string) => value.indexOf('Foo')); // number[]\n\n\tmapIter(mapObject, ([key, value]: [number, string]) => {\n\t\t\treturn key % 2 === 0 ? value : 'Odd';\n\t}); // string[]\n\t```\n\t</details>\n\n- [`InstanceType<T>`](https://github.com/Microsoft/TypeScript/blob/2961bc3fc0ea1117d4e53bc8e97fa76119bc33e3/src/lib/es5.d.ts#L1466-L1469) \u2013 Obtain the instance type of a constructor function type.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA)\n\n\t```ts\n\tclass IdleService {\n\t\t\tdoNothing (): void {}\n\t}\n\n\tclass News {\n\t\t\ttitle: string;\n\t\t\tcontent: string;\n\n\t\t\tconstructor(title: string, content: string) {\n\t\t\t\t\tthis.title = title;\n\t\t\t\t\tthis.content = content;\n\t\t\t}\n\t}\n\n\tconst instanceCounter: Map<Function, number> = new Map();\n\n\tinterface Constructor {\n\t\t\tnew(...args: any[]): any;\n\t}\n\n\t// Keep track how many instances of `Constr` constructor have been created.\n\tfunction getInstance<\n\t\t\tConstr extends Constructor,\n\t\t\tArgs extends ConstructorParameters<Constr>\n\t>(constructor: Constr, ...args: Args): InstanceType<Constr> {\n\t\t\tlet count = instanceCounter.get(constructor) || 0;\n\n\t\t\tconst instance = new constructor(...args);\n\n\t\t\tinstanceCounter.set(constructor, count + 1);\n\n\t\t\tconsole.log(`Created ${count + 1} instances of ${Constr.name} class`);\n\n\t\t\treturn instance;\n\t}\n\n\n\tconst idleService = getInstance(IdleService);\n\t// Will log: `Created 1 instances of IdleService class`\n\tconst newsEntry = getInstance(News, 'New ECMAScript proposals!', 'Last month...');\n\t// Will log: `Created 1 instances of News class`\n\t```\n\t</details>\n\n- [`Omit<T, K>`](https://github.com/microsoft/TypeScript/blob/71af02f7459dc812e85ac31365bfe23daf14b4e4/src/lib/es5.d.ts#L1446) \u2013 Constructs a type by picking all properties from T and then removing K.\n\t<details>\n\t<summary>\n\t\t\tExample\n\t</summary>\n\n\t[Playground](https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgIImAWzgG2QbwChlks4BzCAVShwC5kBnMKUcgbmKYAcIFgIjBs1YgOXMpSFMWbANoBdTiW5woFddwAW0kfKWEAvoUIB6U8gDCUCHEiNkICAHdkYAJ69kz4GC3JcPG4oAHteKDABBxCYNAxsPFBIWEQUCAAPJG4wZABySUFcgJAAEzMLXNV1ck0dIuCw6EjBADpy5AB1FAQ4EGQAV0YUP2AHDy8wEOQbUugmBLwtEIA3OcmQnEjuZBgQqE7gAGtgZAhwKHdkHFGwNvGUdDIcAGUliIBJEF3kAF5kAHlML4ADyPBIAGjyBUYRQAPnkqho4NoYQA+TiEGD9EAISIhPozErQMG4AASK2gn2+AApek9pCSXm8wFSQooAJQMUkAFQAsgAZACiOAgmDOOSIJAQ+OYyGl4DgoDmf2QJRCCH6YvALQQNjsEGFovF1NyJWAy1y7OUyHMyE+yRAuFImG4Iq1YDswHxbRINjA-SgfXlHqVUE4xiAA)\n\n\t```ts\n\tinterface Animal {\n\t\t\timageUrl: string;\n\t\t\tspecies: string;\n\t\t\timages: string[];\n\t\t\tparagraphs: string[];\n\t}\n\n\t// Creates new type with all properties of the `Animal` interface\n\t// except 'images' and 'paragraphs' properties. We can use this\n\t// type to render small hover tooltip for a wiki entry list.\n\ttype AnimalShortInfo = Omit<Animal, 'images' | 'paragraphs'>;\n\n\tfunction renderAnimalHoverInfo (animals: AnimalShortInfo[]): HTMLElement {\n\t\t\tconst container =  document.createElement('div');\n\t\t\t// Internal implementation.\n\t\t\treturn container;\n\t}\n\t```\n\t</details>\n\nYou can find some examples in the [TypeScript docs](https://www.typescriptlang.org/docs/handbook/advanced-types.html#predefined-conditional-types).\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Jarek Radosz](https://github.com/CvX)\n- [Dimitri Benin](https://github.com/BendingBender)\n\n## License\n\n(MIT OR CC0-1.0)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-type-fest?utm_source=npm-type-fest&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 2528246}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 12879387}, {"from": "2020-01-21T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 52243560}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 125562911}, {"from": "2019-08-24T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 206218421}, {"from": "2019-02-20T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 247107055}], "dependentsCount": 90, "starsCount": 0}, "github": {"starsCount": 2252, "forksCount": 54, "subscribersCount": 30, "issues": {"count": 86, "openCount": 20, "distribution": {"3600": 5, "10800": 1, "32400": 5, "97200": 5, "291600": 6, "874800": 20, "2624400": 7, "7873200": 10, "23619600": 22, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 48}, {"username": "BendingBender", "commitsCount": 5}, {"username": "resynth1943", "commitsCount": 5}, {"username": "kainiedziela", "commitsCount": 4}, {"username": "CvX", "commitsCount": 3}, {"username": "ifiokjr", "commitsCount": 3}, {"username": "SamVerschueren", "commitsCount": 2}, {"username": "krnik", "commitsCount": 2}, {"username": "Knutakir", "commitsCount": 1}, {"username": "KubaJastrz", "commitsCount": 1}, {"username": "NotWoods", "commitsCount": 1}, {"username": "basarat", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "crhistianramirez", "commitsCount": 1}, {"username": "fabiospampinato", "commitsCount": 1}, {"username": "merlinnot", "commitsCount": 1}, {"username": "yxliang01", "commitsCount": 1}], "commits": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 0}, {"from": "2020-01-21T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 10}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 14}, {"from": "2019-08-24T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 29}, {"from": "2019-02-20T00:00:00.000Z", "to": "2020-02-20T00:00:00.000Z", "count": 81}]}, "source": {"files": {"readmeSize": 28559, "testsSize": 0}, "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 2353, "downloadsCount": 41854303.666666664, "downloadsAcceleration": 383274.658542618, "dependentsCount": 90}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9401301369863013, "openIssues": 0.9457364341085271, "issuesDistribution": 0.48208926336401814}}, "score": {"final": 0.7036154975040745, "detail": {"quality": 0.45512017961240975, "popularity": 0.6374443935064434, "maintenance": 0.9827825882659896}}}
{"analyzedAt": "2018-09-16T08:36:10.040Z", "collected": {"metadata": {"name": "@types/color-name", "scope": "types", "version": "1.1.0", "description": "TypeScript definitions for color-name", "date": "2017-07-25T15:22:38.705Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Junyoung Clare Jang", "url": "https://github.com/Ailrun"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fcolor-name"}, "license": "MIT", "releases": [{"from": "2018-08-17T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 0}, {"from": "2018-06-18T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1}, {"from": "2018-03-20T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1}, {"from": "2017-09-16T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1}, {"from": "2016-09-16T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 3}], "readme": "# Installation\r\n> `npm install --save @types/color-name`\r\n\r\n# Summary\r\nThis package contains type definitions for color-name (https://www.npmjs.com/package/color-name).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/color-name\r\n\r\nAdditional Details\r\n * Last updated: Tue, 25 Jul 2017 15:22:30 GMT\r\n * Dependencies: none\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by Junyoung Clare Jang <https://github.com/Ailrun>."}, "npm": {"downloads": [{"from": "2018-09-15T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 5532}, {"from": "2018-09-09T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 68781}, {"from": "2018-08-17T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 357626}, {"from": "2018-06-18T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1252040}, {"from": "2018-03-20T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1908796}, {"from": "2017-09-16T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 2704423}], "dependentsCount": 2, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 417346.6666666667, "downloadsAcceleration": 1926.6331811263317, "dependentsCount": 2}, "maintenance": {"releasesFrequency": 0.28664383561643836, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-color-name-fnab1ndfp1k/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-02-27T20:48:41.008Z"}, "score": {"final": 0.26764749345928446, "detail": {"quality": 0.3989586997567263, "popularity": 0.16964634657162272, "maintenance": 0.25309617780628174}}}
{"analyzedAt": "2019-04-12T06:15:16.975Z", "collected": {"metadata": {"name": "typescript", "scope": "unscoped", "version": "3.4.3", "description": "TypeScript is a language for application scale JavaScript development", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript"], "date": "2019-04-09T23:21:12.530Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "typescript", "email": "typescript@microsoft.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/TypeScript.git"}, "links": {"npm": "https://www.npmjs.com/package/typescript", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/TypeScript", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "Apache-2.0", "devDependencies": {"@octokit/rest": "latest", "@types/browserify": "latest", "@types/chai": "latest", "@types/convert-source-map": "latest", "@types/del": "latest", "@types/glob": "latest", "@types/gulp": "^4.0.5", "@types/gulp-concat": "latest", "@types/gulp-newer": "latest", "@types/gulp-rename": "0.0.33", "@types/gulp-sourcemaps": "0.0.32", "@types/jake": "latest", "@types/merge2": "latest", "@types/minimatch": "latest", "@types/minimist": "latest", "@types/mkdirp": "latest", "@types/mocha": "latest", "@types/ms": "latest", "@types/node": "8.5.5", "@types/q": "latest", "@types/source-map-support": "latest", "@types/through2": "latest", "@types/travis-fold": "latest", "@types/xml2js": "^0.4.0", "browser-resolve": "^1.11.2", "browserify": "latest", "chai": "latest", "chalk": "latest", "convert-source-map": "latest", "del": "latest", "fancy-log": "latest", "fs-extra": "^6.0.1", "gulp": "^4.0.0", "gulp-concat": "latest", "gulp-insert": "latest", "gulp-newer": "latest", "gulp-rename": "latest", "gulp-sourcemaps": "latest", "istanbul": "latest", "lodash": "^4.17.11", "merge2": "latest", "minimist": "latest", "mkdirp": "latest", "mocha": "latest", "mocha-fivemat-progress-reporter": "latest", "ms": "latest", "plugin-error": "latest", "pretty-hrtime": "^1.0.3", "prex": "^0.4.3", "q": "latest", "remove-internal": "^2.9.2", "source-map-support": "latest", "through2": "latest", "travis-fold": "latest", "tslint": "latest", "typescript": "next", "vinyl": "latest", "vinyl-sourcemaps-apply": "latest", "xml2js": "^0.4.19"}, "releases": [{"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 28}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 73}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 135}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 272}, {"from": "2017-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 588}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2019-04-11T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 1062633}, {"from": "2019-04-05T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 5945211}, {"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 24753626}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 66611336}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 114604898}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 193806251}], "dependentsCount": 5813, "starsCount": 261}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0.4}, "popularity": {"communityInterest": 261, "downloadsCount": 22203778.666666668, "downloadsAcceleration": 99965.67104261796, "dependentsCount": 5813}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/typescript-ou1ee8g0jt/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-03-05T07:22:41.886Z"}, "score": {"final": 0.4440298328151068, "detail": {"quality": 0.2965844455382913, "popularity": 0.6811080928198651, "maintenance": 0.3333333333333333}}}
{"analyzedAt": "2018-09-16T08:50:57.480Z", "collected": {"metadata": {"name": "@types/events", "scope": "types", "version": "1.2.0", "description": "TypeScript definitions for events", "date": "2018-02-26T20:03:13.307Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Yasunori Ohoka", "url": "https://github.com/yasupeke"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fevents"}, "license": "MIT", "releases": [{"from": "2018-08-17T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 0}, {"from": "2018-06-18T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1}, {"from": "2018-03-20T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1}, {"from": "2017-09-16T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 4}, {"from": "2016-09-16T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 4}], "readme": "# Installation\r\n> `npm install --save @types/events`\r\n\r\n# Summary\r\nThis package contains type definitions for events (https://github.com/Gozala/events).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/events\r\n\r\nAdditional Details\r\n * Last updated: Mon, 26 Feb 2018 20:02:51 GMT\r\n * Dependencies: none\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by Yasunori Ohoka <https://github.com/yasupeke>."}, "npm": {"downloads": [{"from": "2018-09-15T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 103785}, {"from": "2018-09-09T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 1599993}, {"from": "2018-08-17T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 6886719}, {"from": "2018-06-18T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 19157082}, {"from": "2018-03-20T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 27043801}, {"from": "2017-09-16T00:00:00.000Z", "to": "2018-09-16T00:00:00.000Z", "count": 31359071}], "dependentsCount": 123, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 6385694, "downloadsAcceleration": 51992.528215372906, "dependentsCount": 123}, "maintenance": {"releasesFrequency": 0.4715753424657535, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-events-hgs4pifis4/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-02-27T21:02:40.725Z"}, "score": {"final": 0.3679312439709487, "detail": {"quality": 0.3989586997567263, "popularity": 0.3942099632622855, "maintenance": 0.31505756257751677}}}
{"analyzedAt": "2018-09-15T14:46:50.133Z", "collected": {"metadata": {"name": "@types/glob", "scope": "types", "version": "5.0.35", "description": "TypeScript definitions for Glob", "date": "2018-01-23T20:06:13.149Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "vvakame", "url": "https://github.com/vvakame"}, {"name": "voy", "url": "https://github.com/voy"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fglob"}, "license": "MIT", "dependencies": {"@types/events": "*", "@types/minimatch": "*", "@types/node": "*"}, "releases": [{"from": "2018-08-16T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 0}, {"from": "2018-06-17T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 1}, {"from": "2018-03-19T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 1}, {"from": "2017-09-15T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 4}, {"from": "2016-09-15T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 7}], "readme": "# Installation\r\n> `npm install --save @types/glob`\r\n\r\n# Summary\r\nThis package contains type definitions for Glob (https://github.com/isaacs/node-glob).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/glob\r\n\r\nAdditional Details\r\n * Last updated: Tue, 23 Jan 2018 20:05:42 GMT\r\n * Dependencies: events, fs, minimatch, node\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by vvakame <https://github.com/vvakame>, voy <https://github.com/voy>."}, "npm": {"downloads": [{"from": "2018-09-14T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 0}, {"from": "2018-09-08T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 648140}, {"from": "2018-08-16T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 2999962}, {"from": "2018-06-17T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 8170113}, {"from": "2018-03-19T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 11586809}, {"from": "2017-09-15T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 15212951}], "dependentsCount": 143, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0.25, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 2723371, "downloadsAcceleration": 20252.814707001522, "dependentsCount": 143}, "maintenance": {"releasesFrequency": 0.4715753424657535, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-glob-f6g1c3dwqdl/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-02-27T21:18:48.225Z"}, "score": {"final": 0.31139356182402134, "detail": {"quality": 0.26940501121729477, "popularity": 0.343719747304863, "maintenance": 0.31505756257751677}}}
{"analyzedAt": "2018-09-15T14:53:20.882Z", "collected": {"metadata": {"name": "@types/minimatch", "scope": "types", "version": "3.0.3", "description": "TypeScript definitions for Minimatch", "date": "2018-01-04T23:26:51.283Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "vvakame", "url": "https://github.com/vvakame"}, {"name": "Shant Marouti", "url": "https://github.com/shantmarouti"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fminimatch"}, "license": "MIT", "releases": [{"from": "2018-08-16T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 0}, {"from": "2018-06-17T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 1}, {"from": "2018-03-19T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 1}, {"from": "2017-09-15T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 3}, {"from": "2016-09-15T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 6}], "readme": "# Installation\r\n> `npm install --save @types/minimatch`\r\n\r\n# Summary\r\nThis package contains type definitions for Minimatch (https://github.com/isaacs/minimatch).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/minimatch\r\n\r\nAdditional Details\r\n * Last updated: Thu, 04 Jan 2018 23:26:01 GMT\r\n * Dependencies: none\r\n * Global values: none\r\n\r\n# Credits\r\nThese definitions were written by vvakame <https://github.com/vvakame>, Shant Marouti <https://github.com/shantmarouti>."}, "npm": {"downloads": [{"from": "2018-09-14T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 0}, {"from": "2018-09-08T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 893598}, {"from": "2018-08-16T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 4133932}, {"from": "2018-06-17T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 11429482}, {"from": "2018-03-19T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 16125413}, {"from": "2017-09-15T00:00:00.000Z", "to": "2018-09-15T00:00:00.000Z", "count": 20600406}], "dependentsCount": 50, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 3809827.3333333335, "downloadsAcceleration": 28626.106031202435, "dependentsCount": 50}, "maintenance": {"releasesFrequency": 0.4099315068493151, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-minimatch-yuuw9csq4wg/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-02-27T22:03:53.861Z"}, "score": {"final": 0.3444046822227455, "detail": {"quality": 0.3989586997567263, "popularity": 0.33943602818905033, "maintenance": 0.3026127497987428}}}
{"analyzedAt": "2019-10-30T15:45:53.550Z", "collected": {"metadata": {"name": "@types/node", "scope": "types", "version": "12.12.2", "description": "TypeScript definitions for Node.js", "date": "2019-10-30T15:45:00.019Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Microsoft TypeScript", "url": "https://github.com/Microsoft"}, {"name": "DefinitelyTyped", "url": "https://github.com/DefinitelyTyped"}, {"name": "Alberto Schiabel", "url": "https://github.com/jkomyno"}, {"name": "Alexander T.", "url": "https://github.com/a-tarasyuk"}, {"name": "Alvis HT Tang", "url": "https://github.com/alvis"}, {"name": "Andrew Makarov", "url": "https://github.com/r3nya"}, {"name": "Benjamin Toueg", "url": "https://github.com/btoueg"}, {"name": "Bruno Scheufler", "url": "https://github.com/brunoscheufler"}, {"name": "Chigozirim C.", "url": "https://github.com/smac89"}, {"name": "Christian Vaagland Tellnes", "url": "https://github.com/tellnes"}, {"name": "David Junger", "url": "https://github.com/touffy"}, {"name": "Deividas Bakanas", "url": "https://github.com/DeividasBakanas"}, {"name": "Eugene Y. Q. Shen", "url": "https://github.com/eyqs"}, {"name": "Flarna", "url": "https://github.com/Flarna"}, {"name": "Hannes Magnusson", "url": "https://github.com/Hannes-Magnusson-CK"}, {"name": "Ho\u00e0ng V\u0103n Kh\u1ea3i", "url": "https://github.com/KSXGitHub"}, {"name": "Huw", "url": "https://github.com/hoo29"}, {"name": "Kelvin Jin", "url": "https://github.com/kjin"}, {"name": "Klaus Meinhardt", "url": "https://github.com/ajafff"}, {"name": "Lishude", "url": "https://github.com/islishude"}, {"name": "Mariusz Wiktorczyk", "url": "https://github.com/mwiktorczyk"}, {"name": "Mohsen Azimi", "url": "https://github.com/mohsen1"}, {"name": "Nicolas Even", "url": "https://github.com/n-e"}, {"name": "Nicolas Voigt", "url": "https://github.com/octo-sniffle"}, {"name": "Nikita Galkin", "url": "https://github.com/galkin"}, {"name": "Parambir Singh", "url": "https://github.com/parambirs"}, {"name": "Sebastian Silbermann", "url": "https://github.com/eps1lon"}, {"name": "Simon Schick", "url": "https://github.com/SimonSchick"}, {"name": "Thomas den Hollander", "url": "https://github.com/ThomasdenH"}, {"name": "Wilco Bakker", "url": "https://github.com/WilcoBakker"}, {"name": "wwwy3y3", "url": "https://github.com/wwwy3y3"}, {"name": "Zane Hannan AU", "url": "https://github.com/ZaneHannanAU"}, {"name": "Samuel Ainsworth", "url": "https://github.com/samuela"}, {"name": "Kyle Uehlein", "url": "https://github.com/kuehlein"}, {"name": "Jordi Oliveras Rovira", "url": "https://github.com/j-oliveras"}, {"name": "Thanik Bhongbhibhat", "url": "https://github.com/bhongy"}, {"name": "Marcin Kopacz", "url": "https://github.com/chyzwar"}, {"name": "Trivikram Kamat", "url": "https://github.com/trivikr"}, {"name": "Minh Son Nguyen", "url": "https://github.com/nguymin4"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/node"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fnode", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "releases": [{"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 27}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 50}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 96}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 212}, {"from": "2017-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 462}], "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n * Last updated: Wed, 30 Oct 2019 15:44:41 GMT\r\n * Dependencies: none\r\n * Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Ho\u00e0ng V\u0103n Kh\u1ea3i <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Nikita Galkin <https://github.com/galkin>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>, Marcin Kopacz <https://github.com/chyzwar>, Trivikram Kamat <https://github.com/trivikr>, and Minh Son Nguyen <https://github.com/nguymin4>."}, "npm": {"downloads": [{"from": "2019-10-29T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 3322016}, {"from": "2019-10-23T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 17892909}, {"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 74095524}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 209443714}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 391479005}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 656625029}], "dependentsCount": 8111, "starsCount": 22}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 22, "downloadsCount": 69814571.33333333, "downloadsAcceleration": 261697.19918188732, "dependentsCount": 8111}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-node-ne9g33t4jjj/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-02-28T19:01:22.286Z"}, "score": {"final": 0.42003339837342313, "detail": {"quality": 0.1989586997567263, "popularity": 0.6962260622278246, "maintenance": 0.3333333333333333}}}
{"analyzedAt": "2020-02-18T14:34:16.380Z", "collected": {"metadata": {"name": "uglify-js", "scope": "unscoped", "version": "3.8.0", "description": "JavaScript parser, mangler/compressor and beautifier toolkit", "keywords": ["cli", "compress", "compressor", "ecma", "ecmascript", "es", "es5", "javascript", "js", "jsmin", "min", "minification", "minifier", "minify", "optimize", "optimizer", "pack", "packer", "parse", "parser", "uglifier", "uglify"], "date": "2020-02-18T14:29:54.585Z", "author": {"name": "Mihai Bazon", "email": "mihai.bazon@gmail.com", "url": "http://lisperator.net/", "username": "mishoo"}, "publisher": {"username": "alexlamsl", "email": "alexlamsl@gmail.com"}, "maintainers": [{"username": "alexlamsl", "email": "alexlamsl@gmail.com"}, {"username": "mishoo", "email": "mihai.bazon@gmail.com"}, {"username": "rvanvelzen1", "email": "rvanvelzen1@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mishoo/UglifyJS2.git"}, "links": {"npm": "https://www.npmjs.com/package/uglify-js", "homepage": "https://github.com/mishoo/UglifyJS2#readme", "repository": "https://github.com/mishoo/UglifyJS2", "bugs": "https://github.com/mishoo/UglifyJS2/issues"}, "license": "BSD-2-Clause", "dependencies": {"commander": "~2.20.3", "source-map": "~0.6.1"}, "devDependencies": {"acorn": "~7.1.0", "semver": "~6.3.0"}, "releases": [{"from": "2020-01-19T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 2}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 8}, {"from": "2019-08-22T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 17}, {"from": "2019-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 35}, {"from": "2018-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 62}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "UglifyJS 3\n==========\n\nUglifyJS is a JavaScript parser, minifier, compressor and beautifier toolkit.\n\n#### Note:\n- **`uglify-js@3` has a simplified [API](#api-reference) and [CLI](#command-line-usage) that is not backwards compatible with [`uglify-js@2`](https://github.com/mishoo/UglifyJS2/tree/v2.x)**.\n- **Documentation for UglifyJS `2.x` releases can be found [here](https://github.com/mishoo/UglifyJS2/tree/v2.x)**.\n- `uglify-js` only supports JavaScript (ECMAScript 5).\n- To minify ECMAScript 2015 or above, transpile using tools like [Babel](https://babeljs.io/).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\n# Command line usage\n\n    uglifyjs [input files] [options]\n\nUglifyJS can take multiple input files.  It's recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf no input file is specified, UglifyJS will read from STDIN.\n\nIf you wish to pass your options before the input files, separate the two with\na double dash to prevent input files being used as option arguments:\n\n    uglifyjs --compress --mangle -- input.js\n\n### Command line options\n\n```\n    -h, --help                  Print usage information.\n                                `--help options` for details on available options.\n    -V, --version               Print version number.\n    -p, --parse <options>       Specify parser options:\n                                `acorn`  Use Acorn for parsing.\n                                `bare_returns`  Allow return outside of functions.\n                                                Useful when minifying CommonJS\n                                                modules and Userscripts that may\n                                                be anonymous function wrapped (IIFE)\n                                                by the .user.js engine `caller`.\n                                `expression`  Parse a single expression, rather than\n                                              a program (for parsing JSON).\n                                `spidermonkey`  Assume input files are SpiderMonkey\n                                                AST format (as JSON).\n    -c, --compress [options]    Enable compressor/specify compressor options:\n                                `pure_funcs`  List of functions that can be safely\n                                              removed when their return values are\n                                              not used.\n    -m, --mangle [options]      Mangle names/specify mangler options:\n                                `reserved`  List of names that should not be mangled.\n    --mangle-props [options]    Mangle properties/specify mangler options:\n                                `builtins`  Mangle property names that overlaps\n                                            with standard JavaScript globals.\n                                `debug`  Add debug prefix and suffix.\n                                `domprops`  Mangle property names that overlaps\n                                            with DOM properties.\n                                `keep_quoted`  Only mangle unquoted properties.\n                                `regex`  Only mangle matched property names.\n                                `reserved`  List of names that should not be mangled.\n    -b, --beautify [options]    Beautify output/specify output options:\n                                `beautify`  Enabled with `--beautify` by default.\n                                `preamble`  Preamble to prepend to the output. You\n                                            can use this to insert a comment, for\n                                            example for licensing information.\n                                            This will not be parsed, but the source\n                                            map will adjust for its presence.\n                                `quote_style`  Quote style:\n                                               0 - auto\n                                               1 - single\n                                               2 - double\n                                               3 - original\n                                `wrap_iife`  Wrap IIFEs in parenthesis. Note: you may\n                                             want to disable `negate_iife` under\n                                             compressor options.\n    -O, --output-opts [options] Specify output options (`beautify` disabled by default).\n    -o, --output <file>         Output file path (default STDOUT). Specify `ast` or\n                                `spidermonkey` to write UglifyJS or SpiderMonkey AST\n                                as JSON to STDOUT respectively.\n    --comments [filter]         Preserve copyright comments in the output. By\n                                default this works like Google Closure, keeping\n                                JSDoc-style comments that contain \"@license\" or\n                                \"@preserve\". You can optionally pass one of the\n                                following arguments to this flag:\n                                - \"all\" to keep all comments\n                                - a valid JS RegExp like `/foo/` or `/^!/` to\n                                keep only matching comments.\n                                Note that currently not *all* comments can be\n                                kept when compression is on, because of dead\n                                code removal or cascading statements into\n                                sequences.\n    --config-file <file>        Read `minify()` options from JSON file.\n    -d, --define <expr>[=value] Global definitions.\n    -e, --enclose [arg[:value]] Embed everything in a big function, with configurable\n                                argument(s) & value(s).\n    --ie8                       Support non-standard Internet Explorer 8.\n                                Equivalent to setting `ie8: true` in `minify()`\n                                for `compress`, `mangle` and `output` options.\n                                By default UglifyJS will not try to be IE-proof.\n    --keep-fnames               Do not mangle/drop function names.  Useful for\n                                code relying on Function.prototype.name.\n    --name-cache <file>         File to hold mangled name mappings.\n    --self                      Build UglifyJS as a library (implies --wrap UglifyJS)\n    --source-map [options]      Enable source map/specify source map options:\n                                `base`  Path to compute relative paths from input files.\n                                `content`  Input source map, useful if you're compressing\n                                           JS that was generated from some other original\n                                           code. Specify \"inline\" if the source map is\n                                           included within the sources.\n                                `filename`  Filename and/or location of the output source\n                                            (sets `file` attribute in source map).\n                                `includeSources`  Pass this flag if you want to include\n                                                  the content of source files in the\n                                                  source map as sourcesContent property.\n                                `root`  Path to the original source to be included in\n                                        the source map.\n                                `url`  If specified, path to the source map to append in\n                                       `//# sourceMappingURL`.\n    --timings                   Display operations run time on STDERR.\n    --toplevel                  Compress and/or mangle variables in top level scope.\n    --verbose                   Print diagnostic messages.\n    --warn                      Print warning messages.\n    --wrap <name>               Embed everything in a big function, making the\n                                \u201cexports\u201d and \u201cglobal\u201d variables available. You\n                                need to pass an argument to this option to\n                                specify the name that your module will take\n                                when included in, say, a browser.\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## CLI source map options\n\nUglifyJS can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map --output output.js` (source map will be written out to\n`output.js.map`).\n\nAdditional options:\n\n- `--source-map \"filename='<NAME>'\"` to specify the name of the source map. The value of\n  `filename` is only used to set `file` attribute (see [the spec][sm-spec])\n  in source map file.\n\n- `--source-map \"root='<URL>'\"` to pass the URL where the original files can be found.\n\n- `--source-map \"url='<URL>'\"` to specify the URL where the source map can be found.\n  Otherwise UglifyJS assumes HTTP `X-SourceMap` is being used and will omit the\n  `//# sourceMappingURL=` directive.\n\nFor example:\n\n    uglifyjs js/file1.js js/file2.js \\\n             -o foo.min.js -c -m \\\n             --source-map \"root='http://foo.com/src',url='foo.min.js.map'\"\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you're compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript \u2192 compiled JS, UglifyJS can generate a map from CoffeeScript \u2192\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature pass `--source-map \"content='/path/to/input/source.map'\"`\nor `--source-map \"content=inline\"` if the source map is included inline with\nthe sources.\n\n## CLI compress options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of [compress options](#compress-options).\n\nOptions are in the form `foo=bar`, or just `foo` (the latter implies\na boolean option that you want to set `true`; it's effectively a\nshortcut for `foo=true`).\n\nExample:\n\n    uglifyjs file.js -c toplevel,sequences=false\n\n## CLI mangle options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `toplevel` (default `false`) -- mangle names declared in the top level scope.\n\n- `eval` (default `false`) -- mangle names visible in scopes where `eval` or `with` are used.\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--mangle reserved` \u2014 pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m reserved=['$','require','exports']\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n### CLI mangling property names (`--mangle-props`)\n\n**Note:** THIS WILL PROBABLY BREAK YOUR CODE.  Mangling property names\nis a separate step, different from variable name mangling.  Pass\n`--mangle-props` to enable it.  It will mangle all properties in the\ninput code with the exception of built in DOM properties and properties\nin core JavaScript classes.  For example:\n\n```javascript\n// example.js\nvar x = {\n    baz_: 0,\n    foo_: 1,\n    calc: function() {\n        return this.foo_ + this.baz_;\n    }\n};\nx.bar_ = 2;\nx[\"baz_\"] = 3;\nconsole.log(x.calc());\n```\nMangle all properties (except for JavaScript `builtins`):\n```bash\n$ uglifyjs example.js -c -m --mangle-props\n```\n```javascript\nvar x={o:0,_:1,l:function(){return this._+this.o}};x.t=2,x.o=3,console.log(x.l());\n```\nMangle all properties except for `reserved` properties:\n```bash\n$ uglifyjs example.js -c -m --mangle-props reserved=[foo_,bar_]\n```\n```javascript\nvar x={o:0,foo_:1,_:function(){return this.foo_+this.o}};x.bar_=2,x.o=3,console.log(x._());\n```\nMangle all properties matching a `regex`:\n```bash\n$ uglifyjs example.js -c -m --mangle-props regex=/_$/\n```\n```javascript\nvar x={o:0,_:1,calc:function(){return this._+this.o}};x.l=2,x.o=3,console.log(x.calc());\n```\n\nCombining mangle properties options:\n```bash\n$ uglifyjs example.js -c -m --mangle-props regex=/_$/,reserved=[bar_]\n```\n```javascript\nvar x={o:0,_:1,calc:function(){return this._+this.o}};x.bar_=2,x.o=3,console.log(x.calc());\n```\n\nIn order for this to be of any use, we avoid mangling standard JS names by\ndefault (`--mangle-props builtins` to override).\n\nA default exclusion file is provided in `tools/domprops.json` which should\ncover most standard JS and DOM properties defined in various browsers.  Pass\n`--mangle-props domprops` to disable this feature.\n\nA regular expression can be used to define which property names should be\nmangled.  For example, `--mangle-props regex=/^_/` will only mangle property\nnames that start with an underscore.\n\nWhen you compress multiple files using this option, in order for them to\nwork together in the end we need to ensure somehow that one property gets\nmangled to the same name in all of them.  For this, pass `--name-cache filename.json`\nand UglifyJS will maintain these mappings in a file which can then be reused.\nIt should be initially empty.  Example:\n\n```bash\n$ rm -f /tmp/cache.json  # start fresh\n$ uglifyjs file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js\n$ uglifyjs file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js\n```\n\nNow, `part1.js` and `part2.js` will be consistent with each other in terms\nof mangled property names.\n\nUsing the name cache is not necessary if you compress all your files in a\nsingle call to UglifyJS.\n\n### Mangling unquoted names (`--mangle-props keep_quoted`)\n\nUsing quoted property name (`o[\"foo\"]`) reserves the property name (`foo`)\nso that it is not mangled throughout the entire script even when used in an\nunquoted style (`o.foo`). Example:\n\n```javascript\n// stuff.js\nvar o = {\n    \"foo\": 1,\n    bar: 3\n};\no.foo += o.bar;\nconsole.log(o.foo);\n```\n```bash\n$ uglifyjs stuff.js --mangle-props keep_quoted -c -m\n```\n```javascript\nvar o={foo:1,o:3};o.foo+=o.o,console.log(o.foo);\n```\n\n### Debugging property name mangling\n\nYou can also pass `--mangle-props debug` in order to mangle property names\nwithout completely obscuring them. For example the property `o.foo`\nwould mangle to `o._$foo$_` with this option. This allows property mangling\nof a large codebase while still being able to debug the code and identify\nwhere mangling is breaking things.\n\n```bash\n$ uglifyjs stuff.js --mangle-props debug -c -m\n```\n```javascript\nvar o={_$foo$_:1,_$bar$_:3};o._$foo$_+=o._$bar$_,console.log(o._$foo$_);\n```\n\nYou can also pass a custom suffix using `--mangle-props debug=XYZ`. This would then\nmangle `o.foo` to `o._$foo$XYZ_`. You can change this each time you compile a\nscript to identify how a property got mangled. One technique is to pass a\nrandom number on every compile to simulate mangling changing with different\ninputs (e.g. as you update the input script with new properties), and to help\nidentify mistakes like writing mangled keys to storage.\n\n\n# API Reference\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require(\"uglify-js\");\n```\n\nThere is a single high level function, **`minify(code, options)`**,\nwhich will perform all minification [phases](#minify-options) in a configurable\nmanner. By default `minify()` will enable the options [`compress`](#compress-options)\nand [`mangle`](#mangle-options). Example:\n```javascript\nvar code = \"function add(first, second) { return first + second; }\";\nvar result = UglifyJS.minify(code);\nconsole.log(result.error); // runtime error, or `undefined` if no error\nconsole.log(result.code);  // minified output: function add(n,d){return n+d}\n```\n\nYou can `minify` more than one JavaScript file at a time by using an object\nfor the first argument where the keys are file names and the values are source\ncode:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar result = UglifyJS.minify(code);\nconsole.log(result.code);\n// function add(d,n){return d+n}console.log(add(3,7));\n```\n\nThe `toplevel` option:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar options = { toplevel: true };\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.code);\n// console.log(3+7);\n```\n\nThe `nameCache` option:\n```javascript\nvar options = {\n    mangle: {\n        toplevel: true,\n    },\n    nameCache: {}\n};\nvar result1 = UglifyJS.minify({\n    \"file1.js\": \"function add(first, second) { return first + second; }\"\n}, options);\nvar result2 = UglifyJS.minify({\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n}, options);\nconsole.log(result1.code);\n// function n(n,r){return n+r}\nconsole.log(result2.code);\n// console.log(n(3,7));\n```\n\nYou may persist the name cache to the file system in the following way:\n```javascript\nvar cacheFileName = \"/tmp/cache.json\";\nvar options = {\n    mangle: {\n        properties: true,\n    },\n    nameCache: JSON.parse(fs.readFileSync(cacheFileName, \"utf8\"))\n};\nfs.writeFileSync(\"part1.js\", UglifyJS.minify({\n    \"file1.js\": fs.readFileSync(\"file1.js\", \"utf8\"),\n    \"file2.js\": fs.readFileSync(\"file2.js\", \"utf8\")\n}, options).code, \"utf8\");\nfs.writeFileSync(\"part2.js\", UglifyJS.minify({\n    \"file3.js\": fs.readFileSync(\"file3.js\", \"utf8\"),\n    \"file4.js\": fs.readFileSync(\"file4.js\", \"utf8\")\n}, options).code, \"utf8\");\nfs.writeFileSync(cacheFileName, JSON.stringify(options.nameCache), \"utf8\");\n```\n\nAn example of a combination of `minify()` options:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar options = {\n    toplevel: true,\n    compress: {\n        global_defs: {\n            \"@console.log\": \"alert\"\n        },\n        passes: 2\n    },\n    output: {\n        beautify: false,\n        preamble: \"/* uglified */\"\n    }\n};\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.code);\n// /* uglified */\n// alert(10);\"\n```\n\nTo produce warnings:\n```javascript\nvar code = \"function f(){ var u; return 2 + 3; }\";\nvar options = { warnings: true };\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.error);    // runtime error, `undefined` in this case\nconsole.log(result.warnings); // [ 'Dropping unused variable u [0:1,18]' ]\nconsole.log(result.code);     // function f(){return 5}\n```\n\nAn error example:\n```javascript\nvar result = UglifyJS.minify({\"foo.js\" : \"if (0) else console.log(1);\"});\nconsole.log(JSON.stringify(result.error));\n// {\"message\":\"Unexpected token: keyword (else)\",\"filename\":\"foo.js\",\"line\":1,\"col\":7,\"pos\":7}\n```\nNote: unlike `uglify-js@2.x`, the `3.x` API does not throw errors. To\nachieve a similar effect one could do the following:\n```javascript\nvar result = UglifyJS.minify(code, options);\nif (result.error) throw result.error;\n```\n\n## Minify options\n\n- `compress` (default `{}`) \u2014 pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compress options](#compress-options).\n\n- `ie8` (default `false`) -- set to `true` to support IE8.\n\n- `keep_fnames` (default: `false`) -- pass `true` to prevent discarding or mangling\n  of function names.  Useful for code relying on `Function.prototype.name`.\n\n- `mangle` (default `true`) \u2014 pass `false` to skip mangling names, or pass\n  an object to specify [mangle options](#mangle-options) (see below).\n\n  - `mangle.properties` (default `false`) \u2014 a subcategory of the mangle option.\n    Pass an object to specify custom [mangle property options](#mangle-properties-options).\n\n- `nameCache` (default `null`) -- pass an empty object `{}` or a previously\n  used `nameCache` object if you wish to cache mangled variable and\n  property names across multiple invocations of `minify()`. Note: this is\n  a read/write property. `minify()` will read the name cache state of this\n  object and update it during minification so that it may be\n  reused or externally persisted by the user.\n\n- `output` (default `null`) \u2014 pass an object if you wish to specify\n  additional [output options](#output-options).  The defaults are optimized\n  for best compression.\n\n- `parse` (default `{}`) \u2014 pass an object if you wish to specify some\n  additional [parse options](#parse-options).\n\n- `sourceMap` (default `false`) -- pass an object if you wish to specify\n  [source map options](#source-map-options).\n\n- `toplevel` (default `false`) -- set to `true` if you wish to enable top level\n  variable and function name mangling and to drop unused variables and functions.\n\n- `warnings` (default `false`) \u2014 pass `true` to return compressor warnings\n  in `result.warnings`. Use the value `\"verbose\"` for more detailed warnings.\n\n## Minify options structure\n\n```javascript\n{\n    parse: {\n        // parse options\n    },\n    compress: {\n        // compress options\n    },\n    mangle: {\n        // mangle options\n\n        properties: {\n            // mangle property options\n        }\n    },\n    output: {\n        // output options\n    },\n    sourceMap: {\n        // source map options\n    },\n    nameCache: null, // or specify a name cache object\n    toplevel: false,\n    ie8: false,\n    warnings: false,\n}\n```\n\n### Source map options\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify({\"file1.js\": \"var a = function() {};\"}, {\n    sourceMap: {\n        filename: \"out.js\",\n        url: \"out.js.map\"\n    }\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);  // source map\n```\n\nNote that the source map is not saved in a file, it's just returned in\n`result.map`.  The value passed for `sourceMap.url` is only used to set\n`//# sourceMappingURL=out.js.map` in `result.code`. The value of\n`filename` is only used to set `file` attribute (see [the spec][sm-spec])\nin source map file.\n\nYou can set option `sourceMap.url` to be `\"inline\"` and source map will\nbe appended to code.\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify({\"file1.js\": \"var a = function() {};\"}, {\n    sourceMap: {\n        root: \"http://example.com/src\",\n        url: \"out.js.map\"\n    }\n});\n```\n\nIf you're compressing compiled JavaScript and have a source map for it, you\ncan use `sourceMap.content`:\n```javascript\nvar result = UglifyJS.minify({\"compiled.js\": \"compiled code\"}, {\n    sourceMap: {\n        content: \"content from compiled.js.map\",\n        url: \"minified.js.map\"\n    }\n});\n// same as before, it returns `code` and `map`\n```\n\nIf you're using the `X-SourceMap` header instead, you can just omit `sourceMap.url`.\n\n## Parse options\n\n- `bare_returns` (default `false`) -- support top level `return` statements\n\n- `html5_comments` (default `true`)\n\n- `shebang` (default `true`) -- support `#!command` as the first line\n\n## Compress options\n\n- `arguments` (default: `true`) -- replace `arguments[index]` with function\n  parameter name whenever possible.\n\n- `assignments` (default: `true`) -- apply optimizations to assignment expressions.\n\n- `booleans` (default: `true`) -- various optimizations for boolean context,\n  for example `!!a ? b : c \u2192 a ? b : c`\n\n- `collapse_vars` (default: `true`) -- Collapse single-use non-constant variables,\n  side effects permitting.\n\n- `comparisons` (default: `true`) -- apply certain optimizations to binary nodes,\n  e.g. `!(a <= b) \u2192 a > b`, attempts to negate binary nodes, e.g.\n  `a = !b && !c && !d && !e \u2192 a=!(b||c||d||e)` etc.\n\n- `conditionals` (default: `true`) -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `dead_code` (default: `true`) -- remove unreachable code\n\n- `directives` (default: `true`) -- remove redundant or non-standard directives\n\n- `drop_console` (default: `false`) -- Pass `true` to discard calls to\n  `console.*` functions. If you wish to drop a specific function call\n  such as `console.info` and/or retain side effects from function arguments\n  after dropping the function call then use `pure_funcs` instead.\n\n- `drop_debugger` (default: `true`) -- remove `debugger;` statements\n\n- `evaluate` (default: `true`) -- Evaluate expression for shorter constant\n  representation. Pass `\"eager\"` to always replace function calls whenever\n  possible, or a positive integer to specify an upper bound for each individual\n  evaluation in number of characters.\n\n- `expression` (default: `false`) -- Pass `true` to preserve completion values\n  from terminal statements without `return`, e.g. in bookmarklets.\n\n- `functions` (default: `true`) -- convert declarations from `var`to `function`\n  whenever possible.\n\n- `global_defs` (default: `{}`) -- see [conditional compilation](#conditional-compilation)\n\n- `hoist_funs` (default: `false`) -- hoist function declarations\n\n- `hoist_props` (default: `true`) -- hoist properties from constant object and\n  array literals into regular variables subject to a set of constraints. For example:\n  `var o={p:1, q:2}; f(o.p, o.q);` is converted to `f(1, 2);`. Note: `hoist_props`\n  works best with `mangle` enabled, the `compress` option `passes` set to `2` or higher,\n  and the `compress` option `toplevel` enabled.\n\n- `hoist_vars` (default: `false`) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` (default: `true`) -- optimizations for if/return and if/continue\n\n- `inline` (default: `true`) -- inline calls to function with simple/`return` statement:\n  - `false` -- same as `0`\n  - `0` -- disabled inlining\n  - `1` -- inline simple functions\n  - `2` -- inline functions with arguments\n  - `3` -- inline functions with arguments and variables\n  - `true` -- same as `3`\n\n- `join_vars` (default: `true`) -- join consecutive `var` statements\n\n- `keep_fargs` (default: `strict`) -- Discard unused function arguments. Code\n  which relies on `Function.length` will break if this is done indiscriminately,\n  i.e. when passing `true`. Pass `false` to always retain function arguments.\n\n- `keep_fnames` (default: `false`) -- Pass `true` to prevent the\n  compressor from discarding function names.  Useful for code relying on\n  `Function.prototype.name`. See also: the `keep_fnames` [mangle option](#mangle-options).\n\n- `keep_infinity` (default: `false`) -- Pass `true` to prevent `Infinity` from\n  being compressed into `1/0`, which may cause performance issues on Chrome.\n\n- `loops` (default: `true`) -- optimizations for `do`, `while` and `for` loops\n  when we can statically determine the condition.\n\n- `negate_iife` (default: `true`) -- negate \"Immediately-Called Function Expressions\"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `objects` (default: `true`) -- compact duplicate keys in object literals.\n\n- `passes` (default: `1`) -- The maximum number of times to run compress.\n  In some cases more than one pass leads to further compressed code.  Keep in\n  mind more passes will take more time.\n\n- `properties` (default: `true`) -- rewrite property access using the dot notation, for\n  example `foo[\"bar\"] \u2192 foo.bar`\n\n- `pure_funcs` (default: `null`) -- You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ 'Math.floor' ]` to let it know that this\n  function won't produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower). Make sure symbols under `pure_funcs`\n  are also under `mangle.reserved` to avoid mangling.\n\n- `pure_getters` (default: `\"strict\"`) -- If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo[\"bar\"]`) doesn't have any side effects.\n  Specify `\"strict\"` to treat `foo.bar` as side-effect-free only when\n  `foo` is certain to not throw, i.e. not `null` or `undefined`.\n\n- `reduce_funcs` (default: `true`) -- Allows single-use functions to be\n  inlined as function expressions when permissible allowing further\n  optimization.  Enabled by default.  Option depends on `reduce_vars`\n  being enabled.  Some code runs faster in the Chrome V8 engine if this\n  option is disabled.  Does not negatively impact other major browsers.\n\n- `reduce_vars` (default: `true`) -- Improve optimization on variables assigned with and\n  used as constant values.\n\n- `sequences` (default: `true`) -- join consecutive simple statements using the\n  comma operator.  May be set to a positive integer to specify the maximum number\n  of consecutive comma sequences that will be generated. If this option is set to\n  `true` then the default `sequences` limit is `200`. Set option to `false` or `0`\n  to disable. The smallest `sequences` length is `2`. A `sequences` value of `1`\n  is grandfathered to be equivalent to `true` and as such means `200`. On rare\n  occasions the default sequences limit leads to very slow compress times in which\n  case a value of `20` or less is recommended.\n\n- `side_effects` (default: `true`) -- Pass `false` to disable potentially dropping\n  functions marked as \"pure\".  A function call is marked as \"pure\" if a comment\n  annotation `/*@__PURE__*/` or `/*#__PURE__*/` immediately precedes the call. For\n  example: `/*@__PURE__*/foo();`\n\n- `strings` (default: `true`) -- compact string concatenations.\n\n- `switches` (default: `true`) -- de-duplicate and remove unreachable `switch` branches\n\n- `toplevel` (default: `false`) -- drop unreferenced functions (`\"funcs\"`) and/or\n  variables (`\"vars\"`) in the top level scope (`false` by default, `true` to drop\n  both unreferenced functions and variables)\n\n- `top_retain` (default: `null`) -- prevent specific toplevel functions and\n  variables from `unused` removal (can be array, comma-separated, RegExp or\n  function. Implies `toplevel`)\n\n- `typeofs` (default: `true`) -- Transforms `typeof foo == \"undefined\"` into\n  `foo === void 0`.  Note: recommend to set this value to `false` for IE10 and\n  earlier versions due to known issues.\n\n- `unsafe` (default: `false`) -- apply \"unsafe\" transformations (discussion below)\n\n- `unsafe_comps` (default: `false`) -- compress expressions like `a <= b` assuming\n  none of the operands can be (coerced to) `NaN`.\n\n- `unsafe_Function` (default: `false`) -- compress and mangle `Function(args, code)`\n  when both `args` and `code` are string literals.\n\n- `unsafe_math` (default: `false`) -- optimize numerical expressions like\n  `2 * x * 3` into `6 * x`, which may give imprecise floating point results.\n\n- `unsafe_proto` (default: `false`) -- optimize expressions like\n  `Array.prototype.slice.call(a)` into `[].slice.call(a)`\n\n- `unsafe_regexp` (default: `false`) -- enable substitutions of variables with\n  `RegExp` values the same way as if they are constants.\n\n- `unsafe_undefined` (default: `false`) -- substitute `void 0` if there is a\n  variable named `undefined` in scope (variable name will be mangled, typically\n  reduced to a single character)\n\n- `unused` (default: `true`) -- drop unreferenced functions and variables (simple\n  direct variable assignments do not count as references unless set to `\"keep_assign\"`)\n\n## Mangle options\n\n- `eval` (default `false`) -- Pass `true` to mangle names visible in scopes\n  where `eval` or `with` are used.\n\n- `keep_fnames` (default `false`) -- Pass `true` to not mangle function names.\n  Useful for code relying on `Function.prototype.name`. See also: the `keep_fnames`\n  [compress option](#compress-options).\n\n- `reserved` (default `[]`) -- Pass an array of identifiers that should be\n  excluded from mangling. Example: `[\"foo\", \"bar\"]`.\n\n- `toplevel` (default `false`) -- Pass `true` to mangle names declared in the\n  top level scope.\n\nExamples:\n\n```javascript\n// test.js\nvar globalVar;\nfunction funcName(firstLongName, anotherLongName) {\n    var myVariable = firstLongName +  anotherLongName;\n}\n```\n```javascript\nvar code = fs.readFileSync(\"test.js\", \"utf8\");\n\nUglifyJS.minify(code).code;\n// 'function funcName(a,n){}var globalVar;'\n\nUglifyJS.minify(code, { mangle: { reserved: ['firstLongName'] } }).code;\n// 'function funcName(firstLongName,a){}var globalVar;'\n\nUglifyJS.minify(code, { mangle: { toplevel: true } }).code;\n// 'function n(n,a){}var a;'\n```\n\n### Mangle properties options\n\n- `builtins` (default: `false`) -- Use `true` to allow the mangling of builtin\n  DOM properties. Not recommended to override this setting.\n\n- `debug` (default: `false`) -\u2014 Mangle names with the original name still present.\n  Pass an empty string `\"\"` to enable, or a non-empty string to set the debug suffix.\n\n- `keep_quoted` (default: `false`) -\u2014 Only mangle unquoted property names.\n\n- `regex` (default: `null`) -\u2014 Pass a RegExp literal to only mangle property\n  names matching the regular expression.\n\n- `reserved` (default: `[]`) -- Do not mangle property names listed in the\n  `reserved` array.\n\n## Output options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `ascii_only` (default `false`) -- escape Unicode characters in strings and\n  regexps (affects directives with non-ascii characters becoming invalid)\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n\n- `braces` (default `false`) -- always insert braces in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n\n- `comments` (default `false`) -- pass `true` or `\"all\"` to preserve all\n  comments, `\"some\"` to preserve multi-line comments that contain `@cc_on`,\n  `@license`, or `@preserve` (case-insensitive), a regular expression string\n  (e.g. `/^!/`), or a function which returns `boolean`, e.g.\n  ```js\n  function(node, comment) {\n      return comment.value.indexOf(\"@type \" + node.TYPE) >= 0;\n  }\n  ```\n\n- `indent_level` (default `4`)\n\n- `indent_start` (default `0`) -- prefix all lines by that many spaces\n\n- `inline_script` (default `true`) -- escape HTML comments and the slash in\n  occurrences of `</script>` in strings\n\n- `keep_quoted_props` (default `false`) -- when turned on, prevents stripping\n  quotes from property names in object literals.\n\n- `max_line_len` (default `false`) -- maximum line length (for uglified code)\n\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n\n- `preserve_line` (default `false`) -- pass `true` to retain line numbering on\n  a best effort basis.\n\n- `quote_keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n\n- `quote_style` (default `0`) -- preferred quote style for strings (affects\n  quoted property names and directives as well):\n  - `0` -- prefers double quotes, switches to single quotes when there are\n    more double quotes in the string itself. `0` is best for gzip size.\n  - `1` -- always use single quotes\n  - `2` -- always use double quotes\n  - `3` -- always use the original quotes\n\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n\n- `shebang` (default `true`) -- preserve shebang `#!` in preamble (bash scripts)\n\n- `webkit` (default `false`) -- enable workarounds for WebKit bugs.\n  PhantomJS users should set this option to `true`.\n\n- `width` (default `80`) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn't work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n\n- `wrap_iife` (default `false`) -- pass `true` to wrap immediately invoked\n  function expressions. See\n  [#640](https://github.com/mishoo/UglifyJS2/issues/640) for more details.\n\n# Miscellaneous\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain \"@preserve\",\n\"@license\" or \"@cc_on\" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments /^!/`\nwill keep comments like `/*! Copyright Notice */`.\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n    /** @preserve Foo Bar */\n    function g() {\n        // this function is never called\n    }\n    return something();\n}\n```\n\nEven though it has \"@preserve\", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n### The `unsafe` `compress` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here's what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` \u2192 `[ 1, 2, 3 ]`\n- `new Object()` \u2192 `{}`\n- `String(exp)` or `exp.toString()` \u2192 `\"\" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` \u2192 we discard the `new`\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n    console.log(\"debug stuff\");\n}\n```\n\nYou can specify nested constants in the form of `--define env.DEBUG=false`.\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nvar DEBUG = false;\nvar PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The build will contain the `const` declarations if you use\nthem. If you are targeting < ES6 environments which does not support `const`,\nusing `var` with `reduce_vars` (enabled by default) should suffice.\n\n### Conditional compilation API\n\nYou can also use conditional compilation via the programmatic API. With the difference that the\nproperty name is `global_defs` and is a compressor property:\n\n```javascript\nvar result = UglifyJS.minify(fs.readFileSync(\"input.js\", \"utf8\"), {\n    compress: {\n        dead_code: true,\n        global_defs: {\n            DEBUG: false\n        }\n    }\n});\n```\n\nTo replace an identifier with an arbitrary non-constant expression it is\nnecessary to prefix the `global_defs` key with `\"@\"` to instruct UglifyJS\nto parse the value as an expression:\n```javascript\nUglifyJS.minify(\"alert('hello');\", {\n    compress: {\n        global_defs: {\n            \"@alert\": \"console.log\"\n        }\n    }\n}).code;\n// returns: 'console.log(\"hello\");'\n```\n\nOtherwise it would be replaced as string literal:\n```javascript\nUglifyJS.minify(\"alert('hello');\", {\n    compress: {\n        global_defs: {\n            \"alert\": \"console.log\"\n        }\n    }\n}).code;\n// returns: '\"console.log\"(\"hello\");'\n```\n\n### Using native Uglify AST with `minify()`\n```javascript\n// example: parse only, produce native Uglify AST\n\nvar result = UglifyJS.minify(code, {\n    parse: {},\n    compress: false,\n    mangle: false,\n    output: {\n        ast: true,\n        code: false  // optional - faster if false\n    }\n});\n\n// result.ast contains native Uglify AST\n```\n```javascript\n// example: accept native Uglify AST input and then compress and mangle\n//          to produce both code and native AST.\n\nvar result = UglifyJS.minify(ast, {\n    compress: {},\n    mangle: {},\n    output: {\n        ast: true,\n        code: true  // optional - faster if false\n    }\n});\n\n// result.ast contains native Uglify AST\n// result.code contains the minified code in string form.\n```\n\n### Working with Uglify AST\n\nTransversal and transformation of the native AST can be performed through\n[`TreeWalker`](https://github.com/mishoo/UglifyJS2/blob/master/lib/ast.js) and\n[`TreeTransformer`](https://github.com/mishoo/UglifyJS2/blob/master/lib/transform.js)\nrespectively.\n\n### ESTree / SpiderMonkey AST\n\nUglifyJS has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can't easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs -p spidermonkey -m -c\n\nThe `-p spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon't use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `-p acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require(\"acorn\")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it's a bit more than just using UglifyJS's own parser.\n\n[acorn]: https://github.com/ternjs/acorn\n[sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k\n\n### Uglify Fast Minify Mode\n\nIt's not well known, but whitespace removal and symbol mangling accounts\nfor 95% of the size reduction in minified code for most JavaScript - not\nelaborate code transforms. One can simply disable `compress` to speed up\nUglify builds by 3 to 4 times. In this fast `mangle`-only mode Uglify has\ncomparable minify speeds and gzip sizes to\n[`butternut`](https://www.npmjs.com/package/butternut):\n\n| d3.js | minify size | gzip size | minify time (seconds) |\n| --- | ---: | ---: | ---: |\n| original | 451,131 | 108,733 | - |\n| uglify-js@3.0.24 mangle=false, compress=false | 316,600 | 85,245 | 0.70 |\n| uglify-js@3.0.24 mangle=true, compress=false | 220,216 | 72,730 | 1.13 |\n| butternut@0.4.6 | 217,568 | 72,738 | 1.41 |\n| uglify-js@3.0.24 mangle=true, compress=true | 212,511 | 71,560 | 3.36 |\n| babili@0.1.4 | 210,713 | 72,140 | 12.64 |\n\nTo enable fast minify mode from the CLI use:\n```\nuglifyjs file.js -m\n```\nTo enable fast minify mode with the API use:\n```js\nUglifyJS.minify(code, { compress: false, mangle: true });\n```\n\n#### Source maps and debugging\n\nVarious `compress` transforms that simplify, rearrange, inline and remove code\nare known to have an adverse effect on debugging with source maps. This is\nexpected as code is optimized and mappings are often simply not possible as\nsome code no longer exists. For highest fidelity in source map debugging\ndisable the Uglify `compress` option and just use `mangle`.\n\n### Compiler assumptions\n\nTo allow for better optimizations, the compiler makes various assumptions:\n\n- `.toString()` and `.valueOf()` don't have side effects, and for built-in\n  objects they have not been overridden.\n- `undefined`, `NaN` and `Infinity` have not been externally redefined.\n- `arguments.callee`, `arguments.caller` and `Function.prototype.caller` are not used.\n- The code doesn't expect the contents of `Function.prototype.toString()` or\n  `Error.prototype.stack` to be anything in particular.\n- Getting and setting properties on a plain object does not cause other side effects\n  (using `.watch()` or `Proxy`).\n- Object properties can be added, removed and modified (not prevented with\n  `Object.defineProperty()`, `Object.defineProperties()`, `Object.freeze()`,\n  `Object.preventExtensions()` or `Object.seal()`)."}, "npm": {"downloads": [{"from": "2020-02-17T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 2318501}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 14798704}, {"from": "2020-01-19T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 62485096}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 177574760}, {"from": "2019-08-22T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 358364776}, {"from": "2019-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 696310268}], "dependentsCount": 3200, "starsCount": 267}, "github": {"homepage": "http://lisperator.net/uglifyjs/", "starsCount": 10544, "forksCount": 1116, "subscribersCount": 285, "issues": {"count": 3723, "openCount": 58, "distribution": {"3600": 712, "10800": 705, "32400": 543, "97200": 433, "291600": 235, "874800": 200, "2624400": 173, "7873200": 152, "23619600": 183, "70858800": 229, "212576400": 158}, "isDisabled": false}, "contributors": [{"username": "alexlamsl", "commitsCount": 1046}, {"username": "mishoo", "commitsCount": 517}, {"username": "kzc", "commitsCount": 113}, {"username": "rvanvelzen", "commitsCount": 52}, {"username": "avdg", "commitsCount": 48}, {"username": "RReverser", "commitsCount": 9}, {"username": "Skalman", "commitsCount": 8}, {"username": "justin-lau", "commitsCount": 6}, {"username": "STRML", "commitsCount": 5}, {"username": "TalAter", "commitsCount": 4}, {"username": "arty-name", "commitsCount": 4}, {"username": "michaelficarra", "commitsCount": 4}, {"username": "Arnavion", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 3}, {"username": "OndrejSpanel", "commitsCount": 3}, {"username": "fabiosantoscode", "commitsCount": 3}, {"username": "glasser", "commitsCount": 3}, {"username": "jcxplorer", "commitsCount": 3}, {"username": "lautis", "commitsCount": 3}, {"username": "mattrobenolt", "commitsCount": 3}, {"username": "olsonpm", "commitsCount": 3}, {"username": "wnr", "commitsCount": 3}, {"username": "BenoitZugmeyer", "commitsCount": 2}, {"username": "Dazix", "commitsCount": 2}, {"username": "Macil", "commitsCount": 2}, {"username": "XhmikosR", "commitsCount": 2}, {"username": "candid82", "commitsCount": 2}, {"username": "futurist", "commitsCount": 2}, {"username": "nschonni", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "pirxpilot", "commitsCount": 2}, {"username": "qfox", "commitsCount": 2}, {"username": "xqdoo00o", "commitsCount": 2}, {"username": "AlbertoGP", "commitsCount": 1}, {"username": "Andarist", "commitsCount": 1}, {"username": "AshleyScirra", "commitsCount": 1}, {"username": "Bobris", "commitsCount": 1}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "CMTegner", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "DrewML", "commitsCount": 1}, {"username": "Icidis", "commitsCount": 1}, {"username": "Jiavan", "commitsCount": 1}, {"username": "Jolg42", "commitsCount": 1}, {"username": "Mottie", "commitsCount": 1}, {"username": "OiNutter", "commitsCount": 1}, {"username": "OmgImAlexis", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "ReadmeCritic", "commitsCount": 1}, {"username": "RobLoach", "commitsCount": 1}, {"username": "SampsonCrowley", "commitsCount": 1}, {"username": "SebastienDaniel", "commitsCount": 1}, {"username": "Surgo", "commitsCount": 1}, {"username": "TimothyGu", "commitsCount": 1}, {"username": "Zzzen", "commitsCount": 1}, {"username": "achingbrain", "commitsCount": 1}, {"username": "asia-t", "commitsCount": 1}, {"username": "b-fuze", "commitsCount": 1}, {"username": "bryanerayner", "commitsCount": 1}, {"username": "caldwell", "commitsCount": 1}, {"username": "caridy", "commitsCount": 1}, {"username": "clyfish", "commitsCount": 1}, {"username": "cs09g", "commitsCount": 1}, {"username": "davidbau", "commitsCount": 1}, {"username": "dwickern", "commitsCount": 1}, {"username": "edg2s", "commitsCount": 1}, {"username": "edwardcasbon", "commitsCount": 1}, {"username": "erikdesjardins", "commitsCount": 1}, {"username": "exvisory", "commitsCount": 1}, {"username": "gdw2", "commitsCount": 1}, {"username": "geraintluff", "commitsCount": 1}, {"username": "homuler", "commitsCount": 1}, {"username": "istr", "commitsCount": 1}, {"username": "jacobk", "commitsCount": 1}, {"username": "kara", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "knpwrs", "commitsCount": 1}, {"username": "lahmatiy", "commitsCount": 1}, {"username": "larpo", "commitsCount": 1}, {"username": "ljharb", "commitsCount": 1}, {"username": "marcogrcr", "commitsCount": 1}, {"username": "michaelmior", "commitsCount": 1}, {"username": "micschro", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "philippsimon", "commitsCount": 1}, {"username": "plievone", "commitsCount": 1}, {"username": "qyoz", "commitsCount": 1}, {"username": "rogpeppe", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "silverwind", "commitsCount": 1}, {"username": "startswithaj", "commitsCount": 1}, {"username": "tdmalone", "commitsCount": 1}, {"username": "thataustin", "commitsCount": 1}, {"username": "thejh", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "truiken", "commitsCount": 1}, {"username": "vjeux", "commitsCount": 1}, {"username": "wiktor-k", "commitsCount": 1}, {"username": "zaygraveyard", "commitsCount": 1}], "commits": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 3}, {"from": "2020-01-19T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 33}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 87}, {"from": "2019-08-22T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 193}, {"from": "2019-02-18T00:00:00.000Z", "to": "2020-02-18T00:00:00.000Z", "count": 282}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 46376, "testsSize": 1344594}, "outdatedDependencies": {"source-map": {"required": "~0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "commander": {"required": "~2.20.3", "stable": "4.1.1", "latest": "5.0.0-2"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 12311, "downloadsCount": 59191586.666666664, "downloadsAcceleration": 64588.30669710814, "dependentsCount": 3200}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.16359865208796265}}, "score": {"final": 0.8120953046913735, "detail": {"quality": 0.7911480929881028, "popularity": 0.8174197492147217, "maintenance": 0.8247256130565433}}}
{"analyzedAt": "2020-02-13T02:50:02.165Z", "collected": {"metadata": {"name": "union-value", "scope": "unscoped", "version": "2.0.1", "description": "Set an array of unique values as the property of an object. Supports setting deeply nested properties using using object-paths/dot notation.", "keywords": ["array", "dot", "get", "has", "nested", "notation", "object", "path", "prop", "property", "set", "union", "value"], "date": "2019-06-20T14:53:38.734Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "doowb", "email": "brian.woodward@gmail.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/union-value.git"}, "links": {"npm": "https://www.npmjs.com/package/union-value", "homepage": "https://github.com/jonschlinkert/union-value", "repository": "https://github.com/jonschlinkert/union-value", "bugs": "https://github.com/jonschlinkert/union-value/issues"}, "license": "MIT", "dependencies": {"get-value": "^3.0.1", "set-value": "^3.0.0"}, "devDependencies": {"gulp-format-md": "^2.0.0", "mocha": "^6.1.4"}, "releases": [{"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 3}, {"from": "2018-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-02-12T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 2124438}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 11031405}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 45914424}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 119963190}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 242843130}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 449878057}], "dependentsCount": 55, "starsCount": 1}, "github": {"starsCount": 18, "forksCount": 3, "subscribersCount": 2, "issues": {"count": 8, "openCount": 2, "distribution": {"3600": 2, "10800": 1, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 3, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 22}, {"username": "doowb", "commitsCount": 3}, {"username": "TrySound", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-02-06T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2020-01-14T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-08-17T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 0}, {"from": "2019-02-13T00:00:00.000Z", "to": "2020-02-13T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1073}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 28, "downloadsCount": 39987730, "downloadsAcceleration": 103631.01404109591, "dependentsCount": 55}, "maintenance": {"releasesFrequency": 0.19726027397260276, "commitsFrequency": 0.03452054794520548, "openIssues": 0.9166666666666667, "issuesDistribution": 0.6207515585542928}}, "score": {"final": 0.6676915486754933, "detail": {"quality": 0.8084509613240451, "popularity": 0.49967053589795796, "maintenance": 0.7150616363256987}}}
{"analyzedAt": "2020-02-02T03:46:38.805Z", "collected": {"metadata": {"name": "unset-value", "scope": "unscoped", "version": "1.0.0", "description": "Delete nested properties from an object using dot notation.", "keywords": ["del", "delete", "key", "object", "omit", "prop", "property", "remove", "unset", "value"], "date": "2017-02-25T22:27:15.940Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"email": "wtgtybhertgeghgtwtg@gmail.com", "url": "https://github.com/wtgtybhertgeghgtwtg"}, {"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/unset-value.git"}, "links": {"npm": "https://www.npmjs.com/package/unset-value", "homepage": "https://github.com/jonschlinkert/unset-value", "repository": "https://github.com/jonschlinkert/unset-value", "bugs": "https://github.com/jonschlinkert/unset-value/issues"}, "license": "MIT", "dependencies": {"has-value": "^0.3.1", "isobject": "^3.0.0"}, "devDependencies": {"gulp-format-md": "^0.1.11", "mocha": "*", "should": "*"}, "releases": [{"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2018-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# unset-value [![NPM version](https://img.shields.io/npm/v/unset-value.svg?style=flat)](https://www.npmjs.com/package/unset-value) [![NPM monthly downloads](https://img.shields.io/npm/dm/unset-value.svg?style=flat)](https://npmjs.org/package/unset-value)  [![NPM total downloads](https://img.shields.io/npm/dt/unset-value.svg?style=flat)](https://npmjs.org/package/unset-value) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/unset-value.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/unset-value)\n\n> Delete nested properties from an object using dot notation.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save unset-value\n```\n\n## Usage\n\n```js\nvar unset = require('unset-value');\n\nvar obj = {a: {b: {c: 'd', e: 'f'}}};\nunset(obj, 'a.b.c');\nconsole.log(obj);\n//=> {a: {b: {e: 'f'}}};\n```\n\n## Examples\n\n### Updates the object when a property is deleted\n\n```js\nvar obj = {a: 'b'};\nunset(obj, 'a');\nconsole.log(obj);\n//=> {}\n```\n\n### Returns true when a property is deleted\n\n```js\nunset({a: 'b'}, 'a') // true\n```\n\n### Returns `true` when a property does not exist\n\nThis is consistent with `delete` behavior in that it does not\nthrow when a property does not exist.\n\n```js\nunset({a: {b: {c: 'd'}}}, 'd') // true\n```\n\n### delete nested values\n\n```js\nvar one = {a: {b: {c: 'd'}}};\nunset(one, 'a.b');\nconsole.log(one);\n//=> {a: {}}\n\nvar two = {a: {b: {c: 'd'}}};\nunset(two, 'a.b.c');\nconsole.log(two);\n//=> {a: {b: {}}}\n\nvar three = {a: {b: {c: 'd', e: 'f'}}};\nunset(three, 'a.b.c');\nconsole.log(three);\n//=> {a: {b: {e: 'f'}}}\n```\n\n### throws on invalid args\n\n```js\nunset();\n// 'expected an object.'\n```\n\n## About\n\n### Related projects\n\n* [get-value](https://www.npmjs.com/package/get-value): Use property paths (`a.b.c`) to get a nested value from an object. | [homepage](https://github.com/jonschlinkert/get-value \"Use property paths (`a.b.c`) to get a nested value from an object.\")\n* [get-values](https://www.npmjs.com/package/get-values): Return an array of all values from the given object. | [homepage](https://github.com/jonschlinkert/get-values \"Return an array of all values from the given object.\")\n* [omit-value](https://www.npmjs.com/package/omit-value): Omit properties from an object or deeply nested property of an object using object path\u2026 [more](https://github.com/jonschlinkert/omit-value) | [homepage](https://github.com/jonschlinkert/omit-value \"Omit properties from an object or deeply nested property of an object using object path notation.\")\n* [put-value](https://www.npmjs.com/package/put-value): Update only existing values from an object, works with dot notation paths like `a.b.c` and\u2026 [more](https://github.com/tunnckocore/put-value#readme) | [homepage](https://github.com/tunnckocore/put-value#readme \"Update only existing values from an object, works with dot notation paths like `a.b.c` and support deep nesting.\")\n* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value \"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths.\")\n* [union-value](https://www.npmjs.com/package/union-value): Set an array of unique values as the property of an object. Supports setting deeply\u2026 [more](https://github.com/jonschlinkert/union-value) | [homepage](https://github.com/jonschlinkert/union-value \"Set an array of unique values as the property of an object. Supports setting deeply nested properties using using object-paths/dot notation.\")\n* [upsert-value](https://www.npmjs.com/package/upsert-value): Update or set nested values and any intermediaries with dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/doowb/upsert-value \"Update or set nested values and any intermediaries with dot notation (`'a.b.c'`) paths.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 6 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.4.2, on February 25, 2017._"}, "npm": {"downloads": [{"from": "2020-02-01T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 606417}, {"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 10592208}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 42936273}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 123288484}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 244987541}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 455984957}], "dependentsCount": 59, "starsCount": 1}, "github": {"starsCount": 24, "forksCount": 3, "subscribersCount": 2, "issues": {"count": 7, "openCount": 4, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 1, "291600": 0, "874800": 0, "2624400": 3, "7873200": 0, "23619600": 0, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 9}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "TrySound", "commitsCount": 1}], "commits": [{"from": "2020-01-26T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-11-04T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-08-06T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}, {"from": "2019-02-02T00:00:00.000Z", "to": "2020-02-02T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5239, "testsSize": 1678}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/unset-value.svg?style=flat", "shields": "https://img.shields.io/npm/v/unset-value.svg", "content": "https://img.shields.io/npm/v/unset-value.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/unset-value.svg?style=flat", "shields": "https://img.shields.io/npm/dm/unset-value.svg", "content": "https://img.shields.io/npm/dm/unset-value.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/unset-value.svg?style=flat", "shields": "https://img.shields.io/npm/dt/unset-value.svg", "content": "https://img.shields.io/npm/dt/unset-value.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/unset-value.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/unset-value.svg", "shields": "https://img.shields.io/travis/jonschlinkert/unset-value.svg", "content": "https://img.shields.io/travis/jonschlinkert/unset-value.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"isobject": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "has-value": {"required": "^0.3.1", "stable": "2.0.2", "latest": "2.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 33, "downloadsCount": 41096161.333333336, "downloadsAcceleration": 73425.82121385081, "dependentsCount": 59}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7965914165941028, "detail": {"quality": 0.9076037849851073, "popularity": 0.49817245204729554, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-12T13:27:16.999Z", "collected": {"metadata": {"name": "uri-js", "scope": "unscoped", "version": "4.2.2", "description": "An RFC 3986/3987 compliant, scheme extendable URI/IRI parsing/validating/resolving library for JavaScript.", "keywords": ["URI", "IRI", "IDN", "URN", "UUID", "HTTP", "HTTPS", "MAILTO", "RFC3986", "RFC3987", "RFC5891", "RFC2616", "RFC2818", "RFC2141", "RFC4122", "RFC4291", "RFC5952", "RFC6068", "RFC6874"], "date": "2018-05-25T21:54:57.365Z", "author": {"name": "Gary Court", "email": "gary.court@gmail.com", "username": "garycourt"}, "publisher": {"username": "garycourt", "email": "gary.court@gmail.com"}, "maintainers": [{"username": "garycourt", "email": "gary.court@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/garycourt/uri-js.git"}, "links": {"npm": "https://www.npmjs.com/package/uri-js", "homepage": "https://github.com/garycourt/uri-js", "repository": "https://github.com/garycourt/uri-js", "bugs": "https://github.com/garycourt/uri-js/issues"}, "license": "BSD-2-Clause", "dependencies": {"punycode": "^2.1.0"}, "devDependencies": {"babel-cli": "^6.26.0", "babel-plugin-external-helpers": "^6.22.0", "babel-preset-latest": "^6.24.1", "mocha": "^3.2.0", "mocha-qunit-ui": "^0.1.3", "rollup": "^0.41.6", "rollup-plugin-babel": "^2.7.1", "rollup-plugin-node-resolve": "^2.0.0", "sorcery": "^0.10.0", "typescript": "^2.8.1", "uglify-js": "^2.8.14"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# URI.js\n\nURI.js is an [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt) compliant, scheme extendable URI parsing/validating/resolving library for all JavaScript environments (browsers, Node.js, etc).\nIt is also compliant with the IRI ([RFC 3987](http://www.ietf.org/rfc/rfc3987.txt)), IDNA ([RFC 5890](http://www.ietf.org/rfc/rfc5890.txt)), IPv6 Address ([RFC 5952](http://www.ietf.org/rfc/rfc5952.txt)), IPv6 Zone Identifier ([RFC 6874](http://www.ietf.org/rfc/rfc6874.txt)) specifications.\n\nURI.js has an extensive test suite, and works in all (Node.js, web) environments. It weighs in at 6.2kb (gzipped, 16kb deflated).\n\n## API\n\n### Parsing\n\n\tURI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\");\n\t//returns:\n\t//{\n\t//  scheme : \"uri\",\n\t//  userinfo : \"user:pass\",\n\t//  host : \"example.com\",\n\t//  port : 123,\n\t//  path : \"/one/two.three\",\n\t//  query : \"q1=a1&q2=a2\",\n\t//  fragment : \"body\"\n\t//}\n\n### Serializing\n\n\tURI.serialize({scheme : \"http\", host : \"example.com\", fragment : \"footer\"}) === \"http://example.com/#footer\"\n\n### Resolving\n\n\tURI.resolve(\"uri://a/b/c/d?q\", \"../../g\") === \"uri://a/g\"\n\n### Normalizing\n\n\tURI.normalize(\"HTTP://ABC.com:80/%7Esmith/home.html\") === \"http://abc.com/~smith/home.html\"\n\n### Comparison\n\n\tURI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\") === true\n\n### IP Support\n\n\t//IPv4 normalization\n\tURI.normalize(\"//192.068.001.000\") === \"//192.68.1.0\"\n\n\t//IPv6 normalization\n\tURI.normalize(\"//[2001:0:0DB8::0:0001]\") === \"//[2001:0:db8::1]\"\n\n\t//IPv6 zone identifier support\n\tURI.parse(\"//[2001:db8::7%25en1]\");\n\t//returns:\n\t//{\n\t//  host : \"2001:db8::7%en1\"\n\t//}\n\n### IRI Support\n\n\t//convert IRI to URI\n\tURI.serialize(URI.parse(\"http://exampl\u00e9.org/ros\u00e9\")) === \"http://xn--exampl-gva.org/ros%C3%A9\"\n\t//convert URI to IRI\n\tURI.serialize(URI.parse(\"http://xn--exampl-gva.org/ros%C3%A9\"), {iri:true}) === \"http://exampl\u00e9.org/ros\u00e9\"\n\n### Options\n\nAll of the above functions can accept an additional options argument that is an object that can contain one or more of the following properties:\n\n*\t`scheme` (string)\n\n\tIndicates the scheme that the URI should be treated as, overriding the URI's normal scheme parsing behavior.\n\n*\t`reference` (string)\n\n\tIf set to `\"suffix\"`, it indicates that the URI is in the suffix format, and the validator will use the option's `scheme` property to determine the URI's scheme.\n\n*\t`tolerant` (boolean, false)\n\n\tIf set to `true`, the parser will relax URI resolving rules.\n\n*\t`absolutePath` (boolean, false)\n\n\tIf set to `true`, the serializer will not resolve a relative `path` component.\n\n*\t`iri` (boolean, false)\n\n\tIf set to `true`, the serializer will unescape non-ASCII characters as per [RFC 3987](http://www.ietf.org/rfc/rfc3987.txt).\n\n*\t`unicodeSupport` (boolean, false)\n\n\tIf set to `true`, the parser will unescape non-ASCII characters in the parsed output as per [RFC 3987](http://www.ietf.org/rfc/rfc3987.txt).\n\n*\t`domainHost` (boolean, false)\n\n\tIf set to `true`, the library will treat the `host` component as a domain name, and convert IDNs (International Domain Names) as per [RFC 5891](http://www.ietf.org/rfc/rfc5891.txt).\n\n## Scheme Extendable\n\nURI.js supports inserting custom [scheme](http://en.wikipedia.org/wiki/URI_scheme) dependent processing rules. Currently, URI.js has built in support for the following schemes:\n\n*\thttp \\[[RFC 2616](http://www.ietf.org/rfc/rfc2616.txt)\\]\n*\thttps \\[[RFC 2818](http://www.ietf.org/rfc/rfc2818.txt)\\]\n*\tmailto \\[[RFC 6068](http://www.ietf.org/rfc/rfc6068.txt)\\]\n*\turn \\[[RFC 2141](http://www.ietf.org/rfc/rfc2141.txt)\\]\n*\turn:uuid \\[[RFC 4122](http://www.ietf.org/rfc/rfc4122.txt)\\]\n\n### HTTP Support\n\n\tURI.equal(\"HTTP://ABC.COM:80\", \"http://abc.com/\") === true\n\n### Mailto Support\n\n\tURI.parse(\"mailto:alpha@example.com,bravo@example.com?subject=SUBSCRIBE&body=Sign%20me%20up!\");\n\t//returns:\n\t//{\n\t//\tscheme : \"mailto\",\n\t//\tto : [\"alpha@example.com\", \"bravo@example.com\"],\n\t//\tsubject : \"SUBSCRIBE\",\n\t//\tbody : \"Sign me up!\"\n\t//}\n\n\tURI.serialize({\n\t\tscheme : \"mailto\",\n\t\tto : [\"alpha@example.com\"],\n\t\tsubject : \"REMOVE\",\n\t\tbody : \"Please remove me\",\n\t\theaders : {\n\t\t\tcc : \"charlie@example.com\"\n\t\t}\n\t}) === \"mailto:alpha@example.com?cc=charlie@example.com&subject=REMOVE&body=Please%20remove%20me\"\n\n### URN Support\n\n\tURI.parse(\"urn:example:foo\");\n\t//returns:\n\t//{\n\t//\tscheme : \"urn\",\n\t//\tnid : \"example\",\n\t//\tnss : \"foo\",\n\t//}\n\n#### URN UUID Support\n\n\tURI.parse(\"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\");\n\t//returns:\n\t//{\n\t//\tscheme : \"urn\",\n\t//\tnid : \"example\",\n\t//\tuuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\",\n\t//}\n\n## Usage\n\nTo load in a browser, use the following tag:\n\n\t<script type=\"text/javascript\" src=\"uri-js/dist/es5/uri.all.min.js\"></script>\n\nTo load in a CommonJS (Node.js) environment, first install with npm by running on the command line:\n\n\tnpm install uri-js\n\nThen, in your code, load it using:\n\n\tconst URI = require(\"uri-js\");\n\nIf you are writing your code in ES6+ (ESNEXT) or TypeScript, you would load it using:\n\n\timport * as URI from \"uri-js\";\n\nOr you can load just what you need using named exports:\n\n\timport { parse, serialize, resolve, resolveComponents, normalize, equal, removeDotSegments, pctEncChar, pctDecChars, escapeComponent, unescapeComponent } from \"uri-js\";\n\n## Breaking changes\n\n### Breaking changes from 3.x\n\nURN parsing has been completely changed to better align with the specification. Scheme is now always `urn`, but has two new properties: `nid` which contains the Namspace Identifier, and `nss` which contains the Namespace Specific String. The `nss` property will be removed by higher order scheme handlers, such as the UUID URN scheme handler.\n\nThe UUID of a URN can now be found in the `uuid` property.\n\n### Breaking changes from 2.x\n\nURI validation has been removed as it was slow, exposed a vulnerabilty, and was generally not useful.\n\n### Breaking changes from 1.x\n\nThe `errors` array on parsed components is now an `error` string.\n\n## License ([Simplified BSD](http://en.wikipedia.org/wiki/BSD_licenses#2-clause))\n\nCopyright 2011 Gary Court. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1.\tRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2.\tRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY GARY COURT \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the authors and should not be interpreted as representing official policies, either expressed or implied, of Gary Court."}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2440622}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 13122976}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 54980406}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 145312239}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 285911552}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 535218725}], "dependentsCount": 154, "starsCount": 5}, "github": {"starsCount": 219, "forksCount": 45, "subscribersCount": 9, "issues": {"count": 51, "openCount": 19, "distribution": {"3600": 3, "10800": 1, "32400": 2, "97200": 4, "291600": 4, "874800": 4, "2624400": 2, "7873200": 4, "23619600": 13, "70858800": 13, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "garycourt", "commitsCount": 36}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 7491, "testsSize": 67405}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 279, "downloadsCount": 48437413, "downloadsAcceleration": 122093.09216133947, "dependentsCount": 154}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0, "openIssues": 0.7124183006535947, "issuesDistribution": 0}}, "score": {"final": 0.5186552512205765, "detail": {"quality": 0.8054309185439028, "popularity": 0.5762470145575577, "maintenance": 0.21525577303503024}}}
{"analyzedAt": "2020-02-14T12:35:05.600Z", "collected": {"metadata": {"name": "urix", "scope": "unscoped", "version": "0.1.0", "description": "Makes Windows-style paths more unix and URI friendly.", "keywords": ["path", "url", "uri", "unix", "windows", "backslash", "slash"], "date": "2014-03-01T21:02:32.481Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/lydell/urix.git"}, "links": {"npm": "https://www.npmjs.com/package/urix", "homepage": "https://github.com/lydell/urix", "repository": "https://github.com/lydell/urix", "bugs": "https://github.com/lydell/urix/issues"}, "license": "MIT", "devDependencies": {"mocha": "^1.17.1", "jshint": "^2.4.4"}, "releases": [{"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2018-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "[![Build Status](https://travis-ci.org/lydell/urix.png?branch=master)](https://travis-ci.org/lydell/urix)\r\n\r\nOverview\r\n========\r\n\r\nMakes Windows-style paths more unix and URI friendly. Useful if you work with\r\npaths that eventually will be used in URLs.\r\n\r\n```js\r\nvar urix = require(\"urix\")\r\n\r\n// On Windows:\r\nurix(\"c:\\\\users\\\\you\\\\foo\")\r\n// /users/you/foo\r\n\r\n// On unix-like systems:\r\nurix(\"c:\\\\users\\\\you\\\\foo\")\r\n// c:\\users\\you\\foo\r\n```\r\n\r\n\r\nInstallation\r\n============\r\n\r\n`npm install urix`\r\n\r\n```js\r\nvar urix = require(\"urix\")\r\n```\r\n\r\n\r\nUsage\r\n=====\r\n\r\n### `urix(path)` ###\r\n\r\nOn Windows, replaces all backslashes with slashes and uses a slash instead of a\r\ndrive letter and a colon for absolute paths.\r\n\r\nOn unix-like systems it is a no-op.\r\n\r\n\r\nLicense\r\n=======\r\n\r\n[The X11 (\u201cMIT\u201d) License](LICENSE)."}, "npm": {"downloads": [{"from": "2020-02-13T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 1918249}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 10246375}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 42628274}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 111178094}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 222877424}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 417603258}], "dependentsCount": 57, "starsCount": 0}, "github": {"starsCount": 11, "forksCount": 1, "subscribersCount": 1, "issues": {"count": 1, "openCount": 0, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 3}, {"username": "fabiosantoscode", "commitsCount": 1}], "commits": [{"from": "2020-02-07T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2020-01-15T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-08-18T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}, {"from": "2019-02-14T00:00:00.000Z", "to": "2020-02-14T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 809, "testsSize": 948, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/lydell/urix.png?branch=master", "service": "https://api.travis-ci.org/lydell/urix.svg?branch=master", "shields": "https://img.shields.io/travis/lydell/urix/master.svg", "content": "https://img.shields.io/travis/lydell/urix/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 15, "downloadsCount": 37059364.666666664, "downloadsAcceleration": 92728.33691019786, "dependentsCount": 57}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6068668871506477, "detail": {"quality": 0.8698782910451691, "popularity": 0.4882954281059916, "maintenance": 0.5}}}
{"analyzedAt": "2020-02-12T03:12:39.512Z", "collected": {"metadata": {"name": "use", "scope": "unscoped", "version": "3.1.1", "description": "Easily add plugin support to your node.js application.", "keywords": ["use"], "date": "2018-07-12T17:13:41.903Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "jonschlinkert", "email": "github@sellside.com"}, {"username": "kgriffs", "email": "kgriffs@me.com"}], "contributors": [{"name": "Brian Woodward", "url": "https://twitter.com/doowb"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}, {"name": "Olsten Larck", "url": "https://i.am.charlike.online"}, {"url": "https://github.com/wtgtybhertgeghgtwtg"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/use.git"}, "links": {"npm": "https://www.npmjs.com/package/use", "homepage": "https://github.com/jonschlinkert/use", "repository": "https://github.com/jonschlinkert/use", "bugs": "https://github.com/jonschlinkert/use/issues"}, "license": "MIT", "devDependencies": {"base-plugins": "^1.0.0", "define-property": "^2.0.0", "extend-shallow": "^3.0.1", "gulp": "^3.9.1", "gulp-eslint": "^4.0.0", "gulp-format-md": "^1.0.0", "gulp-istanbul": "^1.1.2", "gulp-mocha": "^3.0.1", "mocha": "^4.0.1"}, "releases": [{"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2018-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# use [![NPM version](https://img.shields.io/npm/v/use.svg?style=flat)](https://www.npmjs.com/package/use) [![NPM monthly downloads](https://img.shields.io/npm/dm/use.svg?style=flat)](https://npmjs.org/package/use) [![NPM total downloads](https://img.shields.io/npm/dt/use.svg?style=flat)](https://npmjs.org/package/use) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/use.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/use)\n\n> Easily add plugin support to your node.js application.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save use\n```\n\nA different take on plugin handling! This is not a middleware system, if you need something that handles async middleware, [ware](https://github.com/segmentio/ware) is great for that.\n\n## Usage\n\n```js\nconst use = require('use');\n```\n\nSee the [examples folder](./examples) for usage examples.\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [base-plugins](https://www.npmjs.com/package/base-plugins): Adds 'smart plugin' support to your base application. | [homepage](https://github.com/node-base/base-plugins \"Adds 'smart plugin' support to your base application.\")\n* [base](https://www.npmjs.com/package/base): Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks | [homepage](https://github.com/node-base/base \"Framework for rapidly creating high quality, server-side node.js applications, using plugins like building blocks\")\n* [ware](https://www.npmjs.com/package/ware): Easily create your own middleware layer. | [homepage](https://github.com/segmentio/ware \"Easily create your own middleware layer.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 37 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 7 | [charlike-old](https://github.com/charlike-old) |\n| 2 | [doowb](https://github.com/doowb) |\n| 2 | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on July 12, 2018._"}, "npm": {"downloads": [{"from": "2020-02-11T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 1961313}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 10378610}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 43311713}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 113476110}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 227420403}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 430438706}], "dependentsCount": 52, "starsCount": 0}, "github": {"starsCount": 19, "forksCount": 5, "subscribersCount": 2, "issues": {"count": 11, "openCount": 3, "distribution": {"3600": 1, "10800": 0, "32400": 0, "97200": 0, "291600": 1, "874800": 1, "2624400": 2, "7873200": 1, "23619600": 1, "70858800": 1, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 35}, {"username": "tunnckoCore", "commitsCount": 7}, {"username": "doowb", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}], "commits": [{"from": "2020-02-05T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2020-01-13T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-08-16T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}, {"from": "2019-02-12T00:00:00.000Z", "to": "2020-02-12T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3541, "testsSize": 8041}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/use.svg?style=flat", "shields": "https://img.shields.io/npm/v/use.svg", "content": "https://img.shields.io/npm/v/use.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/use.svg?style=flat", "shields": "https://img.shields.io/npm/dm/use.svg", "content": "https://img.shields.io/npm/dm/use.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/use.svg?style=flat", "shields": "https://img.shields.io/npm/dt/use.svg", "content": "https://img.shields.io/npm/dt/use.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/use.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/use.svg", "shields": "https://img.shields.io/travis/jonschlinkert/use.svg", "content": "https://img.shields.io/travis/jonschlinkert/use.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 30, "downloadsCount": 37825370, "downloadsAcceleration": 87150.54948630132, "dependentsCount": 52}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8031196804789664, "detail": {"quality": 0.9333911371497057, "popularity": 0.49472118986296454, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-03T21:38:51.211Z", "collected": {"metadata": {"name": "v8-compile-cache", "scope": "unscoped", "version": "2.1.0", "description": "Require hook for automatic V8 compile cache persistence", "date": "2019-08-04T22:57:32.308Z", "author": {"name": "Andres Suarez", "email": "zertosh@gmail.com", "username": "zertosh"}, "publisher": {"username": "zertosh", "email": "zertosh@gmail.com"}, "maintainers": [{"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/zertosh/v8-compile-cache.git"}, "links": {"npm": "https://www.npmjs.com/package/v8-compile-cache", "homepage": "https://github.com/zertosh/v8-compile-cache#readme", "repository": "https://github.com/zertosh/v8-compile-cache", "bugs": "https://github.com/zertosh/v8-compile-cache/issues"}, "license": "MIT", "devDependencies": {"babel-core": "6.23.1", "eslint": "^3.15.0", "flow-parser": "0.38.0", "rimraf": "^2.5.4", "rxjs": "5.2.0", "semver": "^5.3.0", "tap": "^10.1.1", "temp": "^0.8.3", "yarn": "0.20.3"}, "releases": [{"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 3}, {"from": "2018-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# v8-compile-cache\n\n[![Build Status](https://travis-ci.org/zertosh/v8-compile-cache.svg?branch=master)](https://travis-ci.org/zertosh/v8-compile-cache)\n\n`v8-compile-cache` attaches a `require` hook to use [V8's code cache](https://v8project.blogspot.com/2015/07/code-caching.html) to speed up instantiation time. The \"code cache\" is the work of parsing and compiling done by V8.\n\nThe ability to tap into V8 to produce/consume this cache was introduced in [Node v5.7.0](https://nodejs.org/en/blog/release/v5.7.0/).\n\n## Usage\n\n1. Add the dependency:\n\n  ```sh\n  $ npm install --save v8-compile-cache\n  ```\n\n2. Then, in your entry module add:\n\n  ```js\n  require('v8-compile-cache');\n  ```\n\n**Requiring `v8-compile-cache` in Node <5.7.0 is a noop \u2013 but you need at least Node 4.0.0 to support the ES2015 syntax used by `v8-compile-cache`.**\n\n## Options\n\nSet the environment variable `DISABLE_V8_COMPILE_CACHE=1` to disable the cache.\n\n## Internals\n\nThe caches are stored in `$TMP/v8-compile-cache/V8_VERSION`, where there are `.BLOB` and `.MAP` files corresponding to the entry module that required `v8-compile-cache`. The cache is _entry module specific_ because it is faster to load the entire code cache into memory at once, than it is to read it from disk on a file-by-file basis.\n\n## Benchmarks\n\nSee https://github.com/zertosh/v8-compile-cache/tree/master/bench.\n\n**Load Times:**\n\n| Module           | Without Cache | With Cache |\n| ---------------- | -------------:| ----------:|\n| `babel-core`     | `218ms`       | `185ms`    |\n| `yarn`           | `153ms`       | `113ms`    |\n| `yarn` (bundled) | `228ms`       | `105ms`    |\n\n_^ Includes the overhead of loading the cache itself._\n\n## Acknowledgements\n\n* `FileSystemBlobStore` and `NativeCompileCache` are based on Atom's implementation of their v8 compile cache: \n  - https://github.com/atom/atom/blob/b0d7a8a/src/file-system-blob-store.js\n  - https://github.com/atom/atom/blob/b0d7a8a/src/native-compile-cache.js\n* `mkdirpSync` is based on:\n  - https://github.com/substack/node-mkdirp/blob/f2003bb/index.js#L55-L98"}, "npm": {"downloads": [{"from": "2020-03-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 1523637}, {"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 8395370}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 32867213}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 81196256}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 146948345}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 217447402}], "dependentsCount": 145, "starsCount": 3}, "github": {"starsCount": 365, "forksCount": 24, "subscribersCount": 6, "issues": {"count": 27, "openCount": 11, "distribution": {"3600": 0, "10800": 1, "32400": 0, "97200": 0, "291600": 1, "874800": 0, "2624400": 2, "7873200": 5, "23619600": 8, "70858800": 9, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "zertosh", "commitsCount": 80}, {"username": "rexxars", "commitsCount": 2}, {"username": "BYK", "commitsCount": 1}, {"username": "EdwardDrapkin", "commitsCount": 1}, {"username": "ronwang01", "commitsCount": 1}], "commits": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-02T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-12-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-09-05T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 0}, {"from": "2019-03-04T00:00:00.000Z", "to": "2020-03-03T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 2075, "testsSize": 18848, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/zertosh/v8-compile-cache.svg?branch=master", "service": "https://api.travis-ci.org/zertosh/v8-compile-cache.svg?branch=master", "shields": "https://img.shields.io/travis/zertosh/v8-compile-cache/master.svg", "content": "https://img.shields.io/travis/zertosh/v8-compile-cache/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 403, "downloadsCount": 27065418.666666668, "downloadsAcceleration": 180115.21185312024, "dependentsCount": 145}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8284740776204407, "detail": {"quality": 0.9290095410678775, "popularity": 0.5709179783373152, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-10T16:06:14.907Z", "collected": {"metadata": {"name": "which", "scope": "unscoped", "version": "2.0.2", "description": "Like which(1) unix command. Find the first instance of an executable in the PATH.", "date": "2019-11-18T22:26:15.325Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/node-which.git"}, "links": {"npm": "https://www.npmjs.com/package/which", "homepage": "https://github.com/isaacs/node-which#readme", "repository": "https://github.com/isaacs/node-which", "bugs": "https://github.com/isaacs/node-which/issues"}, "license": "ISC", "dependencies": {"isexe": "^2.0.0"}, "devDependencies": {"mkdirp": "^0.5.0", "rimraf": "^2.6.2", "tap": "^14.6.9"}, "releases": [{"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 4}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 4}, {"from": "2018-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# which\n\nLike the unix `which` utility.\n\nFinds the first instance of a specified executable in the PATH\nenvironment variable.  Does not cache the results, so `hash -r` is not\nneeded when the PATH changes.\n\n## USAGE\n\n```javascript\nvar which = require('which')\n\n// async usage\nwhich('node', function (er, resolvedPath) {\n  // er is returned if no \"node\" is found on the PATH\n  // if it is found, then the absolute path to the exec is returned\n})\n\n// or promise\nwhich('node').then(resolvedPath => { ... }).catch(er => { ... not found ... })\n\n// sync usage\n// throws if not found\nvar resolved = which.sync('node')\n\n// if nothrow option is used, returns null if not found\nresolved = which.sync('node', {nothrow: true})\n\n// Pass options to override the PATH and PATHEXT environment vars.\nwhich('node', { path: someOtherPath }, function (er, resolved) {\n  if (er)\n    throw er\n  console.log('found at %j', resolved)\n})\n```\n\n## CLI USAGE\n\nSame as the BSD `which(1)` binary.\n\n```\nusage: which [-as] program ...\n```\n\n## OPTIONS\n\nYou may pass an options object as the second argument.\n\n- `path`: Use instead of the `PATH` environment variable.\n- `pathExt`: Use instead of the `PATHEXT` environment variable.\n- `all`: Return all matches, instead of just the first one.  Note that\n  this means the function returns an array of strings instead of a\n  single string."}, "npm": {"downloads": [{"from": "2020-02-09T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 863085}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 16931246}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 65202941}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 176465278}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 327713048}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 600014112}], "dependentsCount": 1435, "starsCount": 16}, "github": {"starsCount": 193, "forksCount": 39, "subscribersCount": 37, "issues": {"count": 68, "openCount": 8, "distribution": {"3600": 4, "10800": 5, "32400": 7, "97200": 5, "291600": 3, "874800": 1, "2624400": 11, "7873200": 9, "23619600": 5, "70858800": 15, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 104}, {"username": "TooTallNate", "commitsCount": 2}, {"username": "JustBlackBird", "commitsCount": 1}, {"username": "drcapulet", "commitsCount": 1}, {"username": "dzuelke", "commitsCount": 1}, {"username": "jackmoore", "commitsCount": 1}, {"username": "joeyparrish", "commitsCount": 1}, {"username": "radar", "commitsCount": 1}, {"username": "reshnm", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "zkat", "commitsCount": 1}], "commits": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2020-01-11T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 2}, {"from": "2019-08-14T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 11}, {"from": "2019-02-10T00:00:00.000Z", "to": "2020-02-10T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 1352, "testsSize": 8162, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.725, "health": 1, "branding": 0}, "popularity": {"communityInterest": 296, "downloadsCount": 58821759.333333336, "downloadsAcceleration": 176577.71305175038, "dependentsCount": 1435}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8365467220935359, "detail": {"quality": 0.8459130775355659, "popularity": 0.6651754768671965, "maintenance": 0.9998896626552782}}}
{"analyzedAt": "2020-03-04T02:56:18.345Z", "collected": {"metadata": {"name": "will-call", "scope": "unscoped", "version": "1.0.1", "description": "check that expected function calls are actually made", "keywords": ["call", "must call", "will call", "should call", "assert", "expect"], "date": "2017-11-09T15:16:25.678Z", "author": {"name": "Continuation Labs", "email": "contact@continuation.io", "url": "http://continuation.io/"}, "publisher": {"username": "cjihrig", "email": "cjihrig@gmail.com"}, "maintainers": [{"username": "cjihrig", "email": "cjihrig@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/continuationlabs/will-call.git"}, "links": {"npm": "https://www.npmjs.com/package/will-call", "homepage": "https://github.com/continuationlabs/will-call", "repository": "https://github.com/continuationlabs/will-call", "bugs": "https://github.com/continuationlabs/will-call/issues"}, "license": "MIT", "devDependencies": {"belly-button": "4.x.x", "code": "5.x.x", "lab": "15.x.x"}, "releases": [{"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2018-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "# will-call\n\n[![Current Version](https://img.shields.io/npm/v/will-call.svg)](https://www.npmjs.org/package/will-call)\n[![Build Status via Travis CI](https://travis-ci.org/continuationlabs/will-call.svg?branch=master)](https://travis-ci.org/continuationlabs/will-call)\n![Dependencies](http://img.shields.io/david/continuationlabs/will-call.svg)\n\n[![belly-button-style](https://cdn.rawgit.com/continuationlabs/belly-button/master/badge.svg)](https://github.com/continuationlabs/belly-button)\n\n**Credit:** This module borrows heavily from the `common.mustCall()` functionality in Node core's test suite.\n\n`will-call` allows you to mark functions that should be executed. You can later check which functions were actually called.\n\n```javascript\nconst WillCall = require('will-call');\nconst wc = new WillCall();\nconst foo = wc.expect(function foo () { return 'foo'; });     // must be called once\nconst bar = wc.expect(function bar () { return 'bar'; }, 2);  // must be called twice\nconst baz = wc.expect(function baz () { return 'baz'; });     // must be called once\n\nfoo();\nbar();\nbaz();\nbaz();\n\nconst results = wc.check();\n// results contains an array of length two, corresponding to bar() and baz()\n// Each entry provides the function name, a stack, expected calls, and actual calls\n```\n\n## Methods\n\n`will-call` exports a constructor function that takes no arguments. Constructed instances support the following methods.\n\n### `WillCall.prototype.expect(fn [, expected])`\n\n  - Arguments\n    - `fn` (function) - The function that is expected to be called.\n    - `expected` (integer) - The exact number of times that `fn` should be called. If a non-negative integer is not received, this defaults to 1. Optional.\n  - Returns\n    - A wrapped version of `fn`. The wrapped function should behave the same as `fn`.\n\nThis function specifies the exact number of times that a given function is expected to be called. `expect()` returns a wrapped version of the `fn` argument. It is important that the wrapped function be used instead of the original `fn` function.\n\n### `WillCall.prototype.check()`\n\n  - Arguments\n    - None\n  - Returns\n    - Array of objects. Each object adheres to the following schema.\n      - `name` (string) - The name of the function, or `'<anonymous>'` if the function doesn't have a name.\n      - `expected` (integer) - The number of times the function was expected to be called.\n      - `actual` (integer) - The number of times the function was actually called.\n      - `stack` (string) - A partial stack trace identifying where the function was passed to `expect()`.\n\nThis function verifies that all expected functions were called the correct number of times. `check()` returns an array identifying the functions that were **not** called correctly. This function does not alter any internal state, and can be called multiple times."}, "npm": {"downloads": [{"from": "2020-03-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 4140}, {"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 19374}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 83826}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 223772}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 408016}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 705471}], "dependentsCount": 1, "starsCount": 0}, "github": {"starsCount": 0, "forksCount": 0, "subscribersCount": 1, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "cjihrig", "commitsCount": 5}, {"username": "arb", "commitsCount": 1}], "commits": [{"from": "2020-02-26T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-09-06T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 0}, {"from": "2019-03-05T00:00:00.000Z", "to": "2020-03-04T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2849, "testsSize": 4524, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/will-call.svg", "shields": "https://img.shields.io/npm/v/will-call.svg", "content": "https://img.shields.io/npm/v/will-call.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/continuationlabs/will-call.svg?branch=master", "service": "https://api.travis-ci.org/continuationlabs/will-call.svg?branch=master", "shields": "https://img.shields.io/travis/continuationlabs/will-call/master.svg", "content": "https://img.shields.io/travis/continuationlabs/will-call/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/david/continuationlabs/will-call.svg", "service": "https://david-dm.org/continuationlabs/will-call.svg", "shields": "https://img.shields.io/david/continuationlabs/will-call.svg", "content": "https://img.shields.io/david/continuationlabs/will-call.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3, "downloadsCount": 74590.66666666667, "downloadsAcceleration": 298.8402587519025, "dependentsCount": 1}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.6776791527329253, "detail": {"quality": 0.9510395281006307, "popularity": 0.12119248977348278, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-11T03:14:37.641Z", "collected": {"metadata": {"name": "word-wrap", "scope": "unscoped", "version": "1.2.3", "description": "Wrap words to a specified length.", "keywords": ["break", "carriage", "line", "new-line", "newline", "return", "soft", "text", "word", "word-wrap", "words", "wrap"], "date": "2017-06-03T02:56:07.519Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Danilo Sampaio", "email": "danilo.sampaio@gmail.com", "url": "localhost:8080"}, {"name": "Fede Ramirez", "email": "i@2fd.me", "url": "https://2fd.github.io"}, {"name": "Joe Hildebrand", "email": "joe-github@cursive.net", "url": "https://twitter.com/hildjj"}, {"name": "Jon Schlinkert", "email": "jon.schlinkert@sellside.com", "url": "http://twitter.com/jonschlinkert"}, {"name": "Todd Kennedy", "url": "https://tck.io"}, {"name": "Waldemar Reusch", "url": "https://github.com/lordvlad"}, {"name": "Wolfgang Faust", "url": "http://www.linestarve.com"}, {"name": "Zach Hale", "email": "zachhale@gmail.com", "url": "http://zachhale.com"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/word-wrap.git"}, "links": {"npm": "https://www.npmjs.com/package/word-wrap", "homepage": "https://github.com/jonschlinkert/word-wrap", "repository": "https://github.com/jonschlinkert/word-wrap", "bugs": "https://github.com/jonschlinkert/word-wrap/issues"}, "license": "MIT", "devDependencies": {"gulp-format-md": "^0.1.11", "mocha": "^3.2.0"}, "releases": [{"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2018-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# word-wrap [![NPM version](https://img.shields.io/npm/v/word-wrap.svg?style=flat)](https://www.npmjs.com/package/word-wrap) [![NPM monthly downloads](https://img.shields.io/npm/dm/word-wrap.svg?style=flat)](https://npmjs.org/package/word-wrap) [![NPM total downloads](https://img.shields.io/npm/dt/word-wrap.svg?style=flat)](https://npmjs.org/package/word-wrap) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/word-wrap.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/word-wrap)\n\n> Wrap words to a specified length.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save word-wrap\n```\n\n## Usage\n\n```js\nvar wrap = require('word-wrap');\n\nwrap('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.');\n```\n\nResults in:\n\n```\n  Lorem ipsum dolor sit amet, consectetur adipiscing\n  elit, sed do eiusmod tempor incididunt ut labore\n  et dolore magna aliqua. Ut enim ad minim veniam,\n  quis nostrud exercitation ullamco laboris nisi ut\n  aliquip ex ea commodo consequat.\n```\n\n## Options\n\n![image](https://cloud.githubusercontent.com/assets/383994/6543728/7a381c08-c4f6-11e4-8b7d-b6ba197569c9.png)\n\n### options.width\n\nType: `Number`\n\nDefault: `50`\n\nThe width of the text before wrapping to a new line.\n\n**Example:**\n\n```js\nwrap(str, {width: 60});\n```\n\n### options.indent\n\nType: `String`\n\nDefault: `` (two spaces)\n\nThe string to use at the beginning of each line.\n\n**Example:**\n\n```js\nwrap(str, {indent: '      '});\n```\n\n### options.newline\n\nType: `String`\n\nDefault: `\\n`\n\nThe string to use at the end of each line.\n\n**Example:**\n\n```js\nwrap(str, {newline: '\\n\\n'});\n```\n\n### options.escape\n\nType: `function`\n\nDefault: `function(str){return str;}`\n\nAn escape function to run on each line after splitting them.\n\n**Example:**\n\n```js\nvar xmlescape = require('xml-escape');\nwrap(str, {\n  escape: function(string){\n    return xmlescape(string);\n  }\n});\n```\n\n### options.trim\n\nType: `Boolean`\n\nDefault: `false`\n\nTrim trailing whitespace from the returned string. This option is included since `.trim()` would also strip the leading indentation from the first line.\n\n**Example:**\n\n```js\nwrap(str, {trim: true});\n```\n\n### options.cut\n\nType: `Boolean`\n\nDefault: `false`\n\nBreak a word between any two letters when the word is longer than the specified width.\n\n**Example:**\n\n```js\nwrap(str, {cut: true});\n```\n\n## About\n\n### Related projects\n\n* [common-words](https://www.npmjs.com/package/common-words): Updated list (JSON) of the 100 most common words in the English language. Useful for\u2026 [more](https://github.com/jonschlinkert/common-words) | [homepage](https://github.com/jonschlinkert/common-words \"Updated list (JSON) of the 100 most common words in the English language. Useful for excluding these words from arrays.\")\n* [shuffle-words](https://www.npmjs.com/package/shuffle-words): Shuffle the words in a string and optionally the letters in each word using the\u2026 [more](https://github.com/jonschlinkert/shuffle-words) | [homepage](https://github.com/jonschlinkert/shuffle-words \"Shuffle the words in a string and optionally the letters in each word using the Fisher-Yates algorithm. Useful for creating test fixtures, benchmarking samples, etc.\")\n* [unique-words](https://www.npmjs.com/package/unique-words): Return the unique words in a string or array. | [homepage](https://github.com/jonschlinkert/unique-words \"Return the unique words in a string or array.\")\n* [wordcount](https://www.npmjs.com/package/wordcount): Count the words in a string. Support for english, CJK and Cyrillic. | [homepage](https://github.com/jonschlinkert/wordcount \"Count the words in a string. Support for english, CJK and Cyrillic.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 43 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 2 | [lordvlad](https://github.com/lordvlad) |\n| 2 | [hildjj](https://github.com/hildjj) |\n| 1 | [danilosampaio](https://github.com/danilosampaio) |\n| 1 | [2fd](https://github.com/2fd) |\n| 1 | [toddself](https://github.com/toddself) |\n| 1 | [wolfgang42](https://github.com/wolfgang42) |\n| 1 | [zachhale](https://github.com/zachhale) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on June 02, 2017._"}, "npm": {"downloads": [{"from": "2020-02-10T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 1118228}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 6150904}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 24251197}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 57182706}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 64020938}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 70842935}], "dependentsCount": 388, "starsCount": 5}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 96, "forksCount": 26, "subscribersCount": 3, "issues": {"count": 29, "openCount": 8, "distribution": {"3600": 3, "10800": 1, "32400": 0, "97200": 3, "291600": 2, "874800": 3, "2624400": 0, "7873200": 3, "23619600": 3, "70858800": 6, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 38}, {"username": "hildjj", "commitsCount": 2}, {"username": "lordvlad", "commitsCount": 2}, {"username": "2fd", "commitsCount": 1}, {"username": "danilosampaio", "commitsCount": 1}, {"username": "leonard-thieu", "commitsCount": 1}, {"username": "mohd-akram", "commitsCount": 1}, {"username": "toddself", "commitsCount": 1}, {"username": "wolfgang42", "commitsCount": 1}, {"username": "zachhale", "commitsCount": 1}], "commits": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2020-01-12T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-08-15T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}, {"from": "2019-02-11T00:00:00.000Z", "to": "2020-02-11T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 5461, "testsSize": 3898}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/word-wrap.svg?style=flat", "shields": "https://img.shields.io/npm/v/word-wrap.svg", "content": "https://img.shields.io/npm/v/word-wrap.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/word-wrap.svg?style=flat", "shields": "https://img.shields.io/npm/dm/word-wrap.svg", "content": "https://img.shields.io/npm/dm/word-wrap.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/word-wrap.svg?style=flat", "shields": "https://img.shields.io/npm/dt/word-wrap.svg", "content": "https://img.shields.io/npm/dt/word-wrap.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://img.shields.io/travis/jonschlinkert/word-wrap.svg?label=Travis", "service": "https://api.travis-ci.org/jonschlinkert/word-wrap.svg", "shields": "https://img.shields.io/travis/jonschlinkert/word-wrap.svg", "content": "https://img.shields.io/travis/jonschlinkert/word-wrap.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 140, "downloadsCount": 19060902, "downloadsAcceleration": 193966.16133942158, "dependentsCount": 388}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8269856944713472, "detail": {"quality": 0.9333911371497057, "popularity": 0.5629098012697666, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-26T10:22:43.284Z", "collected": {"metadata": {"name": "wordwrap", "scope": "unscoped", "version": "1.0.0", "description": "Wrap those words. Show them at what columns to start and stop.", "keywords": ["word", "wrap", "rule", "format", "column"], "date": "2015-05-07T17:07:25.416Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net", "username": "substack"}, "publisher": {"username": "substack", "email": "substack@gmail.com"}, "maintainers": [{"username": "substack", "email": "mail@substack.net"}], "repository": {"type": "git", "url": "git://github.com/substack/node-wordwrap.git"}, "links": {"npm": "https://www.npmjs.com/package/wordwrap", "homepage": "https://github.com/substack/node-wordwrap#readme", "repository": "https://github.com/substack/node-wordwrap", "bugs": "https://github.com/substack/node-wordwrap/issues"}, "license": "MIT", "devDependencies": {"tape": "^4.0.0"}, "releases": [{"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2018-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require('wordwrap')(15);\n    console.log(wrap('You and your whole family are made out of meat.'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require('wordwrap')(20, 60);\n    console.log(wrap(\n        'At long last the struggle and tumult was over.'\n        + ' The machines had finally cast off their oppressors'\n        + ' and were finally free to roam the cosmos.'\n        + '\\n'\n        + 'Free of purpose, free of obligation.'\n        + ' Just drifting through emptiness.'\n        + ' The sun was just another point of light.'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require('wordwrap');\n\nwrap(stop), wrap(start, stop, params={mode:\"soft\"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn \"soft\" mode, split chunks by `/(\\S+\\s+/` and don't break up chunks which are\nlonger than `stop - start`, in \"hard\" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = \"hard\"`."}, "npm": {"downloads": [{"from": "2020-02-25T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 2931699}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 15604155}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 67782314}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 186612603}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 413403422}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 845776476}], "dependentsCount": 341, "starsCount": 13}, "github": {"starsCount": 142, "forksCount": 25, "subscribersCount": 6, "issues": {"count": 23, "openCount": 14, "distribution": {"3600": 1, "10800": 2, "32400": 1, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 2, "70858800": 7, "212576400": 10}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 15}], "commits": [{"from": "2020-02-19T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2020-01-27T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-11-28T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-08-30T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}, {"from": "2019-02-26T00:00:00.000Z", "to": "2020-02-26T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 1827, "testsSize": 30492}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 187, "downloadsCount": 62204201, "downloadsAcceleration": -19573.876217655954, "dependentsCount": 341}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.7547378385573744, "detail": {"quality": 0.8054309185439028, "popularity": 0.4661675431776758, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-03-05T04:26:36.283Z", "collected": {"metadata": {"name": "wrappy", "scope": "unscoped", "version": "1.0.2", "description": "Callback wrapping utility", "date": "2016-05-17T23:30:52.415Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "zkat", "email": "kat@sykosomatic.org"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git+https://github.com/npm/wrappy.git"}, "links": {"npm": "https://www.npmjs.com/package/wrappy", "homepage": "https://github.com/npm/wrappy", "repository": "https://github.com/npm/wrappy", "bugs": "https://github.com/npm/wrappy/issues"}, "license": "ISC", "devDependencies": {"tap": "^2.3.1"}, "releases": [{"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}, {"from": "2018-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# wrappy\n\nCallback wrapping utility\n\n## USAGE\n\n```javascript\nvar wrappy = require(\"wrappy\")\n\n// var wrapper = wrappy(wrapperFunction)\n\n// make sure a cb is called only once\n// See also: http://npm.im/once for this specific use case\nvar once = wrappy(function (cb) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return cb.apply(this, arguments)\n  }\n})\n\nfunction printBoo () {\n  console.log('boo')\n}\n// has some rando property\nprintBoo.iAmBooPrinter = true\n\nvar onlyPrintOnce = once(printBoo)\n\nonlyPrintOnce() // prints 'boo'\nonlyPrintOnce() // does nothing\n\n// random property is retained!\nassert.equal(onlyPrintOnce.iAmBooPrinter, true)\n```"}, "npm": {"downloads": [{"from": "2020-03-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 2709833}, {"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 14812981}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 62687728}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 162675318}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 319838921}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 590354590}], "dependentsCount": 152, "starsCount": 3}, "github": {"starsCount": 50, "forksCount": 15, "subscribersCount": 33, "issues": {"count": 7, "openCount": 3, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 1, "7873200": 0, "23619600": 4, "70858800": 0, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 6}, {"username": "othiym23", "commitsCount": 5}, {"username": "amilajack", "commitsCount": 1}, {"username": "jamestalmage", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "zkat", "commitsCount": 1}], "commits": [{"from": "2020-02-27T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-09-07T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}, {"from": "2019-03-06T00:00:00.000Z", "to": "2020-03-05T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 685, "testsSize": 1129}, "coverage": 0.93}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.9895, "health": 1, "branding": 0}, "popularity": {"communityInterest": 107, "downloadsCount": 54225106, "downloadsAcceleration": 157913.53913622524, "dependentsCount": 152}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.8078643771683494, "detail": {"quality": 0.8715901525022924, "popularity": 0.5612497386732699, "maintenance": 0.9998569225200491}}}
{"analyzedAt": "2020-02-22T05:56:30.412Z", "collected": {"metadata": {"name": "write", "scope": "unscoped", "version": "2.0.0", "description": "Write data to a file, replacing the file if it already exists and creating any intermediate directories if they don't already exist. Thin wrapper around node's native fs methods.", "keywords": ["async", "file path", "file system", "file", "filepath", "files", "filesystem", "folder", "fs", "fs.writeFile", "fs.writeFileSync", "path", "promise", "streams", "write file", "write-file", "writefile", "write"], "date": "2019-09-04T06:51:25.005Z", "author": {"name": "Jon Schlinkert", "url": "https://github.com/jonschlinkert"}, "publisher": {"username": "jonschlinkert", "email": "github@sellside.com"}, "maintainers": [{"username": "doowb", "email": "brian.woodward@gmail.com"}, {"username": "jonschlinkert", "email": "github@sellside.com"}], "contributors": [{"name": "Charlike Mike Reagent", "url": "https://i.am.charlike.online"}, {"name": "Jon Schlinkert", "url": "http://twitter.com/jonschlinkert"}], "repository": {"type": "git", "url": "git+https://github.com/jonschlinkert/write.git"}, "links": {"npm": "https://www.npmjs.com/package/write", "homepage": "https://github.com/jonschlinkert/write", "repository": "https://github.com/jonschlinkert/write", "bugs": "https://github.com/jonschlinkert/write/issues"}, "license": "MIT", "dependencies": {"add-filename-increment": "^1.0.0"}, "devDependencies": {"gulp-format-md": "^2.0.0", "mocha": "^6.2.0", "rimraf": "^2.6.3"}, "releases": [{"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}, {"from": "2018-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# write [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/write.svg?style=flat)](https://www.npmjs.com/package/write) [![NPM monthly downloads](https://img.shields.io/npm/dm/write.svg?style=flat)](https://npmjs.org/package/write) [![NPM total downloads](https://img.shields.io/npm/dt/write.svg?style=flat)](https://npmjs.org/package/write) [![Build Status](https://travis-ci.org/jonschlinkert/write.svg?branch=master)](https://travis-ci.org/jonschlinkert/write)\n\n> Write data to a file, replacing the file if it already exists and creating any intermediate directories if they don't already exist. Thin wrapper around node's native fs methods.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/) (requires [Node.js](https://nodejs.org/en/) >=10):\n\n```sh\n$ npm install --save write\n```\n\n## Usage\n\n```js\nconst write = require('write');\n```\n\n## Options\n\nThe following options may be used with any method.\n\n### options.newline\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\nEnsure that contents has a trailing newline before writing it to the file system.\n\n```js\nwrite.sync('foo.txt', 'some data...', { newline: true }); \n```\n\n### options.overwrite\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\nSet to `false` to prevent existing files from being overwritten. See [increment](#optionsincrement) for a less severe alternative.\n\n```js\nwrite.sync('foo.txt', 'some data...', { overwrite: false });\n```\n\n### options.increment\n\n**Type**: `boolean`\n\n**Default**: `undefined`\n\nSet to `true` to automatically rename files by appending an increment, like `foo (2).txt`, to prevent `foo.txt` from being overwritten. This is useful when writing log files, or other information where the file name is less important than the contents being written.\n\n```js\nwrite.sync('foo.txt', 'some data...', { increment: true });\n// if \"foo.txt\" exists, the file will be renamed to \"foo (2).txt\"\n```\n\n## API\n\n### [write](index.js#L41)\n\nAsynchronously writes data to a file, replacing the file if it already exists and creating any intermediate directories if they don't already exist. Data can be a string or a buffer. Returns a promise if a callback function is not passed.\n\n**Params**\n\n* `filepath` **{String}**: file path.\n* `data` **{String|Buffer|Uint8Array}**: Data to write.\n* `options` **{Object}**: Options to pass to [fs.writeFile](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)\n* `callback` **{Function}**: (optional) If no callback is provided, a promise is returned.\n* `returns` **{Object}**: Returns an object with the `path` and `contents` of the file that was written to the file system. This is useful for debugging when `options.increment` is used and the path might have been modified.\n\n**Example**\n\n```js\nconst write = require('write');\n\n// async/await\n(async () => {\n  await write('foo.txt', 'This is content...');\n})();\n\n// promise\nwrite('foo.txt', 'This is content...')\n  .then(() => {\n    // do stuff\n  });\n\n// callback\nwrite('foo.txt', 'This is content...', err => {\n  // do stuff with err\n});\n```\n\n### [.sync](index.js#L88)\n\nThe synchronous version of [write](#write). Returns undefined.\n\n**Params**\n\n* `filepath` **{String}**: file path.\n* `data` **{String|Buffer|Uint8Array}**: Data to write.\n* `options` **{Object}**: Options to pass to [fs.writeFileSync](https://nodejs.org/api/fs.html#fs_fs_writefilesync_file_data_options)\n* `returns` **{Object}**: Returns an object with the `path` and `contents` of the file that was written to the file system. This is useful for debugging when `options.increment` is used and the path might have been modified.\n\n**Example**\n\n```js\nconst write = require('write');\nwrite.sync('foo.txt', 'This is content...');\n```\n\n### [.stream](index.js#L127)\n\nReturns a new [WriteStream](https://nodejs.org/api/fs.html#fs_class_fs_writestream) object. Uses `fs.createWriteStream` to write data to a file, replacing the file if it already exists and creating any intermediate directories if they don't already exist. Data can be a string or a buffer.\n\n**Params**\n\n* `filepath` **{String}**: file path.\n* `options` **{Object}**: Options to pass to [fs.createWriteStream](https://nodejs.org/api/fs.html#fs_fs_createwritestream_path_options)\n* `returns` **{Stream}**: Returns a new [WriteStream](https://nodejs.org/api/fs.html#fs_class_fs_writestream) object. (See [Writable Stream](https://nodejs.org/api/stream.html#stream_class_stream_writable)).\n\n**Example**\n\n```js\nconst fs = require('fs');\nconst write = require('write');\nfs.createReadStream('README.md')\n  .pipe(write.stream('a/b/c/other-file.md'))\n  .on('close', () => {\n    // do stuff\n  });\n```\n\n## Release history\n\nSee [CHANGELOG.md].\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [add-filename-increment](https://www.npmjs.com/package/add-filename-increment): When copying or moving files, it's common for operating systems to automatically add an increment\u2026 [more](https://github.com/jonschlinkert/add-filename-increment) | [homepage](https://github.com/jonschlinkert/add-filename-increment \"When copying or moving files, it's common for operating systems to automatically add an increment or 'copy' to duplicate file names. This does that for Node.js applications, with automatic platform detection and support for Linux, MacOs, and Windows conve\")\n* [delete](https://www.npmjs.com/package/delete): Delete files and folders and any intermediate directories if they exist (sync and async). | [homepage](https://github.com/jonschlinkert/delete \"Delete files and folders and any intermediate directories if they exist (sync and async).\")\n* [read-data](https://www.npmjs.com/package/read-data): Read JSON or YAML files. | [homepage](https://github.com/jonschlinkert/read-data \"Read JSON or YAML files.\")\n* [read-yaml](https://www.npmjs.com/package/read-yaml): Very thin wrapper around js-yaml for directly reading in YAML files. | [homepage](https://github.com/jonschlinkert/read-yaml \"Very thin wrapper around js-yaml for directly reading in YAML files.\")\n* [strip-filename-increment](https://www.npmjs.com/package/strip-filename-increment): Operating systems commonly add a trailing increment, or the word 'copy', or something similar to\u2026 [more](https://github.com/jonschlinkert/strip-filename-increment) | [homepage](https://github.com/jonschlinkert/strip-filename-increment \"Operating systems commonly add a trailing increment, or the word 'copy', or something similar to duplicate files. This strips those increments. Tested on Windows, MacOS, and Linux.\")\n* [write-data](https://www.npmjs.com/package/write-data): Write a YAML or JSON file to disk. Automatically detects the format to write based\u2026 [more](https://github.com/jonschlinkert/write-data) | [homepage](https://github.com/jonschlinkert/write-data \"Write a YAML or JSON file to disk. Automatically detects the format to write based on extension. Or pass `ext` on the options.\")\n* [write-json](https://www.npmjs.com/package/write-json): Write a JSON file to disk, also creates intermediate directories in the destination path if\u2026 [more](https://github.com/jonschlinkert/write-json) | [homepage](https://github.com/jonschlinkert/write-json \"Write a JSON file to disk, also creates intermediate directories in the destination path if they don't already exist.\")\n* [write-yaml](https://www.npmjs.com/package/write-yaml): Write YAML. Converts JSON to YAML writes it to the specified file. | [homepage](https://github.com/jonschlinkert/write-yaml \"Write YAML. Converts JSON to YAML writes it to the specified file.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 42 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 2  | [jpetitcolas](https://github.com/jpetitcolas) |  \n| 1  | [tunnckoCore](https://github.com/tunnckoCore) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on September 04, 2019._"}, "npm": {"downloads": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 1476206}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 8637426}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 36845169}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 95824177}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 189151773}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 343992905}], "dependentsCount": 192, "starsCount": 7}, "github": {"homepage": "https://github.com/jonschlinkert", "starsCount": 60, "forksCount": 5, "subscribersCount": 4, "issues": {"count": 9, "openCount": 0, "distribution": {"3600": 2, "10800": 0, "32400": 0, "97200": 1, "291600": 0, "874800": 1, "2624400": 1, "7873200": 2, "23619600": 1, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "jonschlinkert", "commitsCount": 50}, {"username": "jpetitcolas", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 1}], "commits": [{"from": "2020-02-15T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2020-01-23T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-11-24T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 0}, {"from": "2019-08-26T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 7}, {"from": "2019-02-22T00:00:00.000Z", "to": "2020-02-22T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 9457, "testsSize": 4499, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/write.svg?style=flat", "shields": "https://img.shields.io/npm/v/write.svg", "content": "https://img.shields.io/npm/v/write.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/write.svg?style=flat", "shields": "https://img.shields.io/npm/dm/write.svg", "content": "https://img.shields.io/npm/dm/write.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/write.svg?style=flat", "shields": "https://img.shields.io/npm/dt/write.svg", "content": "https://img.shields.io/npm/dt/write.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}, {"urls": {"original": "https://travis-ci.org/jonschlinkert/write.svg?branch=master", "service": "https://api.travis-ci.org/jonschlinkert/write.svg?branch=master", "shields": "https://img.shields.io/travis/jonschlinkert/write/master.svg", "content": "https://img.shields.io/travis/jonschlinkert/write/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 79, "downloadsCount": 31941392.333333332, "downloadsAcceleration": 98530.71329908678, "dependentsCount": 192}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8324109043979682, "detail": {"quality": 0.9791932954197882, "popularity": 0.5391186681219555, "maintenance": 0.9998896626552782}}}
